<Type Name="GenericWebPart" FullName="System.Web.UI.WebControls.WebParts.GenericWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5c0235dd646d8b19bb61b9a90d4fe57e589f549" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386263" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GenericWebPart : System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericWebPart extends System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericWebPart&#xA;Inherits WebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericWebPart : System::Web::UI::WebControls::WebParts::WebPart" />
  <TypeSignature Language="F#" Value="type GenericWebPart = class&#xA;    inherit WebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wraps server controls that are not <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls so that they can appear and behave as true <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls at run time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control existe para proporcionar un contenedor de tiempo de ejecución para los controles de servidor que no son <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, por lo que estos controles pueden utilizarse en páginas de elementos Web y aplicaciones. Cuando los desarrolladores agregar controles de servidor, como los controles de usuario, controles de servidor ASP.NET o controles personalizados existentes--a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> (control), el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control ajusta automáticamente a los controles de servidor en tiempo de ejecución por lo que pueden ofrecer la misma funcionalidad como true <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
 En la tabla siguiente compara y contrasta <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controles y <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
|Control <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>|Control <xref:System.Web.UI.WebControls.WebParts.WebPart>|  
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|No existe para dotar de controles de servidor que no son <xref:System.Web.UI.WebControls.WebParts.WebPart> controla con la funcionalidad de elementos Web, así que cualquier ASP.NET, personalizado o control de usuario puede participar en aplicaciones de elementos Web.|Existe para crear controles ASP.NET personalizados que tienen la funcionalidad nativa de elementos Web integrada. Esto incluye personalización, conexiones, importación y exportación y capacidades de arrastrar y colocar.|  
|Nunca se declara en el marcado de una página. Existe únicamente para contener los controles de servidor en tiempo de ejecución y proporcionar el control ajustado (o control secundario) la funcionalidad completa de un <xref:System.Web.UI.WebControls.WebParts.WebPart> control.|Se puede declarar en el marcado de una página en tiempo de diseño, como un control de servidor ASP.NET, salvo que se declara en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona.|  
|Incluye e integra su control secundario en los elementos Web de personalización procesar por lo que puede actuar como un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Esto se produce automáticamente, lo que facilita a los desarrolladores usar controles de servidor y controles de usuario en aplicaciones de elementos Web.|Se incluye automáticamente en el proceso de personalización de elementos Web.|  
|Puede tener acceso mediante programación en tiempo de ejecución (mediante el uso de la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> método y pasar a la el elemento secundario control de servidor), al igual que un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control o un control ASP.NET estándar.|Puede tener acceso mediante programación en tiempo de ejecución, como un control ASP.NET estándar.|  
  
 Los usuarios se benefician de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controlar porque proporciona una experiencia de usuario coherente. Cualquier control de servidor puede configurarse para funcionar como un <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar y se tienen los mismos elementos de interfaz de usuario coherente como verbos, iconos, un título y un encabezado. Los desarrolladores pueden beneficiarse del <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controlar porque permite reutilizar los controles de usuario existentes y controles de servidor dentro de las aplicaciones de elementos Web.  
  
> [!NOTE]
>  Cuando se crean páginas de elementos Web, no tiene que hacer nada para permitir que un control de usuario existente o un control personalizado para ajustarse a la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. Basta con agregar el control de usuario o de servidor a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> de la zona, mediante programación o mediante la declaración en el marcado de la página, y lo controles de elementos Web que se establecen automáticamente ajusta el control con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> objeto en tiempo de ejecución.  
  
 Dado que los controles de servidor que se colocan en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zonas se ajustan con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control en tiempo de ejecución, los desarrolladores pueden usar servidor normal y controles de usuario exactamente como si fueran <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Tenga en cuenta que, si declara personalizados los controles que heredan de la base de <xref:System.Web.UI.Control> clase dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, estos controles no admiten el uso de la función intrínseca <xref:System.Web.UI.WebControls.WebParts.WebPart> propiedades. Por lo tanto, no puede declarar el <xref:System.Web.UI.WebControls.WebParts.IWebPart> propiedades en esos controles, incluyendo propiedades como el <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> propiedad y el <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> propiedad. En cambio, otros tipos de servidor controla (como <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, los controles de usuario y controles personalizados que heredan de <xref:System.Web.UI.WebControls.WebControl>) puede declarar estas propiedades, puesto que admiten el uso de las propiedades expando.  
  
 Las propiedades expando son realmente cadenas que se pueden agregar a una clase dinámicamente como una propiedad, por medio de la <xref:System.Web.UI.IAttributeAccessor> interfaz. Controles que implementan esta interfaz, incluida la <xref:System.Web.UI.WebControls.WebControl> clase y sus elementos secundarios, puede usar las propiedades expando. Dado que la base de <xref:System.Web.UI.Control> clase no admite las propiedades expando, cuando un control personalizado que herede de la <xref:System.Web.UI.Control> se coloca en la clase un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> y ajustada con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control en tiempo de ejecución, los elementos Web de conjunto de controles no se puede agregar dinámicamente el intrínseco <xref:System.Web.UI.WebControls.WebParts.IWebPart> propiedades para el control personalizado. Tiene dos opciones en este caso. Puede utilizar el control personalizado sin el <xref:System.Web.UI.WebControls.WebParts.IWebPart> propiedades o se puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfaz en el control personalizado, lo que le permite utilizar las propiedades.  
  
 Tal y como se muestra un ejemplo de cómo los controles que heredan de <xref:System.Web.UI.WebControls.WebControl> puede utilizar el <xref:System.Web.UI.WebControls.WebParts.IWebPart> propiedades, si declara un ASP.NET <xref:System.Web.UI.WebControls.Calendar> control en el marcado de una página (dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona) en tiempo de diseño, aunque este control no hereda desde el <xref:System.Web.UI.WebControls.WebParts.WebPart> clase y no contienen de forma nativa <xref:System.Web.UI.WebControls.WebParts.WebPart> miembros, puede tratarlo exactamente igual que un <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Puede declarar <xref:System.Web.UI.WebControls.WebParts.WebPart> propiedades en el calendario de control, como <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>y otros. En tiempo de ejecución, puede utilizar el <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> método, que devuelve el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control dinámicamente ajustando el control de calendario y trabajar con ellos mediante programación exactamente como lo haría con un <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar, con acceso a las mismas propiedades, eventos y métodos.  
  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control tiene una propiedad crítica, que permite obtener acceso a su control de servidor subyacente: el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad. Esta propiedad permite a los desarrolladores tengan acceso mediante programación al control de servidor. El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad también se usa en la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control para tener acceso a los datos de personalización desde el control secundario y para realizar la autorización, si la <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> se establece la propiedad.  
  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control tiene algunas otras propiedades, todos ellos invalidación propiedades heredadas de la base de <xref:System.Web.UI.WebControls.WebParts.WebPart> clase. Como se indicó, puede utilizar estas propiedades con cualquier control secundario, por lo que puede comportarse como un <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Una propiedad importante es la <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> propiedad; determina si todas las propiedades exportables o solo los marcan como no confidenciales, se puede exportar. Heredaron las propiedades orientadas a la interfaz de usuario de la <xref:System.Web.UI.WebControls.WebParts.WebPart> class, como <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Height%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A>, y <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Width%2A>, se puede establecer en el marcado declarativo para cualquier control de servidor colocar en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona.  
  
 Métodos importantes en el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> clase incluye el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> método, que crea la colección de controles (incluidos los controles secundarios) asociada con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> (control) y el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Render%2A> método, que delega todas las presentaciones a la ajusta los controles secundarios. Los constructores en el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> clase están protegidos y están pensados para uso interno o para escenarios de extensibilidad.  
  
 Hay información adicional útil para trabajar con <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controles. Si desea establecer valores predeterminados para las propiedades reemplazadas en el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> clase, el control de usuario o control de servidor personalizado puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> y <xref:System.Web.UI.WebControls.WebParts.IWebActionable> interfaces y reemplazar sus miembros. En tiempo de ejecución, el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control obtendrá sus valores para las propiedades implementadas desde el control secundario que implementa las interfaces. Si el control define cualquiera de sus propiedades como personalizable (utilizando el `Personalizable` atributo de metadatos), el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control habilita automáticamente esas propiedades para la personalización en tiempo de ejecución, como las propiedades personalizables en un <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Si desea proporcionar características de edición de elementos Web para el control, puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz. En tiempo de ejecución, cuando el <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método se llama, el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> código del control de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject%2A> propiedad se llaman a la misma propiedad en el control secundario y usar la implementación del control secundario para crear personalizado asociado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control ajusta de forma automática un control de servidor que no es un <xref:System.Web.UI.WebControls.WebParts.WebPart> control en tiempo de ejecución.  
  
 La primera parte del ejemplo de código contiene una página de elementos Web con dos <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controles. Dentro de cada zona es un control de servidor ASP.NET estándar. Dado que los controles están en un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zona, se ajustará automáticamente con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controlar cuando se compila la página. Por lo tanto, puede declarar <xref:System.Web.UI.WebControls.WebParts.WebPart> propiedades en estos controles de la clase. Después de cargar la página en un explorador, si hace clic en el **mostrar todos los valores de propiedad** botón, los detalles de cada control se muestran en una etiqueta. Para mostrar cómo la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> funciona, el control la <xref:System.Web.UI.WebControls.Calendar> control en la primera zona tiene algunas de las <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> propiedades establecidas en el marcado declarativo de la página .aspx, mientras que el <xref:System.Web.UI.WebControls.BulletedList> control no. Después de cargar la página, tenga en cuenta las diferencias en los valores de propiedad para los dos controles, y que tienen un elemento primario <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#1)]  
  
 La segunda parte del ejemplo de código muestra una clase parcial que tiene acceso a algunas propiedades de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controlar mediante programación. Tenga en cuenta que en el `Page_Load` método, el <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> método se utiliza para recuperar la instancia en tiempo de ejecución de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control que contiene un control de servidor. Este enfoque de obtener una referencia al elemento primario <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control le permite trabajar mediante programación con un control de servidor o de usuario normal como si fuese un <xref:System.Web.UI.WebControls.WebParts.WebPart> control en tiempo de ejecución.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#3)]
 [!code-vb[WebParts_GenericWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Hay pocos casos donde es necesario heredar de la <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> clase. Uno de estos casos sería si un programador desea implementar una acción personalizada en el constructor cuando un <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> se crea el control. Por ejemplo, desea almacenar el control secundario en una ubicación distinta de la colección de controles dentro de la <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> clase. Si se hereda de la <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> (clase), también debe heredar de la <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> clase e invalidar sus <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" /> método para que pueda crear un control personalizado.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal GenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; GenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.GenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="new System.Web.UI.WebControls.WebParts.GenericWebPart control" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A server control that becomes the child control of the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control instance.</param>
        <summary>Initializes a new instance of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control by passing in a reference to a control that becomes the child control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%28System.Web.UI.Control%29> llama al constructor el <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controlar en su <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> método para inicializar una instancia de un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control pasando una referencia a un control de servidor secundario. Después de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> se crea el objeto, puede hacer referencia el control secundario mediante la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="control" /> is of type <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.  \- or -  <paramref name="control" /> has a <see langword="null" /> or empty <see cref="P:System.Web.UI.Control.ID" /> property.  \- or -  <paramref name="control" /> has been output-cached.</exception>
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public override string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL to an image that represents a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control in a catalog of controls.</summary>
        <value>Una cadena que representa la dirección URL a una imagen que se utiliza para representar el control en un catálogo. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menudo, las aplicaciones de elementos Web proporcionan un catálogo (o lista) de controles que los usuarios pueden agregar a una página. El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> propiedad en un control contiene la dirección URL a una imagen que representa el control cuando aparece en un catálogo. Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Puede establecer valores para la propiedad en el control en el marcado declarativo de una página Web, así como mediante programación. Para proporcionar un valor predeterminado para la propiedad cada vez que se utiliza el control, puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante declaración y mediante programación de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> propiedad. El código fuente completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Introducción.  
  
 La primera parte del ejemplo de código muestra cómo el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> propiedad se establece mediante declaración en un control de servidor dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 La segunda parte del ejemplo de código muestra el método que tiene acceso mediante programación el valor de la propiedad cuando un usuario hace clic en el **mostrar todos los valores de propiedad** botón.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ChildControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ChildControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ChildControl { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildControl : System.Web.UI.Control" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the child control that is wrapped by a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control at run time.</summary>
        <value>Un <see cref="T:System.Web.UI.Control" /> que hace referencia en el control secundario ajustada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad proporciona los medios para tener acceso al control secundario ajustado por un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. Por ejemplo, el <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control usa la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad para extraer datos de personalización desde el control secundario.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante programación la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad. El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad se obtiene acceso mediante programación para recuperar información sobre el control secundario de un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. El código fuente completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Introducción.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="genericWebPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="genericWebPart.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overrides the base method to create a read-only collection that consists of the child control wrapped by a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the child control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> método crea una colección privada, de solo lectura que consta de un control único, que es el control secundario de un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. Esta colección se crea para que los desarrolladores no pueden agregar manualmente otros controles a un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control.  
  
 Si desea crear una personalizada <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control sin tener que agregar el control secundario a la colección privada, puede derivar de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> clase, invalide el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%2A> constructor y proporcionan un método diferente para almacenar el control secundario referenciado por la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="genericWebPart.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a collection of custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls that can be used to edit the child control of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control when it is in edit mode.</summary>
        <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with a server control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A> se invoca cuando un control entra en modo de presentación de edición. Este método invalida el método base se hereda de la <xref:System.Web.UI.WebControls.WebParts.WebPart> clase porque, en el caso de un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> (control), es el control secundario que se está editando, no el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> propio control. El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A> método convierte el control secundario a la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz, lo que permite el control que se pueda editar.  
  
 Este método reemplazado es lo que permite a los controles de servidor que no se derivan de la <xref:System.Web.UI.WebControls.WebParts.WebPart> clase, incluidos los controles de servidor ASP.NET y controles de servidor personalizados--para editarse con normalidad <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of server controls.</summary>
        <value>Una cadena que resume brevemente la funcionalidad del control. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> valor de propiedad se utiliza normalmente como una cadena descriptiva para un control en los catálogos que proporcionan listas de controles de servidor y como una información sobre herramientas en la barra de título de un control. El contenido de la propiedad aparece en una información sobre herramientas cuando un usuario coloca el puntero del mouse sobre el texto de título en la barra de título de un control.  
  
 Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Puede establecer valores para la propiedad en el control en el marcado declarativo de una página Web, así como mediante programación. Para proporcionar un valor predeterminado para la propiedad cada vez que se utiliza el control, puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante declaración y mediante programación de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> propiedad. El código fuente completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Introducción.  
  
 La primera parte del ejemplo de código muestra cómo el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> propiedad se establece mediante declaración en un control de servidor dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 La segunda parte del ejemplo de código muestra cómo obtener acceso a la propiedad mediante programación para mostrar su valor en una etiqueta.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height (in pixels) of a control.</summary>
        <value>Un <see cref="T:System.Web.UI.WebControls.Unit" /> que indica el alto del control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad reemplaza la propiedad base para que se puede obtener o establecer el alto del control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override sealed string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID of a control. This value is not inheritable.</summary>
        <value>Una cadena que contiene el identificador del control.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="genericWebPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Delegates rendering the contents of the control to the child control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public override string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a string that is concatenated with the <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" /> property value to form a complete title for a control.</summary>
        <value>Una cadena que actúa como un subtítulo para el control. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A> propiedad opcionalmente para devolver una cadena de subtítulo estándar que se anexará a personalizado <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> título del control.  
  
 Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Si implementa el <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> propiedad en un control de usuario o un control personalizado para proporcionar un valor predeterminado, el control de elementos Web que se establecen automáticamente anexa al valor del control <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> propiedad en tiempo de ejecución para crear un título completo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
        <value>Una cadena que representa el título del control de elemento. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establece el texto del título visible en la barra de título de un control de elementos del <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> propiedad.  
  
 Si no proporciona un título para un control, lo controles de elementos Web que se establecen automáticamente calcula una cadena predeterminada para utilizarla como título. Para obtener más información, consulta <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Además, es posible proporcionar un subtítulo predeterminado que se anexa a la cadena de título. Para obtener información detallada, vea <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A>.  
  
 Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Puede establecer valores para la propiedad en el control en el marcado declarativo de una página Web, así como mediante programación. Para proporcionar un valor predeterminado para la propiedad cada vez que se utiliza el control, puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante declaración y mediante programación de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> propiedad. El código fuente completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Introducción.  
  
 La primera parte del ejemplo de código muestra cómo el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> propiedad se establece mediante declaración en un control de servidor dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 La segunda parte del ejemplo de código muestra cómo obtener acceso a la propiedad mediante programación para mostrar su valor en una etiqueta.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public override string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL to an image used to represent a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control in the control's own title bar.</summary>
        <value>Una cadena que representa la dirección URL a una imagen. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> propiedad proporciona una manera de asociar un icono con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. El icono aparece en la barra de título del control. Para mantener la coherencia temática, los desarrolladores de aplicaciones suelen hacer que este icono similar a la imagen que representa el control en un catálogo de controles de elementos Web (la imagen que se hace referencia en el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> propiedad).  
  
 Tal y como se implementa en el conjunto de controles de elementos Web, el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> por los usuarios finales para cambiar la imagen o el icono que aparece en la barra de título de un control, se puede personalizar la propiedad.  
  
 Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Puede establecer valores para la propiedad en el control en el marcado declarativo de una página Web, así como mediante programación. Para proporcionar un valor predeterminado para la propiedad cada vez que se utiliza el control, puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante declaración y mediante programación de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> propiedad. El código fuente completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Introducción.  
  
 La primera parte del ejemplo de código muestra cómo el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> propiedad se establece mediante declaración en un control de servidor dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 La segunda parte del ejemplo de código muestra cómo obtener acceso a la propiedad mediante programación para mostrar su valor en una etiqueta.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public override string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a URL to supplemental information about a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
        <value>Una cadena que representa una dirección URL para obtener más información sobre un <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se asigna una dirección URL a la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> propiedad, el título del control se convierte en un vínculo. Esta propiedad proporciona una manera cómoda para los usuarios finales tener acceso a información adicional sobre un control. La información adicional que podría incluir datos de copyright, datos de contacto, detalles sobre el creador del control o un resumen de la finalidad de un control.  
  
 Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 Puede establecer valores para la propiedad en el control en el marcado declarativo de una página Web, así como mediante programación. Para proporcionar un valor predeterminado para la propiedad cada vez que se utiliza el control, puede implementar la <xref:System.Web.UI.WebControls.WebParts.IWebPart> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante declaración y mediante programación de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> propiedad. El código fuente completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Introducción.  
  
 La primera parte del ejemplo de código muestra cómo el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> propiedad se establece mediante declaración en un control de servidor dentro de un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control.  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 La segunda parte del ejemplo de código muestra cómo obtener acceso a la propiedad mediante programación para mostrar su valor en una etiqueta.  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Verbs As WebPartVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ Verbs { System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.Web.UI.WebControls.WebParts.WebPartVerbCollection" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of custom verbs associated with a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> que contiene custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objetos asociados con un <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verbos se derivan de la <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> clase y proporcionan las acciones de interfaz (IU) que los usuarios pueden realizar en usuario un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. Normalmente, los verbos se representan en la interfaz de usuario como botones, vínculos o elementos de menú. Hay verbos estándar para abrir, cerrar, editar y minimizar un control y otros verbos para exportar una definición para el control o cargar un archivo de ayuda. Estos verbos no se incluyen en el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> colección, porque la colección contiene solo los verbos personalizados.  
  
 Esta propiedad reemplaza la propiedad base para que se puede tener acceso a la propiedad en el control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Si implementa control secundario la <xref:System.Web.UI.WebControls.WebParts.IWebActionable> interfaz y, por tanto, invalida su <xref:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs%2A?displayProperty=nameWithType> propiedad, el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control usa la implementación del control secundario cuando el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A?displayProperty=nameWithType> propiedad se invoca en el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control.  
  
 Cuando cree verbos personalizados y agregarlos a la <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> colección, se pueden tener acceso los verbos mediante programación desde un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public override object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the child control, to enable the control to be edited by custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
        <value>Un <see cref="T:System.Object" /> que está compuesto por el control secundario de un <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si implementa un control secundario la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz e invalida su <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propiedad, cuando un usuario selecciona el control de edición, el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control llamará en el control secundario a través de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propiedad y use el elemento secundario implementación del control de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método. Este mecanismo permite que un control de usuario o de servidor que no es un <xref:System.Web.UI.WebControls.WebParts.WebPart> control para que funcione con personalizado asociado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles en una aplicación de elementos Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the width (in pixels) of the control.</summary>
        <value>Un <see cref="T:System.Web.UI.WebControls.Unit" /> que indica el ancho del control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad reemplaza la propiedad base para que se puede obtener o establecer el ancho del control secundario como si fuera un verdadero <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
  </Members>
</Type>