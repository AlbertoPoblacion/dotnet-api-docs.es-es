<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e1c023ab1c07ab824de1c3d2cf5288e51bde9eb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEditable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEditable" />
  <TypeSignature Language="F#" Value="type IWebEditable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona una interfaz para desarrolladores que permite especificar controles de edición personalizados asociados a un control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz permite asociar personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles con un control de servidor, como un <xref:System.Web.UI.WebControls.WebParts.WebPart> control, un control de usuario o un control de servidor personalizado. El <xref:System.Web.UI.WebControls.WebParts.EditorPart> los controles se encuentran con un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control y esta zona con sus controles de edición proporciona los usuarios finales con una interfaz de usuario (UI) para modificar propiedades, la apariencia y el comportamiento en el asociado <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 El <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz incluye dos miembros expuestos. El <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propiedad proporciona una manera de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para obtener una referencia al control de servidor asociado. El <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método se utiliza para crear una instancia de cada personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> control asociado a un control de servidor y devolverlos como una colección.  
  
 El <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz ya está implementada en la base de <xref:System.Web.UI.WebControls.WebParts.WebPart> de la clase, aunque de forma predeterminada, esta implementación no asocia personalizada <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla con la <xref:System.Web.UI.WebControls.WebParts.WebPart> clase. Para asociar un derivada <xref:System.Web.UI.WebControls.WebParts.WebPart> control con custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, puede invalidar el <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar los métodos de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz en un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control, que, a continuación, crea una instancia de un personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlar cuándo el <xref:System.Web.UI.WebControls.WebParts.WebPart> control entra en modo de edición.  
  
 Este ejemplo tiene cuatro partes:  
  
-   El código de la clase personalizada.  
  
-   La página Web que hospeda el control personalizado.  
  
-   Un control de usuario que cambia la página en modo de edición.  
  
-   Una descripción de cómo funciona el ejemplo en un explorador.  
  
 La primera parte del ejemplo de código es personalizado `TextDisplayWebPart` clase. Tenga en cuenta que la clase se deriva de la <xref:System.Web.UI.WebControls.WebParts.WebPart> clase e implementa el <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz, proporcionando implementaciones específicas de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método y <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propiedad. Observe también que anidada dentro de la `TextDisplayWebPart` clase es privado, personalizado `TextDisplayEditorPart` clase que deriva de la base de <xref:System.Web.UI.WebControls.WebParts.EditorPart> clase. Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Para ver un tutorial que muestra ambos métodos de compilación, consulte [Tutorial: desarrollar y usar un Control de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebEditable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_IWebEditable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 La segunda parte del ejemplo de código es una página Web que hospeda el control personalizado. Tenga en cuenta que aunque un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control se declara en el marcado de la página, personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> necesario no se hace referencia al control, ya que puede agregarse mediante programación en tiempo de ejecución.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 La tercera parte del ejemplo de código es un control de usuario que permite a un usuario cambiar la página en modo de edición. Tenga en cuenta que el control de usuario se hace referencia en la página Web que hospeda. Para obtener una descripción completa de cómo crear este control de usuario, consulte [Tutorial: cambiar los modos de presentación en una página de elementos Web](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 Para ejecutar el ejemplo de código, cargar la página Web que hospeda en un explorador, agregue texto al cuadro de texto y haga clic en el **establecer contenido de la etiqueta** botón para actualizar la etiqueta en el control. Para cambiar la página en modo de edición, seleccione **editar** en la lista desplegable que contiene los modos de presentación. Para mostrar la interfaz de usuario de personalizado `TextDisplayEditorPart` de control, haga clic en la flecha de lista desplegable del menú de verbos en el `TextDisplayWebPart` control y seleccione **editar**. En la interfaz de usuario de edición, puede usar la lista desplegable que contiene los estilos de fuente para actualizar el estilo de texto de la etiqueta en el `TextDisplayWebPart` control. Debe hacer clic en **el modo de exploración** en la lista de desplegable de modos de presentación para devolver la página a la vista normal y confirmar que el texto de la etiqueta ahora tiene el estilo de fuente seleccionado en el modo de edición.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Si desea utilizar controles de servidor que no son <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controles en una aplicación de elementos Web (es decir, si agrega estos controles a una <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zona), y si desea asociar personalizado <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles con estos controles de servidor, debe implementar el <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interfaz. Derivados <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controles deben implementar la interfaz, porque la base de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> clase ya lo hace.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="iWebEditable.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personalizados asociados a un control de servidor que implementa la interfaz <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> que contiene la colección de controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personalizados asociados a un control de servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método le permite crear una colección de todos los personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles asociados con el control personalizado, <xref:System.Web.UI.WebControls.WebParts.WebPart> control, o al usuario controlar y devolverlos como un <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> objeto. El <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control toma la colección y crea instancias de todos los <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles cada vez que el control de servidor entra en modo de edición.  
  
 Normalmente se implementa este método en un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control invalidando sus <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> método. En el método, crear instancias de personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles que desea asociar a los controles, agregarlos a un <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> del objeto y, a continuación, devolver ese objeto. La colección de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, a continuación, se asigna a la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propiedad de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zona.  
  
> [!NOTE]
>  Cualquier <xref:System.Web.UI.WebControls.WebParts.EditorPart> que se agrega a la colección de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles en una implementación de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método debe tener un valor asignado a su propiedad ID, de lo contrario se producirá una excepción cuando la colección se asigna a la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una invalidación de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método en un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control. El código fuente completo necesario para ejecutar el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> tema de información general sobre la clase.  
  
 El ejemplo de código contiene ambos miembros de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz. Tenga en cuenta que la invalidación de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método crea un <xref:System.Collections.ArrayList> para recopilar uno o más personalizada <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles y, a continuación, usa la lista para crear la <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> objeto.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> objeto que la <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> método devuelve es de solo lectura y no tiene ningún método accesible para agregar controles individuales a él. Sin embargo, en el reemplazo o la implementación del método, puede crear otro tipo de <see cref="T:System.Collections.ICollection" /> objeto, como un <see cref="T:System.Collections.ArrayList" />, para contener todos los personalizado <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controla y pasarlo al constructor al crear un nuevo <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> objeto . Para obtener un ejemplo de código, vea la sección ejemplo.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, al control de usuario o al control personalizado que editarán los controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
        <value>Una referencia a objeto al control asociado a un control <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propiedad proporciona una manera de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para obtener una referencia a los controles de servidor que están asociados.  
  
 Aunque la propiedad en sí es de sólo lectura, la referencia de objeto que devuelve permite <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para cambiar los valores en el control de servidor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo el <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propiedad se puede invalidar en una personalizada <xref:System.Web.UI.WebControls.WebParts.WebPart> control. El código fuente completo necesario para ejecutar el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> tema de información general sobre la clase.  
  
 El ejemplo de código reemplaza a ambos miembros de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Normalmente, cuando se implementa el <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> propiedad en un control de servidor, simplemente devuelven una referencia al propio control de servidor. En el caso de los <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> de la clase, dado que ajusta un control secundario para que pueda funcionar como un <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controlar, su implementación de la <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> propiedad devuelve una referencia al control secundario.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
      </Docs>
    </Member>
  </Members>
</Type>