<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d003d5311af2c73c7a94411f117ebc2decebb8a8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39963240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Actúa como clase base para definir objetos de punto de conexión que permiten que el control consumidor y el control proveedor de una conexión de elementos Web compartan datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada conexión de elementos Web consta de dos controles de servidor, uso compartido de datos: un control es el consumidor y el otro es el proveedor. Para obtener una explicación de los componentes esenciales de una conexión de elementos Web y el propio objeto de conexión, vea el <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> información general de clases. Cada conexión de elementos Web requiere que los puntos de conexión. El proveedor y el control consumidor cada uno deben tener al menos uno definido <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> (cada uno de ellos puede, opcionalmente, tiene varios puntos de conexión) de objeto que contiene los detalles de cómo un control puede conectarse a otro control y el tipo de datos se puede compartir. En una conexión real, el proveedor tiene su propio tipo de objeto de punto de conexión (derivado de la base de <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> clase), un <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instancia y el consumidor tiene su propio objeto, un <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instancia.  
  
 Para crear un punto de conexión del proveedor, los desarrolladores deben agregar un método de devolución de llamada al proveedor que devolverá una instancia de la interfaz implementada a un consumidor. Debe marcar el método de devolución de llamada en el código fuente con un `ConnectionProvider` atributo de código (consulte la <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> clase). De forma similar, para crear un punto de conexión del consumidor, los desarrolladores deben agregar un método al consumidor que recibe una instancia de interfaz, y deben marcar ese método con un `ConnectionConsumer` atributo (consulte la <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> clase).  
  
 Cuando los desarrolladores crean conexiones en una página Web, se pueden crear como conexiones estáticas o dinámicas. Las conexiones estáticas se declaran en el marcado de una página Web. Cuando se declara una conexión estática, los desarrolladores pueden designar qué puntos de conexión se usan para el consumidor y el proveedor mediante la asignación de valores para el `ProviderConnectionPointID` y `ConsumerConnectionPointID` atributos dentro de la `<asp:webpartconnection>` una etiqueta de elemento. Este enfoque resulta especialmente útil si hay varios puntos de conexión definidos en los controles consumidor y proveedor, porque permite la conexión estática identificar qué puntos de conexión que se usará para la conexión.  
  
 Las conexiones dinámicas se crean mediante programación, código de un desarrollador o los usuarios a través de la interfaz de usuario (IU) proporcionada por el <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control. Para crear una conexión en el código, los desarrolladores deben obtener una instancia de un <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> objeto mediante una llamada a la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> método en el <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Antes de que puede llamar a este método, los programadores deben tener referencias a los consumidores y los controles de servidor del proveedor y sus objetos de punto de conexión respectivos. Para obtener referencias a los puntos de conexión para un proveedor y un control consumidor, llaman primero a los desarrolladores la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> y <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> métodos en el <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Estos métodos devuelven objetos point, que a su vez, se pueden pasar al método para crear una conexión de la conexión correspondiente.  
  
 Cuando el proveedor y el consumidor conexión objetos point que ambos funcionan con el mismo tipo de interfaz, son compatibles y pueden formar una conexión directa para compartir datos. Si no funcionan con el mismo tipo de interfaz, un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objeto se debe usar para traducir la instancia de la interfaz del proveedor en un tipo que el consumidor puede trabajar con.  
  
 El resumen <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> clase proporciona los detalles básicos de los puntos de conexión que se comparten los controles consumidor y proveedor. Varias propiedades contienen estos detalles. El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> propiedad indica si un punto de conexión puede participar en más de una conexión a la vez. De forma predeterminada, los puntos de conexión de proveedor pueden participar en varias conexiones y puntos de conexión del consumidor no pueden. El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propiedad indica el tipo del control de servidor asociado con un punto de conexión. Tenga en cuenta que no sólo <xref:System.Web.UI.WebControls.WebParts.WebPart> controles pueden formar conexiones; cualquier control de servidor, ya sea un control de ASP.NET, un control personalizado o un control de usuario, puede habilitarse para participar en conexiones si se coloca en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona. El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propiedad proporciona un nombre descriptivo para el punto de conexión que se puede mostrar en la interfaz de usuario para ayudar a los usuarios que crean conexiones. El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> propiedad actúa como un identificador de cadena para el propio objeto de punto de conexión. El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propiedad indica qué tipo de instancia de la interfaz es consciente el punto de conexión. Si un punto de conexión determinado proporciona o usa una instancia de esa interfaz viene determinada por si es un <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> o un <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objeto.  
  
 El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> tiene un método de clase. El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> método devuelve un valor booleano que indica si un punto de conexión está actualmente pueden participar en las conexiones.  
  
 El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> clase también tiene un campo público, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. Este campo contiene un valor utilizado para identificar el punto de conexión predeterminado en una conexión.  
  
> [!NOTE]
>  Los atributos para especificar el punto de conexión de los métodos tienen un único parámetro obligatorio, `displayName`, por lo que es posible crear el atributo de punto de conexión predeterminado sin especificar un identificador. En tales casos, la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo proporciona un valor base a utilizar.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la creación de una conexión de elementos Web que incluye los <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objetos. Dado que el <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> clase es una clase base abstracta, las instancias de sus clases secundarias,<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> y <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--son los objetos reales que se usa para formar una conexión.  
  
 El ejemplo consta de cuatro partes:  
  
-   Modo de presentación de un control de usuario que le permite cambiar los elementos Web en una página.  
  
-   Código fuente de una interfaz y dos <xref:System.Web.UI.WebControls.WebParts.WebPart> controla que actúa como el proveedor y el consumidor de una conexión.  
  
-   Una página Web para hospedar todos los controles y ejecutar el ejemplo de código.  
  
-   Explicación de cómo ejecutar la página de ejemplo.  
  
 La primera parte de este ejemplo de código es el control de usuario que permite a los usuarios cambiar los modos de presentación en una página Web. Guarde el siguiente código fuente en un archivo .ascx, póngale el nombre de archivo que se asigna a la `Src` atributo de la `Register` la directiva para este control de usuario, que es la parte superior de la página Web que hospeda. Para obtener información detallada acerca de modos de presentación y una descripción del código fuente de este control, vea [Tutorial: cambiar modos de presentación en una página de elementos Web](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 La segunda parte del ejemplo de código es el código fuente de la interfaz y los controles. El archivo de código fuente contiene una interfaz sencilla denominada `IZipCode`. También hay un <xref:System.Web.UI.WebControls.WebParts.WebPart> clase denominada `ZipCodeWebPart` que implementa la interfaz y actúa como el control proveedor. Su `ProvideIZipCode` es el método de devolución de llamada que implementa el único miembro de la interfaz. El método simplemente devuelve una instancia de la interfaz. Tenga en cuenta que el método se marca con un `ConnectionProvider` atributo en sus metadatos. Este es el mecanismo para identificar el método como método de devolución de llamada para el punto de conexión del proveedor. El otro <xref:System.Web.UI.WebControls.WebParts.WebPart> clase se denomina `WeatherWebPart`, y actúa como consumidor de la conexión. Esta clase tiene un método denominado `GetZipCode` que obtiene una instancia de la `IZipCode` interfaz desde el control proveedor. Tenga en cuenta que este método está marcado como método de punto de conexión del consumidor con un `ConnectionConsumer` atributo en sus metadatos. Este es el mecanismo para identificar el método de punto de conexión en el control consumidor.  
  
 Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica. Para ver un tutorial que muestra cómo compilar, consulte [Tutorial: desarrollo y el uso de un Control de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 La tercera parte del ejemplo de código es la página Web. En la parte superior son `Register` las directivas para registrar los controles personalizados que forman la conexión y el control de usuario que permite a los usuarios cambiar los modos de presentación en la página. La propia conexión se crea mediante declaración en el `<staticconnections>` elemento en la página. También puede crear la conexión mediante programación; el código para hacer que se encuentra en la `Button1_Click` método. Si la conexión se crea de forma declarativa o mediante programación, siempre se deben especificar puntos de conexión para el proveedor y el consumidor. El `Button2_Click` método tiene acceso a la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> de objetos para el proveedor y el consumidor y escribe algunos de sus valores de propiedad en una etiqueta en la página.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 Después de cargar la página en un explorador, haga clic en el **detalles del punto de conexión** botón. Aparece información sobre los puntos de conexión de proveedor y consumidor establecidos en la conexión declarativa. A continuación, use el **modo de presentación** control de lista desplegable para cambiar la página en modo de conexión. En el menú de verbos de uno de los <xref:System.Web.UI.WebControls.WebParts.WebPart> controles (representados por una flecha hacia abajo en la barra de título), haga clic en el verbo conectar. La conexión aparece en la interfaz de usuario, se crea automáticamente el `<asp:connectionszone>` control declarado en la página. Haga clic en el **desconexión** botón para terminar la conexión existente. Use la **modo de presentación** control para devolver la página al modo de exploración. A continuación, haga clic en el **conexión dinámica** botón para crear una conexión mediante programación. Haga clic en el **detalles del punto de conexión** botón nuevo, para indicar los detalles sobre los objetos de punto de conexión de dos.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si un punto de conexión admite varias conexiones simultáneas.</summary>
        <value>
          <see langword="true" /> si el punto de conexión admite varias conexiones; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> los objetos tienen sus <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> valor de propiedad se establece en `true` (mediante el <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> clase), ya que el control de elementos Web que se establece de forma predeterminada permite que los puntos de conexión de proveedor para establecer conexiones a varios consumidores.  
  
 En cambio, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos tienen sus <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> valor de propiedad se establece en `false` (por la <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> clase) porque el control de elementos Web que se establece de forma predeterminada permite la conexión del consumidor puntos para establecer una conexión con solo un proveedor en un tiempo.  
  
 Puede cambiar el comportamiento predeterminado sobre varias conexiones mediante la asignación de valores diferentes para el <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> propiedad (para los proveedores) o el <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> propiedad (para los consumidores) en los dos <xref:System.Attribute> clases usadas para los atributos de conexión. Si habilita puntos de conexión del consumidor para conectarse a varios proveedores al mismo tiempo, el código debe tratar con problemas de sincronización resultante.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> propiedad tanto en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> y <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este ejemplo de código muestra solo la página Web que contiene el código para tener acceso a la propiedad; para el código completo necesario para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> información general de clases.  
  
 El código en el `Button2_Click` método de la página Web, obtiene acceso a la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> propiedad en cada punto de conexión del objetos y escribe cada valor en una etiqueta. Ejecute el código haciendo clic en el **detalles del punto de conexión** botón después de cargar la página en un explorador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo <see cref="T:System.Type" /> del control de servidor al que se asocia un punto de conexión.</summary>
        <value>
          <see cref="T:System.Type" /> que representa el tipo de control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> suele ser propiedad del <xref:System.Web.UI.WebControls.WebParts.WebPart> tipo. Sin embargo, porque cualquier tipo de control de usuario o el control de servidor puede participar en conexiones si está habilitada correctamente y se colocan en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, el <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propiedad puede devolver uno de estos otros servidor tipos de control.  
  
 Cuando los controles de servidor que no son <xref:System.Web.UI.WebControls.WebParts.WebPart> los controles están colocados en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, se encapsulan con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> objeto en tiempo de ejecución, por lo que pueden funcionar como <xref:System.Web.UI.WebControls.WebParts.WebPart> controla y participar en conexiones. Pero cuando dichos controles están implicados en las conexiones, el <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> no devuelve el valor de propiedad el <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> escriba; devuelve el tipo de la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control secundario del objeto, que es el tipo del control de usuario o de servidor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propiedad tanto en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> y <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este ejemplo de código muestra solo la página Web que contiene el código para tener acceso a la propiedad; para el código completo necesario para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> información general de clases.  
  
 El código en el `Button2_Click` método de la página Web, obtiene acceso a la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propiedad en cada punto de conexión del objetos y escribe cada valor en una etiqueta. Ejecute el código haciendo clic en el **detalles del punto de conexión** botón después de cargar la página en un explorador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa una cadena que se utiliza para identificar el punto de conexión predeterminado dentro de una colección de puntos de conexión asociada a un control de servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea un punto de conexión, es posible especificar un identificador para el punto de conexión en el código fuente de un consumidor o proveedor <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar, mediante un <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> o un <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atributo. Sin embargo, cuando se agrega un atributo a un punto de conexión en el código fuente, el `ID` parámetro es opcional. Si no se especifica el identificador del atributo, el <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo proporciona una cadena que se usa para identificar el punto de conexión predeterminado.  
  
 Si varios puntos de conexión se definen en un control consumidor o proveedor, es necesario especificar un identificador para cada punto de conexión, por lo que se pueden distinguir los puntos de conexión al crear las conexiones.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena que actúa como nombre descriptivo que representa un punto de conexión en la interfaz de usuario.</summary>
        <value>Una cadena que contiene un nombre descriptivo de un objeto <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear una conexión de elementos Web, los controles proveedor y consumidor de la conexión deben especificar cada uno al menos un punto de conexión, un método que les permite comunicarse y compartir datos. Para identificar estos métodos de punto de conexión, un desarrollador especifica un atributo en los métodos seleccionados. En el proveedor, un `ConnectionProvider` atributo está establecido en el método de devolución de llamada seleccionada y, en el consumidor, un `ConnectionConsumer` está establecido en el método que recibe una instancia de una interfaz que contiene los datos del proveedor. Para ambos atributos, es el único parámetro siempre es necesario, independientemente de qué sobrecarga se declara para crear el atributo, el `displayName` parámetro. El desarrollador debe asignar una cadena que se usará como un nombre para mostrar descriptivo para el punto de conexión, y esa cadena se convierte en el valor de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> valor de propiedad se muestra en la interfaz de usuario de una página Web cuando los usuarios crean conexiones. Por ejemplo, cuando el <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control se agrega a la página, crea una interfaz de usuario para que los usuarios crear conexiones entre controles. Después de que un usuario cambia una página en modo de conexión y hace clic en un verbo de conexión en un <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar la conexión aparece de la interfaz de usuario. Cada control que puede participar en una conexión se muestra en la interfaz de usuario y junto a cada control es un control de lista desplegable que muestra los nombres descriptivos de sus puntos de conexión disponibles. Los usuarios deben seleccionar al menos un punto de conexión para establecer una conexión. Se obtienen los valores que aparecen en la lista de puntos de conexión de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propiedad. Si los desarrolladores crear una interfaz de usuario personalizada para crear conexiones, puede usar el <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propiedad de forma similar, para proporcionar un nombre descriptivo que representa un punto de conexión.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Un control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> u otro control de servidor que esté asociado a un punto de conexión.</param>
        <summary>Devuelve un valor que indica si un punto de conexión puede participar en conexiones.</summary>
        <returns>
          <see langword="true" /> si el control puede crear un punto de conexión que participe en una conexión; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> método en la base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> clase siempre devuelve `true`, pero las clases derivadas pueden invalidar el método devuelva `true` o `false` en momentos diferentes, según el estado de `control`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> método tanto en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> y <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este ejemplo de código muestra solo la página Web que contiene el código para tener acceso a la propiedad; para el código completo necesario para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> información general de clases.  
  
 El código en el `Button2_Click` método de la página Web, obtiene acceso a la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> en cada punto de conexión del método de objetos y escribe cada valor en una etiqueta. Ejecute el código haciendo clic en el **detalles del punto de conexión** botón después de cargar la página en un explorador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena que contiene el identificador de un punto de conexión.</summary>
        <value>Una cadena que contiene el identificador de un punto de conexión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un desarrollador declara un <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> o un <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atributo en un método en el código fuente de un control, para que el método puede usarse como punto de conexión, no es necesario declarar el `ID` parámetro para el atributo de punto de conexión. El único atributo obligatorio es el `displayName` parámetro. Se asigna un Id. predeterminado para el punto de conexión, utilizando el valor de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo.  
  
 Si hay solo un método en un control que se va a usar como punto de conexión, no es necesario especificar un identificador para el punto de conexión. Si hay varios métodos especificados como puntos de conexión, debe especificar un identificador para cada uno de ellos; en caso contrario, se producirá una excepción. Al asignar un identificador a cada punto de conexión, también hace posible especificar qué punto de conexión que se usará al declarar conexiones en las páginas Web o crearlos en el código.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> propiedad tanto en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> y <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este ejemplo de código muestra solo la página Web que contiene el código para tener acceso a la propiedad; para el código completo necesario para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> información general de clases.  
  
 El código en el `Button2_Click` método de la página Web, obtiene acceso a la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> propiedad en cada punto de conexión del objetos y escribe cada valor en una etiqueta. Ejecute el código haciendo clic en el **detalles del punto de conexión** botón después de cargar la página en un explorador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de interfaz utilizado por un punto de conexión.</summary>
        <value>
          <see cref="T:System.Type" /> que corresponde al tipo de interfaz proporcionado o utilizado por un control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propiedad indica qué tipo de interfaz se utiliza un punto de conexión. Esto puede ayudar a determinar si dos controles son compatibles y capaces de establecer una conexión. Si el punto de conexión de proveedor <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> es diferente desde el punto de conexión de consumidor <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, a continuación, los dos controles no son compatibles (lo que significa que no pueden estar conectados directamente sin un transformador) y un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objeto debe se usa para establecer una conexión.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propiedad tanto en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> y <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este ejemplo de código muestra solo la página Web que contiene el código para tener acceso a la propiedad; para el código completo necesario para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> información general de clases.  
  
 El código en el `Button2_Click` método de la página Web, obtiene acceso a la <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propiedad en cada punto de conexión del objetos y escribe cada valor en una etiqueta. Ejecute el código haciendo clic en el **detalles del punto de conexión** botón después de cargar la página en un explorador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>