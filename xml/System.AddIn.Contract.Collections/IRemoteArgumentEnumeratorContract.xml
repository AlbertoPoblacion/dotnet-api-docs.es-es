<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRemoteArgumentEnumeratorContract.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d42ff8edd539dc6b4d16108e281241ed97fbf899.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d42ff8edd539dc6b4d16108e281241ed97fbf899</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>Enumerates the elements of a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> objects.</source>
          <target state="translated">Enumera los elementos de una colección de objetos <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>At this position, the return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">En esta posición, el valor devuelto de <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> es indefinido.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> para adelantar el enumerador hasta el primer elemento de la colección antes de llamar a <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> establece el valor devuelto de <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> hasta el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>If the last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, the return value of <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, el valor devuelto de <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> es indefinido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated">Devuelve el objeto <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> de la colección situado en la posición actual del enumerador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> de la colección situado en la posición actual del enumerador.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source>The return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> is undefined under any of the following conditions:</source>
          <target state="translated">El valor devuelto de <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> es indefinido en cualquiera de las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">El enumerador se coloca antes del primer elemento de la colección, inmediatamente después de crear el enumerador o <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> se debe llamar para adelantar el enumerador hasta el primer elemento de la colección antes de llamar a <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source>The last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">La última llamada a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, lo que indica el final de la colección.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source>The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">El enumerador queda invalidado debido a los cambios realizados en la colección, como agregar, modificar o eliminar elementos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> establece el valor devuelto de <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> hasta el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Desplaza el enumerador al siguiente elemento de la colección.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el enumerador avanzó con éxito hasta el siguiente elemento; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si el enumerador alcanzó el final de la colección.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">Después de crea un enumerador o después de la <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> se llama al método, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>The first call to the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> method moves the enumerator to the first element of the collection.</source>
          <target state="translated">La primera llamada a la <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> método desplaza el enumerador hasta el primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph> hasta <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> produce una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La colección se modificó después de que el enumerador se creara.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
          <source>After you call <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph>, the value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">Después de llamar a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph>, el valor de <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
          <source>Call the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> method to move the enumerator to the first element of the collection.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> método para desplazar el enumerador hasta el primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</ph> produce una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La colección se modificó después de que el enumerador se creara.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>