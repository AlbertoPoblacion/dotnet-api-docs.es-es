<Type Name="ICollectionContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f9302199d2e0590c094c6ab5a4e88670f99038b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52203671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICollectionContract&lt;C&gt; : System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICollectionContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.ICollectionContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICollectionContract(Of C)&#xA;Implements IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class ICollectionContract : System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <TypeSignature Language="F#" Value="type ICollectionContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IEnumerableContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">Tipo de los elementos de la colección. <c>C</c> debe implementar la <see cref="T:System.AddIn.Contract.IContract" /> interfaz.</typeparam>
    <summary>Representa una colección genérica de objetos <see cref="T:System.AddIn.Contract.IContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.AddIn.Contract.Collections.ICollectionContract%601> puede cambiarse dinámicamente.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(C item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'C -&gt; unit" Usage="iCollectionContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.AddIn.Contract.IContract" /> que se va a agregar a <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <summary>Agrega un objeto <see cref="T:System.AddIn.Contract.IContract" /> al objeto <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar si un <xref:System.AddIn.Contract.Collections.ICollectionContract%601> es de solo lectura, llame a la <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> es de solo lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iCollectionContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los elementos de <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar si un <xref:System.AddIn.Contract.Collections.ICollectionContract%601> es de solo lectura, llame a la <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> es de solo lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As C) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(C item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'C -&gt; bool" Usage="iCollectionContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">Objeto <see cref="T:System.AddIn.Contract.IContract" /> que se va a buscar en la interfaz <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <summary>Devuelve un valor que indica si el objeto <see cref="T:System.AddIn.Contract.IContract" /> especificado está en <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <returns>
          <see langword="true" /> si el objeto <see cref="T:System.AddIn.Contract.IContract" /> especificado se encuentra en la colección <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (C[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!C[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As C(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;C&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'C[] * int -&gt; unit" Usage="iCollectionContract.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="C[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados desde <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <param name="arrayIndex">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
        <summary>Copia la totalidad de <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="arrayIndex" /> es menor que 0.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> es multidimensional.  
  
O bien 
El número de elementos de la <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la matriz de destino.  
  
O bien 
El tipo <paramref name="C" /> no puede convertirse automáticamente al tipo de la matriz de destino.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iCollectionContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el número de elementos incluidos en la colección <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <returns>Número de elementos contenidos en <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iCollectionContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un valor que indica si <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> es de sólo lectura.</summary>
        <returns>Es <see langword="true" /> si la interfaz <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> es de solo lectura; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As C) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(C item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'C -&gt; bool" Usage="iCollectionContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.AddIn.Contract.IContract" /> que se va a quitar de <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</param>
        <summary>Quita la primera aparición de un <see cref="T:System.AddIn.Contract.IContract" /> específico de la <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</summary>
        <returns>Es <see langword="true" /> si <paramref name="item" /> se quita correctamente; en caso contrario, es <see langword="false" />. Este método también devuelve <see langword="false" /> si no se encuentra <paramref name="item" /> en <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar si un <xref:System.AddIn.Contract.Collections.ICollectionContract%601> es de solo lectura, llame a la <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> es de solo lectura.</exception>
      </Docs>
    </Member>
  </Members>
</Type>