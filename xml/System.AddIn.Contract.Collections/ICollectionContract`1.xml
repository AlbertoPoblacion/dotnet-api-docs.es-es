<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICollectionContract`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac584e504f6acaedfcd959ec5022b1f03bae5c7bbb7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84e504f6acaedfcd959ec5022b1f03bae5c7bbb7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.ICollectionContract`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Tipo de los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.ICollectionContract`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>C<ept id="p1">&lt;/c&gt;</ept> must implement the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> interface.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>C<ept id="p1">&lt;/c&gt;</ept> debe implementar la <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Collections.ICollectionContract`1">
          <source>Represents a generic collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects.</source>
          <target state="translated">Representa una colección genérica de objetos <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.ICollectionContract`1">
          <source>An <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> can be dynamically resized.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> puede cambiarse de forma dinámica.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que se va a agregar a <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)">
          <source>Adds an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Agrega un objeto <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> al objeto <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar si un <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> es de solo lectura, llame a la <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Quita todos los elementos de <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar si un <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> es de solo lectura, llame a la <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que se va a buscar en la interfaz <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)">
          <source>Returns a value that indicates whether the specified <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> is in the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> especificado está en <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> is in the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> especificado se encuentra en la colección <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copia la totalidad de <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es multidimensional.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> de origen es mayor que el espacio disponible desde <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> hasta el final de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
          <source>Type <ph id="ph1">&lt;paramref name="C" /&gt;</ph> cannot be cast automatically to the type of the destination array.</source>
          <target state="translated">El tipo <ph id="ph1">&lt;paramref name="C" /&gt;</ph> no puede convertirse automáticamente al tipo de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount">
          <source>Returns the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Devuelve el número de elementos incluidos en la colección <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Número de elementos contenidos en <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Devuelve un valor que indica si <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> es de sólo lectura.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la interfaz <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> es de solo lectura; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> que se va a quitar de <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
          <source>Removes the first occurrence of a specific <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> from the <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Quita la primera aparición de un <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> específico de la <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> se quita correctamente; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was not found in the <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</source>
          <target state="translated">Este método también devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph> si no se encuentra <ph id="ph2">&lt;paramref name="item" /&gt;</ph> en <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
          <source>To determine whether an <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> is read-only, call the <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar si un <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601&gt;</ph> es de solo lectura, llame a la <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>