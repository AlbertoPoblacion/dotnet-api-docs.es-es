<Type Name="TcpServerChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27c41cdf21b7eb7fe8a508c5aae0b2e23523acaa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpServerChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpServerChannel&#xA;Implements IChannel, IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpServerChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementa un canal de servidor para llamadas remotas que utiliza el protocolo TCP para transmitir los mensajes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Canales de transporte de mensajes a través de límites de comunicación remota (por ejemplo, equipos o dominios de aplicación). La <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> clase transporta mensajes mediante el protocolo TCP.  
  
 Los canales se utilizan por la infraestructura de comunicación remota de .NET Framework para transportar las llamadas remotas. Cuando un cliente realiza una llamada a un objeto remoto, la llamada se serializa en un mensaje que se envía por un canal de cliente y se recibe por un canal de servidor. A continuación, se deserializa y se procesa. Los valores devueltos son transmitidos por el canal del servidor y recibidos por el canal del cliente.  
  
 Para realizar un procesamiento adicional de mensajes en el servidor, puede especificar una implementación de la <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interfaz a través de que todos los mensajes procesados por el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> se pasa la instancia.  
  
 El <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instancia acepta mensajes serializados en binario o formato SOAP.  
  
 A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> objeto tiene asociados propiedades de configuración que se pueden establecer en tiempo de ejecución en un archivo de configuración (invocando el método estático <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> método) o mediante programación (pasando una <xref:System.Collections.IDictionary> colección a la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor). Para obtener una lista de estas propiedades de configuración, consulte [canal y propiedades de configuración de formateador](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
> [!NOTE]
>  Si el equipo del servidor está ejecutando Windows 95/98/Me, el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> no se puede especificar como seguro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de un tipo de uso remoto.  
  
 [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]
 [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  
  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> clase para exponer un tipo de uso remoto.  
  
 [!code-cpp[Remoting_TcpInfo#30](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#30)]
 [!code-csharp[Remoting_TcpInfo#30](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> que escucha en el puerto especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">El puerto donde el canal realiza la escucha.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> que escucha en el puerto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para solicitar que un puerto disponible se asigna dinámicamente, establezca el `port` parámetro en 0 (cero).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este constructor.  
  
 [!code-cpp[Remoting_TcpInfo#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#31)]
 [!code-csharp[Remoting_TcpInfo#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">Colección de <see cref="T:System.Collections.IDictionary" /> que especifica valores para las propiedades de configuración que va a utilizar el canal.</param>
        <param name="sinkProvider">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> que va a utilizar el canal.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con las propiedades de canal y el receptor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre propiedades de configuración de canal, vea [canal y propiedades de configuración de formateador](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
> [!NOTE]
>  Si el equipo del servidor está ejecutando Windows 95/98/Me, el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> no se puede especificar como seguro.  
  
 Si no requiere la funcionalidad del receptor, establezca el `sinkProvider` parámetro `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este constructor para crear un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> objeto con propiedades de configuración específicas.  
  
 [!code-cpp[Remoting_TcpAuth#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/server.cpp#21)]
 [!code-csharp[Remoting_TcpAuth#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Una de las propiedades del canal especificadas tenía un formato incorrecto.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::String ^ name, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del canal.</param>
        <param name="port">El puerto donde el canal realiza la escucha.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con el nombre indicado y que realiza la escucha en el puerto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor establece la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> propiedad utilizando el `name` parámetro. Si desea registrar más de un canal, cada canal debe tener un nombre único.  
  
 Para solicitar que un puerto disponible se asigna dinámicamente, establezca el `port` parámetro en 0 (cero).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo construir un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, authorizeCallback As IAuthorizeRemotingConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Runtime::Remoting::Channels::IAuthorizeRemotingConnection ^ authorizeCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="authorizeCallback" Type="System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" />
      </Parameters>
      <Docs>
        <param name="properties">Una colección <see cref="T:System.Collections.IDictionary" /> que especifica valores para las propiedades de configuración que va a utilizar el canal.</param>
        <param name="sinkProvider">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> que va a utilizar el canal.</param>
        <param name="authorizeCallback">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> que va a utilizar el canal.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con las propiedades de canal, el receptor y el proveedor de autorización especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre propiedades de configuración de canal, vea [canal y propiedades de configuración de formateador](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
> [!NOTE]
>  Si el equipo del servidor está ejecutando Windows 95/98/Me, el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> no se puede especificar como seguro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Una de las propiedades del canal especificadas tenía un formato incorrecto.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::String ^ name, int port, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del canal.</param>
        <param name="port">El puerto donde el canal realiza la escucha.</param>
        <param name="sinkProvider">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> que va a utilizar el canal.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con el nombre de pila indicado, que realiza la escucha en el puerto especificado y utiliza el receptor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor establece la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> propiedad utilizando el `name` parámetro. Si desea registrar más de un canal, cada canal debe tener un nombre único.  
  
 Para solicitar que un puerto disponible se asigna dinámicamente, establezca el `port` parámetro en 0 (cero).  
  
 Si no requiere la funcionalidad del receptor, establezca el `sinkProvider` parámetro `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo construir un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los datos específicos del canal.</summary>
        <value>Instancia de <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> que contiene los datos específicos del canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque se devuelva como una instancia de <xref:System.Object?displayProperty=nameWithType>, el valor de esta propiedad se puede convertir a una instancia de <xref:System.Runtime.Remoting.Channels.ChannelDataStore> que describe el canal al que el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> objeto realiza escuchas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de esta propiedad.  
  
 [!code-cpp[Remoting_TcpInfo#33](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#33)]
 [!code-csharp[Remoting_TcpInfo#33](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del canal actual.</summary>
        <value>Instancia de <see cref="T:System.String" /> que contiene el nombre del canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada canal registrado tiene un nombre único. El nombre se utiliza para recuperar un canal concreto cuando se llama a <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de esta propiedad.  
  
 [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la prioridad del canal actual.</summary>
        <value>Un entero que representa la prioridad asignada al canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La prioridad controla el orden en el canal de datos aparecen en una <xref:System.Runtime.Remoting.ObjRef> instancia; canales de mayor prioridad aparecen antes que los canales de prioridad inferior. Los clientes intentan conectarse a los canales del servidor en el orden en que aparecen en la <xref:System.Runtime.Remoting.ObjRef> instancia. La prioridad predeterminada es 1; se permiten prioridades negativas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de esta propiedad.  
  
 [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la dirección URI del canal actual.</summary>
        <returns>URI del canal actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este método.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri">URI del objeto para el que se requieren direcciones URL.</param>
        <summary>Devuelve una matriz de todas las direcciones URL de un objeto con la dirección URI especificada, hospedadas en la instancia de <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> actual.</summary>
        <returns>Matriz de todas las direcciones URL de un objeto con la dirección URI especificada, hospedadas en la instancia de <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa por <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A> método.  
  
 [!code-cpp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor booleano que indica si el canal actual es seguro.</summary>
        <value>Valor booleano que indica si la instancia actual es segura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">Dirección URL de la que se extrae la dirección URI del objeto conocido remoto.</param>
        <param name="objectURI">Cuando este método finaliza, contiene una instancia de <see cref="T:System.String" /> con la dirección URI del objeto conocido remoto. Este parámetro se pasa sin inicializar.</param>
        <summary>Extrae el identificador URI del canal y el identificador URI del objeto conocido remoto de la dirección URL especificada.</summary>
        <returns>URI del canal actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El URI de un objeto es un valor que identifica de forma única una instancia de objeto específica.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este método.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Información de inicialización opcional.</param>
        <summary>Indica al canal actual que empiece a escuchar en un canal después de llamar al método <see cref="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" /> para detener la escucha en el canal.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> constructor llama automáticamente a `StartListening`, por lo que no debe llamar a este método, a menos que <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> se ha llamado anteriormente.  
  
 Al llamar a `StartListening` en un canal ya está escuchando puede provocar comportamientos inesperados y debe evitarse.  
  
 Si el canal utiliza un número de puerto asignado dinámicamente, el número de puerto podría cambiar al reiniciar la escucha.  
  
 El objeto de datos puede utilizarse para pasar un estado de inicialización específico al canal. Si no desea pasar un estado específico al canal, establezca `data` a `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Información opcional de estado para el canal.</param>
        <summary>Indica al canal actual que detenga la escucha de solicitudes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para detener la escucha en un canal. Para reiniciar la escucha, utilice el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> método.  
  
 Si el canal utiliza un número de puerto asignado dinámicamente, el número de puerto podría cambiar al reiniciar la escucha.  
  
 El objeto de datos puede utilizarse para pasar un estado de inicialización específico al canal. Si no desea pasar un estado específico al canal, establezca `data` a `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>