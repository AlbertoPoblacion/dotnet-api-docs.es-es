<Type Name="MenuItem" FullName="System.Windows.Controls.MenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a19278c7892f31790ef5ecdfa46e80c19907ed1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Controls.HeaderedItemsControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MenuItem extends System.Windows.Controls.HeaderedItemsControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits HeaderedItemsControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Controls::HeaderedItemsControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedItemsControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3f83f-101">Representa un elemento seleccionable en un control <see cref="T:System.Windows.Controls.Menu" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f83f-101">Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-102"><xref:System.Windows.Controls.MenuItem> es un <xref:System.Windows.Controls.HeaderedItemsControl>, lo que significa que su encabezado y una colección de objetos puede ser de cualquier tipo (como cadena, imagen o panel).</span><span class="sxs-lookup"><span data-stu-id="3f83f-102"><xref:System.Windows.Controls.MenuItem> is a <xref:System.Windows.Controls.HeaderedItemsControl>, which means its header and collection of objects can be of any type (such as string, image, or panel).</span></span> <span data-ttu-id="3f83f-103">Para obtener más información, vea la clase <xref:System.Windows.Controls.HeaderedItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-103">For more information, see the <xref:System.Windows.Controls.HeaderedItemsControl> class.</span></span>  
  
 <span data-ttu-id="3f83f-104">Un <xref:System.Windows.Controls.MenuItem> puede tener submenús.</span><span class="sxs-lookup"><span data-stu-id="3f83f-104">A <xref:System.Windows.Controls.MenuItem> can have submenus.</span></span> <span data-ttu-id="3f83f-105">El submenú de la <xref:System.Windows.Controls.MenuItem> se compone de los objetos dentro de la <xref:System.Windows.Controls.ItemCollection> de un <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-105">The submenu of the <xref:System.Windows.Controls.MenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemCollection> of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="3f83f-106">Es habitual que una <xref:System.Windows.Controls.MenuItem> para contener otros <xref:System.Windows.Controls.MenuItem> objetos que se va a crear submenús anidados.</span><span class="sxs-lookup"><span data-stu-id="3f83f-106">It is common for a <xref:System.Windows.Controls.MenuItem> to contain other <xref:System.Windows.Controls.MenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="3f83f-107">Un <xref:System.Windows.Controls.MenuItem> puede tener uno de varias funciones:</span><span class="sxs-lookup"><span data-stu-id="3f83f-107">A <xref:System.Windows.Controls.MenuItem> can have one of several functions:</span></span>  
  
-   <span data-ttu-id="3f83f-108">Solo puede seleccionarse para invocar un comando.</span><span class="sxs-lookup"><span data-stu-id="3f83f-108">It can be selected to invoke a command.</span></span>  
  
-   <span data-ttu-id="3f83f-109">Puede ser un separador para otros elementos de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-109">It can be a separator for other menu items.</span></span>  
  
-   <span data-ttu-id="3f83f-110">Puede ser un encabezado para un submenú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-110">It can be a header for a submenu.</span></span>  
  
-   <span data-ttu-id="3f83f-111">Puede ser activada o desactivada.</span><span class="sxs-lookup"><span data-stu-id="3f83f-111">It can be checked or unchecked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3f83f-112">De forma predeterminada, el <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> de un <xref:System.Windows.Controls.MenuItem> está establecido en <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-112">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.MenuItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3f83f-113">La posición horizontal predeterminada de un <xref:System.Windows.Controls.StackPanel> es <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-113">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3f83f-114">Si establece la <xref:System.Windows.FrameworkElement.Width%2A> propiedad de un <xref:System.Windows.Controls.MenuItem> a través de un <xref:System.Windows.Controls.StackPanel>, se aplica el valor predeterminado del panel de pila y se centra el elemento.</span><span class="sxs-lookup"><span data-stu-id="3f83f-114">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.MenuItem> through a <xref:System.Windows.Controls.StackPanel>, the stack panel's default is applied and the item is centered.</span></span>  
  
 <span data-ttu-id="3f83f-115">El <xref:System.Windows.Controls.MenuItem> controla la <xref:System.Windows.UIElement.MouseDown> evento, por lo que si adjuntar un controlador de eventos para <xref:System.Windows.UIElement.MouseDown>, nunca se llamará a su controlador.</span><span class="sxs-lookup"><span data-stu-id="3f83f-115">The <xref:System.Windows.Controls.MenuItem> handles the <xref:System.Windows.UIElement.MouseDown> event, so if you attach an event handler to <xref:System.Windows.UIElement.MouseDown>, your handler will never be called.</span></span>  <span data-ttu-id="3f83f-116">Para agregar su propio controlador, suscríbase a la <xref:System.Windows.UIElement.PreviewMouseDown> evento o suscribirse a <xref:System.Windows.UIElement.MouseDown> mediante una llamada a <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="3f83f-116">To add your own handler, subscribe to the <xref:System.Windows.UIElement.PreviewMouseDown> event or subscribe to <xref:System.Windows.UIElement.MouseDown> by calling <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-menuitem-control"></a><span data-ttu-id="3f83f-117">Personalizar el Control MenuItem</span><span class="sxs-lookup"><span data-stu-id="3f83f-117">Customizing the MenuItem Control</span></span>  
 <span data-ttu-id="3f83f-118">Para aplicar la misma configuración de propiedad a varios <xref:System.Windows.Controls.MenuItem> controles, utilice la <xref:System.Windows.FrameworkElement.Style%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3f83f-118">To apply the same property settings to multiple <xref:System.Windows.Controls.MenuItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="3f83f-119">Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para dar al control una apariencia única.</span><span class="sxs-lookup"><span data-stu-id="3f83f-119">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="3f83f-120">Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-120">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="3f83f-121">Para ver los elementos y los Estados que son específicos de la <xref:System.Windows.Controls.MenuItem>, consulte [menú Estilos y plantillas](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-121">To see the parts and states that are specific to the <xref:System.Windows.Controls.MenuItem>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="3f83f-122">Propiedades de dependencia para este control se pueden establecer el estilo predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="3f83f-122">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="3f83f-123">Si se establece una propiedad de un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="3f83f-123">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="3f83f-124">El estilo predeterminado se determina por el tema del escritorio que se utiliza cuando se ejecuta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="3f83f-124">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="3f83f-125">Para obtener más información, consulte [temas de WPF predeterminado](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="3f83f-125">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3f83f-126">Establecer una propiedad visual solo tendrá un efecto si esa propiedad está presente en ambos <xref:System.Windows.Controls.MenuItem> control de la plantilla predeterminada y se establece mediante una.</span><span class="sxs-lookup"><span data-stu-id="3f83f-126">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.MenuItem> control's default template and is set by using a .</span></span> <span data-ttu-id="3f83f-127">Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-127">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-128">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.Menu> para manipular texto en un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-128">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3f83f-129">El <xref:System.Windows.Controls.Menu> contiene <xref:System.Windows.Controls.MenuItem> objetos que utilizan el <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, y <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> propiedades y la <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, y <xref:System.Windows.Controls.MenuItem.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-129">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Menu" />
    <altmember cref="T:System.Windows.Controls.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-130">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-130">Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Checked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Checked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Checked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Checked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-131">Se produce cuando se activa un elemento de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-131">Occurs when a menu item is checked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Checked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3f83f-132">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="3f83f-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-133">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-133">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CheckedEvent>|  
|<span data-ttu-id="3f83f-134">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="3f83f-134">Routing strategy</span></span>|<span data-ttu-id="3f83f-135">Propagación</span><span class="sxs-lookup"><span data-stu-id="3f83f-135">Bubbling</span></span>|  
|<span data-ttu-id="3f83f-136">delegado</span><span class="sxs-lookup"><span data-stu-id="3f83f-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-137">En el ejemplo siguiente se muestra el control de la <xref:System.Windows.Controls.MenuItem.Checked> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-137">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Checked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-138">Identifica el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.Checked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-138">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-139">Se genera cuando se hace clic en <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-139">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-140">El <xref:System.Windows.Controls.MenuItem.Click> evento no se produce si el <xref:System.Windows.Controls.MenuItem> tiene un submenú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-140">The <xref:System.Windows.Controls.MenuItem.Click> event does not occur if the <xref:System.Windows.Controls.MenuItem> has a submenu.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3f83f-141">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="3f83f-141">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-142">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-142">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ClickEvent>|  
|<span data-ttu-id="3f83f-143">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="3f83f-143">Routing strategy</span></span>|<span data-ttu-id="3f83f-144">Propagación</span><span class="sxs-lookup"><span data-stu-id="3f83f-144">Bubbling</span></span>|  
|<span data-ttu-id="3f83f-145">delegado</span><span class="sxs-lookup"><span data-stu-id="3f83f-145">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-146">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.Menu> para manipular texto en un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-146">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3f83f-147">El <xref:System.Windows.Controls.Menu> contiene <xref:System.Windows.Controls.MenuItem> objetos que utilizan el <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, y <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> propiedades y la <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, y <xref:System.Windows.Controls.MenuItem.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-147">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-148">Identifica el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-148">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-149">Este evento se corresponde con un clic del botón primario del mouse.</span><span class="sxs-lookup"><span data-stu-id="3f83f-149">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-150">Obtiene o establece el comando asociado al elemento de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-150">Gets or sets the command associated with the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-151">Comando asociado al <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-151">The command associated with the <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="3f83f-152">El valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-152">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-153">Esta propiedad se utiliza para asociar un comando a un determinado <xref:System.Windows.Controls.MenuItem> instancia.</span><span class="sxs-lookup"><span data-stu-id="3f83f-153">This property is used to associate a command with a particular <xref:System.Windows.Controls.MenuItem> instance.</span></span> <span data-ttu-id="3f83f-154">En el ejemplo siguiente se asocia el **copia** comando con un <xref:System.Windows.Controls.MenuItem> y proporciona automáticamente el texto de entrada gesto **Ctrl + C**.</span><span class="sxs-lookup"><span data-stu-id="3f83f-154">The following example associates the **Copy** command with a <xref:System.Windows.Controls.MenuItem> and automatically supplies the input gesture text **Ctrl+C**.</span></span> <span data-ttu-id="3f83f-155">El ejemplo no establece la <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> propiedad, pero la <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> para el <xref:System.Windows.Controls.MenuItem> es "Copia" en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="3f83f-155">The example does not set the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property, but the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> for the <xref:System.Windows.Controls.MenuItem> is "Copy" at run time.</span></span>  <span data-ttu-id="3f83f-156">Puede especificar otro encabezado para el <xref:System.Windows.Controls.MenuItem> si desea que sea distinto.</span><span class="sxs-lookup"><span data-stu-id="3f83f-156">You can specify another header for the <xref:System.Windows.Controls.MenuItem> if you want it to be different.</span></span> <span data-ttu-id="3f83f-157">Para obtener información sobre cómo enlazar al comando deseado, vea [agregar un comando a un objeto MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span><span class="sxs-lookup"><span data-stu-id="3f83f-157">For information on how to bind to the desired command, see [Add a Command to a MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemcommand)]  
  
 <span data-ttu-id="3f83f-158">Se genera un comando cuando un <xref:System.Windows.Controls.MenuItem> se hace clic en, justo después del <xref:System.Windows.Controls.MenuItem.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-158">A command is raised when a <xref:System.Windows.Controls.MenuItem> is clicked—just after the <xref:System.Windows.Controls.MenuItem.Click> event.</span></span> <span data-ttu-id="3f83f-159">El comando se genera en el elemento según las prioridades siguientes:</span><span class="sxs-lookup"><span data-stu-id="3f83f-159">The command is raised on the element according to the following priorities:</span></span>  
  
1.  <span data-ttu-id="3f83f-160">Si <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> está establecido en el <xref:System.Windows.Controls.MenuItem>, se utiliza ese elemento.</span><span class="sxs-lookup"><span data-stu-id="3f83f-160">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is set on the <xref:System.Windows.Controls.MenuItem>, that element is used.</span></span>  
  
2.  <span data-ttu-id="3f83f-161">El <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> de un <xref:System.Windows.Controls.ContextMenu> que contiene el <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-161">The <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> of a <xref:System.Windows.Controls.ContextMenu> that contains the <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
3.  <span data-ttu-id="3f83f-162">Destino del foco de la ventana principal que contiene un <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-162">The focus target of the main window that contains a <xref:System.Windows.Controls.Menu>.</span></span>  
  
4.  <span data-ttu-id="3f83f-163">Objeto <xref:System.Windows.Controls.MenuItem> en el que se ha hecho clic.</span><span class="sxs-lookup"><span data-stu-id="3f83f-163">The <xref:System.Windows.Controls.MenuItem> that was clicked.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-164">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-164">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-165">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-165">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandProperty>|  
|<span data-ttu-id="3f83f-166">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-166">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-167">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-167">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-168">Los ejemplos siguientes muestran cómo utilizar la propiedad de comando para asociar comandos a elementos de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-168">The following examples show how to use the command property to associate commands with menu items.</span></span>  
  
 [!code-xaml[MenuEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[MenuEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-169">Obtiene o establece el parámetro que se va a pasar a la propiedad <see cref="P:System.Windows.Controls.MenuItem.Command" /> de <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-169">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-170">Parámetro que se va a pasar a la propiedad <see cref="P:System.Windows.Controls.MenuItem.Command" /> de <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-170">The parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="3f83f-171">El valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-171">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-172">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-173">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-173">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandParameterProperty>|  
|<span data-ttu-id="3f83f-174">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-175">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-175">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-176">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-176">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-177">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.Command" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-177">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-178">Obtiene o establece el elemento de destino en el que se produce el comando especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-178">Gets or sets the target element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-179">Elemento en el que se produce el comando especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-179">The element on which to raise the specified command.</span>
          </span>
          <span data-ttu-id="3f83f-180">El valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-180">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-181">El <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> propiedad especifica el elemento donde se produce el comando.</span><span class="sxs-lookup"><span data-stu-id="3f83f-181">The <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property specifies the element where the command occurs.</span></span> <span data-ttu-id="3f83f-182">Si <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> no está establecido, el elemento que tiene el foco de teclado recibirán el comando.</span><span class="sxs-lookup"><span data-stu-id="3f83f-182">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus will receive the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-183">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-183">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-184">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-184">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandTargetProperty>|  
|<span data-ttu-id="3f83f-185">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-185">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-186">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-186">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-187">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-187">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-188">Crea o identifica el elemento que se utiliza para mostrar un elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-188">Creates or identifies the element used to display a specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f83f-189">El elemento que se utiliza para mostrar un objeto indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-189">The element used to display a specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-190">Obtiene si el control admite el desplazamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-190">Gets whether the control supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-191">
            <see langword="true" /> en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-191">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-192">Si el control tiene un <xref:System.Windows.Controls.ScrollViewer> en su estilo y tiene un comportamiento de desplazamiento de teclado personalizado <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> debe devolver `true`.</span><span class="sxs-lookup"><span data-stu-id="3f83f-192">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public object Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Icon { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-193">Obtiene o establece el icono que aparece en <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-193">Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-194">Icono que aparece en <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-194">The icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="3f83f-195">El valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-195">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-196">Muchos <xref:System.Windows.Controls.Menu> controles con algo más que simplemente texto en el <xref:System.Windows.Controls.MenuItem> elementos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-196">Many <xref:System.Windows.Controls.Menu> controls have more than just text in the <xref:System.Windows.Controls.MenuItem> elements.</span></span> <span data-ttu-id="3f83f-197">A menudo hay iconos, marcas de verificación, aceleradores y flechas para indicar los submenús.</span><span class="sxs-lookup"><span data-stu-id="3f83f-197">Often there are icons, check marks, accelerators, and arrows to indicate submenus.</span></span>  
  
<a name="dependencyPropertyInfo_Icon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-198">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-198">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-199">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-199">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IconProperty>|  
|<span data-ttu-id="3f83f-200">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-200">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-201">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-201">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-202">En el ejemplo siguiente se crea un elemento de menú con un icono.</span><span class="sxs-lookup"><span data-stu-id="3f83f-202">The following example creates a menu item with an icon.</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemIcon](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemicon)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-203">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-203">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureText">
      <MemberSignature Language="C#" Value="public string InputGestureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputGestureText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberSignature Language="VB.NET" Value="Public Property InputGestureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputGestureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-204">Establece el texto que describe un gesto de entrada que llamará al comando unido al elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-204">Sets the text describing an input gesture that will call the command tied to the specified item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-205">El texto que describe el movimiento de entrada, como **Ctrl + C** para el **copia** comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-205">The text that describes the input gesture, such as **Ctrl+C** for the **Copy** command.</span>
          </span>
          <span data-ttu-id="3f83f-206">El valor predeterminado es una cadena vacía ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-206">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-207">Esta propiedad no asocia el movimiento de entrada con el elemento de menú; simplemente agrega texto al elemento de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-207">This property does not associate the input gesture with the menu item; it simply adds text to the menu item.</span></span> <span data-ttu-id="3f83f-208">La aplicación debe controlar la entrada del usuario para llevar a cabo la acción.</span><span class="sxs-lookup"><span data-stu-id="3f83f-208">The application must handle the user's input to carry out the action.</span></span>  <span data-ttu-id="3f83f-209">Para obtener información acerca de cómo asociar un comando a un elemento de menú, vea <xref:System.Windows.Controls.MenuItem.Command%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-209">For information on how to associate a command with a menu item, see <xref:System.Windows.Controls.MenuItem.Command%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_InputGestureText"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-210">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-210">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-211">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-211">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>|  
|<span data-ttu-id="3f83f-212">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-212">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-213">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-213">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-214">Los ejemplos siguientes muestran cómo utilizar el <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> propiedad para asignar texto de métodos abreviados de teclado a elementos de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-214">The following examples show how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcuts text to menu items.</span></span>  
  
 [!code-xaml[MenuEvent#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)]  
  
 [!code-csharp[MenuEvent#7](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputGestureTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputGestureTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputGestureTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputGestureTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-215">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-215">Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckable">
      <MemberSignature Language="C#" Value="public bool IsCheckable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCheckable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCheckable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-216">Obtiene un valor que indica si se puede activar un <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-216">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-217">
            <see langword="true" /> si el elemento de menú se puede activar; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-217">
              <see langword="true" /> if the menu item can be checked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-218">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-218">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsCheckable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-219">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-219">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-220">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-220">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckableProperty>|  
|<span data-ttu-id="3f83f-221">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-221">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-222">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-222">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-223">En el ejemplo siguiente se muestra cómo realizar <xref:System.Windows.Controls.MenuItem> controles que comprueban cuando un usuario hace clic en ellos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-223">The following example shows how to make <xref:System.Windows.Controls.MenuItem> controls that are checked when a user clicks them.</span></span>  
  
 [!code-xaml[MenuEvent#11](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-224">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-224">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public bool IsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property IsChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-225">Obtiene o establece un valor que indica si <see cref="T:System.Windows.Controls.MenuItem" /> está activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-225">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-226">
            <see langword="true" /> si <see cref="T:System.Windows.Controls.MenuItem" /> está activado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-226">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is checked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-227">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-227">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsChecked"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-228">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-228">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-229">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-229">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckedProperty>|  
|<span data-ttu-id="3f83f-230">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-230">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-231"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="3f83f-231"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-232">El siguiente ejemplo se muestra cómo el <xref:System.Windows.Controls.MenuItem.IsChecked%2A> propiedad puede utilizarse para colocar una marca de verificación delante de un elemento de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-232">The following example shows how the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property can be used to place a check mark in front of a menu item.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#6)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-233">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.IsChecked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-233">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-234">Obtiene un valor que indica si la propiedad <see cref="P:System.Windows.ContentElement.IsEnabled" /> es <see langword="true" /> para el elemento de menú actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-234">Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-235">
            <see langword="true" /> Si el <see cref="T:System.Windows.Controls.MenuItem" /> se puede seleccionar; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-235">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-236">Obtiene un valor que indica si <see cref="T:System.Windows.Controls.MenuItem" /> aparece resaltado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-236">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-237">Es <see langword="true" /> si aparece resaltado un control <see cref="T:System.Windows.Controls.MenuItem" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-237">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-238">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-238">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-239">A partir de la versión de .NET Framework 3.0 Service Pack 1, el <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> propiedad tiene un establecedor protegido.</span><span class="sxs-lookup"><span data-stu-id="3f83f-239">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> property has a protected setter.</span></span> <span data-ttu-id="3f83f-240">Para utilizar esta funcionalidad, la aplicación debe tener como destino la versión 3.5 de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3f83f-240">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3f83f-241">Para más información, consulte [Versiones y dependencias de .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-241">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-242">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-243">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-243">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>|  
|<span data-ttu-id="3f83f-244">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-245">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-246">En el ejemplo siguiente se muestra cómo determinar si un elemento de menú se resalta.</span><span class="sxs-lookup"><span data-stu-id="3f83f-246">The following example shows how to determine whether a menu item is highlighted.</span></span>  
  
 [!code-csharp[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#menuitemishighlighted)]
 [!code-vb[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#menuitemishighlighted)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-247">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-247">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f83f-248">Elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-248">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-249">Determina si el elemento especificado es (o puede ser) su propio <c>ItemContainer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-249">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f83f-250">Es <see langword="true" /> si el elemento es su propio <c>ItemContainer</c>; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-250">
              <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-251">Obtiene un valor que indica si se presiona <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-251">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-252">
            <see langword="true" /> si se presiona <see cref="T:System.Windows.Controls.MenuItem" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-252">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-253">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-254">A partir de la versión de .NET Framework 3.0 Service Pack 1, el <xref:System.Windows.Controls.MenuItem.IsPressed%2A> propiedad tiene un establecedor protegido.</span><span class="sxs-lookup"><span data-stu-id="3f83f-254">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property has a protected setter.</span></span> <span data-ttu-id="3f83f-255">Para utilizar esta funcionalidad, la aplicación debe tener como destino la versión 3.5 de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3f83f-255">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3f83f-256">Para más información, consulte [Versiones y dependencias de .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-256">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-257">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-257">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-258">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-258">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsPressedProperty>|  
|<span data-ttu-id="3f83f-259">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-259">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-260">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-260">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-261">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.MenuItem.IsPressed%2A> propiedad en un estilo de elemento de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-261">The following example shows how to use the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property in a menu item style.</span></span> <span data-ttu-id="3f83f-262">Cuando se presiona el elemento de menú, el estilo de su primer plano, el tamaño de texto y el cambio de estilo de texto.</span><span class="sxs-lookup"><span data-stu-id="3f83f-262">When the menu item is pressed, the style of its foreground, text size, and text style change.</span></span>  
  
 [!code-xaml[MenuItemsStyle_snip#MenuItemsIsPressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemsStyle_snip/CSharp/MyApp.xaml#menuitemsispressed)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-263">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.IsPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-263">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpen">
      <MemberSignature Language="C#" Value="public bool IsSubmenuOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubmenuOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubmenuOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubmenuOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-264">Obtiene o establece un valor que indica si el submenú de <see cref="T:System.Windows.Controls.MenuItem" /> está abierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-264">Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-265">
            <see langword="true" /> si el submenú de <see cref="T:System.Windows.Controls.MenuItem" /> está abierto; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-265">
              <see langword="true" /> if the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-266">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-266">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-267">Cuando <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> está establecido en `true`, captura del mouse está establecido en el <xref:System.Windows.Controls.MenuItem> y su subárbol.</span><span class="sxs-lookup"><span data-stu-id="3f83f-267">When <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.MenuItem> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsSubmenuOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-268">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-268">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-269">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-269">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>|  
|<span data-ttu-id="3f83f-270">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-270">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-271">En el ejemplo siguiente se muestra cómo abrir un submenú de un <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-271">The following example shows how to open a submenu of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="3f83f-272">En este ejemplo, el <xref:System.Windows.Controls.MenuItem> llama `fileMenu` contiene un <xref:System.Windows.Controls.MenuItem> denominado `recentFiles` que tiene un submenú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-272">In this example, the <xref:System.Windows.Controls.MenuItem> called `fileMenu` contains a <xref:System.Windows.Controls.MenuItem> called `recentFiles` that has a submenu.</span></span> <span data-ttu-id="3f83f-273">Cuando `fileMenu` se abre, el <xref:System.Windows.Controls.MenuItem.SubmenuOpened> evento se desencadena y `FileMenu_Opened` controlador de eventos abre el submenú de `recentFiles`.</span><span class="sxs-lookup"><span data-stu-id="3f83f-273">When `fileMenu` is opened, the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event is raised and the `FileMenu_Opened` event handler opens the submenu of `recentFiles`.</span></span>  
  
 [!code-xaml[MenuItems_snip#IsSubMenuOpenMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#issubmenuopenmenu)]  
  
 [!code-csharp[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#issubmenuopen)]
 [!code-vb[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#issubmenuopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSubmenuOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSubmenuOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSubmenuOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSubmenuOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-274">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-274">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimation">
      <MemberSignature Language="C#" Value="public bool IsSuspendingPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuspendingPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSuspendingPopupAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSuspendingPopupAnimation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-275">Obtiene si un menú suspende las animaciones en su control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-275">Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-276">
            <see langword="true" /> si el menú debe suspender las animaciones en su control emergente; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-276">
              <see langword="true" /> if the menu should suspend animations on its popup; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-277">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-277">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-278">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-278">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-279">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-279">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>|  
|<span data-ttu-id="3f83f-280">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-280">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-281">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-281">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSuspendingPopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSuspendingPopupAnimationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-282">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-282">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-283">Obtiene o establece la lógica personalizada para elegir una plantilla que se usa para mostrar cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-283">Gets or sets the custom logic for choosing a template used to display each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-284">Objeto personalizado que proporciona la lógica y devuelve un contenedor de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-284">A custom object that provides logic and returns an item container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-285">Use una <xref:System.Windows.Controls.ItemContainerTemplateSelector> para elegir los contenedores de elementos diferentes si los elementos de la colección son del mismo tipo y es necesario proporcionar lógica personalizada para elegir el contenedor de elementos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-285">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-286">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-286">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-287">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-287">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="3f83f-288">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-288">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-289">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-289">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-290">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-290">Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-291">Datos para el evento <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-291">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-292">Responde cuando se invoca <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> para este control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-292">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-293">Llamado cuando se genera el árbol de la plantilla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-293">Called when the template's tree is generated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnChecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-294">Datos para el evento <see cref="E:System.Windows.Controls.MenuItem.Checked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-294">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-295">Se invoca cuando el valor de la propiedad <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> cambia a <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-295">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3f83f-296">Este método genera el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.Checked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-296">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-297">El control provoca la <xref:System.Windows.Controls.MenuItem.Checked> eventos mediante una llamada a <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-297">The control raises the <xref:System.Windows.Controls.MenuItem.Checked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="3f83f-298">Para obtener más información, consulte [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-298">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3f83f-299">Al reemplazar <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> método para que los delegados registrados reciban el evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3f83f-299">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-300">Llamado cuando se hace clic en un <see cref="T:System.Windows.Controls.MenuItem" /> y se provoca un evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-300">Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-301">Si se hereda de <xref:System.Windows.Controls.MenuItem>, asegúrese de llamar a la clase base para obtener el comportamiento siguiente.</span><span class="sxs-lookup"><span data-stu-id="3f83f-301">If you inherit from <xref:System.Windows.Controls.MenuItem>, be sure to call the base class to get the following behavior.</span></span>  
  
-   <span data-ttu-id="3f83f-302">Alternancia de la <xref:System.Windows.Controls.MenuItem.IsChecked%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3f83f-302">Toggling of the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property.</span></span>  
  
-   <span data-ttu-id="3f83f-303">Centrar se establece en el elemento de menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-303">Focus being set to the menu item.</span></span>  
  
-   <span data-ttu-id="3f83f-304">Evento de invocación de automatización.</span><span class="sxs-lookup"><span data-stu-id="3f83f-304">Automation invoke event.</span></span>  
  
-   <span data-ttu-id="3f83f-305">Evento <xref:System.Windows.Controls.MenuItem.Click>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-305"><xref:System.Windows.Controls.MenuItem.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-306">Proporciona una implementación apropiada de <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> para este control, como parte de la infraestructura de automatización de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-306">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f83f-307">
            <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> para este <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-307">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-308">Datos para el evento <see cref="E:System.Windows.UIElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-308">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-309">Anuncia que el teclado tiene el foco en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-309">Announces that the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-310">Datos para el evento <see cref="E:System.Windows.FrameworkElement.Initialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-310">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-311">Llamado cuando la propiedad <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> está establecida en <see langword="true" /> y se produce un evento <see cref="E:System.Windows.FrameworkElement.Initialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-311">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-312">Datos para el evento <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-312">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-313">Llamado cuando el foco ya no está en <see cref="T:System.Windows.Controls.MenuItem" /> o dentro de él.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-313">Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-314">Datos para el evento <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-314">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-315">Se llama a este método cuando cambia la propiedad de <see cref="P:System.Windows.Controls.ItemsControl.Items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-315">Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-316">Datos para el evento <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-316">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-317">Responde al evento <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-317">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-318">Datos para el evento <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-318">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-319">Llamado siempre que el mouse entra en <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-319">Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-320">Datos para el evento <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-320">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-321">Llamado siempre que el mouse sale de <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-321">Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-322">Datos para el evento <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-322">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-323">Llamado cuando se presiona el botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-323">Called when the left mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-324">Datos para el evento <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-324">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-325">Llamado cuando se suelta el botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-325">Called when the left mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-326">Datos para el evento <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-326">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-327">Llamado cuando se mueve el mouse sobre un elemento de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-327">Called when the mouse is moved over a menu item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-328">Datos para el evento <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-328">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-329">Llamado cuando se presiona el botón secundario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-329">Called when the right mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-330">Datos para el evento <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-330">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-331">Llamado cuando se suelta el botón secundario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-331">Called when the right mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-332">Datos para el evento <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-332">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-333">Llamado cuando se cierra el submenú de <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-333">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f83f-334">Este ejemplo muestra cómo utilizar el <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3f83f-334">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-335">Datos para el evento <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-335">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-336">Llamado cuando se abre el submenú de <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-336">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f83f-337">Este ejemplo muestra cómo utilizar el <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3f83f-337">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnchecked">
      <MemberSignature Language="C#" Value="protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnchecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnchecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnchecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3f83f-338">Datos para el evento <see cref="E:System.Windows.Controls.MenuItem.Unchecked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-338">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-339">Se invoca cuando el valor de la propiedad <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> cambia a <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-339">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-340">Este método genera el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.Unchecked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-340">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-341">El control provoca la <xref:System.Windows.Controls.MenuItem.Unchecked> eventos mediante una llamada a <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-341">The control raises the <xref:System.Windows.Controls.MenuItem.Unchecked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="3f83f-342">Para obtener más información, consulte [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3f83f-342">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3f83f-343">Al reemplazar <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> método para que los delegados registrados reciban el evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3f83f-343">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="3f83f-344">Valor anterior del elemento primario del objeto visual o nulo si el objeto visual no tenía un elemento primario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-344">Old value of the parent of the visual, or null if the visual did not have a parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-345">Llamado cuando se cambia el elemento primario del <see cref="T:System.Windows.Controls.MenuItem" /> del objeto visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-345">Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3f83f-346">Elemento usado para mostrar el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-346">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="3f83f-347">Elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-347">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-348">Prepara el elemento especificado para visualizar el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-348">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-349">La preparación del elemento puede implicar aplicar estilos, configurar enlaces y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="3f83f-349">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MenuItemRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MenuItemRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MenuItemRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MenuItemRole Role { System::Windows::Controls::MenuItemRole get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MenuItemRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-350">Obtiene un valor que indica el rol de <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-350">Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-351">Uno de los valores de <see cref="T:System.Windows.Controls.MenuItemRole" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-351">One of the <see cref="T:System.Windows.Controls.MenuItemRole" /> values.</span>
          </span>
          <span data-ttu-id="3f83f-352">El valor predeterminado es <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-352">The default is <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-353">El valor de <xref:System.Windows.Controls.MenuItem.Role%2A> depende de la relación con el <xref:System.Windows.Controls.Menu> y otros <xref:System.Windows.Controls.MenuItem> objetos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-353">The value of <xref:System.Windows.Controls.MenuItem.Role%2A> depends on the relationship to the <xref:System.Windows.Controls.Menu> and other <xref:System.Windows.Controls.MenuItem> objects.</span></span>  
  
<a name="dependencyPropertyInfo_Role"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-354">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-354">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-355">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-355">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.RoleProperty>|  
|<span data-ttu-id="3f83f-356">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-356">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-357">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-357">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RoleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RoleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RoleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RoleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-358">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.Role" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-358">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SeparatorStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SeparatorStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeparatorStyleKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SeparatorStyleKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-359">Obtiene la clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es <see cref="T:System.Windows.Controls.Separator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-359">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-360">Clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es <see cref="T:System.Windows.Controls.Separator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-360">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-361">Utilice esta propiedad para cambiar el estilo de un <xref:System.Windows.Controls.Separator> en un menú.</span><span class="sxs-lookup"><span data-stu-id="3f83f-361">Use this property to change the style of a <xref:System.Windows.Controls.Separator> in a menu.</span></span>  
  
<a name="xamlAttributeUsage_SeparatorStyleKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3f83f-362">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="3f83f-362">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3f83f-363"><*objeto* *propiedad*= { **MenuItem.SeparatorStyleKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3f83f-363"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-364">En el ejemplo siguiente se muestra cómo utilizar esta propiedad al estilo un <xref:System.Windows.Controls.Separator> en un <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-364">The following example shows how to use this property to style a <xref:System.Windows.Controls.Separator> in a <xref:System.Windows.Controls.Menu>.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="3f83f-365">Contenedor al que se aplicará el estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-365">Container to which the style will be applied.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="3f83f-366">Elemento al que pertenece el contenedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-366">Item to which the container belongs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f83f-367">Se utiliza para determinar si se aplica un estilo al contenedor de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-367">Used to determine whether to apply a style to the item container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f83f-368">
            <see langword="true" /> si <see cref="T:System.Windows.Controls.MenuItem" /> no es un <see cref="T:System.Windows.Controls.Separator" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-368">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClick">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnClick { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-369">Obtiene o establece un valor que indica que el submenú en el que se encuentra <see cref="T:System.Windows.Controls.MenuItem" /> no se debe cerrar al hacer clic en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-369">Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-370">
            <see langword="true" /> si el submenú en el que se encuentra <see cref="T:System.Windows.Controls.MenuItem" /> no se debe cerrar al hacer clic en este elemento; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-370">
              <see langword="true" /> if the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-371">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-371">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnClick"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-372">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-372">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-373">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-373">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>|  
|<span data-ttu-id="3f83f-374">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-374">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-375">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-375">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-376">En el ejemplo siguiente se usa el <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> propiedad que se va a crear un elemento en un submenú que no se cerrará cuando se hace clic en el elemento.</span><span class="sxs-lookup"><span data-stu-id="3f83f-376">The following example uses the <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> property to create an item in a submenu that does not close when the item is clicked.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuStaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenustaysopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClickProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnClickProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnClickProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnClickProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnClickProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-377">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-377">Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-378">Se produce cuando el estado de la propiedad <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> cambia a <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-378">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuClosed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3f83f-379">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="3f83f-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-380">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-380">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>|  
|<span data-ttu-id="3f83f-381">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="3f83f-381">Routing strategy</span></span>|<span data-ttu-id="3f83f-382">Propagación</span><span class="sxs-lookup"><span data-stu-id="3f83f-382">Bubbling</span></span>|  
|<span data-ttu-id="3f83f-383">delegado</span><span class="sxs-lookup"><span data-stu-id="3f83f-383">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-384">Los ejemplos siguientes muestran que realiza la llamada y el control de la <xref:System.Windows.Controls.MenuItem.SubmenuClosed> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-384">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuClosed> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-385">Identifica el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-385">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-386">Obtiene la clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es un encabezado de un submenú. </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-386">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-387">Clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es un encabezado de un submenú. </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-387">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-388">Utilice esta propiedad para cambiar el estilo de un <xref:System.Windows.Controls.MenuItem> cuyo <xref:System.Windows.Controls.MenuItem.Role%2A> propiedad está establecida en <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-388">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3f83f-389">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="3f83f-389">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3f83f-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3f83f-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-391">Obtiene la clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es un submenú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-391">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-392">Clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es un submenú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-392">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-393">Utilice esta propiedad para cambiar el estilo de un <xref:System.Windows.Controls.MenuItem> cuyo <xref:System.Windows.Controls.MenuItem.Role%2A> propiedad está establecida en <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-393">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3f83f-394">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="3f83f-394">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3f83f-395"><*objeto* *propiedad*= { **MenuItem.SubmenuItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3f83f-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-396">Se produce cuando el estado de la propiedad <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> cambia a <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-396">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuOpened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3f83f-397">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="3f83f-397">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-398">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-398">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>|  
|<span data-ttu-id="3f83f-399">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="3f83f-399">Routing strategy</span></span>|<span data-ttu-id="3f83f-400">Propagación</span><span class="sxs-lookup"><span data-stu-id="3f83f-400">Bubbling</span></span>|  
|<span data-ttu-id="3f83f-401">delegado</span><span class="sxs-lookup"><span data-stu-id="3f83f-401">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-402">Los ejemplos siguientes muestran que realiza la llamada y el control de la <xref:System.Windows.Controls.MenuItem.SubmenuOpened> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-402">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuOpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-403">Identifica el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-403">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-404">Obtiene la clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es un menú de nivel superior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-404">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-405">Clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando <see cref="T:System.Windows.Controls.MenuItem" /> es un menú de nivel superior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-405">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-406">Utilice esta propiedad para cambiar el estilo de un <xref:System.Windows.Controls.MenuItem> cuyo <xref:System.Windows.Controls.MenuItem.Role%2A> propiedad está establecida en <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-406">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3f83f-407">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="3f83f-407">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3f83f-408"><*objeto* *propiedad*= { **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3f83f-408"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-409">Obtiene la clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando es un <see cref="T:System.Windows.Controls.MenuItem" /> de nivel superior que puede invocar comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-409">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-410">Clave de recurso para un estilo aplicado a <see cref="T:System.Windows.Controls.MenuItem" /> cuando es un <see cref="T:System.Windows.Controls.MenuItem" /> de nivel superior que puede invocar comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-410">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-411">Utilice esta propiedad para cambiar el estilo de un <xref:System.Windows.Controls.MenuItem> cuyo <xref:System.Windows.Controls.MenuItem.Role%2A> propiedad está establecida en <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-411">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3f83f-412">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="3f83f-412">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3f83f-413"><*objeto* *propiedad*= { **MenuItem.TopLevelItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3f83f-413"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unchecked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unchecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unchecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Unchecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unchecked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unchecked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-414">Se produce cuando se desactiva <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-414">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Unchecked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3f83f-415">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="3f83f-415">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-416">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-416">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UncheckedEvent>|  
|<span data-ttu-id="3f83f-417">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="3f83f-417">Routing strategy</span></span>|<span data-ttu-id="3f83f-418">Propagación</span><span class="sxs-lookup"><span data-stu-id="3f83f-418">Bubbling</span></span>|  
|<span data-ttu-id="3f83f-419">delegado</span><span class="sxs-lookup"><span data-stu-id="3f83f-419">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3f83f-420">En el ejemplo siguiente se muestra el control de la <xref:System.Windows.Controls.MenuItem.Unchecked> eventos.</span><span class="sxs-lookup"><span data-stu-id="3f83f-420">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Unchecked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UncheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UncheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UncheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UncheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-421">Identifica el evento enrutado <see cref="E:System.Windows.Controls.MenuItem.Unchecked" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-421">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-422">Obtiene o establece un valor que indica si el menú selecciona varios contenedores de elementos diferentes, según el tipo del elemento en la colección subyacente o alguna otra heurística.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-422">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f83f-423">
            <see langword="true" /> si el menú selecciona varios contenedores de elementos; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-423">
              <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-424">El valor predeterminado registrado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-424">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f83f-425">Para obtener más información sobre lo que puede afectar al valor, vea [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-425">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f83f-426">Esta propiedad es útil si desea crear un menú mediante un enlace a una colección.</span><span class="sxs-lookup"><span data-stu-id="3f83f-426">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="3f83f-427">El contenedor de elemento es el elemento de interfaz de usuario que muestra el objeto en una colección.</span><span class="sxs-lookup"><span data-stu-id="3f83f-427">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="3f83f-428">Si desea enlazar a una colección para crear un menú que contiene <xref:System.Windows.Controls.MenuItem> objetos y <xref:System.Windows.Controls.Separator> objetos, establecer el <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> propiedad en true y crear un <xref:System.Windows.Controls.ItemContainerTemplate> para cada tipo de objeto en la colección.</span><span class="sxs-lookup"><span data-stu-id="3f83f-428">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="3f83f-429">Cada <xref:System.Windows.Controls.ItemContainerTemplate> debe contener una <xref:System.Windows.Controls.MenuItem> o <xref:System.Windows.Controls.Separator>.</span><span class="sxs-lookup"><span data-stu-id="3f83f-429">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3f83f-430">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="3f83f-430">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3f83f-431">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="3f83f-431">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="3f83f-432">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="3f83f-432">Metadata properties set to `true`</span></span>|<span data-ttu-id="3f83f-433">None</span><span class="sxs-lookup"><span data-stu-id="3f83f-433">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f83f-434">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f83f-434">Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>