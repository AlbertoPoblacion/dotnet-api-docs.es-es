<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b73c07358544cc078c724c0fcc898ea765acce0c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39918855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationRule abstract" />
  <TypeSignature Language="F#" Value="type ValidationRule = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una manera de crear una regla personalizada para comprobar la validez de la entrada del usuario.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se usa el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelo de enlace de datos, puede asociar <xref:System.Windows.Data.Binding.ValidationRules%2A> con el objeto de enlace. Para crear reglas personalizadas, cree una subclase de esta clase e implemente el <xref:System.Windows.Controls.ValidationRule.Validate%2A> método. Opcionalmente, use la integrada <xref:System.Windows.Controls.ExceptionValidationRule>, que detecta las excepciones que se producen durante las actualizaciones del origen, o la <xref:System.Windows.Controls.DataErrorValidationRule>, qué comprobaciones de los errores generados por el <xref:System.ComponentModel.IDataErrorInfo> implementación del objeto de origen.  
  
 El motor de enlace comprueba cada <xref:System.Windows.Controls.ValidationRule> que está asociado con un enlace cada vez que transfiere un valor de entrada, que es el valor de propiedad de destino de enlace a la propiedad de origen de enlace.  
  
 Para obtener información detallada sobre la validación de datos, vea [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Para obtener información acerca de cómo validar los datos proporcionados por el usuario en un cuadro de diálogo, vea [información general sobre cuadros de diálogo](~/docs/framework/wpf/app-development/dialog-boxes-overview.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo implementar una regla de validación. El valor de entrada no es válido si contiene caracteres no numéricos o si está fuera de los límites superior e inferior. Si el valor devuelto del <xref:System.Windows.Controls.ValidationResult> no es válido, el <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> propiedad está establecida en el mensaje de error adecuado y el <xref:System.Windows.Controls.ValidationResult.IsValid%2A> propiedad está establecida en `false`.  
  
 Para obtener un ejemplo completo, vea [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule(System::Windows::Controls::ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationRule : System.Windows.Controls.ValidationStep * bool -&gt; System.Windows.Controls.ValidationRule" Usage="new System.Windows.Controls.ValidationRule (validationStep, validatesOnTargetUpdated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep">Uno de los valores de enumeración  que especifica cuándo se ejecuta la regla de validación.</param>
        <param name="validatesOnTargetUpdated">Es <see langword="true" /> para que la regla de validación se ejecute cuando se actualice el destino de <see cref="T:System.Windows.Data.Binding" />; de lo contrario, es <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ValidationRule" /> con el paso de validación especificado y un valor que indica si la regla de validación se ejecuta cuando se actualiza el destino.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Realiza comprobaciones de validación en un valor.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Valor del destino de enlace que se comprobará.</param>
        <param name="cultureInfo">Referencia cultural que usará en esta regla.</param>
        <summary>Si se reemplaza en una clase derivada, realiza comprobaciones de validación en un valor.</summary>
        <returns>Un objeto <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe implementar este método cuando se crea una subclase de la <xref:System.Windows.Controls.ValidationRule> clase con el fin de crear una regla de validación personalizada.  
  
 Cada vez que el motor de enlace de datos transfiere un valor de la propiedad de destino de enlace (por el usuario) a la propiedad de origen de enlace (los datos subyacentes), comprueba si algún <xref:System.Windows.Data.Binding.ValidationRules%2A> se definen para que el enlace. Si <xref:System.Windows.Data.Binding.ValidationRules%2A> se definen para el enlace, el motor llama a la <xref:System.Windows.Controls.ValidationRule.Validate%2A> método en cada <xref:System.Windows.Controls.ValidationRule> hasta uno de ellos encuentra un error o hasta que pasen por todos ellos.  
  
 Para obtener información detallada sobre la validación de datos, vea [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo implementar una regla de validación. En el ejemplo siguiente, el valor de entrada no es válido si contiene caracteres no numéricos o si está fuera de los límites superior e inferior. Si el valor de entrada no es válido, el <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> propiedad está establecida en el mensaje de error adecuado y el <xref:System.Windows.Controls.ValidationResult.IsValid%2A> propiedad está establecida en `false`.  
  
 Para obtener un ejemplo completo, vea [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingExpressionBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="value">Valor del destino de enlace que se comprobará.</param>
        <param name="cultureInfo">Referencia cultural que usará en esta regla.</param>
        <param name="owner">La expresión de enlace que utiliza la regla de validación.</param>
        <summary>Realiza comprobaciones de validación en un valor.</summary>
        <returns>Un objeto <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingGroup ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="value">Valor del destino de enlace que se comprobará.</param>
        <param name="cultureInfo">Referencia cultural que usará en esta regla.</param>
        <param name="owner">El grupo de enlaces que utiliza la regla de validación.</param>
        <summary>Realiza comprobaciones de validación en un valor.</summary>
        <returns>Un objeto <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnTargetUpdated : bool with get, set" Usage="System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la regla de validación se ejecuta cuando se actualiza el destino de <see cref="T:System.Windows.Data.Binding" />.</summary>
        <value>Es <see langword="true" /> si la regla de validación se ejecuta cuando se actualiza el destino de <see cref="T:System.Windows.Data.Binding" />; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se comprueba si el <xref:System.Windows.Controls.TextBox> está vacío. El <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, tiene <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> establecido en `true`, de modo que cuando se inicia la aplicación, el <xref:System.Windows.Controls.ValidationRule> se ejecuta y muestra un mensaje si la <xref:System.Windows.Controls.TextBox> está vacío.  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 El ejemplo siguiente se muestra el <xref:System.Windows.Controls.ValidationRule> que se utiliza en el ejemplo anterior y el controlador de eventos para el <xref:System.Windows.Controls.Validation.Error> eventos.  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationStep As ValidationStep" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationStep ValidationStep { System::Windows::Controls::ValidationStep get(); void set(System::Windows::Controls::ValidationStep value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationStep : System.Windows.Controls.ValidationStep with get, set" Usage="System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece cuándo se ejecuta la regla de validación.</summary>
        <value>Uno de los valores de enumeración.  El valor predeterminado es <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se establece la <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> a <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> en el <xref:System.Windows.Controls.ValidationRule> llamado `ValidateDateAndPrice` para que cuando se ejecuta, el <xref:System.Windows.Controls.ValidationRule.Validate%2A> método tiene acceso a los valores que son del tipo de la propiedad de origen. Cuando las reglas `PriceIsAPositiveNumber` y `FutureDateRule` ejecutar, los valores en cada <xref:System.Windows.Controls.ValidationRule.Validate%2A> método son cadenas, porque las reglas se ejecutan antes de que los valores se convierten en sus tipos respectivos.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 El ejemplo siguiente se muestra el <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`. En el `Validate` invalidación del método, el `Price` propiedad es de tipo <xref:System.Double> y `OfferExpires` propiedad es de tipo <xref:System.DateTime> porque las cadenas se han convertido a sus tipos respectivos en el momento en el <xref:System.Windows.Controls.ValidationRule> se ejecuta.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>