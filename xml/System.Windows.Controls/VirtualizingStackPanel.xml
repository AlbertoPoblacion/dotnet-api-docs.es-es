<Type Name="VirtualizingStackPanel" FullName="System.Windows.Controls.VirtualizingStackPanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ef6d1cfd3e8ed64425a5eb77929d73ecb0637bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VirtualizingStackPanel : System.Windows.Controls.VirtualizingPanel, System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi VirtualizingStackPanel extends System.Windows.Controls.VirtualizingPanel implements class System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.VirtualizingStackPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualizingStackPanel&#xA;Inherits VirtualizingPanel&#xA;Implements IScrollInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualizingStackPanel : System::Windows::Controls::VirtualizingPanel, System::Windows::Controls::Primitives::IScrollInfo" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.VirtualizingPanel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IScrollInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Organiza y virtualiza contenido en una sola línea orientada horizontal o verticalmente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El sistema de diseño estándar crea contenedores de elementos y calcula el diseño de cada elemento asociado a un control de lista. La palabra "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en pantalla. Generar muchos [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos cuándo podrían estar solo unos cuantos elementos en la pantalla pueden afectar negativamente al rendimiento de la aplicación. El <xref:System.Windows.Controls.VirtualizingStackPanel> calcula el número de elementos visibles y funciona con la <xref:System.Windows.Controls.ItemContainerGenerator> desde una <xref:System.Windows.Controls.ItemsControl> (como <xref:System.Windows.Controls.ListBox> o <xref:System.Windows.Controls.ListView>) para crear [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos solo para los elementos visibles.  
  
 Virtualización en un <xref:System.Windows.Controls.StackPanel> sólo se produce cuando el control de elementos contenido en el panel crea sus propios contenedores de elementos. Se puede garantizar que esto ocurra mediante el uso de enlace de datos. En escenarios donde se crean y se agregan elementos al control, los contenedores de elementos un <xref:System.Windows.Controls.VirtualizingStackPanel> no ofrece ninguna ventaja de rendimiento con respecto a un <xref:System.Windows.Controls.StackPanel>.  
  
 <xref:System.Windows.Controls.VirtualizingStackPanel> es el host de elementos predeterminado para el <xref:System.Windows.Controls.ListBox> elemento. De forma predeterminada, el `VirtualizingStackPanel.IsVirtualizing` se establece la propiedad adjunta en `true`.  
  
 Cuando el `VirtualizingStackPanel.IsVirtualizing` se establece la propiedad adjunta en `false`, <xref:System.Windows.Controls.VirtualizingStackPanel> se comporta igual que una normal <xref:System.Windows.Controls.StackPanel>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo enlazar a un origen de datos XML y virtualizar los elementos mostrados en un <xref:System.Windows.Controls.ListBox> elemento mediante [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]. Tenga en cuenta que la `VirtualizingStackPanel.IsVirtualizing` propiedad adjunta se establece explícitamente en `true`.  
  
 [!code-xaml[VirtualizingStackPanel_Intro#2](~/samples/snippets/csharp/VS_Snippets_Wpf/VirtualizingStackPanel_Intro/CS/default.xaml#2)]  
  
 En el ejemplo siguiente se crea un <xref:System.Windows.Controls.ListBox> y establece la `VirtualizingStackPanel.VirtualizationMode` propiedad adjunta <xref:System.Windows.Controls.VirtualizationMode.Recycling>.  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizationMode](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizationmode)]  
  
 En el ejemplo siguiente se muestra los datos utilizados en el ejemplo anterior.  
  
 [!code-csharp[RecycleItemContainerShippets#ListBoxData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#listboxdata)]
 [!code-vb[RecycleItemContainerShippets#ListBoxData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#listboxdata)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.StackPanel" />
    <altmember cref="T:System.Windows.Controls.ListBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizingStackPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizingStackPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="AddCleanUpVirtualizedItemHandler">
      <MemberSignature Language="C#" Value="public static void AddCleanUpVirtualizedItemHandler (System.Windows.DependencyObject element, System.Windows.Controls.CleanUpVirtualizedItemEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCleanUpVirtualizedItemHandler(class System.Windows.DependencyObject element, class System.Windows.Controls.CleanUpVirtualizedItemEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddCleanUpVirtualizedItemHandler (element As DependencyObject, handler As CleanUpVirtualizedItemEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddCleanUpVirtualizedItemHandler(System::Windows::DependencyObject ^ element, System::Windows::Controls::CleanUpVirtualizedItemEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Controls.CleanUpVirtualizedItemEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.DependencyObject" /> que escucha este evento.</param>
        <param name="handler">Controlador de eventos que se va a agregar.</param>
        <summary>Agrega un controlador de eventos al evento asociado <see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El sistema de diseño estándar crea contenedores de elementos y calcula el diseño de cada elemento asociado a un control de lista. La palabra "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en pantalla. Generar muchos [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos cuándo podrían estar solo unos cuantos elementos en la pantalla pueden afectar negativamente al rendimiento de la aplicación. El <xref:System.Windows.Controls.VirtualizingStackPanel> calcula el número de elementos visibles y funciona con la <xref:System.Windows.Controls.ItemContainerGenerator> desde una <xref:System.Windows.Controls.ItemsControl> (como <xref:System.Windows.Controls.ListBox> o <xref:System.Windows.Controls.ListView>) para crear [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos solo para los elementos visibles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <see cref="T:System.Windows.Size" /> que este elemento debe utilizar para organizar sus elementos secundarios.</param>
        <summary>Organiza el contenido de un elemento <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
        <returns>Estructura <see cref="T:System.Windows.Size" /> que representa el tamaño organizado de este elemento <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> y sus elementos secundarios.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar la <xref:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride%2A> y <xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A> métodos en una clase derivada para el comportamiento de diseño personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BringIndexIntoView">
      <MemberSignature Language="C#" Value="protected internal override void BringIndexIntoView (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void BringIndexIntoView(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub BringIndexIntoView (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void BringIndexIntoView(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posición del elemento que va a generarse y hacerse visible.</param>
        <summary>Genera el elemento en la posición de índice especificada y lo muestra.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La posición <paramref name="index" /> no existe en la colección secundaria.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanHierarchicallyScrollAndVirtualizeCore">
      <MemberSignature Language="C#" Value="protected override bool CanHierarchicallyScrollAndVirtualizeCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHierarchicallyScrollAndVirtualizeCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanHierarchicallyScrollAndVirtualizeCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanHierarchicallyScrollAndVirtualizeCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> puede virtualizar elementos agrupados u organizados en una jerarquía.</summary>
        <value>
          <see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHorizontallyScroll">
      <MemberSignature Language="C#" Value="public bool CanHorizontallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHorizontallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHorizontallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHorizontallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> puede desplazarse en la dimensión horizontal.</summary>
        <value>
          <see langword="true" /> si el contenido puede desplazarse en la dimensión horizontal; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanVerticallyScroll">
      <MemberSignature Language="C#" Value="public bool CanVerticallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanVerticallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanVerticallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanVerticallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el contenido puede desplazarse en la dimensión vertical.</summary>
        <value>
          <see langword="true" /> si el contenido puede desplazarse en la dimensión vertical; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpVirtualizedItem">
      <MemberSignature Language="C#" Value="see AddCleanUpVirtualizedItemHandler, and RemoveCleanUpVirtualizedItemHandler" />
      <MemberSignature Language="ILAsm" Value="see AddCleanUpVirtualizedItemHandler, and RemoveCleanUpVirtualizedItemHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" />
      <MemberSignature Language="VB.NET" Value="see AddCleanUpVirtualizedItemHandler, and RemoveCleanUpVirtualizedItemHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpVirtualizedItemEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CleanUpVirtualizedItemEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CleanUpVirtualizedItemEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CleanUpVirtualizedItemEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CleanUpVirtualizedItemEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento adjunto <see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que contiene el tamaño vertical de la extensión.</summary>
        <value>
          <see cref="T:System.Double" /> que representa el tamaño vertical de la extensión. El valor predeterminado es 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que contiene el tamaño horizontal de la extensión.</summary>
        <value>
          <see cref="T:System.Double" /> que representa el tamaño horizontal de la extensión. El valor predeterminado es 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemOffsetCore">
      <MemberSignature Language="C#" Value="protected override double GetItemOffsetCore (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 GetItemOffsetCore(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetItemOffsetCore (child As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double GetItemOffsetCore(System::Windows::UIElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">Elemento cuya posición se va a encontrar.</param>
        <summary>Devuelve la posición del elemento especificado, relativo a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
        <returns>Posición del elemento especificado, relativo a <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> tiene orientación horizontal o vertical.</summary>
        <value>Esta propiedad devuelve siempre <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad devuelve siempre `true` porque un <xref:System.Windows.Controls.VirtualizingStackPanel> debe tener una orientación vertical u horizontal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que contiene el desplazamiento horizontal del contenido desplazado.</summary>
        <value>
          <see cref="T:System.Double" /> que representa el desplazamiento horizontal del contenido desplazado. El valor predeterminado es 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVirtualizingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVirtualizingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVirtualizingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad adjunta <see langword="VirtualizingPanel.IsVirtualizing" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public virtual void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una unidad lógica hacia abajo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar este método en una clase derivada para cambiar la forma en que el panel StackPanel desplaza hacia abajo el contenido. Por ejemplo, puede desplazar el contenido hacia abajo dos unidades en lugar de uno.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public virtual void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una unidad lógica a la izquierda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar este método en una clase derivada para cambiar la forma en que el panel StackPanel desplaza hacia abajo el contenido. Por ejemplo, puede desplazar el contenido hacia abajo dos unidades en lugar de uno.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public virtual void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una unidad lógica a la derecha.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar este método en una clase derivada para cambiar la forma en que el panel StackPanel desplaza el contenido a la derecha. Por ejemplo, puede desplazar el contenido directamente en dos unidades en lugar de uno.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public virtual void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una unidad lógica hacia arriba.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar este método en una clase derivada para cambiar la forma en que el panel StackPanel desplaza hacia arriba el contenido. Por ejemplo, puede desplazarse hacia arriba dos unidades en lugar de uno.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que representa la enumeración <see cref="T:System.Windows.Controls.Orientation" /> de <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
        <value>Valor <see cref="T:System.Windows.Controls.Orientation" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="MakeVisible">
      <MemberSignature Language="C#" Value="public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect MakeVisible(class System.Windows.Media.Visual visual, valuetype System.Windows.Rect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect MakeVisible(System::Windows::Media::Visual ^ visual, System::Windows::Rect rectangle);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="rectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="visual">Objeto <see cref="T:System.Windows.Media.Visual" /> que se vuelve visible.</param>
        <param name="rectangle">
          <see cref="T:System.Windows.Rect" /> que representa el espacio de coordenadas en <see cref="T:System.Windows.Media.Visual" />.</param>
        <summary>Se desplaza a las coordenadas especificadas y hace visible esa parte de un objeto <see cref="T:System.Windows.Media.Visual" />.</summary>
        <returns>
          <see cref="T:System.Windows.Rect" /> que está visible.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <see cref="T:System.Windows.Size" /> del límite superior que no debe superarse.</param>
        <summary>Mide los elementos secundarios de <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> antes de organizarlos durante la ejecución de <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" />.</summary>
        <returns>Estructura <see cref="T:System.Windows.Size" /> que representa el tamaño deseado del elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al desplazarse, <xref:System.Windows.Controls.VirtualizingStackPanel> no aumentan de tamaño de diseño, pero agrega de forma efectiva sus descendientes en el plano z, que normalmente se recorta un elemento primario (normalmente un <xref:System.Windows.Controls.ScrollContentPresenter>) para el tamaño de la pila.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDown">
      <MemberSignature Language="C#" Value="public virtual void MouseWheelDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MouseWheelDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido lógicamente hacia abajo en respuesta a un clic hacia abajo del botón de rueda del mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la rueda del mouse hacia abajo de la acción.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelLeft">
      <MemberSignature Language="C#" Value="public virtual void MouseWheelLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MouseWheelLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido lógicamente a la izquierda en respuesta a un clic hacia la izquierda del botón de rueda del mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la acción izquierdo de rueda del mouse.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelRight">
      <MemberSignature Language="C#" Value="public virtual void MouseWheelRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MouseWheelRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido lógicamente a la derecha en respuesta a un clic hacia la derecha del botón de rueda del mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la acción de derecho de rueda del mouse.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelUp">
      <MemberSignature Language="C#" Value="public virtual void MouseWheelUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MouseWheelUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido lógicamente hacia arriba en respuesta a un clic hacia arriba del botón de rueda del mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la rueda del mouse acciones.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCleanUpVirtualizedItem">
      <MemberSignature Language="C#" Value="protected virtual void OnCleanUpVirtualizedItem (System.Windows.Controls.CleanUpVirtualizedItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCleanUpVirtualizedItem(class System.Windows.Controls.CleanUpVirtualizedItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCleanUpVirtualizedItem (e As CleanUpVirtualizedItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCleanUpVirtualizedItem(System::Windows::Controls::CleanUpVirtualizedItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CleanUpVirtualizedItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos sobre el evento.</param>
        <summary>Se llama cuando vuelve a virtualizarse un elemento que se hospeda en <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El sistema de diseño estándar crea contenedores de elementos y calcula el diseño de cada elemento asociado a un control de lista. La palabra "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en pantalla. Generar muchos [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos cuándo podrían estar solo unos cuantos elementos en la pantalla pueden afectar negativamente al rendimiento de la aplicación. El <xref:System.Windows.Controls.VirtualizingStackPanel> calcula el número de elementos visibles y funciona con la <xref:System.Windows.Controls.ItemContainerGenerator> desde una <xref:System.Windows.Controls.ItemsControl> (como <xref:System.Windows.Controls.ListBox> o <xref:System.Windows.Controls.ListView>) para crear [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos solo para los elementos visibles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClearChildren">
      <MemberSignature Language="C#" Value="protected override void OnClearChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClearChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClearChildren ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClearChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se llama cuando la clase <see cref="T:System.Windows.Controls.Panel" /> base borra la colección de elementos secundarios.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (object sender, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(object sender, class System.Windows.Controls.Primitives.ItemsChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (sender As Object, args As ItemsChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Object ^ sender, System::Windows::Controls::Primitives::ItemsChangedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.Windows.Controls.Primitives.ItemsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Object" /> que provocó el evento.</param>
        <param name="args">Proporciona datos para el evento <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" />.</param>
        <summary>Se llama cuando cambia la colección <see cref="P:System.Windows.Controls.ItemsControl.Items" /> que se asocia a <see cref="T:System.Windows.Controls.ItemsControl" /> para <see cref="T:System.Windows.Controls.Panel" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewportOffsetChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewportOffsetChanged (System.Windows.Vector oldViewportOffset, System.Windows.Vector newViewportOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewportOffsetChanged(valuetype System.Windows.Vector oldViewportOffset, valuetype System.Windows.Vector newViewportOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewportOffsetChanged (oldViewportOffset As Vector, newViewportOffset As Vector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewportOffsetChanged(System::Windows::Vector oldViewportOffset, System::Windows::Vector newViewportOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldViewportOffset" Type="System.Windows.Vector" />
        <Parameter Name="newViewportOffset" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="oldViewportOffset">Desplazamiento anterior de la ventanilla.</param>
        <param name="newViewportOffset">Nuevo desplazamiento de la ventanilla.</param>
        <summary>Se llama cuando el desplazamiento de la ventanilla cambia mientras un usuario se desplaza por el contenido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método en una clase derivada, para detectar y responder a los cambios en la ubicación de la ventanilla.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewportSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewportSizeChanged (System.Windows.Size oldViewportSize, System.Windows.Size newViewportSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewportSizeChanged(valuetype System.Windows.Size oldViewportSize, valuetype System.Windows.Size newViewportSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewportSizeChanged (oldViewportSize As Size, newViewportSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewportSizeChanged(System::Windows::Size oldViewportSize, System::Windows::Size newViewportSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldViewportSize" Type="System.Windows.Size" />
        <Parameter Name="newViewportSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="oldViewportSize">Tamaño anterior de la ventanilla.</param>
        <param name="newViewportSize">Nuevo tamaño de la ventanilla.</param>
        <summary>Se llama cuando cambia el tamaño de la ventanilla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método en una clase derivada, para detectar y responder a los cambios en el tamaño de la ventanilla.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation Orientation { System::Windows::Controls::Orientation get(); void set(System::Windows::Controls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que describe la orientación horizontal o vertical del contenido apilado.</summary>
        <value>Enumeración <see cref="T:System.Windows.Controls.Orientation" /> del contenido secundario. El valor predeterminado es <see cref="F:System.Windows.Controls.Orientation.Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public virtual void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una página hacia abajo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.PageDown%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la página hacia abajo de la acción.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public virtual void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una página a la izquierda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.PageLeft%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la página a la izquierda de la acción.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public virtual void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una página a la derecha.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.PageRight%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la acción de derecho de la página.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public virtual void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el contenido una página hacia arriba.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar <xref:System.Windows.Controls.VirtualizingStackPanel.PageUp%2A> en una clase derivada para cambiar la forma en que el panel StackPanel responde a la página acciones.  
  
 Si se requiere el desplazamiento físico en lugar del desplazamiento lógico, ajuste el <xref:System.Windows.Controls.VirtualizingStackPanel> en un <xref:System.Windows.Controls.ScrollViewer> y establecer su <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propiedad `false`. En este caso, el <xref:System.Windows.Controls.ScrollViewer> proporciona virtualización y desplazamiento está deshabilitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCleanUpVirtualizedItemHandler">
      <MemberSignature Language="C#" Value="public static void RemoveCleanUpVirtualizedItemHandler (System.Windows.DependencyObject element, System.Windows.Controls.CleanUpVirtualizedItemEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveCleanUpVirtualizedItemHandler(class System.Windows.DependencyObject element, class System.Windows.Controls.CleanUpVirtualizedItemEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveCleanUpVirtualizedItemHandler (element As DependencyObject, handler As CleanUpVirtualizedItemEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveCleanUpVirtualizedItemHandler(System::Windows::DependencyObject ^ element, System::Windows::Controls::CleanUpVirtualizedItemEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Controls.CleanUpVirtualizedItemEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.DependencyObject" /> del que se quita el controlador.</param>
        <param name="handler">Especifica el controlador de eventos que va a quitarse.</param>
        <summary>Quita un controlador de eventos del evento asociado <see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El sistema de diseño estándar crea contenedores de elementos y calcula el diseño de cada elemento asociado a un control de lista. La palabra "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en pantalla. Generar muchos [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos cuándo podrían estar solo unos cuantos elementos en la pantalla pueden afectar negativamente al rendimiento de la aplicación. El <xref:System.Windows.Controls.VirtualizingStackPanel> calcula el número de elementos visibles y funciona con la <xref:System.Windows.Controls.ItemContainerGenerator> desde una <xref:System.Windows.Controls.ItemsControl> (como <xref:System.Windows.Controls.ListBox> o <xref:System.Windows.Controls.ListView>) para crear [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos solo para los elementos visibles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollOwner">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ScrollViewer ScrollOwner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollOwner As ScrollViewer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollViewer ^ ScrollOwner { System::Windows::Controls::ScrollViewer ^ get(); void set(System::Windows::Controls::ScrollViewer ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollViewer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que identifica el contenedor que controla el comportamiento de desplazamiento en <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</summary>
        <value>
          <see cref="T:System.Windows.Controls.ScrollViewer" /> propietario del desplazamiento de este objeto <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un <xref:System.Windows.Controls.ScrollViewer> control es el <xref:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner%2A>, desplazamiento físico está habilitado. Si un <xref:System.Windows.Controls.VirtualizingStackPanel> es el <xref:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner%2A>, el desplazamiento es lógico según el elemento secundario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalOffset">
      <MemberSignature Language="C#" Value="public void SetHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">Valor de propiedad <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" />.</param>
        <summary>Establece el valor de la propiedad <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVerticalOffset">
      <MemberSignature Language="C#" Value="public void SetVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">Valor de propiedad <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" />.</param>
        <summary>Establece el valor de la propiedad <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldItemsChangeAffectLayoutCore">
      <MemberSignature Language="C#" Value="protected override bool ShouldItemsChangeAffectLayoutCore (bool areItemChangesLocal, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldItemsChangeAffectLayoutCore(bool areItemChangesLocal, class System.Windows.Controls.Primitives.ItemsChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldItemsChangeAffectLayoutCore (areItemChangesLocal As Boolean, args As ItemsChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldItemsChangeAffectLayoutCore(bool areItemChangesLocal, System::Windows::Controls::Primitives::ItemsChangedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="areItemChangesLocal" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Windows.Controls.Primitives.ItemsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="areItemChangesLocal">
          <see langword="true" /> si el elemento cambiado es un elemento secundario directo de este <see cref="T:System.Windows.Controls.VirtualizingPanel" />; <see langword="false" /> si el elemento cambiado es un descendiente indirecto de <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</param>
        <param name="args">Contiene datos con respecto al elemento cambiado.</param>
        <summary>Devuelve un valor que indica si un elemento cambiado en <see cref="T:System.Windows.Controls.ItemsControl" /> afecta al diseño de este panel.</summary>
        <returns>
          <see langword="true" /> si el elemento cambiado en <see cref="T:System.Windows.Controls.ItemsControl" /> afecta al diseño de este panel; si no, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que contiene el desplazamiento vertical del contenido desplazado.</summary>
        <value>Un <see cref="T:System.Double" /> que representa el desplazamiento vertical del contenido desplazado. El valor predeterminado es 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que contiene el tamaño vertical de la ventanilla del contenido.</summary>
        <value>Un <see cref="T:System.Double" /> que representa el tamaño vertical de la ventanilla del contenido. El valor predeterminado es 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que contiene el tamaño horizontal de la ventanilla del contenido.</summary>
        <value>Un <see cref="T:System.Double" /> que representa el tamaño vertical de la ventanilla del contenido. El valor predeterminado es 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualizationModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VirtualizationModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VirtualizationModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VirtualizationModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VirtualizationModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad adjunta <see langword="VirtualizingStackPanel.VirtualizationMode" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>