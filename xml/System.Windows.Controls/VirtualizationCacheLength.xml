<Type Name="VirtualizationCacheLength" FullName="System.Windows.Controls.VirtualizationCacheLength">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6f46b8725b7c42e3e705b4945fdda038a3dc6e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30628009" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct VirtualizationCacheLength : IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit VirtualizationCacheLength extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.VirtualizationCacheLength" />
  <TypeSignature Language="VB.NET" Value="Public Structure VirtualizationCacheLength&#xA;Implements IEquatable(Of VirtualizationCacheLength)" />
  <TypeSignature Language="C++ CLI" Value="public value class VirtualizationCacheLength : IEquatable&lt;System::Windows::Controls::VirtualizationCacheLength&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa las mediciones para la propiedad <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> adjunta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType> propiedad adjunta especifica la cantidad de espacio en el que un <xref:System.Windows.Controls.VirtualizingPanel> virtualiza los elementos antes o después de la vista de puerto (el área en la que los elementos son visibles).  Puede especificar que la longitud de la memoria caché uniforme mi crear una <xref:System.Windows.Controls.VirtualizationCacheLength> mediante el constructor que toma un parámetro único.  Puede utilizar el constructor que toma dos parámetros para especificar valores diferentes para la <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> y <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> propiedades.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeAndAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeAndAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeAndAfterViewport);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeAndAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeAndAfterViewport">Tamaño de la memoria caché antes y después de la ventanilla.</param>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> con una longitud uniforme de caché para cada lado de la ventanilla.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeViewport, float64 cacheAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeViewport As Double, cacheAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeViewport" Type="System.Double" />
        <Parameter Name="cacheAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeViewport">El tamaño de la memoria caché antes de la ventanilla.</param>
        <param name="cacheAfterViewport">El tamaño de la memoria caché después de la ventanilla.</param>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> con las longitudes de caché especificadas para cada lado de la ventanilla.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheAfterViewport">
      <MemberSignature Language="C#" Value="public double CacheAfterViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheAfterViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheAfterViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheAfterViewport { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño de la memoria caché antes de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> está virtualizando.</summary>
        <value>El tamaño de la memoria caché después de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> se está virtualizando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este contexto, "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en la pantalla. Usar una caché para evitar que se generen [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos tal y como va a desplazar en la vista.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheBeforeViewport">
      <MemberSignature Language="C#" Value="public double CacheBeforeViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheBeforeViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheBeforeViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheBeforeViewport { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño de la memoria caché después de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> está virtualizando.</summary>
        <value>El tamaño de la memoria caché después de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> se está virtualizando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este contexto, "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en la pantalla. Usar una caché para evitar que se generen [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos tal y como va a desplazar en la vista.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si dos objetos son iguales.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object oCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object oCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (oCompare As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ oCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oCompare" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oCompare">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</param>
        <summary>Determina si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</summary>
        <returns>
          Es <see langword="true" /> si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.  Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Controls.VirtualizationCacheLength cacheLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (cacheLength As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Controls::VirtualizationCacheLength cacheLength);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheLength" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cacheLength">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</param>
        <summary>Determina si el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</summary>
        <returns>
          Es <see langword="true" /> si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.  Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene un código hash para la <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</summary>
        <returns>Código hash para el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1">Primer objeto que se va a comparar.</param>
        <param name="cl2">Segundo objeto que se va a comparar.</param>
        <summary>Determina si los dos objetos <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales.</summary>
        <returns>
          <see langword="true" /> si los <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.  Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1">Primer objeto que se va a comparar.</param>
        <param name="cl2">Segundo objeto que se va a comparar.</param>
        <summary>Determina si los dos objetos <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales.</summary>
        <returns>
          <see langword="true" /> si los <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.  Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</summary>
        <returns>Cadena que representa el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A> método devuelve una cadena que muestra los valores de la <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> y <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>