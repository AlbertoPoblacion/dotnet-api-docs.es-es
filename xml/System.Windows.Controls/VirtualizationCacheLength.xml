<Type Name="VirtualizationCacheLength" FullName="System.Windows.Controls.VirtualizationCacheLength">
  <TypeSignature Language="C#" Value="public struct VirtualizationCacheLength : IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit VirtualizationCacheLength extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.VirtualizationCacheLength" />
  <TypeSignature Language="VB.NET" Value="Public Structure VirtualizationCacheLength&#xA;Implements IEquatable(Of VirtualizationCacheLength)" />
  <TypeSignature Language="C++ CLI" Value="public value class VirtualizationCacheLength : IEquatable&lt;System::Windows::Controls::VirtualizationCacheLength&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="99d08-101">Representa las mediciones para la propiedad <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> adjunta.</span><span class="sxs-lookup"><span data-stu-id="99d08-101">Represents the measurements for the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-102">El <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType> propiedad adjunta especifica la cantidad de espacio en el que un <xref:System.Windows.Controls.VirtualizingPanel> virtualiza los elementos antes o después de la vista de puerto (el área en la que los elementos son visibles).</span><span class="sxs-lookup"><span data-stu-id="99d08-102">The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible).</span></span>  <span data-ttu-id="99d08-103">Puede especificar que la longitud de la memoria caché uniforme mi crear una <xref:System.Windows.Controls.VirtualizationCacheLength> mediante el constructor que toma un parámetro único.</span><span class="sxs-lookup"><span data-stu-id="99d08-103">You can specify uniform cache length my creating a <xref:System.Windows.Controls.VirtualizationCacheLength> by using the constructor that takes a single parameter.</span></span>  <span data-ttu-id="99d08-104">Puede utilizar el constructor que toma dos parámetros para especificar valores diferentes para la <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> y <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="99d08-104">You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99d08-105">Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span><span class="sxs-lookup"><span data-stu-id="99d08-105">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeAndAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeAndAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeAndAfterViewport);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeAndAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeAndAfterViewport"><span data-ttu-id="99d08-106">Tamaño de la memoria caché antes y después de la ventanilla.</span><span class="sxs-lookup"><span data-stu-id="99d08-106">The size of the cache before and after the viewport.</span></span></param>
        <summary><span data-ttu-id="99d08-107">Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> con una longitud uniforme de caché para cada lado de la ventanilla.</span><span class="sxs-lookup"><span data-stu-id="99d08-107">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with a uniform cache length for each side of the viewport.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeViewport, float64 cacheAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeViewport As Double, cacheAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeViewport" Type="System.Double" />
        <Parameter Name="cacheAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeViewport"><span data-ttu-id="99d08-108">El tamaño de la memoria caché antes de la ventanilla.</span><span class="sxs-lookup"><span data-stu-id="99d08-108">The size of the cache before the viewport.</span></span></param>
        <param name="cacheAfterViewport"><span data-ttu-id="99d08-109">El tamaño de la memoria caché después de la ventanilla.</span><span class="sxs-lookup"><span data-stu-id="99d08-109">The size of the cache after the viewport.</span></span></param>
        <summary><span data-ttu-id="99d08-110">Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> con las longitudes de caché especificadas para cada lado de la ventanilla.</span><span class="sxs-lookup"><span data-stu-id="99d08-110">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with the specified cache lengths for each side of the viewport.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheAfterViewport">
      <MemberSignature Language="C#" Value="public double CacheAfterViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheAfterViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheAfterViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheAfterViewport { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d08-111">Obtiene el tamaño de la memoria caché antes de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> está virtualizando.</span><span class="sxs-lookup"><span data-stu-id="99d08-111">Gets the size of the cache before the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></summary>
        <value><span data-ttu-id="99d08-112">El tamaño de la memoria caché después de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> se está virtualizando.</span><span class="sxs-lookup"><span data-stu-id="99d08-112">The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-113">En este contexto, "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="99d08-113">In this context, "virtualize" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen.</span></span> <span data-ttu-id="99d08-114">Usar una caché para evitar que se generen [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos tal y como va a desplazar en la vista.</span><span class="sxs-lookup"><span data-stu-id="99d08-114">Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements as they’re scrolled into view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheBeforeViewport">
      <MemberSignature Language="C#" Value="public double CacheBeforeViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheBeforeViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheBeforeViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheBeforeViewport { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99d08-115">Obtiene el tamaño de la memoria caché después de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> está virtualizando.</span><span class="sxs-lookup"><span data-stu-id="99d08-115">Gets the size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></summary>
        <value><span data-ttu-id="99d08-116">El tamaño de la memoria caché después de la ventanilla cuando <see cref="T:System.Windows.Controls.VirtualizingPanel" /> se está virtualizando.</span><span class="sxs-lookup"><span data-stu-id="99d08-116">The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-117">En este contexto, "virtualizar" hace referencia a una técnica por la que un subconjunto de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] genera los elementos de un mayor número de elementos de datos en función de los elementos que están visibles en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="99d08-117">In this context, "virtualize" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen.</span></span> <span data-ttu-id="99d08-118">Usar una caché para evitar que se generen [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos tal y como va a desplazar en la vista.</span><span class="sxs-lookup"><span data-stu-id="99d08-118">Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements as they’re scrolled into view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99d08-119">Determina si dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-119">Determines whether two objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object oCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object oCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (oCompare As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ oCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oCompare" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oCompare"><span data-ttu-id="99d08-120">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-120">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></param>
        <summary><span data-ttu-id="99d08-121">Determina si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-121">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns>
          <span data-ttu-id="99d08-122">Es <see langword="true" /> si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99d08-122"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-123">El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.</span><span class="sxs-lookup"><span data-stu-id="99d08-123">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="99d08-124">Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-124">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Controls.VirtualizationCacheLength cacheLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (cacheLength As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Controls::VirtualizationCacheLength cacheLength);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheLength" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cacheLength"><span data-ttu-id="99d08-125">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-125">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></param>
        <summary><span data-ttu-id="99d08-126">Determina si el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-126">Determines whether the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns>
          <span data-ttu-id="99d08-127">Es <see langword="true" /> si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99d08-127"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-128">El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.</span><span class="sxs-lookup"><span data-stu-id="99d08-128">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="99d08-129">Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-129">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99d08-130">Obtiene un código hash para la <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-130">Gets a hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns><span data-ttu-id="99d08-131">Código hash para el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-131">A hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1"><span data-ttu-id="99d08-132">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="99d08-132">The first object to compare.</span></span></param>
        <param name="cl2"><span data-ttu-id="99d08-133">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="99d08-133">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="99d08-134">Determina si los dos objetos <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-134">Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="99d08-135"><see langword="true" /> si los <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99d08-135"><see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-136">El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.</span><span class="sxs-lookup"><span data-stu-id="99d08-136">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="99d08-137">Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-137">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1"><span data-ttu-id="99d08-138">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="99d08-138">The first object to compare.</span></span></param>
        <param name="cl2"><span data-ttu-id="99d08-139">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="99d08-139">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="99d08-140">Determina si los dos objetos <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-140">Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="99d08-141"><see langword="true" /> si los <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> especificados son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99d08-141"><see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-142">El <xref:System.Windows.Controls.VirtualizationCacheLength> comprueba la igualdad de valor.</span><span class="sxs-lookup"><span data-stu-id="99d08-142">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="99d08-143">Es decir, los dos objetos son iguales si sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> valores de propiedad son iguales y sus <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> valores de propiedad son iguales.</span><span class="sxs-lookup"><span data-stu-id="99d08-143">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99d08-144">Devuelve una cadena que representa el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-144">Returns a string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns><span data-ttu-id="99d08-145">Cadena que representa el objeto <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="99d08-145">A string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99d08-146">El <xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A> método devuelve una cadena que muestra los valores de la <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> y <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="99d08-146">The <xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A> method returns a string that displays the values of the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>