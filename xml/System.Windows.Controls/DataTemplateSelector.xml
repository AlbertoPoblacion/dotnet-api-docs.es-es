<Type Name="DataTemplateSelector" FullName="System.Windows.Controls.DataTemplateSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="271e7c38cc10fbd95311f2bf4e47dc463478752a" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51882460" /></Metadata><TypeSignature Language="C#" Value="public class DataTemplateSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplateSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataTemplateSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplateSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplateSelector" />
  <TypeSignature Language="F#" Value="type DataTemplateSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una manera de elegir un elemento <see cref="T:System.Windows.DataTemplate" /> según el objeto de datos y el elemento enlazado a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se crea un <xref:System.Windows.Controls.DataTemplateSelector> cuando tiene más de una <xref:System.Windows.DataTemplate> para el mismo tipo de objetos y se desea proporcionar su propia lógica para elegir un <xref:System.Windows.DataTemplate> a aplicar basándose en las propiedades de cada objeto de datos. Tenga en cuenta que si tiene objetos de diferentes tipos que se puede establecer el <xref:System.Windows.DataTemplate.DataType%2A> propiedad en el <xref:System.Windows.DataTemplate>. Si lo hace, no hay ninguna necesidad de crear un <xref:System.Windows.Controls.DataTemplateSelector>. Además, si tiene objetos del mismo tipo pero con propiedades diferentes, también puede usar un <xref:System.Windows.DataTrigger> o un convertidor de datos. Para obtener más información, consulte [Información general sobre plantillas de datos](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Para crear un selector de plantillas, cree una clase que hereda de <xref:System.Windows.Controls.DataTemplateSelector> e invalidar la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método. Una vez definida la clase puede asignar una instancia de la clase a la propiedad de selector de plantilla del elemento.  
  
   
  
## Examples  
 En este ejemplo, el origen de enlace es una lista de `Task` objetos. Una de las propiedades de un `Task` objeto es `Priority`. Hay dos plantillas de datos definidas, `myTaskTemplate` y `importantTaskTemplate`.  
  
 Para proporcionar lógica para elegir qué <xref:System.Windows.DataTemplate> utilizar según la `Priority` valor del objeto de datos, cree una subclase de <xref:System.Windows.Controls.DataTemplateSelector> e invalidar la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método. En el ejemplo siguiente, la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método proporciona la lógica para devolver la plantilla adecuada en función del valor de la `Priority` propiedad. La plantilla que se devuelve se encuentra en los recursos de la envoltura <xref:System.Windows.Window> elemento.  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 Podemos declarar el `TaskListDataTemplateSelector` como recurso:  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 Para usar el recurso del selector de plantillas, asígnelo a la <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> propiedad de la <xref:System.Windows.Controls.ListBox>. El <xref:System.Windows.Controls.ListBox> llamadas la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método de la `TaskListDataTemplateSelector` para cada uno de los elementos de la colección subyacente. La llamada pasa el objeto de datos como parámetro del elemento. El <xref:System.Windows.DataTemplate> devuelta por el método, a continuación, se aplica al objeto de datos.  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 Para obtener el ejemplo completo, vea [Introducción a la aplicación de plantillas de ejemplo](https://go.microsoft.com/fwlink/?LinkID=160009).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplateSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.DataTemplateSelector" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DataTemplate SelectTemplate(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectTemplate (item As Object, container As DependencyObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DataTemplate ^ SelectTemplate(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectTemplate : obj * System.Windows.DependencyObject -&gt; System.Windows.DataTemplate&#xA;override this.SelectTemplate : obj * System.Windows.DependencyObject -&gt; System.Windows.DataTemplate" Usage="dataTemplateSelector.SelectTemplate (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">El objeto de datos para el que se debe seleccionar la plantilla.</param>
        <param name="container">Objeto enlazado a datos.</param>
        <summary>Si se reemplaza en una clase derivada, devuelve un valor <see cref="T:System.Windows.DataTemplate" /> basado en una lógica personalizada.</summary>
        <returns>Devuelve <see cref="T:System.Windows.DataTemplate" /> o <see langword="null" />. El valor predeterminado es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se utiliza un selector de plantillas cuando tiene más de una plantilla de datos definida para el mismo tipo de objetos. Por ejemplo, si el origen de enlace está lista una lista de objetos de estudiante y desea aplicar una plantilla determinada a los alumnos a tiempo parcial. Puede hacerlo mediante la creación de una clase que hereda de <xref:System.Windows.Controls.DataTemplateSelector> e invalidar la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método. Una vez definida la clase puede asignar una instancia de la clase a la propiedad de selector de plantilla del elemento.  
  
   
  
## Examples  
 En este ejemplo, el origen de enlace es una lista de `Task` objetos. Una de las propiedades de un `Task` objeto es `Priority`. Hay dos plantillas de datos definidas, `myTaskTemplate` y `importantTaskTemplate`.  
  
 Para proporcionar lógica para elegir qué <xref:System.Windows.DataTemplate> utilizar según la `Priority` valor del objeto de datos, cree una subclase de <xref:System.Windows.Controls.DataTemplateSelector> e invalidar la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método. En el ejemplo siguiente, la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método proporciona la lógica para devolver la plantilla adecuada en función del valor de la `Priority` propiedad. La plantilla que se devuelve se encuentra en los recursos de la envoltura <xref:System.Windows.Window> elemento.  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 Podemos declarar el `TaskListDataTemplateSelector` como recurso:  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 Para usar el recurso del selector de plantillas, asígnelo a la <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> propiedad de la <xref:System.Windows.Controls.ListBox>. El <xref:System.Windows.Controls.ListBox> llamadas la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> método de la `TaskListDataTemplateSelector` para cada uno de los elementos de la colección subyacente. La llamada pasa el objeto de datos como parámetro del elemento. El <xref:System.Windows.DataTemplate> devuelta por el método, a continuación, se aplica al objeto de datos.  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 Para obtener el ejemplo completo, vea [Introducción a la aplicación de plantillas de ejemplo](https://go.microsoft.com/fwlink/?LinkID=160009).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>