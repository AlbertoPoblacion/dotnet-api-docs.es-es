<Type Name="ListView" FullName="System.Windows.Controls.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95bc64ff5a304ed2b345665948e3fa056788fd1f" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Windows.Controls.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListView extends System.Windows.Controls.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Controls::ListBox" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit ListBox" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un control que muestra una lista de elementos de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ListView> es un <xref:System.Windows.Controls.ItemsControl>, lo que significa que puede contener una colección de objetos de cualquier tipo (como cadena, imagen o panel). Para obtener más información, vea la clase <xref:System.Windows.Controls.ItemsControl>.  
  
 La presentación de los elementos de datos en un <xref:System.Windows.Controls.ListView> se define mediante el modo de vista, que se especifica mediante el <xref:System.Windows.Controls.ListView.View%2A> propiedad. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Proporciona un <xref:System.Windows.Controls.GridView> modo de vista que particiona el <xref:System.Windows.Controls.ListView> contenido del elemento de datos en columnas. Las propiedades y métodos en <xref:System.Windows.Controls.GridView> y sus clases relacionadas de estilo y especifican el contenido de las columnas.  
  
 La siguiente ilustración muestra un <xref:System.Windows.Controls.ListView> con un <xref:System.Windows.Controls.GridView> vista.  
  
 ![ListView con resultado GridView](~/add/media/listviewgridview.JPG "ListView con resultado GridView")  
  
 También puede definir vistas personalizadas mediante la creación de una clase que deriva de <xref:System.Windows.Controls.ViewBase>. Para obtener más información, consulte [Cómo: crear un modo de vista personalizado para un ListView](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md).  
  
 Si define un personalizado <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> para un <xref:System.Windows.Controls.ListView> controlar y definir también una <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, debe incluir un <xref:System.Windows.Controls.ContentPresenter> en el <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>. El <xref:System.Windows.Controls.ContentPresenter> es necesaria para la <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> funcione correctamente.  
  
 Para evitar problemas de alineación en un <xref:System.Windows.Controls.GridView> modo de vista, no agregue contenido ni establecer propiedades que afectan al ancho de un elemento en el <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> de un <xref:System.Windows.Controls.ListView>. Para evitar problemas de alineación, utilice las propiedades y las plantillas que se definen para el <xref:System.Windows.Controls.GridView> modo de vista. Esto incluye las propiedades y las plantillas que se definen para las clases que se usan en un <xref:System.Windows.Controls.GridView> ver como modo, <xref:System.Windows.Controls.GridViewColumn> y <xref:System.Windows.Controls.GridViewColumnHeader>.  
  
 Dos <xref:System.Windows.Controls.ListView> controles no pueden compartir la misma vista. Para especificar una vista que se puede usar más de una vez, use plantillas o estilos. Para obtener un ejemplo de un <xref:System.Windows.Controls.GridView> y otras vistas personalizadas que se definen como recursos reutilizables, vea [ListView con varias de las vistas de ejemplo](http://go.microsoft.com/fwlink/?LinkID=160013).  
  
 No utilice el <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> y <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> las propiedades de <xref:System.Windows.Controls.ListView> contenido que se muestra mediante el uso de un <xref:System.Windows.Controls.GridView>. Para especificar la alineación del contenido de una columna de un <xref:System.Windows.Controls.GridView>, defina un <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>.  
  
 Mostrar un gran número de elementos puede provocar problemas de rendimiento.  Consulte [optimizar el rendimiento: controles](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) para obtener más información.  
  
## <a name="customizing-the-listview-control"></a>Personalizar el Control ListView  
 Para aplicar la misma configuración de la propiedad a varios <xref:System.Windows.Controls.ListView> controles, utilizar el <xref:System.Windows.FrameworkElement.Style%2A> propiedad. Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para proporcionar el control una apariencia única. Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Para ver las partes y los Estados que son específicos de la <xref:System.Windows.Controls.ListView>, consulte [plantillas y estilos de ListView](~/docs/framework/wpf/controls/listview-styles-and-templates.md).  
  
 Las propiedades de dependencia para este control pueden establecerse mediante el estilo del control de forma predeterminada.  Si una propiedad se establece mediante un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación. El estilo predeterminado se determina por el tema de escritorio que se utiliza cuando se ejecuta la aplicación.  Para obtener más información, consulte [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Establecer una propiedad visual solo tendrá un efecto si esa propiedad está presente en ambos <xref:System.Windows.Controls.ListView> control de la plantilla predeterminada y se establece mediante el uso de una. Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo crear un <xref:System.Windows.Controls.ListView> control que implementa un <xref:System.Windows.Controls.GridView> como su <xref:System.Windows.Controls.ListView.View%2A>. Se toma la ilustración en la sección Comentarios de este ejemplo.  
  
 [!code-xaml[ListViewCode#ListViewEmployee](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewemployee)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ListViewItem" />
    <altmember cref="T:System.Windows.Controls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ListView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ClearContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.ClearContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Contenedor de <see cref="T:System.Windows.Controls.ListViewItem" /> que se va a borrar.</param>
        <param name="item">Objeto incluido en <see cref="T:System.Windows.Controls.ListViewItem" />.</param>
        <summary>Quita todas las plantillas, estilos y enlaces del objeto que se muestra como <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="listView.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea y devuelve un nuevo contenedor de <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <returns>Nuevo control <see cref="T:System.Windows.Controls.ListViewItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="listView.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que se va a evaluar.</param>
        <summary>Determina si un objeto es <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <returns>Es <see langword="true" /> si <paramref name="item" /> es <see cref="T:System.Windows.Controls.ListViewItem" />; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="listView.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define un objeto <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> para el control <see cref="T:System.Windows.Controls.ListView" />.</summary>
        <returns>Devuelve un objeto <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> para el control <see cref="T:System.Windows.Controls.ListView" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listView.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Argumentos del evento.</param>
        <summary>Responde a <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama cuando se produce un cambio en la colección de elementos de un <xref:System.Windows.Controls.ListView> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Objeto que es <see cref="T:System.Windows.Controls.ListViewItem" /> o que puede convertirse en tal.</param>
        <param name="item">Objeto que se va a utilizar para crear el <see cref="T:System.Windows.Controls.ListViewItem" />.</param>
        <summary>Establece los estilos, plantillas y enlaces de <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método prepara un <xref:System.Windows.Controls.ListViewItem> control para su presentación según la condición especificada <xref:System.Windows.Controls.ListView.View%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ViewBase View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ViewBase View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As ViewBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ViewBase ^ View { System::Windows::Controls::ViewBase ^ get(); void set(System::Windows::Controls::ViewBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Controls.ViewBase with get, set" Usage="System.Windows.Controls.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ViewBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto que define la forma de dar estilo y organizar los datos de un control <see cref="T:System.Windows.Controls.ListView" />.</summary>
        <value>Objeto <see cref="T:System.Windows.Controls.ViewBase" /> que especifica cómo mostrar información en <see cref="T:System.Windows.Controls.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El entorno de .NET Framework incluye el modo de vista configurable denominado <xref:System.Windows.Controls.GridView>. También puede crear una vista personalizada que hereda de <xref:System.Windows.Controls.ViewBase>. Para obtener más información, consulte [Cómo: crear un modo de vista personalizado para un ListView](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md).  
  
<a name="dependencyPropertyInfo_View"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.ListView.ViewProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
> [!NOTE]
>  El tipo de metadatos de esta propiedad es <xref:System.Windows.PropertyMetadata>, no <xref:System.Windows.FrameworkPropertyMetadata>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo especificar un <xref:System.Windows.Controls.GridView> objeto como el <xref:System.Windows.Controls.ListView.View%2A> para un <xref:System.Windows.Controls.ListView> control.  
  
 [!code-csharp[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#listviewview)]
 [!code-vb[ListViewCode#ListViewView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#listviewview)]
 [!code-xaml[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
        <altmember cref="T:System.Windows.Controls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="ViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListView.ViewProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ViewProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ViewProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ViewProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListView.ViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ListView.View" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>