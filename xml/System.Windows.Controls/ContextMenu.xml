<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fc8d1b2ad864f2300bdb424f7167e6b800e7c96" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30620239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="19aad-101">Representa un menú emergente que permite a un control exponer la funcionalidad que es específica del contexto del control.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19aad-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-102"><xref:System.Windows.Controls.ContextMenu> es un <xref:System.Windows.Controls.ItemsControl>, lo que significa que puede contener una colección de objetos de cualquier tipo (como cadena, imagen o panel).</span><span class="sxs-lookup"><span data-stu-id="19aad-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="19aad-103">Para obtener más información, vea la clase <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="19aad-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="19aad-104">Las propiedades de la <xref:System.Windows.Controls.ContextMenu> clase se utilizan para definir la posición y el comportamiento de la <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="19aad-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="19aad-105">A <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement> puede tener un <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="19aad-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="19aad-106">Si asigna un <xref:System.Windows.Controls.ContextMenu> a la <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> o <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> propiedad, el <xref:System.Windows.Controls.ContextMenuService> clase controla las operaciones del menú contextual en respuesta a la interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="19aad-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="19aad-107">Parte del trabajo la <xref:System.Windows.Controls.ContextMenuService> does está abriendo la <xref:System.Windows.Controls.ContextMenu> cuando el usuario hace clic en el botón secundario del mouse sobre el control.</span><span class="sxs-lookup"><span data-stu-id="19aad-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="19aad-108">Las siguientes propiedades se definen mediante la <xref:System.Windows.Controls.ContextMenu> y <xref:System.Windows.Controls.ContextMenuService> clases.</span><span class="sxs-lookup"><span data-stu-id="19aad-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="19aad-109">Si cualquiera de estas propiedades se establecen en ambos <xref:System.Windows.Controls.ContextMenu> y <xref:System.Windows.Controls.ContextMenuService>, el valor de propiedad de la <xref:System.Windows.Controls.ContextMenuService> se utiliza.</span><span class="sxs-lookup"><span data-stu-id="19aad-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="19aad-110">A <xref:System.Windows.Controls.ContextMenu> se coloca automáticamente dentro de un <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="19aad-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="19aad-111">No se puede cambiar este comportamiento.</span><span class="sxs-lookup"><span data-stu-id="19aad-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="19aad-112">Personalizar el Control ContextMenu</span><span class="sxs-lookup"><span data-stu-id="19aad-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="19aad-113">Para aplicar la misma configuración de propiedad a varios <xref:System.Windows.Controls.ContextMenu> controles, utilice la <xref:System.Windows.FrameworkElement.Style%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="19aad-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="19aad-114">Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para dar al control una apariencia única.</span><span class="sxs-lookup"><span data-stu-id="19aad-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="19aad-115">Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="19aad-116">Para ver los elementos y los Estados que son específicos de la <xref:System.Windows.Controls.ContextMenu>, consulte [ContextMenu estilos y plantillas](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="19aad-117">Propiedades de dependencia para este control se pueden establecer el estilo predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="19aad-117">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="19aad-118">Si se establece una propiedad de un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="19aad-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="19aad-119">El estilo predeterminado se determina por el tema del escritorio que se utiliza cuando se ejecuta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="19aad-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="19aad-120">Para obtener más información, consulte [temas de WPF predeterminado](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="19aad-120">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19aad-121">Establecer una propiedad visual solo tendrá un efecto si esa propiedad está presente en ambos <xref:System.Windows.Controls.ContextMenu> control de la plantilla predeterminada y se establece mediante una.</span><span class="sxs-lookup"><span data-stu-id="19aad-121">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ContextMenu> control's default template and is set by using a .</span></span> <span data-ttu-id="19aad-122">Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-122">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19aad-123">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.ContextMenu> que manipula el texto de un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="19aad-123">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="19aad-124">En el ejemplo se muestra cómo suscribirse a y controlar los eventos de <xref:System.Windows.Controls.MenuItem> objetos en un <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="19aad-124">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19aad-125">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-125">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-126">Se produce cuando se cierra una instancia determinada de un <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-126">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="19aad-127">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="19aad-127">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-128">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-128">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="19aad-129">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="19aad-129">Routing strategy</span></span>|<span data-ttu-id="19aad-130">Propagación</span><span class="sxs-lookup"><span data-stu-id="19aad-130">Bubbling</span></span>|  
|<span data-ttu-id="19aad-131">delegado</span><span class="sxs-lookup"><span data-stu-id="19aad-131">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-132">El ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.ContextMenu> eventos: <xref:System.Windows.Controls.ContextMenu.Opened> y <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="19aad-132">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-133">Identifica el evento enrutado <see cref="E:System.Windows.Controls.ContextMenu.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-133">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-134">Obtiene o establece una devolución de llamada que indica dónde se debe colocar <see cref="T:System.Windows.Controls.ContextMenu" /> en la pantalla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-134">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-135">Devolución de llamada que especifica la ubicación de <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-135">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-136">El <xref:System.Windows.Controls.ContextMenu.Placement%2A> propiedad debe establecerse en <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> para el delegado de devolución de llamada que se usará.</span><span class="sxs-lookup"><span data-stu-id="19aad-136">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="19aad-137">El <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegado devuelve una matriz de posibles puntos que se definen con respecto a la <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="19aad-137">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="19aad-138">Cuando se muestra el menú contextual, se elige un punto que maximiza la cantidad de la <xref:System.Windows.Controls.ToolTip> ventana que está visible.</span><span class="sxs-lookup"><span data-stu-id="19aad-138">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="19aad-139">El comportamiento es el mismo como para la ventana emergente.</span><span class="sxs-lookup"><span data-stu-id="19aad-139">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="19aad-140">Para obtener más información, consulte [Cómo: especificar una posición de elemento emergente personalizado](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) y [Popup Placement Sample](http://go.microsoft.com/fwlink/?LinkID=160032).</span><span class="sxs-lookup"><span data-stu-id="19aad-140">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](http://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-141">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-142">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-142">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="19aad-143">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-144">None</span><span class="sxs-lookup"><span data-stu-id="19aad-144">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-145">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-145">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-146">Obtiene un valor que indica si el control admite el desplazamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-146">Gets a value that indicates whether the control supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-147">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-147">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-148">Si el control tiene un <xref:System.Windows.Controls.ScrollViewer> en su estilo y tiene un comportamiento de desplazamiento de teclado personalizado <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> debe devolver `true`.</span><span class="sxs-lookup"><span data-stu-id="19aad-148">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-149">Obtiene o establece un valor que indica si el menú contextual aparece con un efecto de sombra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-149">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-150">
            <see langword="true" /> si el menú contextual aparece con un efecto de sombra; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-150">
              <see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="19aad-151">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-152">Cuando el <xref:System.Windows.Controls.ContextMenu> se abre, el valor se establece en el valor de <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="19aad-152">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="19aad-153">Si se establece esta propiedad en `true` no tiene ningún efecto si la <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="19aad-153">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-154">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-155">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-155">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="19aad-156">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-157">None</span><span class="sxs-lookup"><span data-stu-id="19aad-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-158">En el ejemplo siguiente se muestra cómo usar la propiedad <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>.</span><span class="sxs-lookup"><span data-stu-id="19aad-158">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-159">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-159">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-160">Obtiene o establece la distancia horizontal entre el origen de destino y el punto de alineación emergente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-160">Get or sets the horizontal distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-161">Distancia horizontal entre el origen de destino y el punto de alineación emergente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-161">The horizontal distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="19aad-162">Para obtener información sobre el punto de alineación de origen y los elementos emergentes de destino, vea [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-162">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="19aad-163">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-163">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-164">Puede colocar una <xref:System.Windows.Controls.ContextMenu> estableciendo la <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, y <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> propiedades.</span><span class="sxs-lookup"><span data-stu-id="19aad-164">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="19aad-165">Estas propiedades comportan del mismo modo que en un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="19aad-165">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="19aad-166">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-166">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-167">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-168">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-168">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="19aad-169">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-170">None</span><span class="sxs-lookup"><span data-stu-id="19aad-170">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="19aad-171">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="19aad-171">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or –  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="19aad-172">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="19aad-172">XAML Values</span></span>  
 <span data-ttu-id="19aad-173">*double*</span><span class="sxs-lookup"><span data-stu-id="19aad-173">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="19aad-174">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="19aad-174">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="19aad-175">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="19aad-175">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="19aad-176">Las cadenas no necesitan incluir explícitamente separadores decimales.</span><span class="sxs-lookup"><span data-stu-id="19aad-176">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="19aad-177">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="19aad-177">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="19aad-178">El mismo <xref:System.Double> se aplican restricciones de intervalo como se mencionó en la sección de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="19aad-178">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="19aad-179">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="19aad-179">*qualifiedDouble*</span></span>  
 <span data-ttu-id="19aad-180">A *doble* valor, tal como se ha descrito anteriormente, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="19aad-180">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="19aad-181">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="19aad-181">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="19aad-182">`in` pulgadas; 1 in == 96 px</span><span class="sxs-lookup"><span data-stu-id="19aad-182">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="19aad-183">`cm` es centímetros; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="19aad-183">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="19aad-184">`pt` es puntos; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="19aad-184">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="19aad-185">**Tenga en cuenta** en muchos casos puede establecerse un valor double en Auto pero <xref:System.Windows.Controls.ContextMenu> no aparecerá si los desplazamientos están establecidos en Auto.</span><span class="sxs-lookup"><span data-stu-id="19aad-185">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19aad-186">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> propiedad para hacer que un <xref:System.Windows.Controls.ContextMenu> para abrir en una ubicación especificada con respecto a su elemento primario de botón.</span><span class="sxs-lookup"><span data-stu-id="19aad-186">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-187">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-187">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-188">Obtiene o establece un valor que indica si el objeto <see cref="T:System.Windows.Controls.ContextMenu" /> está visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-188">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-189">Es <see langword="true" /> si <see cref="T:System.Windows.Controls.ContextMenu" /> está visible; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-189">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="19aad-190">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-190">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-191">Cuando <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> está establecido en `true`, captura del mouse está establecido en el <xref:System.Windows.Controls.ContextMenu> y su subárbol.</span><span class="sxs-lookup"><span data-stu-id="19aad-191">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-192">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-192">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-193">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-193">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="19aad-194">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-194">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-195">Este ejemplo muestra cómo comprobar para determinar si la <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="19aad-195">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-196">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-196">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="19aad-197">Datos para el evento <see cref="E:System.Windows.Controls.ContextMenu.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-197">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-198">Se invoca cuando se produce el evento <see cref="E:System.Windows.Controls.ContextMenu.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-198">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19aad-199">Crea y devuelve un objeto <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> para este <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-199">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19aad-200">Un objeto <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> para este <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-200">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="19aad-201">Datos para el evento <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-201">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-202">Notifica que la propiedad <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> ha cambiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-202">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="19aad-203">Datos para el evento <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-203">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-204">Llamado cuando un objeto dentro de <see cref="E:System.Windows.ContentElement.KeyDown" /> provoca un evento <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-204">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="19aad-205">Datos para el evento <see cref="E:System.Windows.UIElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-205">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-206">Responde al evento <see cref="E:System.Windows.ContentElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-206">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="19aad-207">Datos para el evento <see cref="E:System.Windows.Controls.ContextMenu.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-207">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-208">Se invoca cuando se produce el evento <see cref="E:System.Windows.Controls.ContextMenu.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-208">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="19aad-209">Objeto al que estuvo asociado previamente el menú contextual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-209">The object that the context menu was previously attached to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-210">Llamado cuando cambia el elemento primario visual de un menú contextual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-210">Called when a context menu's visual parent changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-211">Se produce cuando se abre una instancia particular de un menú contextual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-211">Occurs when a particular instance of a context menu opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="19aad-212">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="19aad-212">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-213">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-213">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="19aad-214">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="19aad-214">Routing strategy</span></span>|<span data-ttu-id="19aad-215">Propagación</span><span class="sxs-lookup"><span data-stu-id="19aad-215">Bubbling</span></span>|  
|<span data-ttu-id="19aad-216">delegado</span><span class="sxs-lookup"><span data-stu-id="19aad-216">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-217">El ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.ContextMenu> eventos: <xref:System.Windows.Controls.ContextMenu.Opened> y <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="19aad-217">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-218">Identifica el evento enrutado <see cref="E:System.Windows.Controls.ContextMenu.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-218">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-219">Obtiene o establece la propiedad <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> de <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-219">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-220">Una de las enumeraciones <see cref="T:System.Windows.Controls.Primitives.PlacementMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-220">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span>
          </span>
          <span data-ttu-id="19aad-221">El valor predeterminado es <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-221">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-222">Cuando el <xref:System.Windows.Controls.ContextMenu> se asigna a la <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> o <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> propiedad, el <xref:System.Windows.Controls.ContextMenuService> cambia el valor de esta propiedad cuando la <xref:System.Windows.Controls.ContextMenu> se abre.</span><span class="sxs-lookup"><span data-stu-id="19aad-222">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="19aad-223">Si el usuario abre el <xref:System.Windows.Controls.ContextMenu> mediante el mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> está establecido en <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span><span class="sxs-lookup"><span data-stu-id="19aad-223">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="19aad-224">Si el usuario abre el <xref:System.Windows.Controls.ContextMenu> mediante el teclado, <xref:System.Windows.Controls.ContextMenu.Placement%2A> está establecido en <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span><span class="sxs-lookup"><span data-stu-id="19aad-224">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="19aad-225">Si desea cambiar la posición de la <xref:System.Windows.Controls.ContextMenu>, establezca el <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> propiedad en el <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="19aad-225">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="19aad-226">Puede colocar una <xref:System.Windows.Controls.ContextMenu> estableciendo la <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, y <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> propiedades.</span><span class="sxs-lookup"><span data-stu-id="19aad-226">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="19aad-227">Estas propiedades comportan del mismo modo que en un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="19aad-227">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="19aad-228">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-228">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-229">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-229">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-230">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-230">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="19aad-231">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-231">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-232">None</span><span class="sxs-lookup"><span data-stu-id="19aad-232">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-233">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.ContextMenu.Placement%2A> propiedad y un modo de selección de ubicación para especificar dónde el <xref:System.Windows.Controls.ContextMenu> se coloca.</span><span class="sxs-lookup"><span data-stu-id="19aad-233">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-234">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.Placement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-234">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-235">Obtiene o establece el área relativa a la cual se coloca el menú contextual cuando se abre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-235">Gets or sets the area relative to which the context menu is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-236">Área que define el rectángulo que se utiliza para situar el menú contextual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-236">The area that defines the rectangle that is used to position the context menu.</span>
          </span>
          <span data-ttu-id="19aad-237">El valor predeterminado es <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-237">The default is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-238">Puede colocar una <xref:System.Windows.Controls.ContextMenu> estableciendo la <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, y <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> propiedades.</span><span class="sxs-lookup"><span data-stu-id="19aad-238">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="19aad-239">Estas propiedades comportan del mismo modo que en un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="19aad-239">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="19aad-240">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-240">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-241">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-242">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-242">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="19aad-243">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-243">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-244">None</span><span class="sxs-lookup"><span data-stu-id="19aad-244">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-245">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> propiedad y especificar dónde el <xref:System.Windows.Controls.ContextMenu> se coloca.</span><span class="sxs-lookup"><span data-stu-id="19aad-245">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-246">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-246">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-247">Obtiene o establece el objeto <see cref="T:System.Windows.UIElement" /> respecto al cual se coloca el control <see cref="T:System.Windows.Controls.ContextMenu" /> cuando se abre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-247">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-248">Elemento relativo al cual se coloca <see cref="T:System.Windows.Controls.ContextMenu" /> cuando se abre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-248">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span>
          </span>
          <span data-ttu-id="19aad-249">El valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-249">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-250">Cuando el <xref:System.Windows.Controls.ContextMenu> se asigna a la <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> o <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> propiedad, el <xref:System.Windows.Controls.ContextMenuService> cambia el valor de esta propiedad a la que posea <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement> cuando el <xref:System.Windows.Controls.ContextMenu> se abre.</span><span class="sxs-lookup"><span data-stu-id="19aad-250">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="19aad-251">Para usar otro <xref:System.Windows.UIElement>, establezca el <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="19aad-251">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-252">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-252">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-253">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-253">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="19aad-254">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-254">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-255">None</span><span class="sxs-lookup"><span data-stu-id="19aad-255">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-256">El destino de un <xref:System.Windows.Controls.ContextMenu> es su elemento primario.</span><span class="sxs-lookup"><span data-stu-id="19aad-256">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="19aad-257">Los ejemplos siguientes muestran cómo utilizar el <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> propiedad que se va a buscar el elemento primario de un <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="19aad-257">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-258">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-258">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="19aad-259">Elemento usado para mostrar el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-259">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="19aad-260">Elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-260">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19aad-261">Prepara el elemento especificado para visualizar el elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-261">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-262">La preparación del elemento puede implicar aplicar estilos, configurar enlaces y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="19aad-262">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-263">Obtiene o establece un valor que indica si <see cref="T:System.Windows.Controls.ContextMenu" /> se debe cerrar automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-263">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-264">
            <see langword="true" /> si el menú debe permanecer abierto hasta que la propiedad <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> cambia a <see langword="false" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-264">
              <see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="19aad-265">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-265">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-266">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-266">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-267">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-267">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="19aad-268">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-268">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-269">None</span><span class="sxs-lookup"><span data-stu-id="19aad-269">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="19aad-270">En el ejemplo siguiente se usa el <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> propiedad para hacer que un menú contextual que permanecerá abierto hasta que se produce un evento que cambia la <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="19aad-270">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-271">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-271">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-272">Obtiene o establece la distancia vertical entre el origen de destino y el punto de alineación emergente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-272">Get or sets the vertical distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19aad-273">Distancia vertical entre el origen de destino y el punto de alineación emergente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-273">The vertical distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="19aad-274">Para obtener información sobre el punto de alineación de origen y los elementos emergentes de destino, vea [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-274">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="19aad-275">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-275">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19aad-276">Puede colocar una <xref:System.Windows.Controls.ContextMenu> estableciendo la <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, y <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> propiedades.</span><span class="sxs-lookup"><span data-stu-id="19aad-276">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="19aad-277">Estas propiedades comportan del mismo modo que en un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="19aad-277">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="19aad-278">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="19aad-278">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="19aad-279">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="19aad-279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="19aad-280">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="19aad-280">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="19aad-281">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="19aad-281">Metadata properties set to `true`</span></span>|<span data-ttu-id="19aad-282">None</span><span class="sxs-lookup"><span data-stu-id="19aad-282">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="19aad-283">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="19aad-283">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or –  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="19aad-284">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="19aad-284">XAML Values</span></span>  
 <span data-ttu-id="19aad-285">*double*</span><span class="sxs-lookup"><span data-stu-id="19aad-285">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="19aad-286">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="19aad-286">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="19aad-287">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="19aad-287">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="19aad-288">Las cadenas no necesitan incluir explícitamente separadores decimales.</span><span class="sxs-lookup"><span data-stu-id="19aad-288">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="19aad-289">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="19aad-289">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="19aad-290">El mismo <xref:System.Double> se aplican restricciones de intervalo como se mencionó en la sección de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="19aad-290">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="19aad-291">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="19aad-291">*qualifiedDouble*</span></span>  
 <span data-ttu-id="19aad-292">A *doble* valor, tal como se ha descrito anteriormente, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="19aad-292">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="19aad-293">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="19aad-293">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="19aad-294">`in` pulgadas; 1 in == 96 px</span><span class="sxs-lookup"><span data-stu-id="19aad-294">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="19aad-295">`cm` es centímetros; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="19aad-295">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="19aad-296">`pt` es puntos; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="19aad-296">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19aad-297">En muchos casos, un valor doble que se puede establecer en automático, pero un <xref:System.Windows.Controls.ContextMenu> no aparece si los desplazamientos están establecidos en Auto.</span><span class="sxs-lookup"><span data-stu-id="19aad-297">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19aad-298">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> propiedad para hacer que un <xref:System.Windows.Controls.ContextMenu> para abrir en una ubicación especificada con respecto a su elemento primario de botón.</span><span class="sxs-lookup"><span data-stu-id="19aad-298">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19aad-299">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19aad-299">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>