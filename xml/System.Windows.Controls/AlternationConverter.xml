<Type Name="AlternationConverter" FullName="System.Windows.Controls.AlternationConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75e62b9546c79c899787e67328179785cebd00cb" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224831" /></Metadata><TypeSignature Language="C#" Value="public class AlternationConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternationConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.AlternationConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class AlternationConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AlternationConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type AlternationConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Values")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Convierte un entero en un objeto y un objeto en un entero aplicando el entero como índice a una lista de objetos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Windows.Controls.AlternationConverter> para enlazar una propiedad a valores alternos. Por ejemplo, si desea que los elementos de un <xref:System.Windows.Controls.ListBox> para fondos alternos azules y luz azul, haga lo siguiente:  
  
-   Crear un <xref:System.Windows.Controls.AlternationConverter> y agregue un azul <xref:System.Windows.Media.SolidColorBrush> y un azul claro <xref:System.Windows.Media.SolidColorBrush> a su <xref:System.Windows.Controls.AlternationConverter.Values%2A> propiedad.  
  
-   En un <xref:System.Windows.Style> para <xref:System.Windows.Controls.ListBoxItem>, enlazar la <xref:System.Windows.Controls.Control.Background%2A> propiedad <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> y asigne el convertidor que creó para el <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.Controls.ListBox> y usa dos <xref:System.Windows.Controls.AlternationConverter> objetos para alternar el <xref:System.Windows.Controls.Control.Background%2A> y <xref:System.Windows.Controls.Control.FontStyle%2A> de los elementos.  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AlternationConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.AlternationConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.Convert (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">Entero que se usará para buscar un objeto en la propiedad <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</param>
        <param name="targetType">El tipo de la propiedad del destino de enlace.</param>
        <param name="parameter">Parámetro de convertidor que se va a usar.</param>
        <param name="culture">Referencia cultural que se va a usar en el convertidor.</param>
        <summary>Convierte un entero en un objeto de la lista <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</summary>
        <returns>Objeto que está en la posición del módulo <paramref name="o" /> el número de elementos de <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.ConvertBack (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">Objeto que se va a buscar en la propiedad <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</param>
        <param name="targetType">El tipo de la propiedad del destino de enlace.</param>
        <param name="parameter">Parámetro de convertidor que se va a usar.</param>
        <param name="culture">Referencia cultural que se va a usar en el convertidor.</param>
        <summary>Convierte un objeto de la lista <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> en un entero.</summary>
        <returns>Índice de <paramref name="o" /> si está en <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> o -1 si "o" no está en <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.IList Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.AlternationConverter.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Values { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.IList" Usage="System.Windows.Controls.AlternationConverter.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de objetos que <see cref="T:System.Windows.Controls.AlternationConverter" /> devuelve cuando se pasa un entero al método <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />.</summary>
        <value>Lista de objetos que <see cref="T:System.Windows.Controls.AlternationConverter" /> devuelve cuando se pasa un entero al método <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se usa el <xref:System.Windows.Controls.AlternationConverter> para enlazar una propiedad a valores, alternos el <xref:System.Windows.Controls.AlternationConverter.Values%2A> propiedad contiene los objetos que se asignan a la propiedad.  Por ejemplo, si desea que los elementos de un <xref:System.Windows.Controls.ListBox> para fondos alternos azules y luz azul, se agrega un azul <xref:System.Windows.Media.SolidColorBrush> y un azul claro <xref:System.Windows.Media.SolidColorBrush> a <xref:System.Windows.Controls.AlternationConverter.Values%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.Controls.ListBox> y usa dos <xref:System.Windows.Controls.AlternationConverter> objetos para alternar el <xref:System.Windows.Controls.Control.Background%2A> y <xref:System.Windows.Controls.Control.FontStyle%2A> de los elementos.  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>