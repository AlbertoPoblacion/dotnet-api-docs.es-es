<Type Name="CleanUpVirtualizedItemEventArgs" FullName="System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
  <TypeSignature Language="C#" Value="public class CleanUpVirtualizedItemEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CleanUpVirtualizedItemEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CleanUpVirtualizedItemEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CleanUpVirtualizedItemEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a1be9-101">Proporciona datos para el evento <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" />.</span><span class="sxs-lookup"><span data-stu-id="a1be9-101">Provides data for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> event.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CleanUpVirtualizedItemEventArgs (object value, System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.#ctor(System.Object,System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CleanUpVirtualizedItemEventArgs(System::Object ^ value, System::Windows::UIElement ^ element);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a1be9-102"><see cref="T:System.Object" /> que representa el valor de datos original.</span><span class="sxs-lookup"><span data-stu-id="a1be9-102">The <see cref="T:System.Object" /> that represents the original data value.</span></span></param>
        <param name="element"><span data-ttu-id="a1be9-103"><see cref="T:System.Windows.UIElement" /> que representa el valor de datos.</span><span class="sxs-lookup"><span data-stu-id="a1be9-103">The <see cref="T:System.Windows.UIElement" /> that represents the data value.</span></span></param>
        <summary><span data-ttu-id="a1be9-104">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="a1be9-104">Initializes a new instance of the <see cref="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1be9-105">Si `value` es un elemento visual, `value` y `element` son idénticas.</span><span class="sxs-lookup"><span data-stu-id="a1be9-105">If `value` is a visual element, `value` and `element` are identical.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Property Cancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1be9-106">Obtiene o establece un valor que indica si este elemento no debería revirtualizarse.</span><span class="sxs-lookup"><span data-stu-id="a1be9-106">Gets or sets a value that indicates whether this item should not be re-virtualized.</span></span></summary>
        <value>
          <span data-ttu-id="a1be9-107"><see langword="true" /> si desea evitar la revirtualización de este elemento; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1be9-107"><see langword="true" /> if you want to prevent revirtualization of this item; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UIElement">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement UIElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement UIElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UIElement As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ UIElement { System::Windows::UIElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1be9-108">Obtiene una instancia del elemento visual que representa el valor de datos.</span><span class="sxs-lookup"><span data-stu-id="a1be9-108">Gets an instance of the visual element that represents the data value.</span></span></summary>
        <value><span data-ttu-id="a1be9-109"><see cref="T:System.Windows.UIElement" /> que representa el valor de datos.</span><span class="sxs-lookup"><span data-stu-id="a1be9-109">The <see cref="T:System.Windows.UIElement" /> that represents the data value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1be9-110">Si <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value%2A> es un elemento visual, su valor de propiedad será el mismo que <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1be9-110">If <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value%2A> is a visual element, its property value will be the same as <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1be9-111">Obtiene <see cref="T:System.Object" /> que representa el valor de datos original.</span><span class="sxs-lookup"><span data-stu-id="a1be9-111">Gets an <see cref="T:System.Object" /> that represents the original data value.</span></span></summary>
        <value><span data-ttu-id="a1be9-112"><see cref="T:System.Object" /> que representa el valor de datos original.</span><span class="sxs-lookup"><span data-stu-id="a1be9-112">The <see cref="T:System.Object" /> that represents the original data value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1be9-113">Si <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value%2A> es un elemento visual, su valor de propiedad será el mismo que <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1be9-113">If <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value%2A> is a visual element, its property value will be the same as <xref:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>