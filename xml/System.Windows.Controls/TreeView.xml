<Type Name="TreeView" FullName="System.Windows.Controls.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e221625f88554ce08b4fce49065d71070f785ba" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53464432" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TreeView extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits ItemsControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Windows::Controls::ItemsControl" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit ItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.TreeViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un control que muestra datos jerárquicos en una estructura de árbol que contiene elementos que se pueden expandir y contraer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.TreeView> es un <xref:System.Windows.Controls.ItemsControl>, lo que significa que puede contener una colección de objetos de cualquier tipo (como cadena, imagen o panel). Para obtener más información, vea la clase <xref:System.Windows.Controls.ItemsControl>.  
  
 La siguiente ilustración muestra un sencillo <xref:System.Windows.Controls.TreeView>.  
  
 ![Ilustración de TreeView](~/add/media/treeviewillustration.JPG "ilustración de TreeView")  
  
 El contenido de un <xref:System.Windows.Controls.TreeView> son <xref:System.Windows.Controls.TreeViewItem> controles que pueden incluir contenido enriquecido, como <xref:System.Windows.Controls.Button> y <xref:System.Windows.Controls.Image> controles. Un <xref:System.Windows.Controls.TreeViewItem> puede contener uno o varios <xref:System.Windows.Controls.TreeViewItem> objetos como sus descendientes. Un <xref:System.Windows.Controls.TreeView> se define como una jerarquía de <xref:System.Windows.Controls.TreeViewItem> objetos.  
  
 Un <xref:System.Windows.Controls.TreeView> puede rellenar su árbol enlazando a un origen de datos y utilizando <xref:System.Windows.HierarchicalDataTemplate> objetos. Ejemplos de orígenes de datos <xref:System.Windows.Data.XmlDataProvider> y <xref:System.Collections.ObjectModel.ObservableCollection%601> objetos.  
  
 Mostrar un gran número de elementos puede provocar problemas de rendimiento.  Consulte [optimizar el rendimiento: Controles](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) para obtener más información. Para mejorar el rendimiento de un <xref:System.Windows.Controls.TreeView>, vea [Cómo: Mejorar el rendimiento de un control TreeView](~/docs/framework/wpf/controls/how-to-improve-the-performance-of-a-treeview.md).  
  
 Para obtener más información sobre la <xref:System.Windows.Controls.TreeView> control, vea el [Introducción a TreeView](~/docs/framework/wpf/controls/treeview-overview.md).  
  
 Un <xref:System.Windows.Controls.TreeView> tiene un número limitado de niveles. Para obtener más información, vea <xref:System.Windows.Media.Visual>.  
  
## <a name="customizing-the-treeview-control"></a>Personalizar el Control TreeView  
 Para aplicar la misma configuración de la propiedad a varios <xref:System.Windows.Controls.TreeView> controles, utilizar el <xref:System.Windows.FrameworkElement.Style%2A> propiedad. Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para proporcionar el control una apariencia única. Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Para ver las partes y los Estados que son específicos de la <xref:System.Windows.Controls.TreeView>, consulte [TreeView estilos y plantillas](~/docs/framework/wpf/controls/treeview-styles-and-templates.md).  
  
 Las propiedades de dependencia para este control pueden establecerse mediante el estilo del control de forma predeterminada.  Si una propiedad se establece mediante un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación. El estilo predeterminado se determina por el tema de escritorio que se utiliza cuando se ejecuta la aplicación.  Para obtener más información, consulte [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Establecer una propiedad visual solo tendrá un efecto si esa propiedad está presente en ambos <xref:System.Windows.Controls.TreeView> control de la plantilla predeterminada y se establece mediante el uso de una. Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra cómo crear una clase <xref:System.Windows.Controls.TreeView>.  
  
 [!code-xaml[TreeViewSimple#1](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSimple/CS/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TreeViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.TreeView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandSubtree">
      <MemberSignature Language="C#" Value="protected virtual bool ExpandSubtree (System.Windows.Controls.TreeViewItem container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ExpandSubtree(class System.Windows.Controls.TreeViewItem container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExpandSubtree (container As TreeViewItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ExpandSubtree(System::Windows::Controls::TreeViewItem ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExpandSubtree : System.Windows.Controls.TreeViewItem -&gt; bool&#xA;override this.ExpandSubtree : System.Windows.Controls.TreeViewItem -&gt; bool" Usage="treeView.ExpandSubtree container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.Controls.TreeViewItem" />
      </Parameters>
      <Docs>
        <param name="container">Control <see cref="T:System.Windows.Controls.TreeViewItem" /> que se va a expandir.</param>
        <summary>Expande el control <see cref="T:System.Windows.Controls.TreeViewItem" /> especificado y todos sus elementos <see cref="T:System.Windows.Controls.TreeViewItem" /> secundarios.</summary>
        <returns>Es <see langword="true" /> si se expande el control <see cref="T:System.Windows.Controls.TreeViewItem" /> especificado y todos sus elementos secundarios; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="treeView.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un <see cref="T:System.Windows.Controls.TreeViewItem" /> que se utiliza para mostrar el contenido.</summary>
        <returns>Un nuevo <see cref="T:System.Windows.Controls.TreeViewItem" /> que se utiliza como contenedor de contenido.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.TreeView.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene si <see cref="T:System.Windows.Controls.TreeView" /> se puede desplazar.</summary>
        <value>Devuelve siempre <see langword="true" /> porque el control tiene <see cref="T:System.Windows.Controls.ScrollViewer" /> en su estilo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="treeView.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que se va a evaluar.</param>
        <summary>Determina si el elemento especificado es o puede ser su propio contenedor.</summary>
        <returns><see langword="true" /> si <paramref name="item" /> es una clase <see cref="T:System.Windows.Controls.TreeViewItem" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="treeView.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define un objeto <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> para el control <see cref="T:System.Windows.Controls.TreeView" />.</summary>
        <returns><see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> para el control <see cref="T:System.Windows.Controls.TreeView" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="treeView.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Genera el evento enrutado <see cref="E:System.Windows.UIElement.GotFocus" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza <see cref="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)" /> método para que los delegados registrados reciban el evento.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="treeView.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Proporciona control de clases para un evento <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> cuando el foco de teclado cambia para <see cref="T:System.Windows.Controls.TreeView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="treeView.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Proporciona control de clases para el evento <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> que se produce cuando hay un cambio en la colección <see cref="P:System.Windows.Controls.ItemsControl.Items" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="treeView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Proporciona control de clases para el evento <see cref="E:System.Windows.UIElement.KeyDown" /> de un objeto <see cref="T:System.Windows.Controls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación establece <xref:System.Windows.RoutedEventArgs.Handled%2A> a `true` si se presiona una de las siguientes claves junto con la tecla CTRL:  
  
-   <xref:System.Windows.Input.Key.End>  
  
-   <xref:System.Windows.Input.Key.Home>  
  
-   <xref:System.Windows.Input.Key.Left>  
  
-   <xref:System.Windows.Input.Key.Right>  
  
-   <xref:System.Windows.Input.Key.Down>  
  
-   <xref:System.Windows.Input.Key.Up>  
  
-   <xref:System.Windows.Input.Key.PageDown>  
  
-   <xref:System.Windows.Input.Key.PageUp>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedItemChanged (System.Windows.RoutedPropertyChangedEventArgs&lt;object&gt; e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedItemChanged(class System.Windows.RoutedPropertyChangedEventArgs`1&lt;object&gt; e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedItemChanged (e As RoutedPropertyChangedEventArgs(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedItemChanged(System::Windows::RoutedPropertyChangedEventArgs&lt;System::Object ^&gt; ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedItemChanged : System.Windows.RoutedPropertyChangedEventArgs&lt;obj&gt; -&gt; unit&#xA;override this.OnSelectedItemChanged : System.Windows.RoutedPropertyChangedEventArgs&lt;obj&gt; -&gt; unit" Usage="treeView.OnSelectedItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedPropertyChangedEventArgs&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="e">Proporciona el elemento que estaba seleccionado anteriormente y el elemento que está seleccionado actualmente para el evento <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" />.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los datos del evento que el parámetro `e` proporciona contiene una <xref:System.Windows.DependencyPropertyChangedEventArgs.OldValue%2A?displayProperty=nameWithType> y un <xref:System.Windows.Ink.PropertyDataChangedEventArgs.NewValue%2A?displayProperty=nameWithType>. El <xref:System.Windows.DependencyPropertyChangedEventArgs.OldValue%2A?displayProperty=nameWithType> se establece en el elemento que estaba seleccionado anteriormente o se establece en `null` si no hay ningún elemento seleccionado anteriormente. De forma similar, el <xref:System.Windows.Ink.PropertyDataChangedEventArgs.NewValue%2A?displayProperty=nameWithType> se establece en el elemento recientemente seleccionado o se establece en `null` si se selecciona ningún elemento nuevo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="treeView.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Elemento que muestra el objeto especificado.</param>
        <param name="item">Elemento que se va a mostrar.</param>
        <summary>Prepara el elemento especificado para visualizar el elemento especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : obj" Usage="System.Windows.Controls.TreeView.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el elemento seleccionado en una <see cref="T:System.Windows.Controls.TreeView" />.</summary>
        <value>Objeto seleccionado en la <see cref="T:System.Windows.Controls.TreeView" /> o <see langword="null" /> si no se selecciona ningún elemento. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.TreeView.SelectedItem%2A> propiedad en el <xref:System.Windows.Controls.TreeView> control es una propiedad de solo lectura y se establece en un elemento cuando el <xref:System.Windows.Controls.TreeViewItem.IsSelected%2A> valor de propiedad del elemento <xref:System.Windows.Controls.TreeView> está establecido en `true`.  
  
<a name="dependencyPropertyInfo_SelectedItem"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.TreeView.SelectedItemProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo obtener el valor de la <xref:System.Windows.Controls.TreeView.SelectedItem%2A> propiedad.  
  
 [!code-csharp[TreeViewSnips#SelectedItem](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSnips/CSharp/Window1.xaml.cs#selecteditem)]
 [!code-vb[TreeViewSnips#SelectedItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TreeViewSnips/visualbasic/window1.xaml.vb#selecteditem)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValue" />
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedPropertyChangedEventHandler&lt;object&gt; SelectedItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedPropertyChangedEventHandler`1&lt;object&gt; SelectedItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.TreeView.SelectedItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedItemChanged As RoutedPropertyChangedEventHandler(Of Object) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedPropertyChangedEventHandler&lt;System::Object ^&gt; ^ SelectedItemChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedItemChanged : System.Windows.RoutedPropertyChangedEventHandler&lt;obj&gt; " Usage="member this.SelectedItemChanged : System.Windows.RoutedPropertyChangedEventHandler&lt;System.obj&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedPropertyChangedEventHandler&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia la propiedad <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectedItemChangedEvent"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.TreeView.SelectedItemChangedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedPropertyChangedEventHandler%601>|  
  
<a name="xamlAttributeUsage_SelectedItemChanged"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object SelectedItemChanged="RoutedPropertyChangedEventHandler"/>  
```  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo especificar un controlador de eventos para el <xref:System.Windows.Controls.TreeView.SelectedItemChanged> eventos.  
  
 [!code-xaml[TreeViewSnips#SelectedItemChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSnips/CSharp/Window1.xaml#selecteditemchanged)]  
  
 El ejemplo siguiente muestra cómo definir el controlador de eventos.  
  
 [!code-csharp[TreeViewSnips#SelectedValueChangedMethod](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSnips/CSharp/Window1.xaml.cs#selectedvaluechangedmethod)]
 [!code-vb[TreeViewSnips#SelectedValueChangedMethod](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TreeViewSnips/visualbasic/window1.xaml.vb#selectedvaluechangedmethod)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedItemChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedItemChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedItemChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedItemChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedItemChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.TreeView.SelectedItemChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedItemProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TreeView.SelectedItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Windows.Controls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de la propiedad especificada por <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> para <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />.</summary>
        <value>Valor de la propiedad especificada por <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> para <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> o <see langword="null" /> si no hay elementos seleccionados. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> propiedad especifica la ruta de acceso a la propiedad que se usa para determinar el valor de la <xref:System.Windows.Controls.TreeView.SelectedValue%2A> propiedad.  Por ejemplo, supongamos que un <xref:System.Windows.Controls.TreeView> está enlazado a una colección de objetos de tipo `Employee`, que tiene dos propiedades denominadas `EmployeeName` y `EnployeeNumber`.  Puede usar un <xref:System.Windows.HierarchicalDataTemplate> para mostrar el valor de `EmployeeName` en el <xref:System.Windows.Controls.TreeView> y establecer <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> a `"EmployeeNumber"` tener <xref:System.Windows.Controls.TreeView.SelectedValue%2A> devolver el valor de `EmployeeNumber`.  
  
 El <xref:System.Windows.Controls.TreeView.SelectedValue%2A> propiedad es una propiedad de solo lectura. Para cambiar el valor de un elemento seleccionado en un <xref:System.Windows.Controls.TreeView>, utilice el <xref:System.Windows.Controls.TreeView.SelectedItem%2A> propiedad para tener acceso a la <xref:System.Windows.Controls.TreeViewItem>.  
  
<a name="dependencyPropertyInfo_SelectedValue"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.TreeView.SelectedValueProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
   
  
## Examples  
 El ejemplo siguiente se muestra un <xref:System.Windows.Controls.TreeView> que usa un <xref:System.Windows.HierarchicalDataTemplate> para mostrar el `EmployeeName` y `EmployeeWorkDay` las propiedades de un `Employee` y establece el <xref:System.Windows.Controls.TreeView.SelectedValue%2A> propiedad a la `EmployeeNumber`. Cuando se selecciona un `EmployeeName` en el <xref:System.Windows.Controls.TreeView>, el <xref:System.Windows.Controls.TreeView.SelectedValue%2A> está establecido en el `EmployeeNumber`.  
  
 [!code-xaml[TreeViewSelectedValue#SelectedValuePath](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSelectedValue/CS/Window1.xaml#selectedvaluepath)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValuePath">
      <MemberSignature Language="C#" Value="public string SelectedValuePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.SelectedValuePath" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValuePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValuePath : string with get, set" Usage="System.Windows.Controls.TreeView.SelectedValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso que se usa para obtener <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> de <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> en <see cref="T:System.Windows.Controls.TreeView" />.</summary>
        <value>Cadena que contiene la ruta de acceso que se utiliza para obtener <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />. El valor predeterminado es <see langword="String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> propiedad especifica la ruta de acceso a la propiedad que se usa para determinar el valor de la <xref:System.Windows.Controls.TreeView.SelectedValue%2A> propiedad. Por ejemplo, supongamos que un <xref:System.Windows.Controls.TreeView> está enlazado a una colección de objetos de tipo `Employee`, que tiene dos propiedades denominadas `EmployeeName` y `EnployeeNumber`.  Puede usar un <xref:System.Windows.HierarchicalDataTemplate> para mostrar el valor de `EmployeeName` en el <xref:System.Windows.Controls.TreeView> y establecer <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> a `"EmployeeNumber"` tener <xref:System.Windows.Controls.TreeView.SelectedValue%2A> devolver el valor de `EmployeeNumber`.  
  
<a name="dependencyPropertyInfo_SelectedValuePath"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.TreeView.SelectedValuePathProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
   
  
## Examples  
 El ejemplo siguiente se muestra un <xref:System.Windows.Controls.TreeView> que usa un <xref:System.Windows.HierarchicalDataTemplate> para mostrar el `EmployeeName` y `EmployeeWorkDay` las propiedades de un `Employee` y establece el <xref:System.Windows.Controls.TreeView.SelectedValue%2A> propiedad a la `EmployeeNumber`. Cuando se selecciona un `EmployeeName` en el <xref:System.Windows.Controls.TreeView>, el <xref:System.Windows.Controls.TreeView.SelectedValue%2A> está establecido en el `EmployeeNumber`.  
  
 [!code-xaml[TreeViewSelectedValue#SelectedValuePath](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSelectedValue/CS/Window1.xaml#selectedvaluepath)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValue" />
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValuePathProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedValuePathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedValuePathProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedValuePathProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedValuePathProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedValuePathProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedValuePathProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TreeView.SelectedValuePathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedValueProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TreeView.SelectedValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>