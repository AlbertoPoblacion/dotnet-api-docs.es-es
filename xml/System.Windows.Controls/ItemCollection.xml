<Type Name="ItemCollection" FullName="System.Windows.Controls.ItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb367e719a689a130404b8615f91edd4dcb5ffd9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36366298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ItemCollection : System.Windows.Data.CollectionView, System.Collections.IList, System.ComponentModel.ICollectionViewLiveShaping, System.ComponentModel.IEditableCollectionView, System.ComponentModel.IEditableCollectionViewAddNewItem, System.ComponentModel.IItemProperties, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ItemCollection extends System.Windows.Data.CollectionView implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.ICollectionViewLiveShaping, class System.ComponentModel.IEditableCollectionView, class System.ComponentModel.IEditableCollectionViewAddNewItem, class System.ComponentModel.IItemProperties, class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ItemCollection&#xA;Inherits CollectionView&#xA;Implements ICollectionViewLiveShaping, IEditableCollectionView, IEditableCollectionViewAddNewItem, IItemProperties, IList, IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCollection sealed : System::Windows::Data::CollectionView, System::Collections::IList, System::ComponentModel::ICollectionViewLiveShaping, System::ComponentModel::IEditableCollectionView, System::ComponentModel::IEditableCollectionViewAddNewItem, System::ComponentModel::IItemProperties, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type ItemCollection = class&#xA;    inherit CollectionView&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IEditableCollectionViewAddNewItem&#xA;    interface IEditableCollectionView&#xA;    interface ICollectionViewLiveShaping&#xA;    interface IItemProperties&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.CollectionView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICollectionViewLiveShaping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionViewAddNewItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IItemProperties</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e6f16-101">Holds the list of items that constitute the content of an <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6f16-101">Holds the list of items that constitute the content of an <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-102"><xref:System.Windows.Controls.ItemCollection> mantiene una colección de elementos como cadenas, objetos, [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] nodos, los elementos y otras colecciones.</span><span class="sxs-lookup"><span data-stu-id="e6f16-102"><xref:System.Windows.Controls.ItemCollection> maintains a collection of items such as strings, objects, [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] nodes, elements, and other collections.</span></span> <span data-ttu-id="e6f16-103">Un <xref:System.Windows.Controls.ItemsControl> utiliza los datos en el <xref:System.Windows.Controls.ItemCollection> para generar su contenido.</span><span class="sxs-lookup"><span data-stu-id="e6f16-103">An <xref:System.Windows.Controls.ItemsControl> uses the data in the <xref:System.Windows.Controls.ItemCollection> to generate its content.</span></span> <span data-ttu-id="e6f16-104">Si desea agregar más de una colección, asigne un <xref:System.Windows.Data.CompositeCollection> a la <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propiedad de su <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-104">If you want to aggregate more than one collection, assign a <xref:System.Windows.Data.CompositeCollection> to the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of your <xref:System.Windows.Controls.ItemsControl>.</span></span>  
  
 <span data-ttu-id="e6f16-105">Utilice la <xref:System.Windows.Controls.ItemsControl.Items%2A> propiedad o el <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propiedad para especificar la colección que se debe usar para generar el contenido de su <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-105">Use either the <xref:System.Windows.Controls.ItemsControl.Items%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to specify the collection that should be used to generate the content of your <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="e6f16-106">Cuando el <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propiedad está establecida, el <xref:System.Windows.Controls.ItemsControl.Items%2A> se realizará la colección de solo lectura y de tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="e6f16-106">When the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is set, the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection will be made read-only and fixed-size.</span></span> <span data-ttu-id="e6f16-107">Esto significa que si usas el <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propiedad, no se puede agregar, eliminar o cambiar elementos en la <xref:System.Windows.Controls.ItemCollection> directamente.</span><span class="sxs-lookup"><span data-stu-id="e6f16-107">This means that if you are using the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property, you cannot add, delete, or change items in the <xref:System.Windows.Controls.ItemCollection> directly.</span></span>  
  
 <span data-ttu-id="e6f16-108"><xref:System.Windows.Controls.ItemCollection> es un <xref:System.Windows.Data.CollectionView> y, por tanto, proporciona funcionalidades de la vista de colección, como ordenar, agrupar y filtrar.</span><span class="sxs-lookup"><span data-stu-id="e6f16-108"><xref:System.Windows.Controls.ItemCollection> is a <xref:System.Windows.Data.CollectionView> and therefore provides collection view functionalities, such as sorting, grouping, and filtering.</span></span> <span data-ttu-id="e6f16-109">Para obtener más información, vea <xref:System.Windows.Controls.ItemCollection.SortDescriptions%2A>, <xref:System.Windows.Controls.ItemCollection.Filter%2A> y <xref:System.Windows.Controls.ItemCollection.GroupDescriptions%2A>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-109">For more information, see <xref:System.Windows.Controls.ItemCollection.SortDescriptions%2A>, <xref:System.Windows.Controls.ItemCollection.Filter%2A>, and <xref:System.Windows.Controls.ItemCollection.GroupDescriptions%2A>.</span></span>  
  
 <span data-ttu-id="e6f16-110">Para obtener más información acerca de las vistas de colección, consulte [información general sobre el enlace de datos](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e6f16-110">For more information about collection views, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6f16-111">Si tiene una <xref:System.Windows.Controls.ItemsControl>, como un <xref:System.Windows.Controls.ListBox> que tiene contenido, puede usar el <xref:System.Windows.Controls.ItemsControl.Items%2A> propiedad para tener acceso a la <xref:System.Windows.Controls.ItemCollection>, que es una vista.</span><span class="sxs-lookup"><span data-stu-id="e6f16-111">If you have an <xref:System.Windows.Controls.ItemsControl>, such as a <xref:System.Windows.Controls.ListBox> that has content, you can use the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to access the <xref:System.Windows.Controls.ItemCollection>, which is a view.</span></span> <span data-ttu-id="e6f16-112">Dado que es una vista, a continuación, puede usar las funcionalidades relacionadas con la vista como la ordenación, filtrado y agrupación.</span><span class="sxs-lookup"><span data-stu-id="e6f16-112">Because it is a view, you can then use the view-related functionalities such as sorting, filtering, and grouping.</span></span> <span data-ttu-id="e6f16-113">Tenga en cuenta que cuando se establece ItemsSource, las operaciones de vista delegan a la vista en la colección de ItemsSource.</span><span class="sxs-lookup"><span data-stu-id="e6f16-113">Note that when ItemsSource is set, the view operations delegate to the view over the ItemsSource collection.</span></span> <span data-ttu-id="e6f16-114">Por lo tanto, la ItemCollection admite ordenación, filtrado y agrupación solo si admite la vista delegada.</span><span class="sxs-lookup"><span data-stu-id="e6f16-114">Therefore, the ItemCollection supports sorting, filtering, and grouping only if the delegated view supported them.</span></span>  
  
 <span data-ttu-id="e6f16-115">En el ejemplo siguiente se muestra cómo ordenar el contenido de un <xref:System.Windows.Controls.ListBox> denominado `myListBox`.</span><span class="sxs-lookup"><span data-stu-id="e6f16-115">The following example shows how to sort the content of a <xref:System.Windows.Controls.ListBox> named `myListBox`.</span></span> <span data-ttu-id="e6f16-116">En este ejemplo, `Content` es el nombre de la propiedad para ordenar por.</span><span class="sxs-lookup"><span data-stu-id="e6f16-116">In this example, `Content` is the name of the property to sort by.</span></span>  
  
 [!code-csharp[ListBoxSort_snip#Sort](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxSort_snip/CSharp/Window1.xaml.cs#sort)]
 [!code-vb[ListBoxSort_snip#Sort](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxSort_snip/visualbasic/window1.xaml.vb#sort)]  
  
 <span data-ttu-id="e6f16-117">Al hacer esto, la vista puede ser o no la vista predeterminada, dependiendo de cómo se establecen los datos de una copia de seguridad en su <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-117">When you do this, the view might or might not be the default view, depending on how the data is set up on your <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="e6f16-118">Por ejemplo, cuando la <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propiedad está enlazada a un <xref:System.Windows.Data.CollectionViewSource>, la vista que se obtiene mediante la <xref:System.Windows.Controls.ItemsControl.Items%2A> propiedad no es la vista predeterminada.</span><span class="sxs-lookup"><span data-stu-id="e6f16-118">For example, when the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is bound to a <xref:System.Windows.Data.CollectionViewSource>, the view that you obtain using the <xref:System.Windows.Controls.ItemsControl.Items%2A> property is not the default view.</span></span>  
  
 <span data-ttu-id="e6f16-119">Si su <xref:System.Windows.Controls.ItemsControl> está enlazado (que usa el <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propiedad), a continuación, puede hacer lo siguiente para obtener la vista predeterminada:</span><span class="sxs-lookup"><span data-stu-id="e6f16-119">If your <xref:System.Windows.Controls.ItemsControl> is bound (you are using the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property), then you can do the following to get the default view:</span></span>  
  
 [!code-csharp[GroupingSample#MyView](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#myview)]
 [!code-vb[GroupingSample#MyView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#myview)]  
[!code-csharp[GroupingSample#GetView](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#getview)]
[!code-vb[GroupingSample#GetView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#getview)]  
  
 <span data-ttu-id="e6f16-120">Como alternativa, puede especificar filtrado, ordenación y agrupación criterios en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] con <xref:System.Windows.Data.CollectionViewSource>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-120">Alternately, you can specify filtering, sorting, and grouping criteria in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] using <xref:System.Windows.Data.CollectionViewSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ItemsControl" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (newItem As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="itemCollection.Add newItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">
          <span data-ttu-id="e6f16-121">The item to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-121">The item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-122">Adds an item to the <see cref="T:System.Windows.Controls.ItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-122">Adds an item to the <see cref="T:System.Windows.Controls.ItemCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-123">The zero-based index at which the object is added or -1 if the item cannot be added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-123">The zero-based index at which the object is added or -1 if the item cannot be added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-124">The collection is in ItemsSource mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-124">The collection is in ItemsSource mode.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Controls.ItemsControl" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFiltering">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CanChangeLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveFiltering : bool" Usage="System.Windows.Controls.ItemCollection.CanChangeLiveFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-125">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-125">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-126">
            <see langword="true" /> si la vista de colección admite la activación o desactivación del filtrado en tiempo real; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-126">
              <see langword="true" /> if the collection view supports turning live filtering on or off; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGrouping">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CanChangeLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveGrouping : bool" Usage="System.Windows.Controls.ItemCollection.CanChangeLiveGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-127">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-127">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-128">
            <see langword="true" /> Si la vista de colección admite la agrupación en vivo de activar on u off; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-128">
              <see langword="true" /> if the collection view supports turning live grouping on or off; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSorting">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CanChangeLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveSorting : bool" Usage="System.Windows.Controls.ItemCollection.CanChangeLiveSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-129">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-129">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-130">
            <see langword="true" /> Si la vista de colección admite la ordenación en vivo de activar on u off; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-130">
              <see langword="true" /> if the collection view supports turning live sorting on or off; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFilter">
      <MemberSignature Language="C#" Value="public override bool CanFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CanFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFilter : bool" Usage="System.Windows.Controls.ItemCollection.CanFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-131">Gets a value that indicates whether this collection view supports filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-131">Gets a value that indicates whether this collection view supports filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-132">
            <see langword="true" /> Si esta vista admite el filtrado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-132">
              <see langword="true" /> if this view supports filtering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6f16-133">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-133">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-134">Utilice esta propiedad para comprobar si esta colección admite el filtrado antes de asignar una devolución de llamada de filtro para el <xref:System.Windows.Controls.ItemCollection.Filter%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="e6f16-134">Use this property to check whether this collection supports filtering before assigning a filter callback to the <xref:System.Windows.Controls.ItemCollection.Filter%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGroup">
      <MemberSignature Language="C#" Value="public override bool CanGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CanGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanGroup { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGroup : bool" Usage="System.Windows.Controls.ItemCollection.CanGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-135">Gets a value that indicates whether this collection view supports grouping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-135">Gets a value that indicates whether this collection view supports grouping.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-136">
            <see langword="true" /> Si la colección admite la agrupación; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-136">
              <see langword="true" /> if the collection supports grouping; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6f16-137">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-137">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-138">Utilice esta propiedad para probar si la implementación actual admite la agrupación antes de usar el <xref:System.Windows.Controls.ItemCollection.GroupDescriptions%2A> propiedad que se va a agregar <xref:System.ComponentModel.GroupDescription> objetos.</span><span class="sxs-lookup"><span data-stu-id="e6f16-138">Use this property to test whether the current implementation supports grouping before using the <xref:System.Windows.Controls.ItemCollection.GroupDescriptions%2A> property to add <xref:System.ComponentModel.GroupDescription> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Windows.Controls.ItemCollection.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-139">Gets a value that indicates whether this collection view supports sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-139">Gets a value that indicates whether this collection view supports sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-140">
            <see langword="true" /> Si esta vista admite la ordenación; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-140">
              <see langword="true" /> if this view support sorting; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e6f16-141">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-141">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-142">Utilice esta propiedad para comprobar si esta colección admite la ordenación antes de usar el <xref:System.Windows.Controls.ItemCollection.SortDescriptions%2A> propiedad que se va a agregar <xref:System.ComponentModel.SortDescription> objetos.</span><span class="sxs-lookup"><span data-stu-id="e6f16-142">Use this property to check whether this collection supports sorting before using the <xref:System.Windows.Controls.ItemCollection.SortDescriptions%2A> property to add <xref:System.ComponentModel.SortDescription> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="itemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-143">Clears the collection and releases the references on all items currently in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-143">Clears the collection and releases the references on all items currently in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e6f16-144">En el ejemplo siguiente se muestra cómo utilizar este método.</span><span class="sxs-lookup"><span data-stu-id="e6f16-144">The following example shows how to use this method.</span></span> <span data-ttu-id="e6f16-145">En el ejemplo, `sbar` es un <xref:System.Windows.Controls.Primitives.StatusBar> control, que es un <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-145">In the example, `sbar` is a <xref:System.Windows.Controls.Primitives.StatusBar> control, which is an <xref:System.Windows.Controls.ItemsControl>.</span></span>  
  
 [!code-csharp[StatusBar#MakeProgressBar](~/samples/snippets/csharp/VS_Snippets_Wpf/StatusBar/CSharp/Window1.xaml.cs#makeprogressbar)]
 [!code-vb[StatusBar#MakeProgressBar](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StatusBar/visualbasic/window1.xaml.vb#makeprogressbar)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-146">The <see cref="T:System.Windows.Controls.ItemCollection" /> is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-146">The <see cref="T:System.Windows.Controls.ItemCollection" /> is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          </span>
          <span data-ttu-id="e6f16-147">(When the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property is set, the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection will be made read-only and fixed-size.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-147">(When the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property is set, the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection will be made read-only and fixed-size.)</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Controls.ItemsControl" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (object containItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(object containItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (containItem As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Contains(System::Object ^ containItem);" />
      <MemberSignature Language="F#" Value="override this.Contains : obj -&gt; bool" Usage="itemCollection.Contains containItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="containItem">
          <span data-ttu-id="e6f16-148">The object to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-148">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-149">Returns a value that indicates whether the specified item is in this view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-149">Returns a value that indicates whether the specified item is in this view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-150">
            <see langword="true" /> to indicate that the item belongs to this collection and passes the active filter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-150">
              <see langword="true" /> to indicate that the item belongs to this collection and passes the active filter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="itemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="e6f16-151">The destination array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-151">The destination array to copy to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e6f16-152">The zero-based index in the destination array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-152">The zero-based index in the destination array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-153">Copies the elements of the collection to an array, starting at a particular array index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-153">Copies the elements of the collection to an array, starting at a particular array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e6f16-154">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-154">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e6f16-155">The destination <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-155">The destination <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e6f16-156">The <paramref name="index" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-156">The <paramref name="index" /> parameter is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Controls.ItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-157">Gets the number of records in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-157">Gets the number of records in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-158">El número de elementos de la colección o 0 si la recolección no está inicializada o si no hay ninguna colección en el <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> modo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-158">The number of items in the collection or 0 if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentItem">
      <MemberSignature Language="C#" Value="public override object CurrentItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ CurrentItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentItem : obj" Usage="System.Windows.Controls.ItemCollection.CurrentItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-159">Gets the current item in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-159">Gets the current item in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-160">El objeto actual en la vista o <see langword="null" /> si la recolección no está inicializada o si no hay ninguna colección en el <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> modo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-160">The current object in the view or <see langword="null" /> if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          </span>
          <span data-ttu-id="e6f16-161">De forma predeterminada, el primer elemento de la colección se inicia como el elemento actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-161">By default, the first item of the collection starts as the current item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.CurrentItem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPosition">
      <MemberSignature Language="C#" Value="public override int CurrentPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.CurrentPosition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CurrentPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPosition : int" Usage="System.Windows.Controls.ItemCollection.CurrentPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-162">Gets the ordinal position of the current item within the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-162">Gets the ordinal position of the current item within the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-163">La posición ordinal del elemento actual dentro de la vista o -1 si la recolección no está inicializada o si no hay ninguna colección en el <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> modo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-163">The ordinal position of the current item within the view or -1 if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />
      </Docs>
    </Member>
    <Member MemberName="DeferRefresh">
      <MemberSignature Language="C#" Value="public override IDisposable DeferRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IDisposable DeferRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.DeferRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeferRefresh () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IDisposable ^ DeferRefresh();" />
      <MemberSignature Language="F#" Value="override this.DeferRefresh : unit -&gt; IDisposable" Usage="itemCollection.DeferRefresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-164">Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-164">Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-165">An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-165">An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-166">Este método se utiliza normalmente para crear un `using` definir el ámbito y, a continuación, colocar varias llamadas de cambio de vista dentro del ámbito.</span><span class="sxs-lookup"><span data-stu-id="e6f16-166">This method is typically used to create a `using` scope and then place multiple view-changing calls within the scope.</span></span> <span data-ttu-id="e6f16-167">Esto retrasa la actualización automática hasta que se cierra el ciclo de aplazamiento.</span><span class="sxs-lookup"><span data-stu-id="e6f16-167">This delays automatic refresh until the defer cycle is exited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public override Predicate&lt;object&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Filter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Predicate&lt;System::Object ^&gt; ^ Filter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Controls.ItemCollection.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-168">Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-168">Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-169">Método usado para determinar si un elemento es adecuado para su inclusión en la vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-169">A method used to determine if an item is suitable for inclusion in the view.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-170">Use la <xref:System.Windows.Controls.ItemCollection.CanFilter%2A> propiedad para comprobar si la implementación actual admite el filtrado antes de asignar esta propiedad con un valor distinto de null.</span><span class="sxs-lookup"><span data-stu-id="e6f16-170">Use the <xref:System.Windows.Controls.ItemCollection.CanFilter%2A> property to test whether the current implementation supports filtering before assigning this property with a non-null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6f16-171">Para obtener un ejemplo relacionado, vea [Cómo: filtrar datos en una vista](~/docs/framework/wpf/data/how-to-filter-data-in-a-view.md).</span><span class="sxs-lookup"><span data-stu-id="e6f16-171">For a related example, see [How to: Filter Data in a View](~/docs/framework/wpf/data/how-to-filter-data-in-a-view.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e6f16-172">Filtering is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-172">Filtering is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="itemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public override object GetItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.GetItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetItemAt(int index);" />
      <MemberSignature Language="F#" Value="override this.GetItemAt : int -&gt; obj" Usage="itemCollection.GetItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e6f16-173">The zero-based index at which the item is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-173">The zero-based index at which the item is located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-174">Returns the item at the specified zero-based index in this view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-174">Returns the item at the specified zero-based index in this view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-175">The item at the specified zero-based index in this view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-175">The item at the specified zero-based index in this view.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-176">Este método evalúa el índice con cualquier ordenar, filtrar o agrupar los criterios que se establecen en la vista que utiliza el <xref:System.Windows.Data.CollectionView.SortDescriptions%2A> o <xref:System.Windows.Data.CollectionView.Filter%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="e6f16-176">This method evaluates the index with any sorting, filtering, or grouping criteria that are set on the view using the <xref:System.Windows.Data.CollectionView.SortDescriptions%2A> or <xref:System.Windows.Data.CollectionView.Filter%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e6f16-177">
            <paramref name="index" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-177">
              <paramref name="index" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-178">The collection is uninitialized or the binding on <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> supplied a <see langword="null" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-178">The collection is uninitialized or the binding on <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> supplied a <see langword="null" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ GroupDescriptions { System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupDescriptions : System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;" Usage="System.Windows.Controls.ItemCollection.GroupDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-179">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that defines how to group the items.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-179">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that defines how to group the items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-180">
            <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> de objetos <see cref="T:System.ComponentModel.GroupDescription" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-180">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> of <see cref="T:System.ComponentModel.GroupDescription" /> objects.</span>
          </span>
          <span data-ttu-id="e6f16-181">La colección está indizada por los niveles de grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-181">The collection is indexed by the group levels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-182">Use la <xref:System.Windows.Controls.ItemCollection.CanGroup%2A> propiedad para comprobar si la implementación actual admite la agrupación antes de agregar <xref:System.ComponentModel.GroupDescription> objetos.</span><span class="sxs-lookup"><span data-stu-id="e6f16-182">Use the <xref:System.Windows.Controls.ItemCollection.CanGroup%2A> property to test whether the current implementation supports grouping before adding <xref:System.ComponentModel.GroupDescription> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6f16-183">Esta propiedad puede establecerse solo obteniendo acceso el objeto de colección y utilizando sus diversos métodos, como `Add`.</span><span class="sxs-lookup"><span data-stu-id="e6f16-183">This property can be set only by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="e6f16-184">La propiedad que se va a obtener acceso al objeto de colección es de solo lectura, mientras que la propia colección es de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="e6f16-184">The property to access the collection object is read-only, while the collection itself is read-write.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6f16-185">Para obtener un ejemplo relacionado, vea <xref:System.Windows.Data.PropertyGroupDescription>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-185">For a related example, see <xref:System.Windows.Data.PropertyGroupDescription>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.GroupStyle" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;object&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;object&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ Groups { System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;obj&gt;" Usage="System.Windows.Controls.ItemCollection.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-186">Gets the top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-186">Gets the top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-187">Los grupos de nivel superior que se construyen según el <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-187">The top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />.</span>
          </span>
          <span data-ttu-id="e6f16-188">El valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-188">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Data.PropertyGroupDescription" />
        <altmember cref="T:System.Windows.Controls.GroupStyle" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public override int IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : obj -&gt; int" Usage="itemCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e6f16-189">The object to look for in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-189">The object to look for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-190">Returns the index in this collection where the specified item is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-190">Returns the index in this collection where the specified item is located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-191">The index of the item in the collection, or -1 if the item does not exist in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-191">The index of the item in the collection, or -1 if the item does not exist in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int insertIndex, object insertItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 insertIndex, object insertItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (insertIndex As Integer, insertItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int insertIndex, System::Object ^ insertItem);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="itemCollection.Insert (insertIndex, insertItem)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertIndex" Type="System.Int32" />
        <Parameter Name="insertItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="insertIndex">
          <span data-ttu-id="e6f16-192">The zero-based index at which to insert the item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-192">The zero-based index at which to insert the item.</span>
          </span>
        </param>
        <param name="insertItem">
          <span data-ttu-id="e6f16-193">The item to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-193">The item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-194">Inserts an element into the collection at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-194">Inserts an element into the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-195">Todos los elementos después de la posición especificada se desplazarán hacia abajo en uno.</span><span class="sxs-lookup"><span data-stu-id="e6f16-195">All items after the specified position are moved down by one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-196">The collection is in ItemsSource mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-196">The collection is in ItemsSource mode.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e6f16-197">The index is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-197">The index is out of range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentAfterLast">
      <MemberSignature Language="C#" Value="public override bool IsCurrentAfterLast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentAfterLast" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.IsCurrentAfterLast" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsCurrentAfterLast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCurrentAfterLast { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentAfterLast : bool" Usage="System.Windows.Controls.ItemCollection.IsCurrentAfterLast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-198">Gets a value that indicates whether the current item of the view is beyond the end of the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-198">Gets a value that indicates whether the current item of the view is beyond the end of the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-199">
            <see langword="true" /> Si el elemento actual de la vista está más allá del final de la colección; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-199">
              <see langword="true" /> if the current item of the view is beyond the end of the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrentBeforeFirst">
      <MemberSignature Language="C#" Value="public override bool IsCurrentBeforeFirst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentBeforeFirst" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsCurrentBeforeFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCurrentBeforeFirst { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentBeforeFirst : bool" Usage="System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-200">Gets a value that indicates whether the current item of the view is beyond the beginning of the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-200">Gets a value that indicates whether the current item of the view is beyond the beginning of the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-201">
            <see langword="true" /> Si el elemento actual de la vista está más allá del comienzo de la colección; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-201">
              <see langword="true" /> if the current item of the view is beyond the beginning of the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public override bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Controls.ItemCollection.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-202">Gets a value that indicates whether the resulting (filtered) view is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-202">Gets a value that indicates whether the resulting (filtered) view is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-203">
            <see langword="true" /> Si la vista resultante está vacía; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-203">
              <see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFiltering">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveFiltering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.IsLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveFiltering As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveFiltering { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveFiltering : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Controls.ItemCollection.IsLiveFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-204">Gets or sets a value that indicates whether filtering data in real time is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-204">Gets or sets a value that indicates whether filtering data in real time is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-205">
            <see langword="true" /> Si está habilitado el filtrado de datos en tiempo real; <see langword="false" /> si no está habilitado el filtrado en vivo; <see langword="null" /> si no se puede determinar si la vista de colección implementa el filtrado en vivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-205">
              <see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGrouping">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.IsLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveGrouping As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveGrouping { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveGrouping : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Controls.ItemCollection.IsLiveGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-206">Gets or sets a value that indicates whether grouping data in real time is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-206">Gets or sets a value that indicates whether grouping data in real time is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-207">
            <see langword="true" /> Si agrupa los datos en tiempo real está habilitado; <see langword="false" /> si no está habilitada la agrupación en vivo; <see langword="null" /> si no se puede determinar si la vista de colección implementa la agrupación en vivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-207">
              <see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSorting">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.IsLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveSorting As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveSorting { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveSorting : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Controls.ItemCollection.IsLiveSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-208">Gets or sets a value that indicates whether sorting in real time is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-208">Gets or sets a value that indicates whether sorting in real time is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-209">
            <see langword="true" /> Si se habilita la ordenación de datos en tiempo real; <see langword="false" /> si no está habilitada la ordenación en vivo; <see langword="null" /> si no se puede determinar si la vista de colección implementa la ordenación en vivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-209">
              <see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Controls.ItemCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e6f16-210">The zero-based index of the item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-210">The zero-based index of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-211">Gets or sets the item at the given zero-based index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-211">Gets or sets the item at the given zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-212">El objeto recuperado o el objeto que se establece en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-212">The object retrieved or the object that is being set to the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-213">The collection is uninitialized, or the item to set already has a different logical parent, or the collection is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-213">The collection is uninitialized, or the item to set already has a different logical parent, or the collection is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e6f16-214">The index is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-214">The index is out of range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LiveFilteringProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveFilteringProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveFilteringProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.LiveFilteringProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveFilteringProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveFilteringProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveFilteringProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Controls.ItemCollection.LiveFilteringProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-215">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-215">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-216">Una colección de cadenas que especifican las propiedades que participan en el filtrado de datos en tiempo real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-216">A collection of strings that specify the properties that participate in filtering data in real time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveGroupingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveGroupingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveGroupingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.LiveGroupingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveGroupingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveGroupingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveGroupingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Controls.ItemCollection.LiveGroupingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-217">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-217">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-218">Una colección de cadenas que especifican las propiedades que participan en la agrupación de datos en tiempo real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-218">A collection of strings that specify the properties that participate in grouping data in real time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveSortingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveSortingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveSortingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.LiveSortingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveSortingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveSortingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveSortingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Controls.ItemCollection.LiveSortingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-219">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-219">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-220">Una colección de cadenas que especifican las propiedades que participan en la ordenación de datos en tiempo real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-220">A collection of strings that specify the properties that participate in sorting data in real time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentTo">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentTo (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentTo(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.MoveCurrentTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentTo (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentTo(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentTo : obj -&gt; bool" Usage="itemCollection.MoveCurrentTo item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e6f16-221">The item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-221">The item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-222">Sets the specified item in the collection as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-222">Sets the specified item in the collection as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-223">
            <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-223">
              <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToFirst">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.MoveCurrentToFirst" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToFirst () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToFirst();" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToFirst : unit -&gt; bool" Usage="itemCollection.MoveCurrentToFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-224">Sets the first item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-224">Sets the first item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-225">
            <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-225">
              <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToLast">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.MoveCurrentToLast" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToLast () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToLast();" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToLast : unit -&gt; bool" Usage="itemCollection.MoveCurrentToLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-226">Sets the last item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-226">Sets the last item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-227">
            <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-227">
              <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToNext">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.MoveCurrentToNext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToNext();" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToNext : unit -&gt; bool" Usage="itemCollection.MoveCurrentToNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-228">Sets the item after the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-228">Sets the item after the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-229">
            <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-229">
              <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPosition">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.MoveCurrentToPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToPosition(int position);" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToPosition : int -&gt; bool" Usage="itemCollection.MoveCurrentToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="e6f16-230">The zero-based index of the item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-230">The zero-based index of the item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-231">Sets the item at the specified index to be the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-231">Sets the item at the specified index to be the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-232">
            <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-232">
              <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPrevious">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToPrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.MoveCurrentToPrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToPrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToPrevious();" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToPrevious : unit -&gt; bool" Usage="itemCollection.MoveCurrentToPrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-233">Sets the item before the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-233">Sets the item before the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-234">
            <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-234">
              <see langword="true" /> to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
      </Docs>
    </Member>
    <Member MemberName="NeedsRefresh">
      <MemberSignature Language="C#" Value="public override bool NeedsRefresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedsRefresh" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.NeedsRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NeedsRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool NeedsRefresh { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NeedsRefresh : bool" Usage="System.Windows.Controls.ItemCollection.NeedsRefresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-235">Gets a value that indicates whether the collection needs to be refreshed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-235">Gets a value that indicates whether the collection needs to be refreshed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-236">
            <see langword="true" /> Si la colección debe actualizarse; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-236">
              <see langword="true" /> if the collection needs to be refreshed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Refresh" />
        <altmember cref="M:System.Windows.Controls.ItemCollection.DeferRefresh" />
      </Docs>
    </Member>
    <Member MemberName="PassesFilter">
      <MemberSignature Language="C#" Value="public override bool PassesFilter (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PassesFilter(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.PassesFilter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PassesFilter (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PassesFilter(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PassesFilter : obj -&gt; bool" Usage="itemCollection.PassesFilter item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e6f16-237">The object to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-237">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-238">Returns a value that indicates whether the specified item belongs to this view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-238">Returns a value that indicates whether the specified item belongs to this view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-239">
            <see langword="true" /> to indicate that the specified item belongs to this view or there is no filter set on this collection view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-239">
              <see langword="true" /> to indicate that the specified item belongs to this view or there is no filter set on this collection view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-240">Este método se utiliza normalmente durante las notificaciones de cambio de la colección para determinar si el elemento especificado pertenece a esta vista.</span><span class="sxs-lookup"><span data-stu-id="e6f16-240">This method is typically used during collection-changed notifications to determine if the specified item belongs to this view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshOverride">
      <MemberSignature Language="C#" Value="protected override void RefreshOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.RefreshOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshOverride ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshOverride();" />
      <MemberSignature Language="F#" Value="override this.RefreshOverride : unit -&gt; unit" Usage="itemCollection.RefreshOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object removeItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object removeItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (removeItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ removeItem);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="itemCollection.Remove removeItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="removeItem">
          <span data-ttu-id="e6f16-241">The object to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-241">The object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-242">Removes the specified item reference from the collection or view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-242">Removes the specified item reference from the collection or view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-243">Cuando se quita un elemento de la colección, los elementos restantes con valores de índice más altos disminuyen su índice en uno, tal y como se contrae el tamaño de la colección.</span><span class="sxs-lookup"><span data-stu-id="e6f16-243">When an item is removed from the collection, any remaining items with higher index values decrement their index by one as the size of the collection collapses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-244">The <see cref="T:System.Windows.Controls.ItemCollection" /> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode or if DeferRefresh is in effect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-244">The <see cref="T:System.Windows.Controls.ItemCollection" /> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode or if DeferRefresh is in effect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int removeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 removeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (removeIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int removeIndex);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="itemCollection.RemoveAt removeIndex" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="removeIndex">
          <span data-ttu-id="e6f16-245">The zero-based index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-245">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-246">Removes the item at the specified index of the collection or view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-246">Removes the item at the specified index of the collection or view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-247">Cuando se quita un elemento de la colección, los elementos restantes con valores de índice más altos disminuyen su índice en uno, tal y como se contrae el tamaño de la colección.</span><span class="sxs-lookup"><span data-stu-id="e6f16-247">When an item is removed from the collection, any remaining items with higher index values decrement their index by one as the size of the collection collapses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e6f16-248">The <see cref="T:System.Windows.Controls.ItemCollection" /> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode or if DeferRefresh is in effect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-248">The <see cref="T:System.Windows.Controls.ItemCollection" /> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> mode or if DeferRefresh is in effect.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e6f16-249">The index is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-249">The index is out of range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SortDescriptions As SortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::SortDescriptionCollection ^ SortDescriptions { System::ComponentModel::SortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.SortDescriptionCollection" Usage="System.Windows.Controls.ItemCollection.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-250">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-250">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-251">Una colección de <see cref="T:System.ComponentModel.SortDescription" /> objetos que describen cómo se ordenan los elementos de la colección en la vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-251">A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-252">Use la <xref:System.Windows.Controls.ItemCollection.CanSort%2A> propiedad para comprobar si la implementación actual admite la ordenación antes de agregar <xref:System.ComponentModel.SortDescription> objetos a la <xref:System.ComponentModel.SortDescriptionCollection>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-252">Use the <xref:System.Windows.Controls.ItemCollection.CanSort%2A> property to test whether the current implementation supports sorting before adding <xref:System.ComponentModel.SortDescription> objects to the <xref:System.ComponentModel.SortDescriptionCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6f16-253">Esta propiedad puede establecerse solo obteniendo acceso el objeto de colección y utilizando sus diversos métodos, como `Add`.</span><span class="sxs-lookup"><span data-stu-id="e6f16-253">This property can be set only by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="e6f16-254">La propiedad que se va a obtener acceso al objeto de colección es de solo lectura, mientras que la propia colección es de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="e6f16-254">The property to access the collection object is read-only, while the collection itself is read-write.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceCollection">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerable SourceCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable SourceCollection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.SourceCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SourceCollection As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IEnumerable ^ SourceCollection { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceCollection : System.Collections.IEnumerable" Usage="System.Windows.Controls.ItemCollection.SourceCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-255">Gets the unsorted and unfiltered collection that underlies this collection view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-255">Gets the unsorted and unfiltered collection that underlies this collection view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-256">Un <see cref="T:System.Collections.IEnumerable" /> objeto que es la colección subyacente o proporcionada por el usuario <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-256">An <see cref="T:System.Collections.IEnumerable" /> object that is the underlying collection or the user-provided <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-257">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-257">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-258">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-258">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-259">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-259">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-260">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-260">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-261">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-261">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-262">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-262">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-263">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-263">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-264">Es <see langword="true" /> si <see cref="T:System.Collections.IList" /> es de solo lectura; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-264">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.AddNew">
      <MemberSignature Language="C#" Value="object IEditableCollectionView.AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.IEditableCollectionView.AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#AddNew" />
      <MemberSignature Language="VB.NET" Value="Function AddNew () As Object Implements IEditableCollectionView.AddNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.IEditableCollectionView.AddNew() = System::ComponentModel::IEditableCollectionView::AddNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-265">Adds a new item to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-265">Adds a new item to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-266">The new item that is added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-266">The new item that is added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-267">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-268">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-268">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CanAddNew">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IEditableCollectionView.CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanAddNew" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanAddNew As Boolean Implements IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IEditableCollectionView.CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-269">Gets a value that indicates whether a new item can be added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-269">Gets a value that indicates whether a new item can be added to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-270">
            <see langword="true" /> si puede agregarse un nuevo elemento a la colección; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-270">
              <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-271">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-271">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-272">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-272">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IEditableCollectionView.CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanCancelEdit As Boolean Implements IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IEditableCollectionView.CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-273">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-273">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-274">
            <see langword="true" /> si la vista de colección puede descartar los cambios pendientes y restaurar los valores originales de un objeto editado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-274">
              <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-275">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-275">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-276">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-276">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CancelEdit">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Sub CancelEdit () Implements IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.CancelEdit() = System::ComponentModel::IEditableCollectionView::CancelEdit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-277">Ends the edit transaction and, if possible, restores the original value to the item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-277">Ends the edit transaction and, if possible, restores the original value to the item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-278">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-278">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-279">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-279">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CancelNew">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelNew" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew () Implements IEditableCollectionView.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.CancelNew() = System::ComponentModel::IEditableCollectionView::CancelNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-280">Ends the add transaction and discards the pending new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-280">Ends the add transaction and discards the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-281">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-282">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-282">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CanRemove">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IEditableCollectionView.CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanRemove" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanRemove As Boolean Implements IEditableCollectionView.CanRemove" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IEditableCollectionView.CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-283">Gets a value that indicates whether an item can be removed from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-283">Gets a value that indicates whether an item can be removed from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-284">
            <see langword="true" /> si un elemento puede quitarse de la colección; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-284">
              <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-285">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-285">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-286">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-286">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CommitEdit">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Sub CommitEdit () Implements IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.CommitEdit() = System::ComponentModel::IEditableCollectionView::CommitEdit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-287">Ends the edit transaction and saves the pending changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-287">Ends the edit transaction and saves the pending changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-288">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-289">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-289">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CommitNew">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitNew" />
      <MemberSignature Language="VB.NET" Value="Sub CommitNew () Implements IEditableCollectionView.CommitNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.CommitNew() = System::ComponentModel::IEditableCollectionView::CommitNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-290">Ends the add transaction and saves the pending new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-290">Ends the add transaction and saves the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-291">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-291">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-292">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-292">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <MemberSignature Language="C#" Value="object System.ComponentModel.IEditableCollectionView.CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CurrentAddItem As Object Implements IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.ComponentModel.IEditableCollectionView.CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-293">Gets the item that is being added during the current add transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-293">Gets the item that is being added during the current add transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-294">Elemento que se está agregando si <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> es <see langword="true" />; en caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-294">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-295">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-295">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-296">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-296">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <MemberSignature Language="C#" Value="object System.ComponentModel.IEditableCollectionView.CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CurrentEditItem As Object Implements IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.ComponentModel.IEditableCollectionView.CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-297">Gets the item in the collection that is being edited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-297">Gets the item in the collection that is being edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-298">Elemento de la colección que se está editando si <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> es <see langword="true" />; de lo contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-298">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-299">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-299">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-300">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-300">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.EditItem">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub EditItem (item As Object) Implements IEditableCollectionView.EditItem" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.EditItem(System::Object ^ item) = System::ComponentModel::IEditableCollectionView::EditItem;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e6f16-301">The item to edit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-301">The item to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-302">Begins an edit transaction of the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-302">Begins an edit transaction of the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-303">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-303">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-304">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-304">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IEditableCollectionView.IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsAddingNew" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsAddingNew As Boolean Implements IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IEditableCollectionView.IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-305">Gets a value that indicates whether an add transaction is in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-305">Gets a value that indicates whether an add transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-306">
            <see langword="true" /> Si una transacción de adición en curso; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-306">
              <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-307">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-307">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-308">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-308">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IEditableCollectionView.IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsEditingItem" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsEditingItem As Boolean Implements IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IEditableCollectionView.IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-309">Gets a value that indicates whether an edit transaction is in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-309">Gets a value that indicates whether an edit transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-310">
            <see langword="true" /> Si una transacción de edición en curso; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-310">
              <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-311">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-312">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-312">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="System.ComponentModel.NewItemPlaceholderPosition System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value=" Property NewItemPlaceholderPosition As NewItemPlaceholderPosition Implements IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::NewItemPlaceholderPosition System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-313">Gets or sets the position of the new item placeholder in the collection view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-313">Gets or sets the position of the new item placeholder in the collection view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-314">Uno de los valores de enumeración que especifica la posición del nuevo marcador de posición de elemento en la vista de colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-314">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-315">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-315">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-316">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-316">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.Remove">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IEditableCollectionView.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.Remove(System::Object ^ item) = System::ComponentModel::IEditableCollectionView::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e6f16-317">The item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-317">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-318">Removes the specified item from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-318">Removes the specified item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-319">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-319">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-320">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-320">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionView.RemoveAt">
      <MemberSignature Language="C#" Value="void IEditableCollectionView.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IEditableCollectionView.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IEditableCollectionView.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IEditableCollectionView.RemoveAt(int index) = System::ComponentModel::IEditableCollectionView::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e6f16-321">The position of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-321">The position of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-322">Removes the item at the specified position from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-322">Removes the item at the specified position from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-323">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-324">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-324">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionView> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem">
      <MemberSignature Language="C#" Value="object IEditableCollectionViewAddNewItem.AddNewItem (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#AddNewItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function AddNewItem (newItem As Object) As Object Implements IEditableCollectionViewAddNewItem.AddNewItem" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System::Object ^ newItem) = System::ComponentModel::IEditableCollectionViewAddNewItem::AddNewItem;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">
          <span data-ttu-id="e6f16-325">The object to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-325">The object to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-326">Adds the specified object to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-326">Adds the specified object to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-327">The object that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-327">The object that was added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-328">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-329">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionViewAddNewItem>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-329">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionViewAddNewItem> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#CanAddNewItem" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanAddNewItem As Boolean Implements IEditableCollectionViewAddNewItem.CanAddNewItem" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-330">Gets a value that indicates whether a specified object can be added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-330">Gets a value that indicates whether a specified object can be added to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-331">
            <see langword="true" /> Si un objeto especificado se puede agregar a la colección; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-331">
              <see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-332">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-332">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-333">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IEditableCollectionViewAddNewItem>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-333">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IEditableCollectionViewAddNewItem> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IItemProperties.ItemProperties">
      <MemberSignature Language="C#" Value="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt; System.ComponentModel.IItemProperties.ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.ItemPropertyInfo&gt; System.ComponentModel.IItemProperties.ItemProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IItemProperties#ItemProperties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ItemProperties As ReadOnlyCollection(Of ItemPropertyInfo) Implements IItemProperties.ItemProperties" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ System.ComponentModel.IItemProperties.ItemProperties { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Controls.ItemCollection.System.ComponentModel.IItemProperties.ItemProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e6f16-334">Gets a collection that contains information about the properties that are available on the items in a collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-334">Gets a collection that contains information about the properties that are available on the items in a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e6f16-335">Una colección que contiene información acerca de las propiedades que están disponibles en los elementos de una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-335">A collection that contains information about the properties that are available on the items in a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-336">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-336">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-337">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.ComponentModel.IItemProperties>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-337">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.ComponentModel.IItemProperties> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">
          <span data-ttu-id="e6f16-338">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-338">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span>
          </span>
        </param>
        <param name="sender">
          <span data-ttu-id="e6f16-339">Object that originated the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-339">Object that originated the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e6f16-340">Event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-340">Event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6f16-341">Receives events from the centralized event manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-341">Receives events from the centralized event manager.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6f16-342">
            <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6f16-342">
              <see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6f16-343">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e6f16-343">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6f16-344">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Controls.ItemCollection> se convierte en una interfaz <xref:System.Windows.IWeakEventListener>.</span><span class="sxs-lookup"><span data-stu-id="e6f16-344">It can be used only when the <xref:System.Windows.Controls.ItemCollection> instance is cast to an <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>