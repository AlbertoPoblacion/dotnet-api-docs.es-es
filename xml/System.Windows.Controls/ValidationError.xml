<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10190f52dac807890af4f359bfa4b90943f21e77" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30627239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un error de validación creado por el motor de enlaces cuando <see cref="T:System.Windows.Controls.ValidationRule" /> notifica un error de validación, o bien, creado explícitamente a través del método <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelo de enlace de datos permite asociar reglas de validación con su <xref:System.Windows.Data.Binding> objeto. Validación se produce durante la transferencia del valor de origen de destino antes de que se llame al convertidor. A continuación describe el proceso de validación.  
  
1.  Cuando se transfiere un valor de la propiedad de destino a la propiedad de origen, el motor de enlace de datos quita primero cualquier <xref:System.Windows.Controls.ValidationError> que pueden haber agregado a la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> adjunta la propiedad del elemento enlazado. A continuación, comprueba si se definen las reglas de validación personalizadas para que <xref:System.Windows.Data.Binding>, en cuyo caso llama a la <xref:System.Windows.Controls.ValidationRule.Validate%2A> método en cada uno <xref:System.Windows.Controls.ValidationRule> hasta que una de ellos se produce un error o hasta que todos ellos pasa.  
  
2.  Una vez que hay una regla personalizada que no superen, el motor de enlace crea un <xref:System.Windows.Controls.ValidationError> objeto y lo agrega a la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> colección del elemento enlazado. Cuando <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> no está vacío, el <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> propiedad adjunta del elemento se establece en `true`. Además, si el <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> propiedad de la <xref:System.Windows.Data.Binding> se establece en `true`, a continuación, el motor de enlace provoca el <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento en el elemento adjunto.  
  
3.  Si se superan todas las reglas, el motor de enlace, a continuación, llama al convertidor, si existe alguno.  
  
4.  Si el convertidor pasa la validación, el motor de enlace llama el establecedor de la propiedad de origen.  
  
5.  Si el enlace tiene una <xref:System.Windows.Controls.ExceptionValidationRule> asociados a él y se produce una excepción durante el paso 3 o 4, el motor de enlace que se comprueba para ver si hay un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Puede usar el <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> devolución de llamada para proporcionar un controlador personalizado para controlar las excepciones. Si un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> no se especifica en el <xref:System.Windows.Data.Binding>, el motor de enlace crea un <xref:System.Windows.Controls.ValidationError> con la excepción y lo agrega a la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> colección del elemento enlazado.  
  
 Una transferencia de valor válida en cualquier dirección (del destino al origen o de origen y destino), se borrará la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> propiedad adjunta.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un desencadenador de estilo que se crea un <xref:System.Windows.Controls.ToolTip> que envía un mensaje de error de validación. El <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> propiedad adjunta devuelve una colección de <xref:System.Windows.Controls.ValidationError> objetos en el elemento enlazado.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ValidationError" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Regla que detectó el error de validación.</param>
        <param name="bindingInError">Objeto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> con el valor de validación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ValidationError" /> con los parámetros especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Regla que detectó el error de validación.</param>
        <param name="bindingInError">Objeto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> con el valor de validación.</param>
        <param name="errorContent">Información acerca del error.</param>
        <param name="exception">Excepción que produjo el error de validación. Este parámetro es opcional y puede establecerse en <see langword="null" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ValidationError" /> con los parámetros especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> de este objeto <see cref="T:System.Windows.Controls.ValidationError" />. El objeto se marca explícitamente como no válido o tiene una regla de validación que ha generado un error.</summary>
        <value>Objeto <see cref="T:System.Windows.Data.BindingExpression" /> o <see cref="T:System.Windows.Data.MultiBindingExpression" /> de este objeto <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto que proporciona contexto adicional para esta clase <see cref="T:System.Windows.Controls.ValidationError" />, como una cadena que describe el error.</summary>
        <value>Objeto que proporciona contexto adicional para este <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Vea la sección ejemplo para obtener un ejemplo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un desencadenador de estilo que se crea un <xref:System.Windows.Controls.ToolTip> que envía un mensaje de error de validación. El <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> propiedad adjunta devuelve una colección de <xref:System.Windows.Controls.ValidationError> objetos en el elemento enlazado.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Exception" /> que fue la causa de este objeto <see cref="T:System.Windows.Controls.ValidationError" /> si el error es el resultado de una excepción.</summary>
        <value>Objeto <see cref="T:System.Exception" /> si el error es el resultado de una excepción.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Controls.ValidationRule" /> que fue la causa de este objeto <see cref="T:System.Windows.Controls.ValidationError" /> si el error es el resultado de una regla de validación.</summary>
        <value>Objeto <see cref="T:System.Windows.Controls.ValidationRule" /> si el error es el resultado de una regla de validación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>