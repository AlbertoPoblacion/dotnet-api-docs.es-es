<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Viewbox.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59b03295bf0131419dbf69e7c684010ad18192021.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b03295bf0131419dbf69e7c684010ad18192021</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Viewbox">
          <source>Defines a content decorator that can stretch and scale a single child to fill the available space.</source>
          <target state="translated">Define un elemento Decorator de contenido que puede expandir y escalar un solo elemento secundario para rellenar el espacio disponible.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Viewbox">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> can only have one <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> sólo puede tener una <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Viewbox">
          <source>If you add an additional <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph>, you cause an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> at run time.</source>
          <target state="translated">Si agrega más <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph>, haces que un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Viewbox">
          <source>The following example shows how to create an instance of a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> and set common properties in code.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de un <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> y establecer las propiedades comunes en el código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> this element uses to arrange its child elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> que este elemento utiliza para organizar sus elementos secundarios.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
          <source>Arranges the content of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> element.</source>
          <target state="translated">Organiza el contenido de un elemento <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that represents the arranged size of this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> element and its child elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> que representa el tamaño organizado de este elemento <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> y sus elementos secundarios.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> always sets its <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> siempre se establece su <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph> a la <ph id="ph3">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
          <source>It then computes and applies a transformation from that <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> to the available space.</source>
          <target state="translated">A continuación, se calcula y se aplica una transformación de la <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> al espacio disponible.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> determines available space by subtracting the margin of its <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph> from the input <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> of its elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> Determina el espacio disponible restando el margen de su <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph> de la entrada <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> de sus elementos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Viewbox.Child">
          <source>Gets or sets the single child of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> element.</source>
          <target state="translated">Obtiene o establece el elemento secundario único de un elemento <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Child">
          <source>The single child of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> element.</source>
          <target state="translated">El elemento secundario único de un elemento <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Child">
          <source>This property has no default value.</source>
          <target state="translated">Esta propiedad no tiene ningún valor predeterminado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Child">
          <source>If you add an additional child element to a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> it causes an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> at run time.</source>
          <target state="translated">Si agrega un elemento secundario adicional a un <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> hace que un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Child">
          <source>The following example shows how to create an instance of a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> and then set its child property by using code.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de un <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> y, a continuación, establezca su propiedad secundaria mediante código.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
          <source>The index position of the wanted <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> child.</source>
          <target state="translated">La posición de índice del elemento secundario <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> deseado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> child at the specified <ph id="ph2">&lt;paramref name="index" /&gt;</ph> position.</source>
          <target state="translated">Obtiene un elemento secundario <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> en la posición de <ph id="ph2">&lt;paramref name="index" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> child of the parent <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> element.</source>
          <target state="translated">Un elemento secundario <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> del elemento <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> primario.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Viewbox.LogicalChildren">
          <source>Gets an enumerator that can iterate the logical children of this <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> element.</source>
          <target state="translated">Obtiene un enumerador que puede recorrer en iteración los elementos secundarios lógicos de este elemento <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.LogicalChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>.</source>
          <target state="translated">Una clase <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.LogicalChildren">
          <source>This property has no default value.</source>
          <target state="translated">Esta propiedad no tiene ningún valor predeterminado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> limit that <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> cannot exceed.</source>
          <target state="translated">Un límite <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> que <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> no puede superar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
          <source>Measures the child elements of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> prior to arranging them during the <ph id="ph2">&lt;see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /&gt;</ph> pass.</source>
          <target state="translated">Mide los elementos secundarios de un control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph> antes de organizarlos durante la ejecución del método <ph id="ph2">&lt;see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that represents the element size you want.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> que representa el tamaño del elemento deseado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
          <source>The parent <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> typically calls this method, which performs the first layout pass.</source>
          <target state="translated">El elemento primario <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> para <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> normalmente llama a este método, que realiza el primer paso de diseño.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> measures its child at an infinite <ph id="ph2">`constraint`</ph>, allowing the child to be as large as it requires.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> mide su elemento secundario en un infinite <ph id="ph2">`constraint`</ph>, lo que permite al elemento secundario ser tan grande como sea necesario.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Windows.Media.Stretch" /&gt;</ph> mode, which determines how content fits into the available space.</source>
          <target state="translated">Obtiene o establece el modo <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Windows.Media.Stretch" /&gt;</ph>, que determina cómo se ajusta el contenido en el espacio disponible.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Stretch" /&gt;</ph> that determines how content fits in the available space.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Stretch" /&gt;</ph> que determina cómo se ajusta el contenido al espacio disponible.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Stretch.Uniform" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Media.Stretch.Uniform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.Stretch">
          <source>The following example shows how to create an instance of <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> and then set the <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Stretch%2A&gt;</ph> property by using code.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> y, a continuación, establezca el <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Stretch%2A&gt;</ph> propiedad mediante código.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.StretchDirection" /&gt;</ph>, which determines how scaling is applied to the contents of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece <ph id="ph1">&lt;see cref="T:System.Windows.Controls.StretchDirection" /&gt;</ph>, que determina cómo se aplica la escala al contenido de <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.StretchDirection" /&gt;</ph> that determines how scaling is applied to the contents of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.StretchDirection" /&gt;</ph>, que determina cómo se aplica la escala al contenido de <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.StretchDirection.Both" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Controls.StretchDirection.Both" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>This property determines the scaling restrictions that apply to the contents of a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph>.</source>
          <target state="translated">Esta propiedad determina las restricciones de escala que se aplican al contenido de un <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>For example, use this property to prevent the contents of a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> from being smaller or larger than its original size.</source>
          <target state="translated">Por ejemplo, utilice esta propiedad para evitar que el contenido de un <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> sea menor o mayor que su tamaño original.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.StretchDirection">
          <source>The following example shows how to create an instance of <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> and then set the <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.StretchDirection%2A&gt;</ph> property by using code.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> y, a continuación, establezca el <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.StretchDirection%2A&gt;</ph> propiedad mediante código.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Viewbox.StretchProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Viewbox.Stretch" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Viewbox.Stretch" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
          <source>Gets the number of child <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects in this instance of <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</source>
          <target state="translated">Obtiene el número de objetos <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> secundarios en esta instancia de <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Viewbox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> children.</source>
          <target state="translated">El número de elementos secundarios <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
          <source>This property always returns 1.</source>
          <target state="translated">Esta propiedad siempre devuelve 1.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>