<Type Name="MediaElement" FullName="System.Windows.Controls.MediaElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1d64b0a35c8d68507faf66307ec8c0e89411e2d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51892236" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MediaElement : System.Windows.FrameworkElement, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MediaElement extends System.Windows.FrameworkElement implements class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MediaElement" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaElement&#xA;Inherits FrameworkElement&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaElement : System::Windows::FrameworkElement, System::Windows::Markup::IUriContext" />
  <TypeSignature Language="F#" Value="type MediaElement = class&#xA;    inherit FrameworkElement&#xA;    interface IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un control que contiene audio o vídeo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al distribuir elementos multimedia con la aplicación, no puede usar un archivo multimedia como recurso del proyecto. En el archivo de proyecto, debe establecer en su lugar el tipo de elemento multimedia en `Content` y establecer `CopyToOutputDirectory` en `PreserveNewest` o `Always`.  
  
 <xref:System.Windows.Controls.MediaElement> se puede usar en dos modos diferentes, dependiendo de lo que impulsa el control: modo independiente o modo de reloj. Cuando se usa en el modo independiente, el <xref:System.Windows.Controls.MediaElement> es análoga a una imagen, y <xref:System.Windows.Controls.MediaElement.Source%2A> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] se puede especificar directamente. En el modo de reloj, el <xref:System.Windows.Controls.MediaElement> puede considerarse como un destino de una animación y, por tanto, tendrá correspondiente <xref:System.Windows.Media.Animation.Timeline> y <xref:System.Windows.Media.Animation.Clock> entradas en el árbol de control de tiempo. Para obtener más información sobre los modos multimedia, consulte el [información general sobre Multimedia](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).  
  
 Para obtener un ejemplo de controlar un <xref:System.Windows.Controls.MediaElement> en modo independiente, consulte [Cómo: controlar un MediaElement (reproducir, pausar, detener, volumen y velocidad)](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-mediaelement-play-pause-stop-volume-and-speed.md).  
  
 Hasta que el <xref:System.Windows.Controls.MediaElement.MediaOpened> se ha generado el evento, el <xref:System.Windows.FrameworkElement.ActualWidth%2A> y <xref:System.Windows.FrameworkElement.ActualHeight%2A> del control se notificarán como cero como el contenido multimedia se usa para determinar el tamaño final y la ubicación del control. Para contenido de solo audio, estas propiedades siempre será cero.  
  
 Para un control de tamaño fijo, el <xref:System.Windows.FrameworkElement.Width%2A> o <xref:System.Windows.FrameworkElement.Height%2A> se pueden establecer propiedades. Sin embargo, para conservar la relación de aspecto del elemento multimedia, establezca el <xref:System.Windows.FrameworkElement.Width%2A> o <xref:System.Windows.FrameworkElement.Height%2A> propiedades, pero no ambos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (finalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size finalSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="mediaElement.ArrangeOverride finalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize">Tamaño utilizado para organizar el control.</param>
        <summary>Organiza y dimensiona un control <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
        <returns>Tamaño del control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Balance">
      <MemberSignature Language="C#" Value="public double Balance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Balance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.Balance" />
      <MemberSignature Language="VB.NET" Value="Public Property Balance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Balance { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Balance : double with get, set" Usage="System.Windows.Controls.MediaElement.Balance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una proporción de volumen en los altavoces.</summary>
        <value>Proporción de volumen en los altavoces en el intervalo entre -1 y 1. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de -1 representa el 100% de los altavoces izquierdo y 1 representa 100% de los altavoces del lado derecho.  
  
<a name="dependencyPropertyInfo_Balance"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.BalanceProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalanceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BalanceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BalanceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.BalanceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BalanceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BalanceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BalanceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.BalanceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.Balance" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.MediaElement.Balance" />
      </Docs>
    </Member>
    <Member MemberName="BufferingEnded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler BufferingEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler BufferingEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MediaElement.BufferingEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingEnded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ BufferingEnded;" />
      <MemberSignature Language="F#" Value="member this.BufferingEnded : System.Windows.RoutedEventHandler " Usage="member this.BufferingEnded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza el almacenamiento en búfer de elementos multimedia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_BufferingEnded"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.BufferingEndedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingEndedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent BufferingEndedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent BufferingEndedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.BufferingEndedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BufferingEndedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ BufferingEndedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable BufferingEndedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MediaElement.BufferingEndedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingProgress">
      <MemberSignature Language="C#" Value="public double BufferingProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BufferingProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.BufferingProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferingProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BufferingProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferingProgress : double" Usage="System.Windows.Controls.MediaElement.BufferingProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica el porcentaje del progreso del almacenamiento en búfer realizado.</summary>
        <value>El porcentaje del almacenamiento en búfer completado para transmitir el contenido por secuencias. El valor varía entre 0 y 1.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStarted">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler BufferingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler BufferingStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MediaElement.BufferingStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingStarted As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ BufferingStarted;" />
      <MemberSignature Language="F#" Value="member this.BufferingStarted : System.Windows.RoutedEventHandler " Usage="member this.BufferingStarted : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando comienza el almacenamiento en búfer de elementos multimedia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_BufferingStarted"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.BufferingStartedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent BufferingStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent BufferingStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.BufferingStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BufferingStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ BufferingStartedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable BufferingStartedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MediaElement.BufferingStartedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPause">
      <MemberSignature Language="C#" Value="public bool CanPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.CanPause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPause { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPause : bool" Usage="System.Windows.Controls.MediaElement.CanPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se puede hacer una pausa en los multimedia.</summary>
        <value>
          <see langword="true" /> si se puede hacer una pausa en los multimedia; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.MediaClock Clock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.MediaClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.Clock" />
      <MemberSignature Language="VB.NET" Value="Public Property Clock As MediaClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::MediaClock ^ Clock { System::Windows::Media::MediaClock ^ get(); void set(System::Windows::Media::MediaClock ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.MediaClock with get, set" Usage="System.Windows.Controls.MediaElement.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.MediaClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el reloj asociado al <see cref="T:System.Windows.Media.MediaTimeline" /> que controla la reproducción de los multimedia.</summary>
        <value>Un reloj asociado al <see cref="T:System.Windows.Media.MediaTimeline" /> que controla la reproducción de los multimedia. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer esta propiedad, el elemento multimedia coloca en un modo en que utiliza el motor de tiempo. Se detiene cualquier medio que desempeñaba anteriormente y la [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] asociada al nuevo reloj se abre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="mediaElement.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra los multimedia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgress">
      <MemberSignature Language="C#" Value="public double DownloadProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DownloadProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.DownloadProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DownloadProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DownloadProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DownloadProgress : double" Usage="System.Windows.Controls.MediaElement.DownloadProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor de porcentaje que indica la cantidad de descarga completada del contenido que se encuentra en un servidor remoto.</summary>
        <value>Obtiene un valor de porcentaje que indica la cantidad de descarga completada para el contenido que se encuentra en un servidor remoto. El valor varía entre 0 y 1. El valor predeterminado es 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAudio">
      <MemberSignature Language="C#" Value="public bool HasAudio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAudio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.HasAudio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAudio { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAudio : bool" Usage="System.Windows.Controls.MediaElement.HasAudio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si los multimedia tienen audio.</summary>
        <value>
          <see langword="true" /> si los multimedia tienen audio; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVideo">
      <MemberSignature Language="C#" Value="public bool HasVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVideo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.HasVideo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVideo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVideo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasVideo : bool" Usage="System.Windows.Controls.MediaElement.HasVideo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si los multimedia tienen vídeo.</summary>
        <value>
          <see langword="true" /> si los multimedia tienen vídeo; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBuffering : bool" Usage="System.Windows.Controls.MediaElement.IsBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si los multimedia están almacenando en el búfer.</summary>
        <value>
          <see langword="true" /> si los multimedia están almacenando en el búfer; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public bool IsMuted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.IsMuted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMuted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMuted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMuted : bool with get, set" Usage="System.Windows.Controls.MediaElement.IsMuted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el audio está desactivado.</summary>
        <value>
          <see langword="true" /> si el audio está desactivado; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMuted"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.IsMutedProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMutedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMutedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.IsMutedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMutedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMutedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMutedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.IsMutedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.IsMuted" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MediaState LoadedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MediaState LoadedBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.LoadedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadedBehavior As MediaState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MediaState LoadedBehavior { System::Windows::Controls::MediaState get(); void set(System::Windows::Controls::MediaState value); };" />
      <MemberSignature Language="F#" Value="member this.LoadedBehavior : System.Windows.Controls.MediaState with get, set" Usage="System.Windows.Controls.MediaElement.LoadedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MediaState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el comportamiento de carga <see cref="T:System.Windows.Controls.MediaState" /> para los multimedia.</summary>
        <value>El comportamiento de carga <see cref="T:System.Windows.Controls.MediaState" /> establecido para los multimedia. El valor predeterminado es <see cref="F:System.Windows.Controls.MediaState.Play" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> debe establecerse en <xref:System.Windows.Controls.MediaState.Manual> con el fin de controlar interactivamente el contenido multimedia con el <xref:System.Windows.Controls.MediaElement.Play%2A>, <xref:System.Windows.Controls.MediaElement.Pause%2A>, y <xref:System.Windows.Controls.MediaElement.Stop%2A> métodos.  
  
<a name="dependencyPropertyInfo_LoadedBehavior"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.LoadedBehaviorProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LoadedBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LoadedBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.LoadedBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoadedBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LoadedBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoadedBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.LoadedBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="mediaElement.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">El límite superior que el elemento no debe superar.</param>
        <summary>Actualiza <see cref="P:System.Windows.UIElement.DesiredSize" /> de <see cref="T:System.Windows.Controls.MediaElement" />. Un elemento secundario <see cref="T:System.Windows.UIElement" /> llama a este método. Ésta es la primera fase de diseño.</summary>
        <returns>El tamaño deseado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEnded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler MediaEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler MediaEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MediaElement.MediaEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaEnded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ MediaEnded;" />
      <MemberSignature Language="F#" Value="member this.MediaEnded : System.Windows.RoutedEventHandler " Usage="member this.MediaEnded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finalizan los elementos multimedia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_MediaEnded"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.MediaEndedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEndedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MediaEndedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MediaEndedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.MediaEndedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MediaEndedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MediaEndedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MediaEndedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MediaElement.MediaEndedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.ExceptionRoutedEventArgs&gt; MediaFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.ExceptionRoutedEventArgs&gt; MediaFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MediaElement.MediaFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaFailed As EventHandler(Of ExceptionRoutedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::ExceptionRoutedEventArgs ^&gt; ^ MediaFailed;" />
      <MemberSignature Language="F#" Value="member this.MediaFailed : EventHandler&lt;System.Windows.ExceptionRoutedEventArgs&gt; " Usage="member this.MediaFailed : System.EventHandler&lt;System.Windows.ExceptionRoutedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.ExceptionRoutedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se encuentra un error.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_MediaFailed"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.MediaFailedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.EventHandler%601>, con la restricción de <xref:System.Windows.ExceptionRoutedEventArgs>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MediaFailedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MediaFailedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.MediaFailedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MediaFailedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MediaFailedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MediaFailedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MediaElement.MediaFailedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler MediaOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler MediaOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MediaElement.MediaOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ MediaOpened;" />
      <MemberSignature Language="F#" Value="member this.MediaOpened : System.Windows.RoutedEventHandler " Usage="member this.MediaOpened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando finaliza la carga de elementos multimedia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_MediaOpened"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.MediaOpenedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MediaOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MediaOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.MediaOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MediaOpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MediaOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MediaOpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MediaElement.MediaOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalDuration : System.Windows.Duration" Usage="System.Windows.Controls.MediaElement.NaturalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la duración natural de los elementos multimedia.</summary>
        <value>Duración natural del archivo multimedia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto es independiente de <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>.  
  
 <xref:System.Windows.Controls.MediaElement.NaturalDuration%2A> no es preciso hasta los <xref:System.Windows.Controls.MediaElement.MediaOpened> ha generado el evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoHeight">
      <MemberSignature Language="C#" Value="public int NaturalVideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.NaturalVideoHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoHeight : int" Usage="System.Windows.Controls.MediaElement.NaturalVideoHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el alto del vídeo asociado a los multimedia.</summary>
        <value>El alto del vídeo asociado a los multimedia. Los archivos de audio devolverán cero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.MediaElement.NaturalVideoHeight%2A> no es preciso hasta los <xref:System.Windows.Controls.MediaElement.MediaOpened> ha generado el evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoWidth">
      <MemberSignature Language="C#" Value="public int NaturalVideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.NaturalVideoWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoWidth : int" Usage="System.Windows.Controls.MediaElement.NaturalVideoWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ancho del vídeo asociado a los multimedia.</summary>
        <value>El ancho del vídeo asociado a los multimedia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.MediaElement.NaturalVideoWidth%2A> no es preciso hasta los <xref:System.Windows.Controls.MediaElement.MediaOpened> ha generado el evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="mediaElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea y devuelve un objeto <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> para este control <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
        <returns>Interfaz <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> correspondiente a esta <see cref="T:System.Windows.Controls.MediaElement" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected override void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="mediaElement.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <see cref="T:System.Windows.Media.DrawingContext" /> que se va a dibujar.</param>
        <summary>Dibuja el contenido de un objeto <see cref="T:System.Windows.Media.DrawingContext" /> durante la fase de representación de un control <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="mediaElement.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pausa los medios en la posición actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pone en pausa los medios si los medios se está ejecutando actualmente. El <xref:System.Windows.Controls.MediaElement.Play%2A> método puede utilizarse para reanudar.  
  
 Este método puede usarse solo cuando la <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es `null`. Cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es que no sean de`null`, el motor de tiempo controla el comportamiento de reproducción multimedia.  
  
 Este método tiene un solo si efecto el <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> propiedad está establecida en <xref:System.Windows.Controls.MediaState.Manual>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Controls.MediaElement.Clock" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="mediaElement.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reproduce elementos multimedia desde la posición actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método va a comenzar el medio si no está actualmente activa o se reanudará si está en pausa. Este método no tiene ningún efecto si los medios se está ejecutando actualmente.  
  
 Este método puede usarse solo cuando la <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es `null`. Cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es que no sean de`null`, el motor de tiempo controla el comportamiento de reproducción multimedia.  
  
 Este método tiene un solo si efecto el <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> propiedad está establecida en <xref:System.Windows.Controls.MediaState.Manual>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Controls.MediaElement.Clock" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public TimeSpan Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Position { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Position : TimeSpan with get, set" Usage="System.Windows.Controls.MediaElement.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la posición actual del progreso durante el tiempo de reproducción del elemento multimedia.</summary>
        <value>Cantidad de tiempo transcurrido desde el principio del elemento multimedia. El valor predeterminado es 00:00:00.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer esta propiedad puede permitirle saltar a distintos puntos de reproducción (también conocido como búsquedas). No todos los tipos de multimedia permiten operaciones de búsqueda. El <xref:System.Windows.Controls.MediaElement.MediaFailed> evento se desencadenará si el origen de medios no permite la búsqueda.  
  
 Esta propiedad no tiene ningún efecto hasta después de la <xref:System.Windows.Controls.MediaElement.MediaOpened> se ha producido el evento.  
  
 Esta propiedad puede establecerse solo cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es `null`. Cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es que no sean de`null`, el motor de tiempo controla el comportamiento de reproducción multimedia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Controls.MediaElement.Clock" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.MediaScriptCommandRoutedEventArgs&gt; ScriptCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.MediaScriptCommandRoutedEventArgs&gt; ScriptCommand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MediaElement.ScriptCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScriptCommand As EventHandler(Of MediaScriptCommandRoutedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::MediaScriptCommandRoutedEventArgs ^&gt; ^ ScriptCommand;" />
      <MemberSignature Language="F#" Value="member this.ScriptCommand : EventHandler&lt;System.Windows.MediaScriptCommandRoutedEventArgs&gt; " Usage="member this.ScriptCommand : System.EventHandler&lt;System.Windows.MediaScriptCommandRoutedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.MediaScriptCommandRoutedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se encuentra un comando de script en los elementos multimedia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ScriptCommand"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.ScriptCommandEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.EventHandler>, con la restricción de <xref:System.Windows.MediaScriptCommandRoutedEventArgs>|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?linkid=57417">IWMPEventsScriptCommand</related>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommandEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ScriptCommandEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ScriptCommandEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.ScriptCommandEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScriptCommandEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ScriptCommandEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScriptCommandEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MediaElement.ScriptCommandEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabled">
      <MemberSignature Language="C#" Value="public bool ScrubbingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrubbingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrubbingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrubbingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrubbingEnabled : bool with get, set" Usage="System.Windows.Controls.MediaElement.ScrubbingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Windows.Controls.MediaElement" /> actualizará los fotogramas para las operaciones de búsqueda mientras está en pausa.</summary>
        <value>
          <see langword="true" /> si se actualizan los fotogramas mientras está en pausa; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se establece en `false`, la búsqueda a una ubicación específica será única actualización el fotograma mostrado si se trata de medios.  
  
 Establecer <xref:System.Windows.Controls.MediaElement.ScrubbingEnabled%2A> a `true` pueden implicar algunos costos de rendimiento, especialmente al controlar interactivamente la reproducción multimedia.  
  
<a name="dependencyPropertyInfo_ScrubbingEnabled"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ScrubbingEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ScrubbingEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScrubbingEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ScrubbingEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScrubbingEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.ScrubbingEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Controls.MediaElement.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un origen multimedia en <see cref="T:System.Windows.Controls.MediaElement" />.</summary>
        <value>El [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que especifica el origen del elemento. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el valor de esta propiedad hace que la media reproducir.  
  
 Esta propiedad puede establecerse solo cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es `null`. Cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es que no sean de`null`, el motor de tiempo controla el comportamiento de reproducción multimedia.  
  
<a name="dependencyPropertyInfo_Source"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.SourceProperty>|  
|Establecen las propiedades de metadatos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Controls.MediaElement.Clock" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.Source" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Controls.MediaElement.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la relación de velocidad de los elementos multimedia.</summary>
        <value>Relación de velocidad de los elementos multimedia. El rango válido es entre 0 (cero) e infinito. Los valores menores que 1 tienen como resultado una reproducción más lenta de lo normal y los valores mayores que 1 tienen como resultado una reproducción más rápida de lo normal. Los valores negativos se tratan como 0. El valor predeterminado es 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad puede establecerse solo cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es `null`. Cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es que no sean de`null`, el motor de tiempo controla el comportamiento de reproducción multimedia.  
  
 Reproducción de audio puede no producirse a menos que el valor de <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> es 1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Controls.MediaElement.Clock" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MediaElement.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaElement.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene y restablece el medio que se va a reproducir desde el principio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método puede usarse solo cuando la <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es `null`. Cuando el <xref:System.Windows.Controls.MediaElement.Clock%2A> propiedad es que no sean de`null`, el motor de tiempo controla el comportamiento de reproducción multimedia.  
  
 Este método tiene un solo si efecto el <xref:System.Windows.Controls.MediaElement.LoadedBehavior%2A> propiedad está establecida en <xref:System.Windows.Controls.MediaState.Manual>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Windows.Controls.MediaElement.Clock" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Stretch Stretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Stretch Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.Stretch" />
      <MemberSignature Language="VB.NET" Value="Public Property Stretch As Stretch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Stretch Stretch { System::Windows::Media::Stretch get(); void set(System::Windows::Media::Stretch value); };" />
      <MemberSignature Language="F#" Value="member this.Stretch : System.Windows.Media.Stretch with get, set" Usage="System.Windows.Controls.MediaElement.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Stretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor <see cref="T:System.Windows.Media.Stretch" /> que describe cómo <see cref="T:System.Windows.Controls.MediaElement" /> rellena el rectángulo de destino.</summary>
        <value>El valor de ajuste para los multimedia representados. El valor predeterminado es <see cref="F:System.Windows.Media.Stretch.Uniform" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La siguiente ilustración muestra la diferencia de <xref:System.Windows.Media.Stretch> valores.  
  
 ![Diferentes valores de Stretch para TileBrush](~/add/media/img-mmgraphics-stretchenum.jpg "configuración diferentes Stretch para TileBrush")  
Degradado diferentes métodos de extensión  
  
<a name="dependencyPropertyInfo_Stretch"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.StretchProperty>|  
|Establecen las propiedades de metadatos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo crear un <xref:System.Windows.Controls.Viewbox> y establezca el <xref:System.Windows.Media.Stretch> modo de contenido.  
  
 [!code-cpp[ViewBoxCode#2](~/samples/snippets/cpp/VS_Snippets_Wpf/ViewBoxCode/CPP/ViewboxCode.cpp#2)]
 [!code-csharp[ViewBoxCode#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ViewBoxCode/Csharp/ViewboxCode.cs#2)]
 [!code-vb[ViewBoxCode#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ViewBoxCode/VisualBasic/ViewBoxCodeVB.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StretchDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StretchDirection StretchDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.StretchDirection StretchDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.StretchDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property StretchDirection As StretchDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StretchDirection StretchDirection { System::Windows::Controls::StretchDirection get(); void set(System::Windows::Controls::StretchDirection value); };" />
      <MemberSignature Language="F#" Value="member this.StretchDirection : System.Windows.Controls.StretchDirection with get, set" Usage="System.Windows.Controls.MediaElement.StretchDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StretchDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que determina las restricciones en la escala que se aplican a la imagen.</summary>
        <value>El valor que especifica la dirección en la que se ajusta el elemento. El valor predeterminado es <see cref="F:System.Windows.Controls.StretchDirection.Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StretchDirection"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.StretchDirectionProperty>|  
|Establecen las propiedades de metadatos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 [!code-xaml[mediagallery_snip#StretchMediaElementExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaGallery_snip/VB/StretchMediaElementExample.xaml#stretchmediaelementexamplewholepage)]
 [!code-xaml[mediagallery_snip#StretchMediaElementExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaGallery_snip/CSharp/StretchMediaElementExample.xaml#stretchmediaelementexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.FlowDirection" />
      </Docs>
    </Member>
    <Member MemberName="StretchDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StretchDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StretchDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.StretchDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StretchDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StretchDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StretchDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.StretchDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.StretchProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StretchProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StretchProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StretchProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.StretchProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.Stretch" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System::Windows::Markup::IUriContext::BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este tipo o miembro es compatible con la infraestructura [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está pensado para ser usado directamente desde su código.</summary>
        <value>El URI base del contexto actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadedBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MediaState UnloadedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MediaState UnloadedBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.UnloadedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UnloadedBehavior As MediaState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MediaState UnloadedBehavior { System::Windows::Controls::MediaState get(); void set(System::Windows::Controls::MediaState value); };" />
      <MemberSignature Language="F#" Value="member this.UnloadedBehavior : System.Windows.Controls.MediaState with get, set" Usage="System.Windows.Controls.MediaElement.UnloadedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MediaState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el comportamiento de descarga <see cref="T:System.Windows.Controls.MediaState" /> para los multimedia.</summary>
        <value>El comportamiento de descarga <see cref="T:System.Windows.Controls.MediaState" /> para los multimedia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_UnloadedBehavior"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadedBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UnloadedBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UnloadedBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnloadedBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UnloadedBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnloadedBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.UnloadedBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public double Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MediaElement.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Volume { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : double with get, set" Usage="System.Windows.Controls.MediaElement.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el volumen del elemento multimedia.</summary>
        <value>Volumen del elemento multimedia representado en una escala lineal entre 0 y 1. De manera predeterminada es 0,5.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Volume"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Controls.MediaElement.VolumeProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VolumeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VolumeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MediaElement.VolumeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VolumeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VolumeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VolumeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MediaElement.VolumeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.MediaElement.Volume" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>