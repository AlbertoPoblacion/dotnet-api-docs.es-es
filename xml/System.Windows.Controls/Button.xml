<Type Name="Button" FullName="System.Windows.Controls.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e26ef8d736010eb85a2596b3b5d7c6aa7fddea97" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30621389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Button extends System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Controls::Primitives::ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="20ecb-101">Representa un control de botón de Windows, que reacciona al evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20ecb-101">Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-102">El <xref:System.Windows.Controls.Button> clase hereda directamente de la <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="20ecb-102">The <xref:System.Windows.Controls.Button> class inherits directly from the <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="20ecb-103">**Modelo de contenido:** <xref:System.Windows.Controls.Button> es una <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-103">**Content Model:** <xref:System.Windows.Controls.Button> is a <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="20ecb-104">La propiedad content es <xref:System.Windows.Controls.ContentControl.Content%2A>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-104">Its content property is <xref:System.Windows.Controls.ContentControl.Content%2A>.</span></span>  
  
 <span data-ttu-id="20ecb-105">Controlar la <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> evento para responder cuando el usuario hace clic en un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-105">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> event to respond when the user clicks a <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="20ecb-106">El <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> método marcas el <xref:System.Windows.UIElement.MouseLeftButtonDown> evento como controlado.</span><span class="sxs-lookup"><span data-stu-id="20ecb-106">The <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled.</span></span> <span data-ttu-id="20ecb-107">Para responder a la <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos, adjuntar un controlador de eventos para el <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> llamada o evento <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="20ecb-107">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-button-control"></a><span data-ttu-id="20ecb-108">Personalizar el Control de botón</span><span class="sxs-lookup"><span data-stu-id="20ecb-108">Customizing the Button Control</span></span>  
 <span data-ttu-id="20ecb-109">Para aplicar la misma configuración de propiedad a varios <xref:System.Windows.Controls.Button> controles, utilice la <xref:System.Windows.FrameworkElement.Style%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="20ecb-109">To apply the same property settings to multiple <xref:System.Windows.Controls.Button> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="20ecb-110">Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para dar al control una apariencia única.</span><span class="sxs-lookup"><span data-stu-id="20ecb-110">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="20ecb-111">Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="20ecb-111">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="20ecb-112">Para ver los elementos y los Estados que son específicos de la <xref:System.Windows.Controls.Button>, consulte [plantillas y estilos de botón](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="20ecb-112">To see the parts and states that are specific to the <xref:System.Windows.Controls.Button>, see [Button Styles and Templates](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="20ecb-113">Propiedades de dependencia para este control se pueden establecer el estilo predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="20ecb-113">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="20ecb-114">Si se establece una propiedad de un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="20ecb-114">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="20ecb-115">El estilo predeterminado se determina por el tema del escritorio que se utiliza cuando se ejecuta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="20ecb-115">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="20ecb-116">Para obtener más información, consulte [temas de WPF predeterminado](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="20ecb-116">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20ecb-117">Establecer una propiedad visual solo tendrá un efecto si esa propiedad está presente en ambos <xref:System.Windows.Controls.Button> control de la plantilla predeterminada y se establece mediante una.</span><span class="sxs-lookup"><span data-stu-id="20ecb-117">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Button> control's default template and is set by using a .</span></span> <span data-ttu-id="20ecb-118">Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="20ecb-118">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-119">En el ejemplo siguiente se muestra tres botones que responden a los clics de tres maneras diferentes.</span><span class="sxs-lookup"><span data-stu-id="20ecb-119">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="20ecb-120">Al mantener el mouse: el primer botón cambia de color cuando el usuario se desplaza con el mouse sobre el botón.</span><span class="sxs-lookup"><span data-stu-id="20ecb-120">Hover: the first button changes colors when the user hovers with the mouse over the button.</span></span>  
  
-   <span data-ttu-id="20ecb-121">Presionar: el segundo botón requiere que se presione el mouse mientras el puntero del mouse está sobre el botón.</span><span class="sxs-lookup"><span data-stu-id="20ecb-121">Press: the second button requires that the mouse be pressed while the mouse pointer is over the button.</span></span>  
  
-   <span data-ttu-id="20ecb-122">Versión: el tercero no restablece el color de fondo de los botones hasta que el mouse se presionó y se soltó en el botón.</span><span class="sxs-lookup"><span data-stu-id="20ecb-122">Release: the third does not reset the background color of the buttons until the mouse is pressed and released on the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-123">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancel">
      <MemberSignature Language="C#" Value="public bool IsCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsCancel" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-124">Obtiene o establece un valor que indica si un <see cref="T:System.Windows.Controls.Button" /> es un botón Cancelar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button.</span>
          </span>
          <span data-ttu-id="20ecb-125">Un usuario puede activar el botón Cancelar si presiona la tecla Esc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-125">A user can activate the Cancel button by pressing the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ecb-126">
            <see langword="true" /> si <see cref="T:System.Windows.Controls.Button" /> es un botón Cancelar; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-126">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is a Cancel button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20ecb-127">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-127">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-128">Al establecer el <xref:System.Windows.Controls.Button.IsCancel%2A> propiedad de un botón a `true`, se crea un <xref:System.Windows.Controls.Button> que está registrado con el <xref:System.Windows.Input.AccessKeyManager>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-128">When you set the <xref:System.Windows.Controls.Button.IsCancel%2A> property of a button to `true`, you create a <xref:System.Windows.Controls.Button> that is registered with the <xref:System.Windows.Input.AccessKeyManager>.</span></span> <span data-ttu-id="20ecb-129">A continuación, se activa el botón cuando el usuario presiona la tecla ESC.</span><span class="sxs-lookup"><span data-stu-id="20ecb-129">The button is then activated when a user presses the ESC key.</span></span>  
  
<a name="dependencyPropertyInfo_IsCancel"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="20ecb-130">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="20ecb-130">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="20ecb-131">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="20ecb-131">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsCancelProperty>|  
|<span data-ttu-id="20ecb-132">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="20ecb-132">Metadata properties set to `true`</span></span>|<span data-ttu-id="20ecb-133">None</span><span class="sxs-lookup"><span data-stu-id="20ecb-133">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-134">En el ejemplo siguiente se muestra cómo utilizar esta propiedad para crear un botón de cancelación.</span><span class="sxs-lookup"><span data-stu-id="20ecb-134">The following example shows how to use this property to create a Cancel button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCancelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCancelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsCancelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCancelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCancelProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-135">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Button.IsCancel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-135">Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-136">Obtiene o establece un valor que indica si un <see cref="T:System.Windows.Controls.Button" /> es el botón predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-136">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button.</span>
          </span>
          <span data-ttu-id="20ecb-137">Un usuario invoca el botón predeterminado presionando la tecla ENTRAR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-137">A user invokes the default button by pressing the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ecb-138">Es <see langword="true" /> si <see cref="T:System.Windows.Controls.Button" /> es el botón predeterminado; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-138">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is the default button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20ecb-139">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-139">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-140">Al establecer el <xref:System.Windows.Controls.Button.IsDefault%2A> propiedad de un botón a `true`, registra el botón con el <xref:System.Windows.Input.AccessKeyManager> para que un usuario pueda invocar el botón presionando la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="20ecb-140">When you set the <xref:System.Windows.Controls.Button.IsDefault%2A> property of a button to `true`, you register the button with the <xref:System.Windows.Input.AccessKeyManager> so that a user can invoke the button by pressing the ENTER key.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefault"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="20ecb-141">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="20ecb-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="20ecb-142">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="20ecb-142">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultProperty>|  
|<span data-ttu-id="20ecb-143">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="20ecb-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="20ecb-144">None</span><span class="sxs-lookup"><span data-stu-id="20ecb-144">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-145">En el ejemplo siguiente se muestra cómo especificar un botón como el botón predeterminado.</span><span class="sxs-lookup"><span data-stu-id="20ecb-145">The following example shows how to specify a button as the default button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaulted">
      <MemberSignature Language="C#" Value="public bool IsDefaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaulted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaulted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-146">Obtiene un valor que indica si <see cref="T:System.Windows.Controls.Button" /> es el botón que se activa cuando un usuario presiona ENTRAR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-146">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ecb-147">
            <see langword="true" /> si se activa el botón cuando el usuario presiona ENTRAR; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-147">
              <see langword="true" /> if the button is activated when the user presses ENTER; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20ecb-148">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-148">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-149">El <xref:System.Windows.Controls.Button.IsDefaulted%2A> propiedad es `true` cuando el <xref:System.Windows.Controls.Button.IsDefault%2A> propiedad está establecida en `true` y el control que tiene el foco no acepta ENTRAR como entrada.</span><span class="sxs-lookup"><span data-stu-id="20ecb-149">The <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` when the <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true` and the control that has focus does not accept ENTER as input.</span></span>  <span data-ttu-id="20ecb-150">Por ejemplo, en la **ejecutar** cuadro de diálogo, el **Aceptar** botón es el predeterminado.</span><span class="sxs-lookup"><span data-stu-id="20ecb-150">For example, in the **Run** dialog box, the **OK** button is the default button.</span></span> <span data-ttu-id="20ecb-151">Cuando el foco está en el cuadro de texto <xref:System.Windows.Controls.Button.IsDefaulted%2A> en el **Aceptar** botón está `true` porque un usuario puede activar el botón, presione ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="20ecb-151">When focus is on the text box, <xref:System.Windows.Controls.Button.IsDefaulted%2A> on the **OK** button is `true` because a user can activate the button by pressing ENTER.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20ecb-152">Si el botón predeterminado tiene el foco, <xref:System.Windows.Controls.Button.IsDefaulted%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="20ecb-152">If the default button has focus, <xref:System.Windows.Controls.Button.IsDefaulted%2A> is `false`.</span></span> <span data-ttu-id="20ecb-153">Esto es porque el <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> método controla ENTRAR y no es necesario para <xref:System.Windows.Controls.Button.IsDefaulted%2A> se establezca en `true`.</span><span class="sxs-lookup"><span data-stu-id="20ecb-153">This is because the <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> method handles ENTER, and it is not necessary for <xref:System.Windows.Controls.Button.IsDefaulted%2A> to be set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefaulted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="20ecb-154">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="20ecb-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="20ecb-155">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="20ecb-155">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultedProperty>|  
|<span data-ttu-id="20ecb-156">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="20ecb-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="20ecb-157">None</span><span class="sxs-lookup"><span data-stu-id="20ecb-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-158">En el ejemplo siguiente se muestra cómo determinar si el <xref:System.Windows.Controls.Button.IsDefaulted%2A> propiedad es `true` para un botón predeterminado.</span><span class="sxs-lookup"><span data-stu-id="20ecb-158">The following example shows how to determine whether the <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` for a default button.</span></span>  
  
 [!code-csharp[ButtonProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml.cs#3)]
 [!code-vb[ButtonProps_snip#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ButtonProps_snip/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-159">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Button.IsDefaulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-159">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-160">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Button.IsDefault" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-160">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-161">Se le llama cuando se hace clic en un <see cref="T:System.Windows.Controls.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-161">Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ecb-162">Crea un <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> adecuado para este control, como parte de la infraestructura de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-162">Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ecb-163">Objeto <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> para este control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ecb-163">A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>