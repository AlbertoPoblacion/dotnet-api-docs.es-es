<Type Name="PasswordBox" FullName="System.Windows.Controls.PasswordBox">
  <TypeSignature Language="C#" Value="public sealed class PasswordBox : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PasswordBox extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PasswordBox" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PasswordBox&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class PasswordBox sealed : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aa184-101">Representa un control diseñado para escribir y administrar contraseñas.</span><span class="sxs-lookup"><span data-stu-id="aa184-101">Represents a control designed for entering and handling passwords.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa184-102"><xref:System.Windows.Controls.PasswordBox> tiene control integrado para la propagación <xref:System.Windows.UIElement.MouseUp> y <xref:System.Windows.UIElement.MouseDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="aa184-102"><xref:System.Windows.Controls.PasswordBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span>  <span data-ttu-id="aa184-103">Por lo tanto, controladores de eventos personalizados que escuchar `MouseUp` o `MouseDown` eventos desde un `PasswordBox` nunca se llamará.</span><span class="sxs-lookup"><span data-stu-id="aa184-103">Consequently, custom event handlers that listen for `MouseUp` or `MouseDown` events from a `PasswordBox` will never be called.</span></span>  <span data-ttu-id="aa184-104">Si tiene que responder a estos eventos, escuchar los túneles <xref:System.Windows.UIElement.PreviewMouseUp> y <xref:System.Windows.UIElement.PreviewMouseDown> eventos en su lugar, o registrar los controladores con el <xref:System.Windows.EventSetter.HandledEventsToo%2A> argumento (esta última opción sólo está disponible a través del código).</span><span class="sxs-lookup"><span data-stu-id="aa184-104">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="aa184-105">No marque el evento como controlado a menos que desee deshabilitar deliberadamente <xref:System.Windows.Controls.PasswordBox> nativo controlar estos eventos y tenga en cuenta que esto tiene efectos importantes en el control [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="aa184-105">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.PasswordBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
## <a name="customizing-the-passwordbox-control"></a><span data-ttu-id="aa184-106">Personalizar el Control PasswordBox</span><span class="sxs-lookup"><span data-stu-id="aa184-106">Customizing the PasswordBox Control</span></span>  
 <span data-ttu-id="aa184-107">Para aplicar la misma configuración de propiedad a varios <xref:System.Windows.Controls.PasswordBox> controles, utilice la <xref:System.Windows.FrameworkElement.Style%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="aa184-107">To apply the same property settings to multiple <xref:System.Windows.Controls.PasswordBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="aa184-108">Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para dar al control una apariencia única.</span><span class="sxs-lookup"><span data-stu-id="aa184-108">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="aa184-109">Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="aa184-109">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="aa184-110">Para ver los elementos y los Estados que son específicos de la <xref:System.Windows.Controls.PasswordBox>, consulte [PasswordBox Syles y plantillas de](~/docs/framework/wpf/controls/passwordbox-syles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="aa184-110">To see the parts and states that are specific to the <xref:System.Windows.Controls.PasswordBox>, see [PasswordBox Syles and Templates](~/docs/framework/wpf/controls/passwordbox-syles-and-templates.md).</span></span>  
  
 <span data-ttu-id="aa184-111">Propiedades de dependencia para este control se pueden establecer el estilo predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="aa184-111">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="aa184-112">Si se establece una propiedad de un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="aa184-112">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="aa184-113">El estilo predeterminado se determina por el tema del escritorio que se utiliza cuando se ejecuta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="aa184-113">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="aa184-114">Para obtener más información, consulte [temas de WPF predeterminado](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="aa184-114">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa184-115">Establecer una propiedad visual solo tendrá un efecto si esa propiedad es presentes en la plantilla predeterminada del control de botón y se establece mediante una.</span><span class="sxs-lookup"><span data-stu-id="aa184-115">Setting a visual property will only have an effect if that property is both present in Button control's default template and is set by using a .</span></span> <span data-ttu-id="aa184-116">Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="aa184-116">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-117">En el ejemplo siguiente se muestra cómo especificar el método de controlador para el <xref:System.Windows.Controls.PasswordBox.PasswordChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="aa184-117">The following example shows how to specify the handler method for the <xref:System.Windows.Controls.PasswordBox.PasswordChanged> event.</span></span>  
  
 [!code-xaml[PasswordBoxSnippets#_PwBox_PwChangedXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml#_pwbox_pwchangedxaml)]  
  
 <span data-ttu-id="aa184-118">En el ejemplo siguiente se muestra el controlador de eventos correspondiente.</span><span class="sxs-lookup"><span data-stu-id="aa184-118">The following example shows the corresponding event handler.</span></span>  <span data-ttu-id="aa184-119">En este caso, el controlador de eventos incrementa simplemente un contador.</span><span class="sxs-lookup"><span data-stu-id="aa184-119">In this case, the event handler simply increments a counter.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwBox_PwChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwbox_pwchanged)]
 [!code-vb[PasswordBoxSnippets#_PwBox_PwChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwbox_pwchanged)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa184-120">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-120">Initializes a new instance of the <see cref="T:System.Windows.Controls.PasswordBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-121">Obtiene o establece el pincel que especifica el color del símbolo de intercalación del cuadro de contraseña.</span><span class="sxs-lookup"><span data-stu-id="aa184-121">Gets or sets the brush that specifies the color of the password box's caret.</span></span></summary>
        <value><span data-ttu-id="aa184-122">Pincel que describe el color del símbolo de intercalación del cuadro de contraseña.</span><span class="sxs-lookup"><span data-stu-id="aa184-122">A brush that describes the color of the password box's caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-123">Puede establecer la <xref:System.Windows.Controls.PasswordBox.CaretBrush%2A> propiedad de un <xref:System.Windows.Controls.PasswordBox> para especificar el color del símbolo de intercalación.</span><span class="sxs-lookup"><span data-stu-id="aa184-123">You can set the <xref:System.Windows.Controls.PasswordBox.CaretBrush%2A> property of a <xref:System.Windows.Controls.PasswordBox> to specify the color of its caret.</span></span>  <span data-ttu-id="aa184-124">Por ejemplo, puede establecer <xref:System.Windows.Controls.PasswordBox.CaretBrush%2A> sea el mismo valor que el <xref:System.Windows.Controls.Control.Foreground%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="aa184-124">For example, you can set <xref:System.Windows.Controls.PasswordBox.CaretBrush%2A> to be the same value as the <xref:System.Windows.Controls.Control.Foreground%2A> property.</span></span> <span data-ttu-id="aa184-125"><xref:System.Windows.Controls.Control.Foreground%2A> indica el color de la <xref:System.Windows.Controls.PasswordBox.PasswordChar%2A> caracteres en el <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="aa184-125"><xref:System.Windows.Controls.Control.Foreground%2A> indicates the color of the <xref:System.Windows.Controls.PasswordBox.PasswordChar%2A> characters in the <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-126">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.PasswordBox> y establece la <xref:System.Windows.Controls.PasswordBox.CaretBrush%2A> y <xref:System.Windows.Controls.Control.Foreground%2A> a rojo.</span><span class="sxs-lookup"><span data-stu-id="aa184-126">The following example creates a <xref:System.Windows.Controls.PasswordBox> and sets the <xref:System.Windows.Controls.PasswordBox.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> to red.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#PasswordBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#passwordbox)]   
  
 <span data-ttu-id="aa184-127">El ejemplo anterior genera un resultado similar a la siguiente ilustración.</span><span class="sxs-lookup"><span data-stu-id="aa184-127">The preceding example produces output that is similar to the following illustration.</span></span>  
  
 <span data-ttu-id="aa184-128">![PasswordBox con CaretBrush establecido en rojo. ] (~/add/media/passwordboxcaretbrush.png "PasswordBox con CaretBrush establecido en rojo.")</span><span class="sxs-lookup"><span data-stu-id="aa184-128">![PasswordBox with CaretBrush set to red.](~/add/media/passwordboxcaretbrush.png "PasswordBox with CaretBrush set to red.")</span></span>  
<span data-ttu-id="aa184-129">PasswordBox con CaretBrush establecido en rojo</span><span class="sxs-lookup"><span data-stu-id="aa184-129">PasswordBox with CaretBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-130">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-130">Identifies the <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa184-131">Borra el valor de la propiedad <see cref="P:System.Windows.Controls.PasswordBox.Password" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-131">Clears the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-132">El valor de la <xref:System.Windows.Controls.PasswordBox.Password%2A> propiedad es <xref:System.String.Empty> después de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="aa184-132">The value of the <xref:System.Windows.Controls.PasswordBox.Password%2A> property is <xref:System.String.Empty> after a call to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-133">En el ejemplo siguiente se muestra cómo borrar una <xref:System.Windows.Controls.PasswordBox> con el <xref:System.Windows.Controls.PasswordBox.Clear%2A> método.</span><span class="sxs-lookup"><span data-stu-id="aa184-133">The following example shows how to clear a <xref:System.Windows.Controls.PasswordBox> with the <xref:System.Windows.Controls.PasswordBox.Clear%2A> method.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwdBox_Clear](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwdbox_clear)]
 [!code-vb[PasswordBoxSnippets#_PwdBox_Clear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwdbox_clear)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-134">Obtiene o establece un valor que indica si <see cref="T:System.Windows.Controls.PasswordBox" /> muestra el texto seleccionado cuando <see cref="T:System.Windows.Controls.PasswordBox" /> no tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="aa184-134">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.PasswordBox" /> displays selected text when the <see cref="T:System.Windows.Controls.PasswordBox" /> does not have focus.</span></span></summary>
        <value>
          <span data-ttu-id="aa184-135"><see langword="true" /> si <see cref="T:System.Windows.Controls.PasswordBox" /> muestra el texto seleccionado cuando el <see cref="T:System.Windows.Controls.PasswordBox" /> no tiene el foco; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-135"><see langword="true" /> if the <see cref="T:System.Windows.Controls.PasswordBox" /> displays selected text when the <see cref="T:System.Windows.Controls.PasswordBox" /> does not have focus; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="aa184-136">El valor predeterminado registrado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-136">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="aa184-137">Para obtener más información sobre lo que puede afectar al valor, vea [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="aa184-137">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa184-138">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="aa184-138">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa184-139">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="aa184-139">Identifier field</span></span>|<xref:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="aa184-140">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="aa184-140">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa184-141">None</span><span class="sxs-lookup"><span data-stu-id="aa184-141">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-142">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-142">Identifies the <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-143">Obtiene un valor que indica si <see cref="T:System.Windows.Controls.PasswordBox" /> tiene el foco y texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="aa184-143">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.PasswordBox" /> has focus and selected text.</span></span></summary>
        <value>
          <span data-ttu-id="aa184-144"><see langword="true" /> si <see cref="T:System.Windows.Controls.PasswordBox" /> tiene el foco y el texto seleccionado; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-144"><see langword="true" /> if the <see cref="T:System.Windows.Controls.PasswordBox" /> has focus and selected text; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="aa184-145">El valor predeterminado registrado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-145">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="aa184-146">Para obtener más información sobre lo que puede afectar al valor, vea [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="aa184-146">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa184-147">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="aa184-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa184-148">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="aa184-148">Identifier field</span></span>|<xref:System.Windows.Controls.PasswordBox.IsSelectionActiveProperty>|  
|<span data-ttu-id="aa184-149">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="aa184-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa184-150">None</span><span class="sxs-lookup"><span data-stu-id="aa184-150">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-151">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-151">Identifies the <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-152">Obtiene o establece la longitud máxima para las contraseñas que va a administrar este <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-152">Gets or sets the maximum length for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span></summary>
        <value><span data-ttu-id="aa184-153">Entero que especifica la longitud máxima, en caracteres, para las contraseñas que va a administrar este <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-153">An integer specifying the maximum length, in characters, for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span>  
  
 <span data-ttu-id="aa184-154">Un valor de cero (**0**) no significa que no hay ningún límite.</span><span class="sxs-lookup"><span data-stu-id="aa184-154">A value of zero (**0**) means no limit.</span></span>  
  
 <span data-ttu-id="aa184-155">El valor predeterminado es **0** (sin límite de longitud).</span><span class="sxs-lookup"><span data-stu-id="aa184-155">The default value is **0** (no length limit).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-156">Esta propiedad sólo restringe las contraseñas escritas manualmente por el usuario; no tiene ningún efecto en la manipulación mediante programación de la <xref:System.Windows.Controls.PasswordBox.Password%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="aa184-156">This property only restricts passwords entered manually by the user; it has no effect on programmatic manipulation of the <xref:System.Windows.Controls.PasswordBox.Password%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa184-157">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="aa184-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa184-158">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="aa184-158">Identifier field</span></span>|<xref:System.Windows.Controls.PasswordBox.MaxLengthProperty>|  
|<span data-ttu-id="aa184-159">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="aa184-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa184-160">None</span><span class="sxs-lookup"><span data-stu-id="aa184-160">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa184-161">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Controls.PasswordBox.MaxLength%2A> atributo de un <xref:System.Windows.Controls.PasswordBox> elemento.</span><span class="sxs-lookup"><span data-stu-id="aa184-161">The following example shows how to set the <xref:System.Windows.Controls.PasswordBox.MaxLength%2A> attribute of a <xref:System.Windows.Controls.PasswordBox> element.</span></span>  
  
 [!code-xaml[PasswordBoxSnippets#_PwBox_PwChangedXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml#_pwbox_pwchangedxaml)]  
  
 <span data-ttu-id="aa184-162">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Controls.PasswordBox.MaxLength%2A> propiedad mediante programación.</span><span class="sxs-lookup"><span data-stu-id="aa184-162">The following example shows how to set the <xref:System.Windows.Controls.PasswordBox.MaxLength%2A> property programmatically.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwdBox_MaxLen](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwdbox_maxlen)]
 [!code-vb[PasswordBoxSnippets#_PwdBox_MaxLen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwdbox_maxlen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-163">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-163">Identifies the <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa184-164">Llamado cuando un proceso interno o la aplicación llama a <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, que se utiliza para crear el árbol visual de la plantilla actual.</span><span class="sxs-lookup"><span data-stu-id="aa184-164">Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, which is used to build the current template's visual tree.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-165">Invalida <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa184-165">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">To be added.</param>
        <param name="newTemplate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-166">Obtiene o establece la contraseña mantenida actualmente por <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-166">Gets or sets the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span></summary>
        <value><span data-ttu-id="aa184-167">Cadena que representa la contraseña mantenida actualmente por <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-167">A string representing the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span>  
  
 <span data-ttu-id="aa184-168">El valor predeterminado es <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-168">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-169">Al obtener la <xref:System.Windows.Controls.PasswordBox.Password%2A> valor de propiedad, se expone la contraseña como texto sin formato en la memoria.</span><span class="sxs-lookup"><span data-stu-id="aa184-169">When you get the <xref:System.Windows.Controls.PasswordBox.Password%2A> property value, you expose the password as plain text in memory.</span></span> <span data-ttu-id="aa184-170">Para evitar este riesgo de seguridad, use la <xref:System.Windows.Controls.PasswordBox.SecurePassword%2A> propiedad que se va a obtener la contraseña como un <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="aa184-170">To avoid this potential security risk, use the <xref:System.Windows.Controls.PasswordBox.SecurePassword%2A> property to get the password as a <xref:System.Security.SecureString>.</span></span>  
  
 <span data-ttu-id="aa184-171">Si se establece esta propiedad en `null` hace que la contraseña subyacente se establezca en <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="aa184-171">Setting this property to `null` causes the underlying password to be set to <xref:System.String.Empty>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-172">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Controls.PasswordBox.Password%2A> propiedad mediante programación.</span><span class="sxs-lookup"><span data-stu-id="aa184-172">The following example shows how to set the <xref:System.Windows.Controls.PasswordBox.Password%2A> property programmatically.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwdBox_Pwd](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwdbox_pwd)]
 [!code-vb[PasswordBoxSnippets#_PwdBox_Pwd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwdbox_pwd)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PasswordBox.SecurePassword" />
        <altmember cref="T:System.Security.SecureString" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler PasswordChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler PasswordChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.PasswordBox.PasswordChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PasswordChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ PasswordChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-173">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Controls.PasswordBox.Password" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-173">Occurs when the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PasswordChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="aa184-174">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="aa184-174">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa184-175">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="aa184-175">Identifier field</span></span>|<xref:System.Windows.Controls.PasswordBox.PasswordChangedEvent>|  
|<span data-ttu-id="aa184-176">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="aa184-176">Routing strategy</span></span>|<span data-ttu-id="aa184-177">Propagación</span><span class="sxs-lookup"><span data-stu-id="aa184-177">Bubbling</span></span>|  
|<span data-ttu-id="aa184-178">delegado</span><span class="sxs-lookup"><span data-stu-id="aa184-178">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="aa184-179">En el ejemplo siguiente se muestra cómo especificar el método de controlador para el <xref:System.Windows.Controls.PasswordBox.PasswordChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="aa184-179">The following example shows how to specify the handler method for the <xref:System.Windows.Controls.PasswordBox.PasswordChanged> event.</span></span>  
  
 [!code-xaml[PasswordBoxSnippets#_PwBox_PwChangedXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml#_pwbox_pwchangedxaml)]  
  
 <span data-ttu-id="aa184-180">En el ejemplo siguiente se muestra el controlador de eventos correspondiente.</span><span class="sxs-lookup"><span data-stu-id="aa184-180">The following example shows the corresponding event handler.</span></span>  <span data-ttu-id="aa184-181">En este caso, el controlador de eventos incrementa simplemente un contador.</span><span class="sxs-lookup"><span data-stu-id="aa184-181">In this case, the event handler simply increments a counter.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwBox_PwChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwbox_pwchanged)]
 [!code-vb[PasswordBoxSnippets#_PwBox_PwChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwbox_pwchanged)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PasswordChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PasswordChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.PasswordChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PasswordChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PasswordChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-182">Identifica el evento enrutado <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-182">Identifies the <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-183">Obtiene o establece el carácter de enmascaramiento para <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-183">Gets or sets the masking character for the <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span></summary>
        <value><span data-ttu-id="aa184-184">Carácter de enmascaramiento que refleja cuándo escribe texto el usuario en <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-184">A masking character to echo when the user enters text into the <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span>  
  
 <span data-ttu-id="aa184-185">El valor predeterminado es un carácter de viñeta (**●**).</span><span class="sxs-lookup"><span data-stu-id="aa184-185">The default value is a bullet character (**●**).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-186">Cuando se escribe texto en un <xref:System.Windows.Controls.PasswordBox>, el carácter de enmascaramiento especificado por esta propiedad se refleja en el campo de entrada de contraseña, en lugar de la propia contraseña.</span><span class="sxs-lookup"><span data-stu-id="aa184-186">When text is entered into a <xref:System.Windows.Controls.PasswordBox>, the masking character specified by this property is echoed in the password input field, rather than the actual password itself.</span></span>  <span data-ttu-id="aa184-187">Esto ayuda a evitar que las contraseñas que no se expongan a los observadores ocasionales cuando se escriben.</span><span class="sxs-lookup"><span data-stu-id="aa184-187">This helps prevent passwords from being exposed to casual observers when they are entered.</span></span>  
  
<a name="dependencyPropertyInfo_PasswordChar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa184-188">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="aa184-188">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa184-189">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="aa184-189">Identifier field</span></span>|<xref:System.Windows.Controls.PasswordBox.PasswordCharProperty>|  
|<span data-ttu-id="aa184-190">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="aa184-190">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa184-191">None</span><span class="sxs-lookup"><span data-stu-id="aa184-191">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa184-192">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Controls.PasswordBox.PasswordChar%2A> atributo de un <xref:System.Windows.Controls.PasswordBox> elemento.</span><span class="sxs-lookup"><span data-stu-id="aa184-192">The following example shows how to set the <xref:System.Windows.Controls.PasswordBox.PasswordChar%2A> attribute of a <xref:System.Windows.Controls.PasswordBox> element.</span></span>  
  
 [!code-xaml[PasswordBoxSnippets#_PwBox_PwChangedXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml#_pwbox_pwchangedxaml)]  
  
 <span data-ttu-id="aa184-193">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Controls.PasswordBox.PasswordChar%2A> propiedad mediante programación.</span><span class="sxs-lookup"><span data-stu-id="aa184-193">The following example shows how to set the <xref:System.Windows.Controls.PasswordBox.PasswordChar%2A> property programmatically.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwdBox_PwdChar](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwdbox_pwdchar)]
 [!code-vb[PasswordBoxSnippets#_PwdBox_PwdChar](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwdbox_pwdchar)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordCharProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PasswordCharProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PasswordCharProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.PasswordCharProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PasswordCharProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PasswordCharProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-194">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-194">Identifies the <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa184-195">Reemplaza la selección actual de <see cref="T:System.Windows.Controls.PasswordBox" /> con el contenido del Portapapeles.</span><span class="sxs-lookup"><span data-stu-id="aa184-195">Replaces the current selection in the <see cref="T:System.Windows.Controls.PasswordBox" /> with the contents of the Clipboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-196">Este método no borra el contenido de la <xref:System.Windows.Controls.PasswordBox> antes de pegar; se reemplace la selección actual con contenido pegado o insertará el contenido pegado en la posición actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="aa184-196">This method does not clear the contents of the <xref:System.Windows.Controls.PasswordBox> before the paste; it will either replace the current selection with pasted content, or insert the pasted content at the current cursor position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-197">En el ejemplo siguiente se muestra cómo pegar contenido en un <xref:System.Windows.Controls.PasswordBox> con el <xref:System.Windows.Controls.PasswordBox.Paste%2A> método.</span><span class="sxs-lookup"><span data-stu-id="aa184-197">The following example shows how to paste content into a <xref:System.Windows.Controls.PasswordBox> with the <xref:System.Windows.Controls.PasswordBox.Paste%2A> method.</span></span>  
  
 [!code-csharp[PasswordBoxSnippets#_PwdBox_Paste](~/samples/snippets/csharp/VS_Snippets_Wpf/PasswordBoxSnippets/CSharp/Window1.xaml.cs#_pwdbox_paste)]
 [!code-vb[PasswordBoxSnippets#_PwdBox_Paste](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PasswordBoxSnippets/visualbasic/window1.xaml.vb#_pwdbox_paste)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurePassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString SecurePassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString SecurePassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.SecurePassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurePassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ SecurePassword { System::Security::SecureString ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-198">Obtiene la contraseña que <see cref="T:System.Windows.Controls.PasswordBox" /> contiene actualmente como <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-198">Gets the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" /> as a <see cref="T:System.Security.SecureString" />.</span></span></summary>
        <value><span data-ttu-id="aa184-199">Cadena segura que representa la contraseña que <see cref="T:System.Windows.Controls.PasswordBox" /> contiene actualmente.</span><span class="sxs-lookup"><span data-stu-id="aa184-199">A secure string representing the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-200">Al obtener la <xref:System.Windows.Controls.PasswordBox.Password%2A> valor de propiedad, se expone la contraseña como texto sin formato en la memoria.</span><span class="sxs-lookup"><span data-stu-id="aa184-200">When you get the <xref:System.Windows.Controls.PasswordBox.Password%2A> property value, you expose the password as plain text in memory.</span></span> <span data-ttu-id="aa184-201">Para evitar este riesgo de seguridad, use la <xref:System.Windows.Controls.PasswordBox.SecurePassword%2A> propiedad que se va a obtener la contraseña como un <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="aa184-201">To avoid this potential security risk, use the <xref:System.Windows.Controls.PasswordBox.SecurePassword%2A> property to get the password as a <xref:System.Security.SecureString>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PasswordBox.Password" />
        <altmember cref="T:System.Security.SecureString" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PasswordBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa184-202">Selecciona el contenido completo de <see cref="T:System.Windows.Controls.PasswordBox" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-202">Selects the entire contents of the <see cref="T:System.Windows.Controls.PasswordBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-203">Obtiene o establece el pincel que resalta el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="aa184-203">Gets or sets the brush that highlights selected text.</span></span></summary>
        <value><span data-ttu-id="aa184-204">Un pincel que resalta el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="aa184-204">A brush that highlights selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-205">Puede especificar el pincel que resalta el texto seleccionado estableciendo la <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> y <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="aa184-205">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> and <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-206">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.PasswordBox> y establece la <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> propiedad a verde y la <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> propiedad en 0,5.</span><span class="sxs-lookup"><span data-stu-id="aa184-206">The following example creates a <xref:System.Windows.Controls.PasswordBox> and sets the <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> property to green and the <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> property to 0.5.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#PasswordBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#passwordbox)]
  
 <span data-ttu-id="aa184-207">El ejemplo anterior genera un resultado similar a la siguiente ilustración.</span><span class="sxs-lookup"><span data-stu-id="aa184-207">The preceding example produces output that is similar to the following illustration.</span></span>  
  
 <span data-ttu-id="aa184-208">![PasswordBox con SelectionBrush establecido en verde. ] (~/add/media/passwordboxselectionbrush.png "PasswordBox con SelectionBrush establecido en verde.")</span><span class="sxs-lookup"><span data-stu-id="aa184-208">![PasswordBox with SelectionBrush set to green.](~/add/media/passwordboxselectionbrush.png "PasswordBox with SelectionBrush set to green.")</span></span>  
<span data-ttu-id="aa184-209">Texto seleccionado en PasswordBox con SelectionBrush establecido en verde</span><span class="sxs-lookup"><span data-stu-id="aa184-209">Selected text in a PasswordBox with SelectionBrush set to green</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-210">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-210">Identifies the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PasswordBox.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-211">Obtiene o establece la opacidad del objeto <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-211">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />.</span></span></summary>
        <value><span data-ttu-id="aa184-212">La opacidad del objeto <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-212">The opacity of the <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />.</span></span> <span data-ttu-id="aa184-213">El valor predeterminado es 0.4.</span><span class="sxs-lookup"><span data-stu-id="aa184-213">The default is 0.4.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa184-214">Si establece la <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> en 0, el <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> es transparente y no está visible.</span><span class="sxs-lookup"><span data-stu-id="aa184-214">If you set the <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> to 0, the <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="aa184-215">Si establece la <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> en 1,0 o superior, el <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> es opaco y seleccionado no está visible el texto.</span><span class="sxs-lookup"><span data-stu-id="aa184-215">If you set the <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> to 1.0 or greater, the <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa184-216">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.PasswordBox> y establece la <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> propiedad a verde y la <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> propiedad en 0,5.</span><span class="sxs-lookup"><span data-stu-id="aa184-216">The following example creates a <xref:System.Windows.Controls.PasswordBox> and sets the <xref:System.Windows.Controls.PasswordBox.SelectionBrush%2A> property to green and the <xref:System.Windows.Controls.PasswordBox.SelectionOpacity%2A> property to 0.5.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#PasswordBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#passwordbox)]
  
 <span data-ttu-id="aa184-217">El ejemplo anterior genera un resultado similar a la siguiente ilustración.</span><span class="sxs-lookup"><span data-stu-id="aa184-217">The preceding example produces output that is similar to the following illustration.</span></span>  
  
 <span data-ttu-id="aa184-218">![PasswordBox con SelectionBrush establecido en verde. ] (~/add/media/passwordboxselectionbrush.png "PasswordBox con SelectionBrush establecido en verde.")</span><span class="sxs-lookup"><span data-stu-id="aa184-218">![PasswordBox with SelectionBrush set to green.](~/add/media/passwordboxselectionbrush.png "PasswordBox with SelectionBrush set to green.")</span></span>  
<span data-ttu-id="aa184-219">Texto seleccionado en PasswordBox con SelectionOpacity establecido en 0,5</span><span class="sxs-lookup"><span data-stu-id="aa184-219">Selected text in a PasswordBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa184-220">Identifica la propiedad de dependencia <see cref="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" />.</span><span class="sxs-lookup"><span data-stu-id="aa184-220">Identifies the <see cref="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>