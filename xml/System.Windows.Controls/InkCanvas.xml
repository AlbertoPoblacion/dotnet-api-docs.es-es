<Type Name="InkCanvas" FullName="System.Windows.Controls.InkCanvas">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bf3dfdaab11626dff0c2b150b81ebb8db67c885" />
    <Meta Name="ms.sourcegitcommit" Value="4f9e960e786edf67b6a29655670b1a15e71c03de" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/02/2018" />
    <Meta Name="ms.locfileid" Value="39418474" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi InkCanvas extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkCanvas" />
  <TypeSignature Language="VB.NET" Value="Public Class InkCanvas&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class InkCanvas : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type InkCanvas = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7c83e-101">Define un área que recibe y muestra trazos de tinta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c83e-101">Defines an area that receives and displays ink strokes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-102">Un <xref:System.Windows.Controls.InkCanvas> es un elemento que puede utilizarse para recibir y mostrar entradas de lápiz.</span><span class="sxs-lookup"><span data-stu-id="7c83e-102">An <xref:System.Windows.Controls.InkCanvas> is an element that can be used to receive and display ink input.</span></span> <span data-ttu-id="7c83e-103">Normalmente, esto se hace mediante el uso de un lápiz óptico, que interactúa con un digitalizador para generar trazos de lápiz con un lápiz o un mouse.</span><span class="sxs-lookup"><span data-stu-id="7c83e-103">This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.</span></span> <span data-ttu-id="7c83e-104">Los trazos creados se representan como <xref:System.Windows.Ink.Stroke> objetos y se pueden manipular mediante programación o en función de entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="7c83e-104">The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input.</span></span> <span data-ttu-id="7c83e-105">El <xref:System.Windows.Controls.InkCanvas> permite a los usuarios modificar o eliminar una existente <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-105">The <xref:System.Windows.Controls.InkCanvas> enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="7c83e-106">El <xref:System.Windows.Controls.InkCanvas> se puede enlazar a un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-106">The <xref:System.Windows.Controls.InkCanvas> can be bound to a data source.</span></span> <span data-ttu-id="7c83e-107">Por ejemplo, puede enlazar el <xref:System.Windows.Controls.InkCanvas.Strokes%2A> propiedad: una cadena codificada en base 64 que contiene datos en serializado de tinta (ISF) de formato; o, incluso de tinta el <xref:System.Windows.Controls.InkCanvas.Strokes%2A> propiedad de otro <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-107">For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-108">También puede enlazar las propiedades, como <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> y <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, a otros orígenes de datos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-108">You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-109">En el ejemplo siguiente se muestra cómo simular el uso de un lápiz y un marcador de resaltado en la misma <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-109">The following example demonstrates how to simulate the use of both a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-110">El ejemplo se supone que el elemento raíz en el archivo de marcado (XAML) de lenguaje es un <xref:System.Windows.Controls.DockPanel> llamado `root`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-110">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="7c83e-111">También se supone que hay un <xref:System.Windows.Controls.Button> llamado `switchHighlighter` y que tanto el <xref:System.Windows.Controls.Primitives.ButtonBase.Click> y <xref:System.Windows.FrameworkElement.Loaded> eventos están conectados al controlador de eventos del ejemplo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-111">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="7c83e-112">En el ejemplo siguiente se declara dos <xref:System.Windows.Controls.InkCanvas> objetos en XAML y establece el enlace de datos entre ellos y otros orígenes de datos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-112">The following example declares two <xref:System.Windows.Controls.InkCanvas> objects in XAML and establishes data binding between them and other data sources.</span></span> <span data-ttu-id="7c83e-113">La primera <xref:System.Windows.Controls.InkCanvas>, llamado `ic`, está enlazado a dos orígenes de datos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-113">The first <xref:System.Windows.Controls.InkCanvas>, called `ic`, is bound to two data sources.</span></span> <span data-ttu-id="7c83e-114">El <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> y <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> propiedades `ic` están enlazados a <xref:System.Windows.Controls.ListBox> objetos, que, a su vez, dependen de las matrices definidas en el XAML.</span><span class="sxs-lookup"><span data-stu-id="7c83e-114">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML.</span></span> <span data-ttu-id="7c83e-115">El <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, y <xref:System.Windows.Controls.InkCanvas.Strokes%2A> propiedades del segundo <xref:System.Windows.Controls.InkCanvas> están enlazadas al primer <xref:System.Windows.Controls.InkCanvas> en el código siguiente.</span><span class="sxs-lookup"><span data-stu-id="7c83e-115">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second <xref:System.Windows.Controls.InkCanvas> are bound to the first <xref:System.Windows.Controls.InkCanvas> in the following code.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window1.xaml#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InkCanvas();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-116">Inicializa una nueva instancia de la clase InkCanvas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-116">Initializes a new instance of the InkCanvas class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode ActiveEditingMode { System::Windows::Controls::InkCanvasEditingMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveEditingMode : System.Windows.Controls.InkCanvasEditingMode" Usage="System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-117">Obtiene el modo de edición actual de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-117">Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-118">El modo de edición actual de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-118">The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-119">El <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> propiedad indica actual <xref:System.Windows.Controls.InkCanvasEditingMode> de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-119">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="7c83e-120">Suponga que el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> está establecido en <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> y <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> está establecido en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-120">Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  <span data-ttu-id="7c83e-121">Cuando el lápiz de tablet PC se usa en una posición invertida, <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> tiene un valor de <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-121">When the tablet pen is used in an inverted position, <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> has a value of <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="7c83e-122">En caso contrario, su valor es <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-122">Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span>  
  
<a name="dependencyPropertyInfo_ActiveEditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-123">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-123">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-124">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-124">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  
|<span data-ttu-id="7c83e-125">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-125">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-126">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-126">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-127">En el ejemplo siguiente se notifica el valor de <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> cada vez que cambia.</span><span class="sxs-lookup"><span data-stu-id="7c83e-127">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler ActiveEditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveEditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ ActiveEditingModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveEditingModeChanged : System.Windows.RoutedEventHandler " Usage="member this.ActiveEditingModeChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-128">Se produce cuando cambia el modo de edición actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-128">Occurs when the current editing mode changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-129">El <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> propiedad cada vez que cambia el <xref:System.Windows.Controls.InkCanvas> entra en un nuevo modo de edición.</span><span class="sxs-lookup"><span data-stu-id="7c83e-129">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode.</span></span> <span data-ttu-id="7c83e-130">Por ejemplo, suponga que el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> está establecido en <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> y <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> está establecido en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-130">For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="7c83e-131">Cuando el usuario cambia la punta del lápiz de tablet PC, la <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-131">When the user changes the tip of tablet pen, the <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> event occurs.</span></span>  
  
<a name="routedEventInfo_ActiveEditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7c83e-132">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="7c83e-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-133">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-133">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  
|<span data-ttu-id="7c83e-134">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="7c83e-134">Routing strategy</span></span>|<span data-ttu-id="7c83e-135">Propagación</span><span class="sxs-lookup"><span data-stu-id="7c83e-135">Bubbling</span></span>|  
|<span data-ttu-id="7c83e-136">delegado</span><span class="sxs-lookup"><span data-stu-id="7c83e-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-137">En el ejemplo siguiente se notifica el valor de <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> cada vez que cambia.</span><span class="sxs-lookup"><span data-stu-id="7c83e-137">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ActiveEditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActiveEditingModeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-138">Identifica el evento enrutado <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-138">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActiveEditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActiveEditingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActiveEditingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-139">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-139">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="inkCanvas.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="7c83e-140">Área final dentro del elemento primario que este elemento debe usar para organizarse a sí mismo y a los elementos secundarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-140">The final area within the parent that this element should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-141">Coloca los elementos secundarios y determina un tamaño para un objeto <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-141">Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-142">Tamaño real usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-142">The actual size used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.InkCanvas.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-143">Obtiene o establece un objeto <see cref="T:System.Windows.Media.Brush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-143">Gets or sets a <see cref="T:System.Windows.Media.Brush" />.</span>
          </span>
          <span data-ttu-id="7c83e-144">El pincel se utiliza para rellenar el área del borde que rodea a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-144">The brush is used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-145">Un <see cref="T:System.Windows.Media.Brush" /> que se utiliza para rellenar el área del borde que rodea a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-145">A <see cref="T:System.Windows.Media.Brush" /> used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-146">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-146">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-147">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-147">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  
|<span data-ttu-id="7c83e-148">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-148">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="7c83e-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-150">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Controls.InkCanvas.Background%2A> propiedad en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-150">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.Background%2A> property on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#37](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#37)]
 [!code-vb[InkCanvasSamples#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-151">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.InkCanvas.Background" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-151">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="ILAsm" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Bottom" />
      <MemberSignature Language="VB.NET" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="F#" Value="see GetBottom, and SetBottom" Usage="see GetBottom, and SetBottom" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-152">Obtiene o establece la distancia entre la parte inferior de un elemento y la parte inferior de su <see cref="T:System.Windows.Controls.InkCanvas" /> principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-152">Gets or sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Bottom"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-153">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-154">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-154">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BottomProperty>|  
|<span data-ttu-id="7c83e-155">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-156">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-156">None</span></span>|  
  
<a name="xamlAttributeUsage_Bottom"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="7c83e-157">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-157">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Bottom="double"/>  
- or –  
<object InkCanvas.Bottom="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Bottom"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7c83e-158">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-158">XAML Values</span></span>  
 <span data-ttu-id="7c83e-159">*double*</span><span class="sxs-lookup"><span data-stu-id="7c83e-159">*double*</span></span>  
 <span data-ttu-id="7c83e-160">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="7c83e-160">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="7c83e-161">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="7c83e-161">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="7c83e-162">Las cadenas no necesitan incluir explícitamente puntos decimales.</span><span class="sxs-lookup"><span data-stu-id="7c83e-162">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="7c83e-163">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="7c83e-163">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="7c83e-164">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="7c83e-164">*qualifiedDouble*</span></span>  
 <span data-ttu-id="7c83e-165">Un *doble* valor, como se describió anteriormente, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-165">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="7c83e-166">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="7c83e-166">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="7c83e-167">`in` pulgadas; 1in == 96 px</span><span class="sxs-lookup"><span data-stu-id="7c83e-167">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="7c83e-168">`cm` es centímetros; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-168">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="7c83e-169">`pt` puntos; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-169">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-170">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Label> en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-170">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BottomProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BottomProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BottomProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BottomProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BottomProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-171">Identifica la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Bottom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-171">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberSignature Language="F#" Value="member this.CanPaste : unit -&gt; bool" Usage="inkCanvas.CanPaste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-172">Indica si el contenido del Portapapeles se puede pegar en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-172">Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-173">
            <see langword="true" /> si el contenido del Portapapeles se puede pegar; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-173">
              <see langword="true" /> if the contents of the Clipboard can be pasted in; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-174">El <xref:System.Windows.Controls.InkCanvas> puede admitir los datos del Portapapeles en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]y el formato de texto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-174">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-175">El ejemplo siguiente se copia un elemento en el Portapapeles y lo pega en el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-175">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-176">En este ejemplo se supone que hay un elemento denominado `rect1`y que la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos se han conectado a los controladores de eventos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-176">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="7c83e-177">Permiso para pegar el contenido del Portapapeles en el <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-177">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="7c83e-178">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-178">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Windows.Controls.UIElementCollection" Usage="System.Windows.Controls.InkCanvas.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-179">Recupera los elementos secundarios de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-179">Retrieves child elements of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-180">Colección de los elementos secundarios que se encuentran en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-180">A collection of child elements located on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Children"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="7c83e-181">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-181">XAML Property Element Usage</span></span>  
  
```  
<object>  
  OneOrMoreUIElements  
</object>  
```  
  
<a name="xamlValues_Children"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7c83e-182">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-182">XAML Values</span></span>  
 <span data-ttu-id="7c83e-183">*OneOrMoreUIElements*</span><span class="sxs-lookup"><span data-stu-id="7c83e-183">*OneOrMoreUIElements*</span></span>  
 <span data-ttu-id="7c83e-184">Uno o más <xref:System.Windows.UIElement> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-184">One or more <xref:System.Windows.UIElement> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-185">En el ejemplo siguiente se agrega un <xref:System.Windows.Controls.TextBlock> a un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-185">The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[InkCanvasSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySelection">
      <MemberSignature Language="C#" Value="public void CopySelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CopySelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySelection();" />
      <MemberSignature Language="F#" Value="member this.CopySelection : unit -&gt; unit" Usage="inkCanvas.CopySelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-186">Copia los trazos o elementos seleccionados en el Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-186">Copies selected strokes and/or elements to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-187">El <xref:System.Windows.Controls.InkCanvas> puede admitir los datos del Portapapeles en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]y el formato de texto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-187">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="7c83e-188">Los trazos en el Portapapeles son ambos [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7c83e-188">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-189">En el ejemplo siguiente se seleccionan dos elementos en un <xref:System.Windows.Controls.InkCanvas> y los copia en el Portapapeles.</span><span class="sxs-lookup"><span data-stu-id="7c83e-189">The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard.</span></span> <span data-ttu-id="7c83e-190">En este ejemplo se supone que hay un <xref:System.Windows.Controls.TextBox> llamado `textbox1` y un <xref:System.Windows.Controls.Button> llamado `button1 -` y thatboth controles son elementos secundarios de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-190">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and thatboth controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkCanvasSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="CutSelection">
      <MemberSignature Language="C#" Value="public void CutSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CutSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CutSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CutSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CutSelection();" />
      <MemberSignature Language="F#" Value="member this.CutSelection : unit -&gt; unit" Usage="inkCanvas.CutSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-191">Elimina los trazos y elementos seleccionados y los copia en el Portapapeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-191">Deletes the selected strokes and elements, and copies them to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-192">El <xref:System.Windows.Controls.InkCanvas> puede admitir los datos del Portapapeles en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]y el formato de texto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-192">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="7c83e-193">Los trazos en el Portapapeles son ambos [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7c83e-193">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-194">En el ejemplo siguiente se seleccionan y se cortan dos elementos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-194">The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-195">En este ejemplo se supone que hay un <xref:System.Windows.Controls.TextBox> llamado `textbox1` y un <xref:System.Windows.Controls.Button> llamado `button1` - y que ambos controles son elementos secundarios de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[InkCanvasSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultDrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DefaultDrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDrawingAttributes : System.Windows.Ink.DrawingAttributes with get, set" Usage="System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-196">Obtiene o establece los atributos de dibujo que se aplican a los nuevos trazos de entrada de lápiz realizados en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-196">Gets or sets the drawing attributes that are applied to new ink strokes made on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-197">Los atributos de dibujo predeterminados para <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-197">The default drawing attributes for the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-198">Al establecer esta propiedad afectará solo nuevos trazos que se realizan después de establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="7c83e-198">Setting this property will affect only new strokes that are made after this property is set.</span></span> <span data-ttu-id="7c83e-199">Para aplicar nuevos atributos de dibujo que ya ha creado <xref:System.Windows.Ink.Stroke> objetos, tener acceso a ellos por separado mediante el <xref:System.Windows.Controls.InkCanvas.Strokes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7c83e-199">To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultDrawingAttributes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-200">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-200">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-201">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-201">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  
|<span data-ttu-id="7c83e-202">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-202">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-203">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-203">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-204">En el ejemplo siguiente se muestra cómo utilizar dos <xref:System.Windows.Ink.DrawingAttributes> objetos para simular la experiencia de uso de un lápiz y un marcador de resaltado en la misma <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-204">The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-205">El ejemplo se supone que el elemento raíz en el archivo de marcado (XAML) de lenguaje es un <xref:System.Windows.Controls.DockPanel> llamado `root`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-205">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="7c83e-206">También se supone que hay un <xref:System.Windows.Controls.Button> llamado `switchHilighter` y que el <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento está conectado al controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-206">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHilighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="7c83e-207">En el ejemplo siguiente se muestra cómo enlazar la <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> propiedad a un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-207">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to a data source.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#3)]  
 [!code-xaml[InkCanvasBindingSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#4)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.Strokes" />
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultDrawingAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultDrawingAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultDrawingAttributesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-208">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-208">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event DefaultDrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="F#" Value="member this.DefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " Usage="member this.DefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-209">Se produce cuando se reemplaza la propiedad <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-209">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-210">En el ejemplo siguiente se comprueba el valor de la <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> propiedad del nuevo <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-210">The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#17](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#17)]
 [!code-vb[DrawingAttributes#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStylusPointDescription">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription DefaultStylusPointDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultStylusPointDescription As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ DefaultStylusPointDescription { System::Windows::Input::StylusPointDescription ^ get(); void set(System::Windows::Input::StylusPointDescription ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStylusPointDescription : System.Windows.Input.StylusPointDescription with get, set" Usage="System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-211">Obtiene o establece la descripción de los puntos de lápiz de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-211">Gets or sets the stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-212">La descripción de los puntos de lápiz de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-212">The stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-213">De forma predeterminada, el <xref:System.Windows.Controls.InkCanvas> almacena sólo la <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, y <xref:System.Windows.Input.StylusPointProperties.NormalPressure> propiedades para cada <xref:System.Windows.Input.StylusPoint> que pertenecen a un trazo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-213">By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke.</span></span> <span data-ttu-id="7c83e-214">Puede usar la propiedad DefaultStylusPointDescription para almacenar información adicional acerca de los puntos que componen los trazos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-214">You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-215">Al establecer esta propiedad afectará solo nuevos trazos que se realizan después de establecer la propiedad.</span><span class="sxs-lookup"><span data-stu-id="7c83e-215">Setting this property will affect only new strokes that are made after the property is set.</span></span>  
  
<a name="xamlTextUsage_DefaultStylusPointDescription"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="7c83e-216">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-216">XAML Text Usage</span></span>  
 <span data-ttu-id="7c83e-217">No se puede utilizar esta propiedad en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7c83e-217">You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-218">El ejemplo siguiente se establece la <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> para que los puntos del lápiz de los trazos en la <xref:System.Windows.Controls.InkCanvas> contienen el <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, y <xref:System.Windows.Input.StylusPointProperties.TipButton> propiedades.</span><span class="sxs-lookup"><span data-stu-id="7c83e-218">The following example sets the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c83e-219">Solo los trazos que se agregan a la <xref:System.Windows.Controls.InkCanvas> después de que el <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> está establecido para que contenga la propiedad adicional.</span><span class="sxs-lookup"><span data-stu-id="7c83e-219">Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> is set to contain the additional property.</span></span>  
  
 [!code-csharp[InkCanvasSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[InkCanvasSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPointProperties" />
        <altmember cref="T:System.Windows.Input.StylusPointProperty" />
        <altmember cref="T:System.Windows.Input.StylusPointPropertyInfo" />
      </Docs>
    </Member>
    <Member MemberName="DynamicRenderer">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberSignature Language="VB.NET" Value="Protected Property DynamicRenderer As DynamicRenderer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::DynamicRenderer ^ DynamicRenderer { System::Windows::Input::StylusPlugIns::DynamicRenderer ^ get(); void set(System::Windows::Input::StylusPlugIns::DynamicRenderer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicRenderer : System.Windows.Input.StylusPlugIns.DynamicRenderer with get, set" Usage="System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.DynamicRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-220">Obtiene o establece el representador que dibuja dinámicamente trazos de entrada de lápiz en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-220">Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-221">El procesador que dibuja dinámicamente trazos de entrada de lápiz en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-221">The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-222">Puede establecer el <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> propiedad personalizada <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> si desea personalizar la entrada de lápiz.</span><span class="sxs-lookup"><span data-stu-id="7c83e-222">You can set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c83e-223">El <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> es un miembro de la <xref:System.Windows.UIElement.StylusPlugIns%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="7c83e-223">The <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection.</span></span> <span data-ttu-id="7c83e-224">Al establecer el <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, el <xref:System.Windows.Controls.InkCanvas> quita la antigua <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> desde el <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> y agrega el nuevo <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="7c83e-224">When you set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection.</span></span> <span data-ttu-id="7c83e-225">Esto podría cambiar el comportamiento de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-225">This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingMode { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditingMode : System.Windows.Controls.InkCanvasEditingMode with get, set" Usage="System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-226">Obtiene o establece el modo de edición del usuario utilizado por un dispositivo señalador activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-226">Gets or sets the user editing mode used by an active pointing device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-227">Modo de edición que se utiliza cuando un dispositivo señalador (como un lápiz de tableta o mouse) está activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-227">The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-228">El valor predeterminado de <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> es <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-228">The default <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span> <span data-ttu-id="7c83e-229">Cambiar el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> borra cualquier selección existente.</span><span class="sxs-lookup"><span data-stu-id="7c83e-229">Changing the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> clears any existing selections.</span></span>  
  
 <span data-ttu-id="7c83e-230">El <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> especifica el modo del dispositivo señalador cuando interactúa con el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-230">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-231"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> está usando algunos digitalizadores cuando "end en borrador" del lápiz óptico pone en contacto con el digitalizador.</span><span class="sxs-lookup"><span data-stu-id="7c83e-231"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the "eraser end" of the stylus contacts the digitizer.</span></span>  
  
<a name="dependencyPropertyInfo_EditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-232">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-232">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-233">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-233">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  
|<span data-ttu-id="7c83e-234">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-234">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-235">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-235">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-236">En el ejemplo siguiente se crea una aplicación que utiliza los distintos tipos de modos de edición en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-236">The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[ICEditingModeSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ICEditingModeSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[ICEditingModeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ICEditingModeSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      </Docs>
    </Member>
    <Member MemberName="EditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditingModeChanged : System.Windows.RoutedEventHandler " Usage="member this.EditingModeChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-237">Se produce cuando se ha modificado la propiedad <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> de un objeto <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-237">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-238">Este evento se produce después de cambiar el modo de edición; los cambios se reflejan en el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> propiedad de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-238">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7c83e-239">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="7c83e-239">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-240">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-240">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  
|<span data-ttu-id="7c83e-241">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="7c83e-241">Routing strategy</span></span>|<span data-ttu-id="7c83e-242">Propagación</span><span class="sxs-lookup"><span data-stu-id="7c83e-242">Bubbling</span></span>|  
|<span data-ttu-id="7c83e-243">delegado</span><span class="sxs-lookup"><span data-stu-id="7c83e-243">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-244">El ejemplo siguiente se comprueba si el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> propiedad está establecida en <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> o <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-244">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> or <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[InkCanvasSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-245">Identifica el evento enrutado <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-245">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInverted">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingModeInverted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingModeInverted As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingModeInverted { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditingModeInverted : System.Windows.Controls.InkCanvasEditingMode with get, set" Usage="System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-246">Obtiene o establece el modo de edición del usuario si se invierte el lápiz cuando interactúa con <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-246">Gets or sets the user editing mode if the stylus is inverted when it interacts with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-247">El modo de edición invertido de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-247">The inverted editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-248">Esta propiedad controla las acciones que se realizan cuando el lápiz óptico está invertido.</span><span class="sxs-lookup"><span data-stu-id="7c83e-248">This property controls the actions that are performed when the stylus is inverted.</span></span>  
  
 <span data-ttu-id="7c83e-249">De forma similar, la <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> propiedad controla las acciones que se realizan cuando el lápiz se encuentra en una posición estándar, sugerencia desplegable contra el digitalizador.</span><span class="sxs-lookup"><span data-stu-id="7c83e-249">Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,</span></span>  
  
<a name="dependencyPropertyInfo_EditingModeInverted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-250">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-251">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-251">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  
|<span data-ttu-id="7c83e-252">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-252">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-253">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-254">El ejemplo siguiente muestra cómo permitir que un usuario borren trazos parcialmente con el extremo invertido de un lápiz óptico.</span><span class="sxs-lookup"><span data-stu-id="7c83e-254">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="7c83e-255">Un cursor elíptico aparece en el <xref:System.Windows.Controls.InkCanvas> cuando el usuario borra tinta.</span><span class="sxs-lookup"><span data-stu-id="7c83e-255">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeInvertedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeInvertedChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeInvertedChanged;" />
      <MemberSignature Language="F#" Value="member this.EditingModeInvertedChanged : System.Windows.RoutedEventHandler " Usage="member this.EditingModeInvertedChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-256">Se produce cuando se ha modificado la propiedad <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> de un objeto <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-256">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-257">Este evento se produce después de cambiar el modo de edición invertido.</span><span class="sxs-lookup"><span data-stu-id="7c83e-257">This event occurs after the inverted editing mode has been changed.</span></span> <span data-ttu-id="7c83e-258">Estos cambios se reflejan en el <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> propiedad de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-258">These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeInvertedChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7c83e-259">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="7c83e-259">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-260">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-260">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  
|<span data-ttu-id="7c83e-261">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="7c83e-261">Routing strategy</span></span>|<span data-ttu-id="7c83e-262">Propagación</span><span class="sxs-lookup"><span data-stu-id="7c83e-262">Bubbling</span></span>|  
|<span data-ttu-id="7c83e-263">delegado</span><span class="sxs-lookup"><span data-stu-id="7c83e-263">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-264">El ejemplo siguiente se comprueba si el <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> propiedad está establecida en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> o <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-264">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[InkCanvasSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeInvertedChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeInvertedChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-265">Identifica el evento enrutado <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-265">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeInvertedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeInvertedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeInvertedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-266">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-266">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-267">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-267">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraserShape">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusShape EraserShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StylusShape EraserShape" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberSignature Language="VB.NET" Value="Public Property EraserShape As StylusShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusShape ^ EraserShape { System::Windows::Ink::StylusShape ^ get(); void set(System::Windows::Ink::StylusShape ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EraserShape : System.Windows.Ink.StylusShape with get, set" Usage="System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-268">Obtiene o establece el objeto <see cref="T:System.Windows.Ink.StylusShape" /> que se utiliza para borrar entradas de lápiz en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-268">Gets or sets the <see cref="T:System.Windows.Ink.StylusShape" /> used to point-erase ink from an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-269">Forma que tiene el borrador asociado a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-269">The eraser shape associated with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-270">Esta forma se usará para borrar la tinta de una <xref:System.Windows.Controls.InkCanvas> cuando actual <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> está establecido en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-270">This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
 <span data-ttu-id="7c83e-271">Las propiedades individuales de un <xref:System.Windows.Ink.StylusShape> no puede modificarse una vez creada la forma.</span><span class="sxs-lookup"><span data-stu-id="7c83e-271">Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.</span></span>  
  
 <span data-ttu-id="7c83e-272">Si cambia el <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, el cursor representado en el <xref:System.Windows.Controls.InkCanvas> no se actualiza hasta la siguiente <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> cambiar.</span><span class="sxs-lookup"><span data-stu-id="7c83e-272">If you change the <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.</span></span>  
  
<a name="xamlTextUsage_EraserShape"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="7c83e-273">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-273">XAML Text Usage</span></span>  
 <span data-ttu-id="7c83e-274">Esta propiedad no se utiliza normalmente en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7c83e-274">This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-275">El ejemplo siguiente muestra cómo permitir que un usuario borren trazos parcialmente con el extremo invertido de un lápiz óptico.</span><span class="sxs-lookup"><span data-stu-id="7c83e-275">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="7c83e-276">Un cursor elíptico aparece en el <xref:System.Windows.Controls.InkCanvas> cuando el usuario borra tinta.</span><span class="sxs-lookup"><span data-stu-id="7c83e-276">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StylusShape" />
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasGestureEventHandler Gesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Gesture As InkCanvasGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasGestureEventHandler ^ Gesture;" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Controls.InkCanvasGestureEventHandler " Usage="member this.Gesture : System.Windows.Controls.InkCanvasGestureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-277">Se produce cuando <see cref="T:System.Windows.Controls.InkCanvas" /> detecta un gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-277">Occurs when the <see cref="T:System.Windows.Controls.InkCanvas" /> detects a gesture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Gesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7c83e-278">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="7c83e-278">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-279">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-279">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  
|<span data-ttu-id="7c83e-280">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="7c83e-280">Routing strategy</span></span>|<span data-ttu-id="7c83e-281">Propagación</span><span class="sxs-lookup"><span data-stu-id="7c83e-281">Bubbling</span></span>|  
|<span data-ttu-id="7c83e-282">delegado</span><span class="sxs-lookup"><span data-stu-id="7c83e-282">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-283">En el ejemplo siguiente se muestra cómo configurar un <xref:System.Windows.Controls.InkCanvas> a reconocer gestos en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="7c83e-283">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-284">Identifica el evento enrutado <see cref="E:System.Windows.Controls.InkCanvas.Gesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-284">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBottom">
      <MemberSignature Language="C#" Value="public static double GetBottom (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetBottom(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBottom (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetBottom(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetBottom : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetBottom element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-285">Elemento del que se obtiene el valor de la propiedad Bottom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-285">The element of which to get the bottom property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-286">Obtiene el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-286">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-287">Coordenada inferior del objeto de dependencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-287">The bottom coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-288">En el ejemplo siguiente se muestra cómo obtener la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-288">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#34](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#34)]
 [!code-vb[InkCanvasSamples#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberSignature Language="F#" Value="member this.GetEnabledGestures : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;" Usage="inkCanvas.GetEnabledGestures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-289">Devuelve una colección de gestos de la aplicación que <see cref="T:System.Windows.Controls.InkCanvas" /> reconoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-289">Returns a collection of application gestures that are recognized by <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-290">Colección de gestos que <see cref="T:System.Windows.Controls.InkCanvas" /> reconoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-290">A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-291">En el ejemplo siguiente se muestra cómo obtener los gestos de aplicación habilitado desde el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-291">The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#24)]
 [!code-vb[InkCanvasSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7c83e-292">La propiedad <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-292">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeft">
      <MemberSignature Language="C#" Value="public static double GetLeft (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLeft(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLeft (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLeft(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLeft : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetLeft element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-293">Elemento del que se obtiene el valor de la propiedad Left.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-293">The element of which to get the left property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-294">Obtiene el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Left" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-294">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-295">Coordenada izquierda del objeto de dependencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-295">The left coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-296">En el ejemplo siguiente se muestra cómo obtener la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-296">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#31](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#31)]
 [!code-vb[InkCanvasSamples#31](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRight">
      <MemberSignature Language="C#" Value="public static double GetRight (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRight(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRight (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetRight(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetRight : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetRight element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-297">Elemento del que se obtiene el valor de la propiedad Right.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-297">The element of which to get the right property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-298">Obtiene el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Right" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-298">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-299">Coordenada derecha del objeto de dependencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-299">The right coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-300">En el ejemplo siguiente se muestra cómo obtener la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-300">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#32](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#32)]
 [!code-vb[InkCanvasSamples#32](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt; GetSelectedElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.UIElement&gt; GetSelectedElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedElements () As ReadOnlyCollection(Of UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::UIElement ^&gt; ^ GetSelectedElements();" />
      <MemberSignature Language="F#" Value="member this.GetSelectedElements : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;" Usage="inkCanvas.GetSelectedElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-301">Recupera los objetos <see cref="T:System.Windows.FrameworkElement" /> que están seleccionados en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-301">Retrieves the <see cref="T:System.Windows.FrameworkElement" /> objects that are selected in the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-302">Matriz de objetos <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-302">Array of <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-303">Este método devuelve sólo <xref:System.Windows.FrameworkElement> objetos, no <xref:System.Windows.Ink.Stroke> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-303">This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.</span></span>  
  
 <span data-ttu-id="7c83e-304">Para recuperar seleccionado <xref:System.Windows.Ink.Stroke> objetos, llamar a la <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-304">To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.</span></span>  
  
 <span data-ttu-id="7c83e-305">Si el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> de <xref:System.Windows.Controls.InkCanvas> está establecido en <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, los usuarios pueden seleccionar <xref:System.Windows.Ink.Stroke> objetos y <xref:System.Windows.FrameworkElement> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-305">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="7c83e-306">Como alternativa, se pueden seleccionar ambos tipos de objetos mediante código: simplemente llamar a la <xref:System.Windows.Controls.InkCanvas.Select%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-306">Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-307">El ejemplo siguiente duplica el alto y ancho de cada elemento seleccionado en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-307">The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[InkCanvasSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedStrokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetSelectedStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedStrokes () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetSelectedStrokes();" />
      <MemberSignature Language="F#" Value="member this.GetSelectedStrokes : unit -&gt; System.Windows.Ink.StrokeCollection" Usage="inkCanvas.GetSelectedStrokes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-308">Recupera una colección <see cref="T:System.Windows.Ink.StrokeCollection" /> que representa los objetos <see cref="T:System.Windows.Ink.Stroke" /> seleccionados en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-308">Retrieves a <see cref="T:System.Windows.Ink.StrokeCollection" /> that represents selected <see cref="T:System.Windows.Ink.Stroke" /> objects on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-309">Colección de trazos seleccionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-309">The collection of selected strokes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-310">Este método devuelve <xref:System.Windows.Ink.Stroke> solo los objetos,.</span><span class="sxs-lookup"><span data-stu-id="7c83e-310">This method returns <xref:System.Windows.Ink.Stroke> objects, only.</span></span> <span data-ttu-id="7c83e-311">Para recuperar seleccionado <xref:System.Windows.FrameworkElement> objetos, llamar a la <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-311">To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.</span></span>  
  
 <span data-ttu-id="7c83e-312">Si el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> de <xref:System.Windows.Controls.InkCanvas> está establecido en <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, los usuarios pueden seleccionar <xref:System.Windows.Ink.Stroke> objetos y <xref:System.Windows.FrameworkElement> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-312">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="7c83e-313">Como alternativa, se pueden seleccionar ambos tipos de objetos mediante código: simplemente llamar a la <xref:System.Windows.Controls.InkCanvas.Select%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-313">Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-314">En el ejemplo siguiente se cambia el color de cada trazo seleccionado en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-314">The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[InkCanvasSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetSelectionBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetSelectionBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectionBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectionBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetSelectionBounds();" />
      <MemberSignature Language="F#" Value="member this.GetSelectionBounds : unit -&gt; System.Windows.Rect" Usage="inkCanvas.GetSelectionBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-315">Obtiene los límites de los trazos y elementos seleccionados en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-315">Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-316">El rectángulo más pequeño que abarca todos los trazos y elementos seleccionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-316">The smallest rectangle that encompasses all selected strokes and elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-317">En el ejemplo siguiente, se impide que el usuario realizando una selección menor que su tamaño original.</span><span class="sxs-lookup"><span data-stu-id="7c83e-317">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTop">
      <MemberSignature Language="C#" Value="public static double GetTop (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetTop(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTop (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetTop(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTop : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetTop element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-318">Elemento del que se obtiene el valor de la propiedad Top.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-318">The element of which to get the top property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-319">Obtiene el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Top" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-319">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-320">Coordenada superior del objeto de dependencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-320">The top coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-321">En el ejemplo siguiente se muestra cómo obtener la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-321">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#33](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#33)]
 [!code-vb[InkCanvasSamples#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="inkCanvas.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7c83e-322">Índice de base cero del elemento secundario solicitado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-322">The zero-based index of the requested child element in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-323">Invalida <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> y devuelve un elemento secundario situado en el índice especificado de una colección de elementos secundarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-323">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-324">Elemento secundario solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-324">The requested child element.</span>
          </span>
          <span data-ttu-id="7c83e-325">Esto no debería devolver <see langword="null" />; si el índice proporcionado está fuera del intervalo, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-325">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParams As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParams);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="inkCanvas.HitTestCore hitTestParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParams" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParams">
          <span data-ttu-id="7c83e-326">Objeto que especifica el objeto <see cref="T:System.Windows.Point" /> en el que se ejecuta la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-326">An object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-327">Determina si un punto determinado está comprendido dentro de los límites de representación de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-327">Determines whether a given point falls within the rendering bounds of an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-328">Objeto que representa el <see cref="T:System.Windows.Media.Visual" /> devuelto desde la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-328">An object that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::InkCanvasSelectionHitResult HitTestSelection(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTestSelection : System.Windows.Point -&gt; System.Windows.Controls.InkCanvasSelectionHitResult" Usage="inkCanvas.HitTestSelection point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionHitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="7c83e-329">Punto para la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-329">The point to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-330">Devuelve un valor que indica qué parte del adorno de la selección cruza o rodea el punto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-330">Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-331">Valor que indica qué parte del adorno de la selección cruza o rodea un punto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-331">A value that indicates which part of the selection adorner intersects or surrounds a specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-332">Use el <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> método para determinar si el punto está dentro de los límites de una selección de trazos o en uno de los ocho controladores.</span><span class="sxs-lookup"><span data-stu-id="7c83e-332">Use the <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.</span></span>  <span data-ttu-id="7c83e-333">Esto es útil al realizar operaciones arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="7c83e-333">This is useful when performing drag and drop operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-334">En el ejemplo siguiente se muestra cómo usar <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> para determinar si se debe crear un <xref:System.Windows.DataObject> iniciar arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="7c83e-334">The following example demonstrates how use <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.</span></span>  <span data-ttu-id="7c83e-335">Para implementar arrastrar y colocar entre dos <xref:System.Windows.Controls.InkCanvas> objetos, vea [Cómo: arrastrar y colocar entrada manuscrita](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span><span class="sxs-lookup"><span data-stu-id="7c83e-335">To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span></span>  
  
 [!code-csharp[InkDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkDragDrop/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkDragDrop/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkPresenter">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.InkPresenter InkPresenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.InkPresenter InkPresenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InkPresenter As InkPresenter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Controls::InkPresenter ^ InkPresenter { System::Windows::Controls::InkPresenter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InkPresenter : System.Windows.Controls.InkPresenter" Usage="System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkPresenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-336">Obtiene la presentación de entrada de lápiz donde se muestra la entrada de lápiz de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-336">Gets the ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-337">Presentación de entrada de lápiz donde se muestra la entrada de lápiz de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-337">The ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGestureRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsGestureRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGestureRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGestureRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGestureRecognizerAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGestureRecognizerAvailable : bool" Usage="System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-338">Obtiene (determina) si el componente de reconocimiento de gestos está disponible en el sistema del usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-338">Gets (determines) whether the gesture recognition component is available on the user's system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-339">Es <see langword="true" />si está disponible el componente de reconocimiento; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-339">
              <see langword="true" /> if the recognition component is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-340">En el ejemplo siguiente se muestra cómo configurar un <xref:System.Windows.Controls.InkCanvas> a reconocer gestos en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="7c83e-340">The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="ILAsm" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Left" />
      <MemberSignature Language="VB.NET" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="F#" Value="see GetLeft, and SetLeft" Usage="see GetLeft, and SetLeft" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-341">Obtiene o establece la distancia entre el lado izquierdo de un elemento y el lado izquierdo de su <see cref="T:System.Windows.Controls.InkCanvas" /> principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-341">Gets or sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Left"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-342">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-342">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-343">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-343">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.LeftProperty>|  
|<span data-ttu-id="7c83e-344">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-344">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-345">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-345">None</span></span>|  
  
<a name="xamlAttributeUsage_Left"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="7c83e-346">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-346">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Left="double"/>  
- or –  
<object InkCanvas.Left="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Left"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7c83e-347">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-347">XAML Values</span></span>  
 <span data-ttu-id="7c83e-348">*double*</span><span class="sxs-lookup"><span data-stu-id="7c83e-348">*double*</span></span>  
 <span data-ttu-id="7c83e-349">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="7c83e-349">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="7c83e-350">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="7c83e-350">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="7c83e-351">Las cadenas no necesitan incluir explícitamente puntos decimales.</span><span class="sxs-lookup"><span data-stu-id="7c83e-351">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="7c83e-352">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="7c83e-352">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="7c83e-353">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="7c83e-353">*qualifiedDouble*</span></span>  
 <span data-ttu-id="7c83e-354">Un *doble* valor, como se describió anteriormente, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-354">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="7c83e-355">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="7c83e-355">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="7c83e-356">`in` pulgadas; 1in == 96 px</span><span class="sxs-lookup"><span data-stu-id="7c83e-356">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="7c83e-357">`cm` es centímetros; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-357">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="7c83e-358">`pt` puntos; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-358">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-359">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Label> en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-359">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-360">Identifica la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-360">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-361">Devuelve un enumerador para los elementos secundarios lógicos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-361">Returns enumerator to logical children.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="inkCanvas.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="7c83e-362">Tamaño disponible que este elemento puede otorgar a los elementos secundarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-362">The available size that this element can give to child elements.</span>
          </span>
          <span data-ttu-id="7c83e-363">Se puede usar infinito como valor para indicar que el elemento se ajustará a cualquier contenido disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-363">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-364">Mide el tamaño del diseño necesario para los elementos secundarios y determina un tamaño para el objeto <see cref="System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-364">Measures the size in layout required for child elements and determines a size for the <see cref="System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c83e-365">Tamaño que este elemento determina que necesita durante el diseño, según sus cálculos de los tamaños de los elementos secundarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-365">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MoveEnabled">
      <MemberSignature Language="C#" Value="public bool MoveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MoveEnabled : bool with get, set" Usage="System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-366">Obtiene o establece un valor booleano que indica si el usuario puede mover los trazos de entrada de lápiz y los elementos seleccionados en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-366">Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-367">
            <see langword="true" /> si un usuario puede mover los trazos y elementos de <see cref="T:System.Windows.Controls.InkCanvas" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-367">
              <see langword="true" /> if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-368">Si esta propiedad se establece en `true`, se dibuja un borde de adorno en torno a los trazos de tinta o elementos cuando se seleccionan.</span><span class="sxs-lookup"><span data-stu-id="7c83e-368">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="7c83e-369">Este borde permite al usuario mover los objetos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="7c83e-369">This border enables the user to move the selected objects.</span></span> <span data-ttu-id="7c83e-370">Si <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> es `true`, el adorno permite al usuario cambiar el tamaño de los trazos o elementos también.</span><span class="sxs-lookup"><span data-stu-id="7c83e-370">If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="7c83e-371">Si esta propiedad se establece en `false` mientras uno o varios trazos de tinta o elementos están seleccionados, el borde de adorno se quitará automáticamente de los objetos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="7c83e-371">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-372">En el ejemplo siguiente, se evita que un usuario mover y cambiar el tamaño de los elementos y trazos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-372">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActiveEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnActiveEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnActiveEditingModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-373">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-373">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-374">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-374">Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="inkCanvas.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-375">Proporciona una implementación adecuada de <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> para este control, como parte de la infraestructura de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-375">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit&#xA;override this.OnDefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit" Usage="inkCanvas.OnDefaultDrawingAttributesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-376">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-376">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-377">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-377">Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnEditingModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-378">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-378">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-379">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-379">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-380">Este evento se produce después de cambiar el modo de edición; los cambios se reflejan en el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> propiedad de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-380">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeInvertedChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeInvertedChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeInvertedChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingModeInvertedChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnEditingModeInvertedChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnEditingModeInvertedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-381">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-381">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-382">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-382">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-383">Este evento se produce después de cambiar el modo de edición invertido; los cambios reflejados en el <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> propiedad de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-383">This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGesture(class System.Windows.Controls.InkCanvasGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGesture (e As InkCanvasGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGesture(System::Windows::Controls::InkCanvasGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGesture : System.Windows.Controls.InkCanvasGestureEventArgs -&gt; unit&#xA;override this.OnGesture : System.Windows.Controls.InkCanvasGestureEventArgs -&gt; unit" Usage="inkCanvas.OnGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-384">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-384">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-385">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.Gesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-385">Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="inkCanvas.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-386">Datos de evento que describen la propiedad que cambió, así como los valores antiguos y nuevos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-386">The event data that describes the property that changed, as well as old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-387">Se invoca cada vez que se actualiza el valor efectivo de una propiedad de dependencia de este control <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-387">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span>
          </span>
          <span data-ttu-id="7c83e-388">Propiedad de dependencia concreta que cambió se notifica en el parámetro de argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-388">The specific dependency property that changed is reported in the arguments parameter.</span>
          </span>
          <span data-ttu-id="7c83e-389">Invalida <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-389">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-390">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-390">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-391">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-391">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-392">Este método se llama después de que se ha seleccionado un conjunto de trazos de tinta o elementos por el usuario y se ha aplicado el cambio de selección.</span><span class="sxs-lookup"><span data-stu-id="7c83e-392">This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.</span></span> <span data-ttu-id="7c83e-393">Antes de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-393">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanging(class System.Windows.Controls.InkCanvasSelectionChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanging (e As InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanging(System::Windows::Controls::InkCanvasSelectionChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventArgs -&gt; unit&#xA;override this.OnSelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-394">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-394">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-395">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-395">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-396">Este método se llama cuando se realiza una nueva selección de trazos o elementos por el usuario, pero antes de aplicar el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-396">This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.</span></span> <span data-ttu-id="7c83e-397">Después de haber aplicado el cambio, el <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-397">After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoved (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoved(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoved (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoved(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionMoved : EventArgs -&gt; unit&#xA;override this.OnSelectionMoved : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-398">No usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-398">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-399">Evento que anuncia que el usuario ha seleccionado y movido una selección de trazos o elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-399">An event announcing that the user selected and moved a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-400">Este método se llama después de que se ha movido una selección de trazos o elementos por el usuario y se ha aplicado el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-400">This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.</span></span> <span data-ttu-id="7c83e-401">Antes de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-401">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoving(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoving (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoving(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit&#xA;override this.OnSelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-402">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-402">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-403">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-403">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-404">Este método se llama después de que el usuario solicita que se mueve una selección de trazos o elementos y antes de aplicar el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-404">This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.</span></span> <span data-ttu-id="7c83e-405">Después de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-405">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResized">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionResized : EventArgs -&gt; unit&#xA;override this.OnSelectionResized : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionResized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-406">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-406">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-407">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-407">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-408">Este método se llama después de que el usuario ha cambiado el tamaño de una selección de trazos o elementos y se ha aplicado el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-408">This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.</span></span> <span data-ttu-id="7c83e-409">Antes de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-409">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResizing(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResizing (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResizing(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit&#xA;override this.OnSelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-410">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-410">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-411">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-411">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-412">Este método se llama después de que el usuario solicita una selección de trazos o elementos cambiarse y antes de aplicar el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-412">This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.</span></span> <span data-ttu-id="7c83e-413">Después de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> se llamará al método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-413">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStrokeCollected">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeCollected(class System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeCollected (e As InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeCollected(System::Windows::Controls::InkCanvasStrokeCollectedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventArgs -&gt; unit&#xA;override this.OnStrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeCollected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-414">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-414">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-415">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-415">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-416"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> se llama cuando un usuario completa físicamente un trazo, por ejemplo, generando el lápiz óptico de una tableta después de realizar un movimiento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-416"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.</span></span>  
  
 <span data-ttu-id="7c83e-417">Una adición de trazos que mediante programación el <xref:System.Windows.Controls.InkCanvas.Strokes%2A> no llamará la colección el <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c83e-417">A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErased">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErased(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErased (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErased(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeErased : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnStrokeErased : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeErased e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-418">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-418">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-419">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-419">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErasing">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErasing(class System.Windows.Controls.InkCanvasStrokeErasingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErasing (e As InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErasing(System::Windows::Controls::InkCanvasStrokeErasingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventArgs -&gt; unit&#xA;override this.OnStrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeErasing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeErasingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-420">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-420">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-421">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-421">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesReplaced(class System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesReplaced (e As InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesReplaced(System::Windows::Controls::InkCanvasStrokesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventArgs -&gt; unit&#xA;override this.OnStrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7c83e-422">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-422">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-423">Genera el evento <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-423">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Paste">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-424">Pega el contenido del Portapapeles en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-424">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-425">El <xref:System.Windows.Controls.InkCanvas> puede admitir los datos del Portapapeles en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]y el formato de texto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-425">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="inkCanvas.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-426">Pega el contenido del Portapapeles en la esquina superior izquierda de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-426">Pastes the contents of the Clipboard to the top-left corner of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-427">El <xref:System.Windows.Controls.InkCanvas> puede admitir los datos del Portapapeles en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]y el formato de texto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-427">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-428">El ejemplo siguiente se copia un elemento en el Portapapeles y lo pega en el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-428">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-429">En este ejemplo se supone que hay un elemento denominado `rect1`y que la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos se han conectado a los controladores de eventos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-429">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="7c83e-430">Para pegar el contenido del Portapapeles en el <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-430">for pasting content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="7c83e-431">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-431">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Point -&gt; unit" Usage="inkCanvas.Paste point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="7c83e-432">Punto en el que se van a pegar los trazos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-432">The point at which to paste the strokes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-433">Pega el contenido del Portapapeles en un punto determinado de <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-433">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" /> at a given point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-434">El <xref:System.Windows.Controls.InkCanvas> puede admitir los datos del Portapapeles en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]y el formato de texto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-434">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-435">El ejemplo siguiente se copia un elemento en el Portapapeles y lo pega en el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-435">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-436">En este ejemplo se supone que hay un elemento denominado `rect1`y que la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos están conectados a los controladores de eventos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-436">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="7c83e-437">Permiso para pegar el contenido del Portapapeles en el <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-437">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="7c83e-438">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-438">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteFormats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredPasteFormats As IEnumerable(Of InkCanvasClipboardFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ PreferredPasteFormats { System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredPasteFormats : seq&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; with get, set" Usage="System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-439">Obtiene o establece formatos que se pueden pegar en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-439">Gets or sets formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-440">Colección de valores de la enumeración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-440">A collection of enumeration values.</span>
          </span>
          <span data-ttu-id="7c83e-441">El valor predeterminado es <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-441">The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_PreferredPasteFormats"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="7c83e-442">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-442">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.PreferredPasteFormats>  
    InkCanvasClipboardFormats  
  </object.PreferredPasteFormats>  
</object>  
```  
  
<a name="xamlValues_PreferredPasteFormats"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7c83e-443">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-443">XAML Values</span></span>  
 <span data-ttu-id="7c83e-444">*InkCanvasClipboardFormats*</span><span class="sxs-lookup"><span data-stu-id="7c83e-444">*InkCanvasClipboardFormats*</span></span>  
 <span data-ttu-id="7c83e-445">Una matriz de <xref:System.Windows.Controls.InkCanvasClipboardFormat> valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="7c83e-445">An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values.</span></span> <span data-ttu-id="7c83e-446">Especifica una matriz en XAML requiere `x:Array` uso.</span><span class="sxs-lookup"><span data-stu-id="7c83e-446">Specifying an array in XAML requires `x:Array` usage.</span></span> <span data-ttu-id="7c83e-447">Especificar un valor de enumeración como un elemento que se declara un miembro de matriz requiere `x:Static` uso.</span><span class="sxs-lookup"><span data-stu-id="7c83e-447">Specifying an enumeration value as an element that declares an array member requires `x:Static` usage.</span></span> <span data-ttu-id="7c83e-448">Para obtener más información, consulte [x: Array Markup Extension](~/docs/framework/xaml-services/x-array-markup-extension.md) y [x: Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="7c83e-448">For more information, see [x:Array Markup Extension](~/docs/framework/xaml-services/x-array-markup-extension.md) and [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-449">El ejemplo siguiente se establece la <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> para realizar la <xref:System.Windows.Controls.InkCanvas> acepte [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] formato, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7c83e-449">The following example sets the <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
 [!code-csharp[InkCanvasSamples#26](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#26)]
 [!code-vb[InkCanvasSamples#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#26)]  
  
 <span data-ttu-id="7c83e-450">En el ejemplo siguiente, se consigue lo mismo en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7c83e-450">The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[InkCanvasSamples#38](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window2.xaml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeEnabled">
      <MemberSignature Language="C#" Value="public bool ResizeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResizeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeEnabled : bool with get, set" Usage="System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-451">Obtiene o establece un valor booleano que indica si el usuario puede cambiar el tamaño de los trazos de entrada de lápiz o elementos seleccionados en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-451">Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-452">
            <see langword="true" /> si un usuario puede cambiar el tamaño de los trazos y elementos de <see cref="T:System.Windows.Controls.InkCanvas" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-452">
              <see langword="true" /> if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-453">Si esta propiedad se establece en `true`, se dibuja un borde de adorno en torno a los trazos de tinta o elementos cuando se seleccionan.</span><span class="sxs-lookup"><span data-stu-id="7c83e-453">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="7c83e-454">Este borde permite al usuario cambiar el tamaño de los objetos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="7c83e-454">This border enables the user to resize the selected objects.</span></span> <span data-ttu-id="7c83e-455">Si <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> es `true`, el adorno también permite al usuario mover los trazos o elementos también.</span><span class="sxs-lookup"><span data-stu-id="7c83e-455">If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="7c83e-456">Si esta propiedad se establece en `false` mientras uno o varios trazos de tinta o elementos están seleccionados, el borde de adorno se quitará automáticamente de los objetos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="7c83e-456">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-457">En el ejemplo siguiente, se evita que un usuario mover y cambiar el tamaño de los elementos y trazos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-457">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="see GetRight, and SetRight" />
      <MemberSignature Language="ILAsm" Value="see GetRight, and SetRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Right" />
      <MemberSignature Language="VB.NET" Value="see GetRight, and SetRight" />
      <MemberSignature Language="F#" Value="see GetRight, and SetRight" Usage="see GetRight, and SetRight" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-458">Obtiene o establece la distancia entre el lado derecho de un elemento y el lado derecho de su <see cref="T:System.Windows.Controls.InkCanvas" /> principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-458">Gets or sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Right"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-459">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-459">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-460">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-460">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.RightProperty>|  
|<span data-ttu-id="7c83e-461">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-461">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-462">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-462">None</span></span>|  
  
<a name="xamlAttributeUsage_Right"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="7c83e-463">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-463">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Right="double"/>  
- or –  
<object InkCanvas.Right="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Right"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7c83e-464">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-464">XAML Values</span></span>  
 <span data-ttu-id="7c83e-465">*double*</span><span class="sxs-lookup"><span data-stu-id="7c83e-465">*double*</span></span>  
 <span data-ttu-id="7c83e-466">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="7c83e-466">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="7c83e-467">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="7c83e-467">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="7c83e-468">Las cadenas no necesitan incluir explícitamente puntos decimales.</span><span class="sxs-lookup"><span data-stu-id="7c83e-468">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="7c83e-469">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="7c83e-469">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="7c83e-470">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="7c83e-470">*qualifiedDouble*</span></span>  
 <span data-ttu-id="7c83e-471">Un *doble* valor, como se describió anteriormente, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-471">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="7c83e-472">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="7c83e-472">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="7c83e-473">`in` pulgadas; 1in == 96 px</span><span class="sxs-lookup"><span data-stu-id="7c83e-473">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="7c83e-474">`cm` es centímetros; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-474">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="7c83e-475">`pt` puntos; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-475">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-476">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Label> en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-476">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-477">Identifica la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-477">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached propertyy.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-478">Selecciona un conjunto de objetos <see cref="T:System.Windows.Ink.Stroke" /> de entrada de lápiz o de objetos <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-478">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects and/or <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-479">Un <xref:System.Windows.Controls.InkCanvas> puede contener <xref:System.Windows.Ink.Stroke> objetos, que se crean en respuesta a la entrada de lápiz del usuario, y <xref:System.Windows.FrameworkElement> objetos, como <xref:System.Windows.Controls.Image> y <xref:System.Windows.Controls.Button> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-479">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="7c83e-480">Los trazos seleccionados se mostrará con un adorno en torno a ellas para facilitar su reconocimiento y manipulación.</span><span class="sxs-lookup"><span data-stu-id="7c83e-480">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="7c83e-481"><xref:System.Windows.FrameworkElement> objetos no se mostrarán de forma diferente cuando se selecciona.</span><span class="sxs-lookup"><span data-stu-id="7c83e-481"><xref:System.Windows.FrameworkElement> objects will not display differently when selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberSignature Language="F#" Value="member this.Select : seq&lt;System.Windows.UIElement&gt; -&gt; unit" Usage="inkCanvas.Select selectedElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedElements">
          <span data-ttu-id="7c83e-482">Colección de los objetos <see cref="T:System.Windows.UIElement" /> que se van a seleccionar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-482">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-483">Selecciona un conjunto de objetos <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-483">Selects a set of <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-484">Un <xref:System.Windows.Controls.InkCanvas> puede contener <xref:System.Windows.Ink.Stroke> objetos, que se crean en respuesta a la entrada de lápiz de usuario y <xref:System.Windows.UIElement> objetos, como <xref:System.Windows.Controls.Image> y <xref:System.Windows.Controls.Button> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-484">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="7c83e-485">Los trazos seleccionados se muestran con un adorno en torno a ellas para facilitar su reconocimiento y manipulación.</span><span class="sxs-lookup"><span data-stu-id="7c83e-485">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="7c83e-486"><xref:System.Windows.UIElement> objetos no se mostrarán de forma diferente cuando se selecciona.</span><span class="sxs-lookup"><span data-stu-id="7c83e-486"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="7c83e-487">Si un <xref:System.Windows.UIElement> en `selectedElements` no está en la colección de elementos secundarios, <xref:System.Windows.Controls.InkCanvas.Select%2A> omite el <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-487">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-488">El ejemplo siguiente se seleccionan todos los trazos y dos elementos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-488">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-489">En este ejemplo se supone que hay un <xref:System.Windows.Controls.TextBox> llamado `textbox1` y un <xref:System.Windows.Controls.Button> llamado `button1` - y que ambos controles son elementos secundarios de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-489">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="inkCanvas.Select selectedStrokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="7c83e-490">Colección de los objetos <see cref="T:System.Windows.Ink.Stroke" /> que se van a seleccionar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-490">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-491">Selecciona un conjunto de objetos <see cref="T:System.Windows.Ink.Stroke" /> de entrada de lápiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-491">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-492">Un <xref:System.Windows.Controls.InkCanvas> puede contener <xref:System.Windows.Ink.Stroke> objetos, que se crean en respuesta a la entrada de lápiz del usuario, y <xref:System.Windows.FrameworkElement> objetos, como <xref:System.Windows.Controls.Image> y <xref:System.Windows.Controls.Button> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-492">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="7c83e-493">Los trazos seleccionados se muestran con un adorno en torno a ellas para facilitar su reconocimiento y manipulación.</span><span class="sxs-lookup"><span data-stu-id="7c83e-493">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="7c83e-494"><xref:System.Windows.FrameworkElement> objetos no se muestran forma diferente cuando se selecciona.</span><span class="sxs-lookup"><span data-stu-id="7c83e-494"><xref:System.Windows.FrameworkElement> objects do not display differently when selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-495">El ejemplo siguiente se seleccionan todos los trazos y dos elementos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-495">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="7c83e-496">En este ejemplo se supone que hay un <xref:System.Windows.Controls.TextBox> llamado `textbox1` y un <xref:System.Windows.Controls.Button> llamado `button1` - y que ambos controles son elementos secundarios de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-496">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c83e-497">Uno o varios trazos que se encuentran en <paramref name="selectedStrokes" /> no están en la propiedad <see cref="P:System.Windows.Controls.InkCanvas.Strokes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-497">One or more strokes in <paramref name="selectedStrokes" /> is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection, selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes, System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Ink.StrokeCollection * seq&lt;System.Windows.UIElement&gt; -&gt; unit" Usage="inkCanvas.Select (selectedStrokes, selectedElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="7c83e-498">Colección de los objetos <see cref="T:System.Windows.Ink.Stroke" /> que se van a seleccionar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-498">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <param name="selectedElements">
          <span data-ttu-id="7c83e-499">Colección de los objetos <see cref="T:System.Windows.UIElement" /> que se van a seleccionar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-499">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-500">Selecciona una combinación de objetos <see cref="T:System.Windows.Ink.Stroke" /> y <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-500">Selects a combination of <see cref="T:System.Windows.Ink.Stroke" /> and <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-501">Un <xref:System.Windows.Controls.InkCanvas> puede contener <xref:System.Windows.Ink.Stroke> objetos, que se crean en respuesta a la entrada de lápiz de usuario y <xref:System.Windows.UIElement> objetos, como <xref:System.Windows.Controls.Image> y <xref:System.Windows.Controls.Button> objetos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-501">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="7c83e-502">Los trazos seleccionados se mostrará con un adorno en torno a ellas para facilitar su reconocimiento y manipulación.</span><span class="sxs-lookup"><span data-stu-id="7c83e-502">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="7c83e-503"><xref:System.Windows.UIElement> objetos no se mostrarán de forma diferente cuando se selecciona.</span><span class="sxs-lookup"><span data-stu-id="7c83e-503"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="7c83e-504">Si un <xref:System.Windows.UIElement> en `selectedElements` no está en la colección de elementos secundarios, <xref:System.Windows.Controls.InkCanvas.Select%2A> omite el <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-504">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-505">El ejemplo siguiente se seleccionan todos los trazos y dos elementos en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-505">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="7c83e-506">En este ejemplo se supone que hay un <xref:System.Windows.Controls.TextBox> llamado `textbox1` y un <xref:System.Windows.Controls.Button> llamado `button1` - y que ambos controles son elementos secundarios de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-506">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c83e-507">Uno o varios trazos de <paramref name="selectedStrokes" /> no están incluidos en la propiedad <see cref="P:System.Windows.Controls.InkCanvas.Strokes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-507">One or more strokes in <paramref name="selectedStrokes" /> is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-508">Se produce cuando cambia la selección del control <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-508">Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-509">Este evento se desencadena después de haber seleccionado un conjunto de trazos de tinta o elementos y aplicada por el usuario.</span><span class="sxs-lookup"><span data-stu-id="7c83e-509">This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.</span></span>  
  
 <span data-ttu-id="7c83e-510">Si en su lugar, debe controlar una solicitud que seleccione un conjunto de trazos de tinta o elementos antes de aplica la selección, agregar un controlador de eventos para el <xref:System.Windows.Controls.InkCanvas.SelectionChanging> eventos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-510">If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-511">En el ejemplo siguiente, se impide que el usuario realizando una selección menor que su tamaño original.</span><span class="sxs-lookup"><span data-stu-id="7c83e-511">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanging As InkCanvasSelectionChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionChangingEventHandler ^ SelectionChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventHandler " Usage="member this.SelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-512">Se produce cuando se selecciona un nuevo conjunto de trazos de entrada de lápiz o elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-512">Occurs when a new set of ink strokes and/or elements is being selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-513">El <xref:System.Windows.Controls.InkCanvas.SelectionChanging> evento se produce cuando se seleccionan los trazos o elementos por el usuario, pero antes de aplicar el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-513">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is raised when strokes and/or elements are selected by the user - but before the change is applied.</span></span>  
  
 <span data-ttu-id="7c83e-514">El <xref:System.Windows.Controls.InkCanvas.SelectionChanging> se procesa el evento cuando la <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> recibe un <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> objeto.</span><span class="sxs-lookup"><span data-stu-id="7c83e-514">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object.</span></span> <span data-ttu-id="7c83e-515"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> Proporciona métodos para tener acceso a <xref:System.Windows.FrameworkElement> y <xref:System.Windows.Ink.StrokeCollection> objetos una vez que se seleccionan por el usuario.</span><span class="sxs-lookup"><span data-stu-id="7c83e-515"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.</span></span>  
  
 <span data-ttu-id="7c83e-516">Después de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.SelectionChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-516">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c83e-517">El <xref:System.Windows.Controls.InkCanvas.SelectionChanging> evento no se produce cuando se eliminan los trazos seleccionados o cuando el <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> los cambios de propiedad.</span><span class="sxs-lookup"><span data-stu-id="7c83e-517">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-518">El ejemplo siguiente hace que los trazos seleccionados royal azul.</span><span class="sxs-lookup"><span data-stu-id="7c83e-518">The following example makes selected strokes royal blue.</span></span>  
  
 [!code-csharp[InkCanvasSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[InkCanvasSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoved">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoved As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionMoved;" />
      <MemberSignature Language="F#" Value="member this.SelectionMoved : EventHandler " Usage="member this.SelectionMoved : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-519">Se produce una vez que el usuario mueve una selección trazos o elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-519">Occurs after the user moves a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-520">Este evento se produce después de que se mueve una selección de trazos o elementos, pero antes del trazo o elemento de datos se actualizan para registrar la nueva posición.</span><span class="sxs-lookup"><span data-stu-id="7c83e-520">This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.</span></span> <span data-ttu-id="7c83e-521">Agregar un controlador de eventos para el <xref:System.Windows.Controls.InkCanvas.SelectionMoving> eventos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-521">Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-522">En el ejemplo siguiente, se anula la selección de elementos en un <xref:System.Windows.Controls.InkCanvas> después de que el usuario mueve a ellos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-522">The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.</span></span>  
  
 [!code-csharp[InkCanvasSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#19)]
 [!code-vb[InkCanvasSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoving As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionMoving;" />
      <MemberSignature Language="F#" Value="member this.SelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " Usage="member this.SelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-523">Se produce antes de que los trazos y elementos seleccionados se muevan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-523">Occurs before selected strokes and elements are moved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-524">Este evento se produce después de que el usuario solicita que se mueve una selección de trazos o elementos, pero antes de aplicar el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-524">This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.</span></span>  
  
 <span data-ttu-id="7c83e-525">El controlador de eventos recibe un argumento de tipo <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> con dos propiedades: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> y <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-525">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="7c83e-526"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> define los límites de la selección antes de moverlo y <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> define los límites de la selección después de moverlo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-526"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.</span></span>  
  
 <span data-ttu-id="7c83e-527">Después de aplicar el cambio, el <xref:System.Windows.Controls.InkCanvas.SelectionMoved> se producirá el evento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-527">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-528">El ejemplo siguiente impide al usuario mover elementos seleccionados verticalmente en una <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-528">The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[InkCanvasSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResized">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResized" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionResized;" />
      <MemberSignature Language="F#" Value="member this.SelectionResized : EventHandler " Usage="member this.SelectionResized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-529">Se produce cuando el usuario ha cambiado el tamaño de una selección de trazos o elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-529">Occurs when a selection of strokes and/or elements has been resized by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-530">Este evento se desencadena después de cambiar el tamaño de una selección de trazos o elementos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-530">This event is raised after a selection of strokes and/or elements is resized.</span></span>  
  
 <span data-ttu-id="7c83e-531">Si, en su lugar, debe controlar una solicitud para cambiar el tamaño de una selección antes de que se cambia el tamaño de los trazos o elementos, agregue un controlador de eventos para el <xref:System.Windows.Controls.InkCanvas.SelectionResizing> eventos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-531">If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-532">En el ejemplo siguiente, se anula la selección de todos los elementos en un <xref:System.Windows.Controls.InkCanvas> después de que el usuario cambia el tamaño de la selección.</span><span class="sxs-lookup"><span data-stu-id="7c83e-532">The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.</span></span>  
  
 [!code-csharp[InkCanvasSamples#23](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#23)]
 [!code-vb[InkCanvasSamples#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResizing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResizing As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionResizing;" />
      <MemberSignature Language="F#" Value="member this.SelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " Usage="member this.SelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-533">Se produce antes de que los trazos y elementos seleccionados cambien de tamaño.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-533">Occurs before selected strokes and elements are resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-534">Este evento se produce después de que el usuario solicita que se puede cambiar el tamaño de una selección de trazos o elementos, pero antes de aplicar el cambio.</span><span class="sxs-lookup"><span data-stu-id="7c83e-534">This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.</span></span>  
  
 <span data-ttu-id="7c83e-535">El controlador de eventos recibe un argumento de tipo <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> que contiene dos propiedades: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> y <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-535">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="7c83e-536"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> define los límites de la selección antes de la operación de cambio de tamaño y <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> define los límites de la selección después de la operación de cambio de tamaño.</span><span class="sxs-lookup"><span data-stu-id="7c83e-536"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.</span></span>  
  
 <span data-ttu-id="7c83e-537">Después de que se actualizan los trazos o elementos con el nuevo tamaño, el <xref:System.Windows.Controls.InkCanvas.SelectionResized> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-537">After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-538">En el ejemplo siguiente, se impide que el usuario realizando una selección menor que su tamaño original.</span><span class="sxs-lookup"><span data-stu-id="7c83e-538">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SetBottom">
      <MemberSignature Language="C#" Value="public static void SetBottom (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBottom(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBottom (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBottom(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetBottom : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetBottom (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-539">Elemento con el que se establece el valor de la propiedad Bottom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-539">The element on which to set the bottom property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7c83e-540">Coordenada inferior de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-540">The bottom coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-541">Establece el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-541">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-542">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-542">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#28](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#28)]
 [!code-vb[InkCanvasSamples#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberSignature Language="F#" Value="member this.SetEnabledGestures : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; unit" Usage="inkCanvas.SetEnabledGestures applicationGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">
          <span data-ttu-id="7c83e-543">Colección de gestos de la aplicación que <see cref="T:System.Windows.Controls.InkCanvas" /> va a reconocer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-543">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-544">Establece los gestos de la aplicación que <see cref="T:System.Windows.Controls.InkCanvas" /> va a reconocer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-544">Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-545">En el ejemplo siguiente se muestra cómo configurar un <xref:System.Windows.Controls.InkCanvas> a reconocer gestos en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="7c83e-545">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7c83e-546">La propiedad <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-546">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLeft">
      <MemberSignature Language="C#" Value="public static void SetLeft (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLeft(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLeft (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLeft(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetLeft : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetLeft (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-547">Elemento con el que se establece el valor de la propiedad Left.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-547">The element on which to set the left property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7c83e-548">Coordenada izquierda de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-548">The left coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-549">Establece el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Left" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-549">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-550">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-550">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#29](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#29)]
 [!code-vb[InkCanvasSamples#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRight">
      <MemberSignature Language="C#" Value="public static void SetRight (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRight(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRight (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRight(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetRight : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetRight (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-551">Elemento con el que se establece el valor de la propiedad Right.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-551">The element on which to set the right property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7c83e-552">Coordenada derecha de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-552">The right coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-553">Establece el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Right" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-553">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-554">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-554">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#30](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#30)]
 [!code-vb[InkCanvasSamples#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTop">
      <MemberSignature Language="C#" Value="public static void SetTop (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTop(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTop (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTop(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetTop : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetTop (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7c83e-555">Elemento con el que se establece el valor de la propiedad Top.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-555">The element on which to set the top property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7c83e-556">Coordenada superior de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-556">The top coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-557">Establece el valor de la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Top" /> de un objeto de dependencia determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-557">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-558">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-558">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#27](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#27)]
 [!code-vb[InkCanvasSamples#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCollected">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeCollected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeCollected As InkCanvasStrokeCollectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeCollectedEventHandler ^ StrokeCollected;" />
      <MemberSignature Language="F#" Value="member this.StrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventHandler " Usage="member this.StrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeCollectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-559">Se produce cuando un trazo dibujado por el usuario se agrega a la propiedad <see cref="P:System.Windows.Controls.InkCanvas.Strokes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-559">Occurs when a stroke drawn by the user is added to the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-560">Este evento se desencadena cuando un usuario realiza un trazo mediante un dispositivo señalador.</span><span class="sxs-lookup"><span data-stu-id="7c83e-560">This event is raised when a user completes a stroke using a pointing device.</span></span> <span data-ttu-id="7c83e-561">Por ejemplo, un usuario podría generar un lápiz de un digitalizador después de realizar un movimiento, con lo que se complete un trazo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-561">For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.</span></span>  
  
 <span data-ttu-id="7c83e-562">El controlador de eventos recibe un argumento de tipo <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, que hace referencia al trazo completado.</span><span class="sxs-lookup"><span data-stu-id="7c83e-562">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke.</span></span> <span data-ttu-id="7c83e-563">El trazo también se agrega a la <xref:System.Windows.Controls.InkCanvas.Strokes%2A> propiedad de la <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-563">The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 <span data-ttu-id="7c83e-564">La adición de mediante programación un <xref:System.Windows.Ink.Stroke> de objeto para el <xref:System.Windows.Controls.InkCanvas.Strokes%2A> colección no provoca este evento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-564">The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.</span></span>  
  
<a name="routedEventInfo_StrokeCollected"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7c83e-565">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="7c83e-565">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-566">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-566">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  
|<span data-ttu-id="7c83e-567">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="7c83e-567">Routing strategy</span></span>|<span data-ttu-id="7c83e-568">Propagación</span><span class="sxs-lookup"><span data-stu-id="7c83e-568">Bubbling</span></span>|  
|<span data-ttu-id="7c83e-569">delegado</span><span class="sxs-lookup"><span data-stu-id="7c83e-569">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-570">En el ejemplo siguiente, se ahorra el tiempo como una propiedad personalizada cuando un usuario agrega un trazo para el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-570">The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[InkCanvasSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCollectedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeCollectedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeCollectedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeCollectedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokeCollectedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-571">Identifica el evento enrutado <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-571">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErased">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler StrokeErased;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler StrokeErased" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErased" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeErased As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ StrokeErased;" />
      <MemberSignature Language="F#" Value="member this.StrokeErased : System.Windows.RoutedEventHandler " Usage="member this.StrokeErased : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-572">Se produce cuando el usuario borra un trazo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-572">Occurs when user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-573">Este evento se produce cuando un usuario borra tinta si el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> propiedad está establecida en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> o <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-573">This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
<a name="routedEventInfo_StrokeErasing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7c83e-574">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="7c83e-574">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-575">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-575">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  
|<span data-ttu-id="7c83e-576">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="7c83e-576">Routing strategy</span></span>|<span data-ttu-id="7c83e-577">Propagación</span><span class="sxs-lookup"><span data-stu-id="7c83e-577">Bubbling</span></span>|  
|<span data-ttu-id="7c83e-578">delegado</span><span class="sxs-lookup"><span data-stu-id="7c83e-578">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-579">En el ejemplo siguiente se notifica el número de trazos que se encuentran en un <xref:System.Windows.Controls.InkCanvas> cuando el <xref:System.Windows.Controls.InkCanvas.StrokeErased> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="7c83e-579">The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the <xref:System.Windows.Controls.InkCanvas.StrokeErased> event occurs.</span></span> <span data-ttu-id="7c83e-580">Si <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> está establecido en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> y el usuario borra la mitad de un trazo, el número de trazos en la <xref:System.Windows.Controls.InkCanvas> aumenta.</span><span class="sxs-lookup"><span data-stu-id="7c83e-580">If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases.</span></span> <span data-ttu-id="7c83e-581">Esto es porque el trazo anterior ha sido reemplazado por dos nuevos trazos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-581">This is because the old stroke was replaced by two new strokes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#18)]
 [!code-vb[InkCanvasSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeErasedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeErasedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeErasedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeErasedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokeErasedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-582">Identifica el evento enrutado <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-582">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErasing" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokeErasing As InkCanvasStrokeErasingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeErasingEventHandler ^ StrokeErasing;" />
      <MemberSignature Language="F#" Value="member this.StrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventHandler " Usage="member this.StrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeErasingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-583">Se produce justamente antes de que un usuario borre un trazo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-583">Occurs just before a user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-584">Controle este evento cuando desee comprobar si se debería borrar un trazo.</span><span class="sxs-lookup"><span data-stu-id="7c83e-584">Handle this event when you want to check whether a stroke should be erased.</span></span> <span data-ttu-id="7c83e-585">Establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` si desea impedir que el trazo que se va a borrar.</span><span class="sxs-lookup"><span data-stu-id="7c83e-585">Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased.</span></span> <span data-ttu-id="7c83e-586">Puede usar esta técnica cuando la <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> o <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> propiedad está establecida en <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> o <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-586">You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-587">En el ejemplo siguiente, se impide que todos los trazos que se representan como marcadores de resaltado que se va a borrar.</span><span class="sxs-lookup"><span data-stu-id="7c83e-587">The following example prevents any strokes rendered as highlighters from being erased.</span></span> <span data-ttu-id="7c83e-588">El ejemplo supone que el <xref:System.Windows.Controls.InkCanvas> está conectado al controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-588">The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#16](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#16)]
 [!code-vb[DrawingAttributes#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Strokes" />
      <MemberSignature Language="VB.NET" Value="Public Property Strokes As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StrokeCollection ^ Strokes { System::Windows::Ink::StrokeCollection ^ get(); void set(System::Windows::Ink::StrokeCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Strokes : System.Windows.Ink.StrokeCollection with get, set" Usage="System.Windows.Controls.InkCanvas.Strokes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-589">Obtiene o establece la colección de objetos <see cref="T:System.Windows.Ink.Stroke" /> de entrada de lápiz recopilada por <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-589">Gets or sets the collection of ink <see cref="T:System.Windows.Ink.Stroke" /> objects collected by the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-590">Colección de los objetos <see cref="T:System.Windows.Ink.Stroke" /> que están incluidos en <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-590">The collection of <see cref="T:System.Windows.Ink.Stroke" /> objects contained within the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-591">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-591">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-592">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-592">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  
|<span data-ttu-id="7c83e-593">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-593">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-594">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-594">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-595">En el ejemplo siguiente se muestra cómo utilizar dos <xref:System.Windows.Ink.StrokeCollection> objetos para el mismo <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-595">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-596">En este ejemplo, player uno y dos cada jugador usan una individual "superficie de entrada manuscrita" Aunque comparten el mismo <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-596">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-597">En este ejemplo se da por supuesto que está conectado el evento click para el controlador de eventos `switchPlayersButton_Click`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-597">This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 <span data-ttu-id="7c83e-598">En el ejemplo siguiente se muestra cómo enlazar la <xref:System.Windows.Controls.InkCanvas.Strokes%2A> propiedad de un <xref:System.Windows.Controls.InkCanvas> a otro <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-598">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#2)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StrokeCollection" />
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StrokesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-599">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.InkCanvas.Strokes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-599">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesReplaced As InkCanvasStrokesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokesReplacedEventHandler ^ StrokesReplaced;" />
      <MemberSignature Language="F#" Value="member this.StrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventHandler " Usage="member this.StrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-600">Se produce cuando se reemplaza la propiedad <see cref="P:System.Windows.Controls.InkCanvas.Strokes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-600">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7c83e-601">En el ejemplo siguiente se muestra cómo utilizar dos <xref:System.Windows.Ink.StrokeCollection> objetos que se encuentren en el mismo <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-601">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-602">En este ejemplo, player uno y dos cada jugador usan una individual "superficie de entrada manuscrita" Aunque comparten el mismo <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-602">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-603">En este ejemplo se da por supuesto que el `switchPlayersButton_Click` evento está conectado al controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7c83e-603">This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7c83e-604">Objeto secundario que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-604">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-605">Agrega el objeto especificado a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-605">Adds the specified object to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (textData As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ textData) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="7c83e-606">No usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-606">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c83e-607">Agrega el texto que se encuentra entre etiquetas en el marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-607">Adds the text that within the tags in markup.</span>
          </span>
          <span data-ttu-id="7c83e-608">Siempre inicia una excepción <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-608">Always throws an <see cref="T:System.ArgumentException" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="see GetTop, and SetTop" />
      <MemberSignature Language="ILAsm" Value="see GetTop, and SetTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Top" />
      <MemberSignature Language="VB.NET" Value="see GetTop, and SetTop" />
      <MemberSignature Language="F#" Value="see GetTop, and SetTop" Usage="see GetTop, and SetTop" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-609">Obtiene o establece la distancia entre la parte superior de un elemento y la parte superior de su <see cref="T:System.Windows.Controls.InkCanvas" /> principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-609">Gets or sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Top"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7c83e-610">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="7c83e-610">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7c83e-611">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7c83e-611">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.TopProperty>|  
|<span data-ttu-id="7c83e-612">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="7c83e-612">Metadata properties set to `true`</span></span>|<span data-ttu-id="7c83e-613">None</span><span class="sxs-lookup"><span data-stu-id="7c83e-613">None</span></span>|  
  
<a name="xamlAttributeUsage_Top"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="7c83e-614">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-614">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Top="double"/>  
- or –  
<object InkCanvas.Top="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Top"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7c83e-615">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7c83e-615">XAML Values</span></span>  
 <span data-ttu-id="7c83e-616">*double*</span><span class="sxs-lookup"><span data-stu-id="7c83e-616">*double*</span></span>  
 <span data-ttu-id="7c83e-617">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="7c83e-617">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="7c83e-618">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="7c83e-618">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="7c83e-619">Las cadenas no necesitan incluir explícitamente puntos decimales.</span><span class="sxs-lookup"><span data-stu-id="7c83e-619">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="7c83e-620">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="7c83e-620">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="7c83e-621">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="7c83e-621">*qualifiedDouble*</span></span>  
 <span data-ttu-id="7c83e-622">Un *doble* valor, como se describió anteriormente, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="7c83e-622">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="7c83e-623">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="7c83e-623">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="7c83e-624">`in` pulgadas; 1in == 96 px</span><span class="sxs-lookup"><span data-stu-id="7c83e-624">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="7c83e-625">`cm` es centímetros; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-625">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="7c83e-626">`pt` puntos; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="7c83e-626">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-627">En el ejemplo siguiente se muestra cómo establecer la posición de un <xref:System.Windows.Controls.Label> en un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-627">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-628">Identifica la propiedad adjunta <see cref="P:System.Windows.Controls.InkCanvas.Top" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-628">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomCursor">
      <MemberSignature Language="C#" Value="public bool UseCustomCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCustomCursor : bool with get, set" Usage="System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-629">Obtiene o establece un valor booleano que indica si se invalida el cursor estándar de <see cref="T:System.Windows.Controls.InkCanvas" /> para admitir un cursor personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-629">Gets or sets a Boolean value that indicates whether to override standard <see cref="T:System.Windows.Controls.InkCanvas" /> cursor functionality to support a custom cursor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-630">
            <see langword="true" /> si <see cref="T:System.Windows.Controls.InkCanvas" /> utiliza un cursor personalizado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-630">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.InkCanvas" /> is using a custom cursor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c83e-631">El <xref:System.Windows.Controls.InkCanvas> cambiará el estilo de cursor para reflejar actual <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> mientras el cursor se encuentra dentro de los límites del <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-631">The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="7c83e-632">Si este comportamiento no es deseable, por ejemplo, cuando el <xref:System.Windows.Controls.InkCanvas> usa un cursor, establezca esta propiedad en `true`, y el cursor no cambiará con el <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-632">If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c83e-633">En el ejemplo siguiente se muestra cómo utilizar un cursor que es diferente de la proporcionada por el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="7c83e-633">The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[InkCanvasSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c83e-634">Obtiene el número de elementos secundarios visuales de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-634">Gets the number of visual child elements within this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c83e-635">Número de elementos secundarios visuales para este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c83e-635">The number of visual child elements for this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>