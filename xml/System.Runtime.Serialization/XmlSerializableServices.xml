<Type Name="XmlSerializableServices" FullName="System.Runtime.Serialization.XmlSerializableServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="727027d9cc6347d994810e7f8a628943fd0f8739" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37626686" /></Metadata><TypeSignature Language="C#" Value="public static class XmlSerializableServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XmlSerializableServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlSerializableServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializableServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializableServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XmlSerializableServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene los métodos para leer y escribir XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con Windows Communication Foundation (WCF), puede generar tipos CLR que representan contratos de datos de esquemas XML. En determinados casos, al hacerlo, es posible que no todos los esquemas se representen como contratos de datos. En este caso, puede usar la propiedad <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A> de la clase <xref:System.Runtime.Serialization.ImportOptions>.  Al establecer la propiedad en `true` se especifica que estos tipos se importan como tipos XML que implementan la interfaz <xref:System.Xml.Serialization.IXmlSerializable>. Al hacerlo, los tipos generados pueden almacenar cualquier elemento, pero el serializador los lee y escribe como XML.  
  
 <xref:System.Runtime.Serialization.XmlSerializableServices> es una clase auxiliar abstracta que contiene código que usan los tipos <xref:System.Xml.Serialization.IXmlSerializable> generados para leer y escribir XML. También contiene el código para generar el esquema para los tipos generados. Observe que los detalles sobre los esquemas no están almacenados. Sólo el nombre está almacenado en el tipo generado. Esta clase genera un esquema predeterminado que representa `anyType` del tipo de esquema XML con el nombre de tipo del esquema adecuado como nombre del contrato.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDefaultSchema">
      <MemberSignature Language="C#" Value="public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDefaultSchema(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.XmlQualifiedName typeQName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDefaultSchema (schemas As XmlSchemaSet, typeQName As XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDefaultSchema(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::XmlQualifiedName ^ typeQName);" />
      <MemberSignature Language="F#" Value="static member AddDefaultSchema : System.Xml.Schema.XmlSchemaSet * System.Xml.XmlQualifiedName -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema (schemas, typeQName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="typeQName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="schemas"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> al que agregar el tipo de esquema generado.</param>
        <param name="typeQName"><see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de tipo al que se asignará el esquema.</param>
        <summary>Genera un tipo de esquema predeterminado según el nombre de tipo especificado y lo agrega al conjunto de esquemas especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método contiene código para generar un tipo de esquema para un tipo de contrato de datos con el nombre de tipo especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El argumento <paramref name="schemas" /> o <paramref name="typeQName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNodes">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNode[] ReadNodes(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::XmlNode ^&gt; ^ ReadNodes(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member ReadNodes : System.Xml.XmlReader -&gt; System.Xml.XmlNode[]" Usage="System.Runtime.Serialization.XmlSerializableServices.ReadNodes xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><see cref="T:System.Xml.XmlReader" /> usado para leer.</param>
        <summary>Lee un conjunto de nodos XML del lector especificado y devuelve el resultado.</summary>
        <returns>Matriz de tipo <see cref="T:System.Xml.XmlNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método lee todo el XML contenido dentro del nodo en el que está situado el lector cuando se realiza esta llamada. Esto le permite leer y almacenar todo el XML como matriz de los objetos <xref:System.Xml.XmlNode>. Se trata de un método auxiliar que usan los tipos que implementan <xref:System.Xml.Serialization.IXmlSerializable> y que usan el método <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El argumento <paramref name="xmlReader" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Se encontró un nodo <see langword="null" /> durante la lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodes">
      <MemberSignature Language="C#" Value="public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteNodes(class System.Xml.XmlWriter xmlWriter, class System.Xml.XmlNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteNodes(System::Xml::XmlWriter ^ xmlWriter, cli::array &lt;System::Xml::XmlNode ^&gt; ^ nodes);" />
      <MemberSignature Language="F#" Value="static member WriteNodes : System.Xml.XmlWriter * System.Xml.XmlNode[] -&gt; unit" Usage="System.Runtime.Serialization.XmlSerializableServices.WriteNodes (xmlWriter, nodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="nodes" Type="System.Xml.XmlNode[]" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><see cref="T:System.Xml.XmlWriter" /> usado para escribir.</param>
        <param name="nodes">Matriz de tipo <see cref="T:System.Xml.XmlNode" /> para escribir.</param>
        <summary>Escribe los nodos proporcionados mediante el sistema de escritura especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El argumento <paramref name="xmlWriter" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>