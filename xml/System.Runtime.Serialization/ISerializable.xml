<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ISerializable.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e472d101330ad3fe07ac415fe5b90af0a16de62b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e472d101330ad3fe07ac415fe5b90af0a16de62b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Allows an object to control its own serialization and deserialization.</source>
          <target state="translated">Permite que un objeto controle su propia serialización y deserialización.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Any class that might be serialized must be marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph>.</source>
          <target state="translated">Cualquier clase que tenga posibilidades de serializarse debe marcarse con el <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>If a class needs to control its serialization process, it can implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Si una clase necesita controlar su proceso de serialización, puede implementar la <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> at serialization time and populates the supplied <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with all the data required to represent the object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> llamadas el <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> en el momento de la serialización y rellena proporcionado <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> con todos los datos necesarios para representar el objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with the type of the object in the graph.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> crea un <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> con el tipo del objeto en el gráfico.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Objects that need to send proxies for themselves can use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;</ph> methods on <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> to change the transmitted information.</source>
          <target state="translated">Objetos que necesitan enviar proxies para ellos mismos pueden utilizar el <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;</ph> métodos en <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> para cambiar la información transmitida.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>In the case of class inheritance, it is possible to serialize a class that derives from a base class that implements <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
          <target state="translated">En el caso de herencia de clases, es posible serializar una clase que deriva de una clase base que implementa <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>In this case, the derived class should call the base class implementation of <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> inside its implementation of <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph>.</source>
          <target state="translated">En este caso, la clase derivada debe llamar a la implementación de clase base <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> dentro de su implementación de <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Otherwise, the data from the base class will not be serialized.</source>
          <target state="translated">En caso contrario, los datos de la clase base no se serializarán.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface implies a constructor with the signature constructor (<ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> information, <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> context).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interfaz implica un constructor con la firma constructor (<ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> información, <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> contexto).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>At deserialization time, the current constructor is called only after the data in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> has been deserialized by the formatter.</source>
          <target state="translated">Durante la deserialización, se llama al constructor actual sólo después de los datos en el <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> se ha deserializado el formateador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>In general, this constructor should be protected if the class is not sealed.</source>
          <target state="translated">En general, este constructor debe protegerse si la clase no está sellada.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The order in which objects are deserialized cannot be guaranteed.</source>
          <target state="translated">No se puede garantizar el orden en el que se deserializan los objetos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>For example, if one type references a type that has not been deserialized yet, an exception will occur.</source>
          <target state="translated">Por ejemplo, si un tipo hace referencia a un tipo que no se ha deserializado todavía, se producirá una excepción.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>If you are creating types that have such dependencies, you can work around the problem by implementing the <ph id="ph1">`IDeserializationCallback`</ph> interface and the <ph id="ph2">`OnDeserialization`</ph> method.</source>
          <target state="translated">Si va a crear tipos que tienen tales dependencias, puede solucionar el problema implementando el <ph id="ph1">`IDeserializationCallback`</ph> interfaz y la <ph id="ph2">`OnDeserialization`</ph> método.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The serialization architecture handles object types that extend <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph> the same as types that extend <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">La arquitectura de serialización controla tipos de objetos que extienden <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph> igual que los tipos que extienden <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>These types can be marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> and implement the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface as any other object type.</source>
          <target state="translated">Estos tipos se pueden marcar con el <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> e implementar el <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interfaz como cualquier otro tipo de objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Their object state will be captured and persisted onto the stream.</source>
          <target state="translated">Su estado de objeto se capturarán y persistirá en la secuencia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>When these types are being used through <ph id="ph1">&lt;xref:System.Runtime.Remoting&gt;</ph>, the remoting infrastructure provides a surrogate that preempts typical serialization and instead serializes a proxy to the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>.</source>
          <target state="translated">Cuando estos tipos se utilizan a través de <ph id="ph1">&lt;xref:System.Runtime.Remoting&gt;</ph>, la infraestructura de comunicación remota proporciona un suplente que anticipa la serialización típica y en su lugar, serializa un proxy para el <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>A surrogate is a helper that knows how to serialize and deserialize objects of a particular type.</source>
          <target state="translated">Un suplente es una aplicación auxiliar que sabe cómo serializar y deserializar objetos de un tipo determinado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The proxy, invisible to the user in most cases, will be of type <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>.</source>
          <target state="translated">El proxy, invisible para el usuario en la mayoría de los casos, será del tipo <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>As a general design pattern, it would be unusual for a class to be both marked with the serializable attribute and extend <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>.</source>
          <target state="translated">Como un modelo de diseño general, sería poco habitual que una clase se marca con el atributo serializable y ampliar <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Developers should think carefully about the possible serialization and remoting scenarios when combining these two characteristics.</source>
          <target state="translated">Los programadores deben pensar sobre los posibles escenarios de serialización y la comunicación remota al combinar estas dos características.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>One example where this might be applicable is with a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">Es un ejemplo que puede ser aplicable con un <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>While the base class of <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> (<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>) extends from <ph id="ph3">&lt;xref:System.MarshalByRefObject&gt;</ph>, it is possible to capture the state of a <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> and restore it at will.</source>
          <target state="translated">Mientras que la clase base de <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> (<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>) se extiende desde <ph id="ph3">&lt;xref:System.MarshalByRefObject&gt;</ph>, es posible capturar el estado de un <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> y restaurarlo a voluntad.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>It might, therefore, be meaningful to serialize the state of this stream into a database and restore it at some later point in time.</source>
          <target state="translated">Puede que, por lo tanto, sea significativo para serializar el estado de esta secuencia en una base de datos y restaurarla en algún punto posterior en el tiempo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>However, when used through remoting, an object of this type would be proxied.</source>
          <target state="translated">Sin embargo, cuando se utilizan a través de comunicación remota, un objeto de este tipo sería procesadas por el proxy.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>For more information about serialization of classes that extend <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>, see <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de la serialización de clases que extienden <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>For more information about implementing <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>, see <bpt id="p1">[</bpt>Custom Serialization<ept id="p1">](~/docs/standard/serialization/custom-serialization.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo implementar <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>, consulte <bpt id="p1">[</bpt>serialización personalizada<ept id="p1">](~/docs/standard/serialization/custom-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface to define custom serialization behavior for a class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interfaz para definir el comportamiento de serialización personalizado para una clase.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Implement this interface to allow an object to take part in its own serialization and deserialization.</source>
          <target state="translated">Implemente esta interfaz para permitir que un objeto participe en su propia serialización y deserialización.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que se rellena con datos.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination (see <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>) for this serialization.</source>
          <target state="translated">Destino (vea <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>) de esta serialización.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data needed to serialize the target object.</source>
          <target state="translated">Llena <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> con los datos necesarios para serializar el objeto de destino.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects that are included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">Los objetos que se incluyen en el <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> se realiza un seguimiento automáticamente y se serializa el formateador.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Code that calls <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> requires the <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> for providing serialization services.</source>
          <target state="translated">Código que llama a <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> requiere el <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> para proporcionar servicios de serialización.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It is not guaranteed that this method will be called only once per object instance during serialization.</source>
          <target state="translated">No se garantiza que este método se llamará solo una vez por cada instancia de objeto durante la serialización.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Therefore, the method should be implemented in such a way that its behavior will be the same regardless of the number of times it is called.</source>
          <target state="translated">Por lo tanto, el método debe implementarse de forma que su comportamiento será el mismo independientemente del número de veces que se llama.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> method to set alternate values for a serialized object.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> método para establecer valores alternativos para un objeto serializado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> class to store the alternate values when the object is serialized.</source>
          <target state="translated">El código usa el <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;</ph> método de la <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> clase para almacenar los valores alternativos cuando se serializa el objeto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Conversely, when the constructor of the <ph id="ph1">`Person`</ph> class is called during deserialization, the alternatve values are retrieved using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;</ph> method and reassigned to the object's fields.</source>
          <target state="translated">Por el contrario, cuando el constructor de la <ph id="ph1">`Person`</ph> clase se llama durante la deserialización, se recuperan los valores alternativos utilizando el <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;</ph> método y se reasignan a los campos del objeto.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>