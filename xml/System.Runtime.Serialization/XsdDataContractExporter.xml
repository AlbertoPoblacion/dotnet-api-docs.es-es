<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XsdDataContractExporter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac538915ee397917af85ed6f5dd243799613e38260a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38915ee397917af85ed6f5dd243799613e38260a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</source>
          <target state="translated">Permite la transformación de un conjunto de tipos de .NET Framework que se usan en contratos de datos en un archivo de esquema XML (.xsd).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</source>
          <target state="translated">Use la clase <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> cuando haya creado un servicio Web que incorpore datos representados por tipos de Common Language Runtime (CLR) y cuando necesite exportar esquemas XML para cada tipo que vayan a usar otros servicios Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>That is, <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforms a set of CLR types into XML schemas.</source>
          <target state="translated">Es decir, <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforma un conjunto de tipos de CLR en esquemas XML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>(For more information about the types that can be used, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</source>
          <target state="translated">(Para obtener más información acerca de los tipos que se puede usar, vea <bpt id="p1">[</bpt>tipos admitidos por el serializador de contratos de datos<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.) Los esquemas se pueden exponer, a continuación, a través de un documento de lenguaje de descripción de servicios Web (WSDL) para que los puedan usar otros usuarios que necesiten interoperar con su servicio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</source>
          <target state="translated">Por el contrario, si está creando un servicio Web que debe interoperar con un servicio Web existente, use <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> para transformar los esquemas XML y crear los tipos de CLR que representan los datos en un lenguaje de programación seleccionado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> generates an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object that contains the collection of schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> genera un objeto <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> que contiene la colección de esquemas.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Access the set of schemas through the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Obtenga acceso al conjunto de esquemas a través de la propiedad <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>.</source>
          <target state="translated">Para generar rápidamente archivos de definición del esquema XML (XSD) que otros servicios Web pueden usar, use <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Exporting Schemas Into an XmlSchemaSet</source>
          <target state="translated">Exportar esquemas a un XmlSchemaSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>To create an instance of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class that contains XML schema files, you should be aware of the following.</source>
          <target state="translated">Para crear una instancia de la clase <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> que contiene archivos de esquema XML, deberá tener en cuenta lo siguiente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>The set of types you are exporting are recorded as an internal set of data contracts.</source>
          <target state="translated">El conjunto de tipos que está exportando se registra como un conjunto interno de contratos de datos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Thus, you can call the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</source>
          <target state="translated">De este modo, puede llamar varias veces al método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> para agregar tipos nuevos al conjunto de esquemas establecido sin que se reduzca el rendimiento porque sólo los tipos nuevos se agregarán al conjunto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>During the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> operation, the existing schemas are compared to the new schemas being added.</source>
          <target state="translated">Durante la operación <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph>, los esquemas existentes se comparan con los nuevos esquemas que se agregan.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>If there are conflicts, an exception will be thrown.</source>
          <target state="translated">Si hay conflictos, se producirá una excepción.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> instance.</source>
          <target state="translated">Normalmente se detecta un conflicto si una misma instancia <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> exporta dos tipos con el mismo nombre de contrato de datos pero con contratos diferentes (miembros diferentes).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Using the Exporter</source>
          <target state="translated">Uso del exportador</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>A recommended way of using this class is as follows:</source>
          <target state="translated">Una manera recomendada de usar esta clase es como sigue:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Use one of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> overloads to determine whether the specified type or set of types can be exported.</source>
          <target state="translated">Use una de las sobrecargas <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> para determinar si se puede exportar el tipo o conjunto de tipos especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Use one of the overloads that is appropriate to your requirements.</source>
          <target state="translated">Use una de las sobrecargas que se ajuste a sus requisitos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Call the corresponding <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method.</source>
          <target state="translated">Llame al método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> correspondiente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Retrieve the schemas from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Recupere los esquemas de la propiedad <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente, se crea una instancia de <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> y se llama al método <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to be exported.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> que contiene los esquemas que se van a exportar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> class with the specified set of schemas.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /&gt;</ph> con el conjunto de esquemas especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>Use this overload when you have an existing <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to which you want to add new schemas.</source>
          <target state="translated">Use esta sobrecarga cuando tenga un <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> existente al que desee agregar esquemas nuevos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
          <source>After you construct a <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> with this overload, call the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method to add new types to the existing set.</source>
          <target state="translated">Después de construir <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> con esta sobrecarga, llame al método <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> para agregar tipos nuevos al conjunto existente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</source>
          <target state="translated">Obtiene un valor que indica si se puede exportar un tipo (o conjunto de tipos) Common Language Runtime (CLR).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Not all CLR types can be used in data contracts.</source>
          <target state="translated">No todos los tipos de CLR se pueden usar en contratos de datos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>For more information about what can be serialized, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre lo que se puede serializar, consulte <bpt id="p1">[</bpt>tipos admitidos por el serializador de contratos de datos<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that contains the assemblies with the types to export.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> que contiene los ensamblados con los tipos para exportar.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</source>
          <target state="translated">Obtiene un valor que indica si se puede exportar el conjunto de tipos de Common Language Runtime (CLR) incluidos en un conjunto de ensamblados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the types can be exported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se pueden exportar los tipos; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> that contains the specified types to export.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> que contiene los tipos especificados para exportar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
          <source>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> can be exported.</source>
          <target state="translated">Obtiene un valor que indica si se puede exportar el conjunto tipos de Common Language Runtime (CLR) incluidos en un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the types can be exported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se pueden exportar los tipos; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to export.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para exportar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source>Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</source>
          <target state="translated">Obtiene un valor que indica si se puede exportar el tipo de Common Language Runtime (CLR) especificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type can be exported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se puede exportar el tipo; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se llama al método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29&gt;</ph> antes de llamar al método <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</source>
          <target state="translated">Transforma el tipo, o conjunto de tipos, de Common Language Runtime (CLR), en un conjunto de esquemas XML.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>As a recommended practice, use one of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> overloads to determine whether the specified type or set of types can be exported.</source>
          <target state="translated">Como práctica recomendada, use una de las sobrecargas <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> para determinar si se puede exportar el tipo o conjunto de tipos especificado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractExporter">
          <source>After calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method, retrieve the schemas from the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Después de llamar al método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph>, recupere los esquemas de la propiedad <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (of <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>) that contains the types to export.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (de <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>) que contiene los tipos para exportar.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>Transforms the types contained in the specified collection of assemblies.</source>
          <target state="translated">Transforma los tipos contenidos en la colección especificada de ensamblados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>The <ph id="ph1">&lt;paramref name="assemblies" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="assemblies" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> in the collection is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> de la colección es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>A  <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>) that contains the types to export.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>) que contiene los tipos para exportar.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>Transforms the types contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> passed to this method.</source>
          <target state="translated">Transforma los tipos contenidos en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> pasados a este método.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>The <ph id="ph1">&lt;paramref name="types" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="types" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
          <source>A type in the collection is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un tipo de la colección es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to transform into an XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para transformar en un esquema XML.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>Transforms the specified <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> type into an XML schema definition language (XSD) schema.</source>
          <target state="translated">Transforma el tipo <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> especificado en un esquema del lenguaje de definición de esquemas XML (XSD).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>Call the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> to determine whether the type can be exported.</source>
          <target state="translated">Para determinar si se puede exportar el tipo, llame al método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method, the schema can be retrieved through the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">Tras llamar al método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph>, el esquema se puede recuperar a través de la propiedad <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to query.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se va a consultar.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>Returns the top-level name and namespace for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Devuelve el nombre de nivel superior y el espacio de nombres para <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the top-level name and namespace for this <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, which is written to the stream when writing this object.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> que representa el nombre de nivel superior y el espacio de nombres para este <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, que se escribe en la secuencia al escribir este objeto.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The type to return a schema for.</source>
          <target state="translated">El tipo para el que se va a devolver un esquema.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>Returns the XML schema type for the specified type.</source>
          <target state="translated">Devuelve un tipo de esquema XML para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> that contains the XML schema.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> que contiene el esquema XML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The main purpose of this method is to allow anonymous types in XML schema to be represented.</source>
          <target state="translated">El objetivo principal de este método es permitir los tipos anónimos en esquema XML que se va a representar.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph>.</source>
          <target state="translated">Dado que los tipos anónimos no tienen ningún nombre de contrato ni espacio de nombres, no se pueden buscar con el <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>This method returns the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph> definition for such types.</source>
          <target state="translated">Este método devuelve la definición <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph> para tales tipos.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The types for which the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph> method returns a valid name, this method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Los tipos para los que el método <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph> devuelve un nombre válido, este método devuelve <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that was exported.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se exportó.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>Returns the contract name and contract namespace for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Devuelve el nombre del contrato el espacio de nombres del contrato para el <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the contract name of the type and its namespace.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> que representa el nombre del contrato del tipo y su espacio de nombres.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> that contains options that can be set for the export operation.</source>
          <target state="translated">Obtiene o establece un <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> que contiene opciones que se pueden establecer para la operación de exportación.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> that contains options used to customize how types are exported to schemas.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ExportOptions" /&gt;</ph> que contiene las opciones usadas para personalizar cómo se exportan los tipos a los esquemas.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
          <source>Gets the collection of exported XML schemas.</source>
          <target state="translated">Obtiene la colección de esquemas XML exportados.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <ph id="ph2">&lt;see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /&gt;</ph> method.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> que contiene los esquemas transformados del conjunto de tipos de Common Language Runtime (CLR) después de llamar al método <ph id="ph2">&lt;see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>