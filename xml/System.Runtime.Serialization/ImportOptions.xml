<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c6673-101">Representa las opciones que se pueden establecer en <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-101">Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6673-102"><xref:System.Runtime.Serialization.XsdDataContractImporter> se usa para generar el código del esquema XML con CodeDOM [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c6673-102">The <xref:System.Runtime.Serialization.XsdDataContractImporter> is used to generate code from XML schema using the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span></span> <span data-ttu-id="c6673-103">Para generar un esquema XML a partir de un ensamblado, use <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="c6673-103">To generate an XML schema from an assembly, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
 <span data-ttu-id="c6673-104">Para obtener más información sobre la importación y exportación de esquemas, vea [esquema de importación y exportación](~/docs/framework/wcf/feature-details/schema-import-and-export.md) y [esquema de importación para generar clases de](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span><span class="sxs-lookup"><span data-stu-id="c6673-104">For more information about importing and exporting schemas, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md) and [Importing Schema to Generate Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6673-105">En el ejemplo siguiente se crea una instancia de la clase <xref:System.Runtime.Serialization.ImportOptions> y se establecen las propiedades <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> y <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6673-105">The following example creates an instance of the <xref:System.Runtime.Serialization.ImportOptions> class and sets the <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> and <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> properties.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6673-106">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.ImportOptions" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-106">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-107">Obtiene o establece una instancia <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que proporciona los recursos para comprobar si se admiten las opciones determinadas para un lenguaje de destino.</span><span class="sxs-lookup"><span data-stu-id="c6673-107">Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</span></span></summary>
        <value><span data-ttu-id="c6673-108"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que proporciona los recursos para comprobar si se admiten las opciones determinadas para un lenguaje de destino.</span><span class="sxs-lookup"><span data-stu-id="c6673-108">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6673-109">Para admitir la mejor generación de código para diferentes lenguajes, debe pasarse la información sobre lo que admite el lenguaje de destino al importador del esquema.</span><span class="sxs-lookup"><span data-stu-id="c6673-109">To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</span></span> <span data-ttu-id="c6673-110">Para ello, se pasa una instancia de la clase <xref:System.CodeDom.Compiler.CodeDomProvider>, que proporciona un método <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> para comprobar si admite un <xref:System.CodeDom.Compiler.CodeGeneratorOptions>determinado.</span><span class="sxs-lookup"><span data-stu-id="c6673-110">This is done by passing an instance of the <xref:System.CodeDom.Compiler.CodeDomProvider> class, which provides a <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> method to check whether it supports particular <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-111">Obtiene o establece un suplente de contrato de datos que se puede usar para modificar el código generado durante una operación de importación.</span><span class="sxs-lookup"><span data-stu-id="c6673-111">Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</span></span></summary>
        <value><span data-ttu-id="c6673-112">Una implementación de la interfaz <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> que administra la importación del esquema.</span><span class="sxs-lookup"><span data-stu-id="c6673-112">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-113">Obtiene o establece un valor que especifica si los tipos del código generado deben implementar la interfaz <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-113">Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</span></span></summary>
        <value>
          <span data-ttu-id="c6673-114"><see langword="true" /> si el código generado debe implementar la interfaz <see cref="T:System.ComponentModel.INotifyPropertyChanged" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-114"><see langword="true" /> if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c6673-115">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-115">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6673-116">Los componentes [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], como Windows Forms o Windows Presentation Foundation, usan esta interfaz para capturar cambios en datos para las actualizaciones de la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="c6673-116">This interface is used by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</span></span> <span data-ttu-id="c6673-117">Las propiedades generadas provocan un evento con la propiedad cambiada cuando el valor cambia, lo que permite que los enlaces de la Interfaz de usuario actúen según corresponda.</span><span class="sxs-lookup"><span data-stu-id="c6673-117">The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-118">Obtiene o establece un valor que especifica si el código generado se marcará como interno o público.</span><span class="sxs-lookup"><span data-stu-id="c6673-118">Gets or sets a value that specifies whether generated code will be marked internal or public.</span></span></summary>
        <value>
          <span data-ttu-id="c6673-119"><see langword="true" /> si el código se marcará como <see langword="internal" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-119"><see langword="true" /> if the code will be marked <see langword="internal" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c6673-120">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-120">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-121">Obtiene o establece un valor que especifica si las clases del contrato de datos generadas se marcarán con el atributo <see cref="T:System.SerializableAttribute" /> además del atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-121">Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</span></span></summary>
        <value>
          <span data-ttu-id="c6673-122"><see langword="true" /> para generar clases con <see cref="T:System.SerializableAttribute" /> aplicado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-122"><see langword="true" /> to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c6673-123">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-123">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-124">Obtiene o establece un valor que determina si se importarán todos los tipos de esquema XML, incluidos aquéllos que no se ajusten a un esquema de contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="c6673-124">Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</span></span></summary>
        <value>
          <span data-ttu-id="c6673-125"><see langword="true" /> para importar todos los tipos de esquema; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-125"><see langword="true" /> to import all schema types; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c6673-126">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6673-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6673-127">Normalmente, la importación de un tipo que no se ajuste a un esquema de contrato de datos válido no se producirá correctamente.</span><span class="sxs-lookup"><span data-stu-id="c6673-127">Normally, importing a type that does not conform to a valid data contract schema will fail.</span></span> <span data-ttu-id="c6673-128">Sin embargo, cuando esta propiedad está establecida en `true`, todos estos tipos se importarán como tipos que implementan la interfaz <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="c6673-128">However, when this property is set to `true`, all such types will be imported as types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-129">Obtiene un diccionario que contiene la asignación de espacios de nombres de contrato de datos a los espacios de nombres de CLR que se deben usar para generar el código durante una operación de importación.</span><span class="sxs-lookup"><span data-stu-id="c6673-129">Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</span></span></summary>
        <value><span data-ttu-id="c6673-130"><see cref="T:System.Collections.Generic.IDictionary`2" /> que contiene las asignaciones de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="c6673-130">A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-131">Obtiene una colección de tipos que representa colecciones de contratos de datos a las que se debe hacer referencia al generar código para las colecciones, como listas o diccionarios de elementos.</span><span class="sxs-lookup"><span data-stu-id="c6673-131">Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</span></span></summary>
        <value><span data-ttu-id="c6673-132"><see cref="T:System.Collections.Generic.ICollection`1" /> que contiene los tipos de colección a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c6673-132">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6673-133">De forma predeterminada, se generará una matriz al importar un esquema de la colección (a menos que el esquema tenga una anotación especial que mencione un tipo diferente).</span><span class="sxs-lookup"><span data-stu-id="c6673-133">By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</span></span> <span data-ttu-id="c6673-134">Sin embargo, si hay un tipo que coincide en la colección <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A>, se usará dicho tipo.</span><span class="sxs-lookup"><span data-stu-id="c6673-134">However, if there is a matching type in the <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> collection, that type will be used.</span></span> <span data-ttu-id="c6673-135">Por ejemplo, al importar un esquema que contiene una lista de enteros, normalmente se generará una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="c6673-135">For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</span></span> <span data-ttu-id="c6673-136">Sin embargo, si la colección contiene <xref:System.Collections.Generic.LinkedList%601> de tipo entero, ese tipo se usará en lugar de la matriz.</span><span class="sxs-lookup"><span data-stu-id="c6673-136">However, if the collection contains the <xref:System.Collections.Generic.LinkedList%601> of type integer, that type will be used instead of the array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6673-137">Obtiene <see cref="T:System.Collections.Generic.IList`1" /> que contiene tipos de contenedor a los que se hace referencia en el código generado.</span><span class="sxs-lookup"><span data-stu-id="c6673-137">Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code.</span></span></summary>
        <value><span data-ttu-id="c6673-138"><see cref="T:System.Collections.Generic.IList`1" /> que contiene los tipos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c6673-138">A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>