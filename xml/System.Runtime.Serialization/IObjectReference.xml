<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObjectReference.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52ff5178867c9d901635fdb355e410b6824df8a2b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ff5178867c9d901635fdb355e410b6824df8a2b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.IObjectReference">
          <source>Indicates that the current interface implementer is a reference to another object.</source>
          <target state="translated">Indica que el implementador de la interfaz actual es una referencia a otro objeto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IObjectReference">
          <source>Implement this interface on objects that are references to a different object, which cannot be resolved until the current object is completely restored.</source>
          <target state="translated">Implemente esta interfaz en los objetos que son referencias a un objeto diferente, que no se puede resolver hasta que el objeto actual se restaure completamente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IObjectReference">
          <source>During the fixup stage, any object implementing <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IObjectReference" /&gt;</ph> is queried for its real object and that object is inserted into the graph.</source>
          <target state="translated">Durante la fase de corrección, cualquier objeto que implemente <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IObjectReference" /&gt;</ph> se consulta para su real objeto y ese objeto se inserta en el gráfico.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IObjectReference">
          <source>Fixup refers to the process of finalizing references not already completed during the object deserialization process.</source>
          <target state="translated">Corrección hace referencia al proceso de finalización de las referencias que aún no ha completado durante el proceso de deserialización del objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> from which the current object is deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> desde donde se deserializa el objeto actual.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</source>
          <target state="translated">Devuelve el objeto real que se debe deserializar, en lugar del objeto especificado por la secuencia serializada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>Returns the actual object that is put into the graph.</source>
          <target state="translated">Devuelve el objeto real que se coloca en el gráfico.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.</source>
          <target state="translated">Este método es útil en una situación de comunicación remota en el que se serializa un objeto creador de proxies, no un objeto real.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>When the proxy-creator object is deserialized, deserialization calls its <ph id="ph1">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se deserializa el objeto creador de proxies, la deserialización llama su <ph id="ph1">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.</source>
          <target state="translated">En este momento, el objeto creador de proxies crea una nueva instancia del objeto proxy que hace referencia al objeto original real, tal vez en un equipo remoto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.</source>
          <target state="translated">Por último, el objeto creador de proxy se descartan y más adelante reclamado por la recolección de elementos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>For example, consider how <ph id="ph1">&lt;xref:System.Type&gt;</ph> objects are serialized.</source>
          <target state="translated">Por ejemplo, considere cómo <ph id="ph1">&lt;xref:System.Type&gt;</ph> objetos se serializan.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>Instead of transmitting the data from the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <ph id="ph2">&lt;xref:System.Runtime.Serialization.IObjectReference&gt;</ph>.</source>
          <target state="translated">En lugar de transmitir los datos desde el <ph id="ph1">&lt;xref:System.Type&gt;</ph> de objeto, el sistema transmite un objeto portador con el nombre del tipo de objeto y la información sobre el ensamblado donde se encuentra en un objeto que implementa <ph id="ph2">&lt;xref:System.Runtime.Serialization.IObjectReference&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>When both the type name and assembly name are available, the deserialization infrastructure calls <ph id="ph1">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> on the holder object that has been transmitted.</source>
          <target state="translated">Cuando el nombre de tipo y el nombre del ensamblado están disponibles, la infraestructura de deserialización llama <ph id="ph1">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> en el objeto portador que se ha transmitido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>This holder returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that is inserted into the graph.</source>
          <target state="translated">Este portador devuelve el <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto que se inserta en el gráfico.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>This method is protected by a <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType&gt;</ph> specified.</source>
          <target state="translated">Este método está protegido por un <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> para el <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> con el <ph id="ph3">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)">
          <source>The call will not work on a medium trusted server.</source>
          <target state="translated">La llamada no funcionará en un servidor con un nivel de confianza medio.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>