<Type Name="ObjectManager" FullName="System.Runtime.Serialization.ObjectManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f77a6b554ad9912e28716321576075c42cd3f786" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ObjectManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ObjectManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectManager" />
  <TypeSignature Language="F#" Value="type ObjectManager = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Realiza el seguimiento de los objetos a medida que se deserializan.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la deserialización, la <xref:System.Runtime.Serialization.Formatter> consultas el <xref:System.Runtime.Serialization.ObjectManager> para determinar si una referencia a un objeto de la secuencia serializada es para un objeto que ya se ha deserializado (referencia atrasada) o a un objeto que no se ha deserializado (referencia adelantada). Si la referencia de la secuencia serializada es una referencia adelantada, la <xref:System.Runtime.Serialization.Formatter> puede registrar una corrección con el <xref:System.Runtime.Serialization.ObjectManager>. Si la referencia de la secuencia serializada es una referencia con versiones anteriores, la <xref:System.Runtime.Serialization.Formatter> completa la referencia inmediatamente. Corrección hace referencia al proceso de finalización de las referencias de objeto aún no ha completado durante el proceso de deserialización del objeto. Después de que el objeto requerido se ha deserializado, el <xref:System.Runtime.Serialization.ObjectManager> se completará la referencia.  
  
 El <xref:System.Runtime.Serialization.ObjectManager> sigue un conjunto de reglas que determinan el orden de corrección. Todos los objetos que implementan <xref:System.Runtime.Serialization.ISerializable> o tiene un <xref:System.Runtime.Serialization.ISerializationSurrogate> pueden esperar que todos los objetos que transmiten a través de <xref:System.Runtime.Serialization.SerializationInfo> está disponible cuando se deserializa el árbol de objetos. Sin embargo, un objeto primario no se puede suponer que todos sus objetos secundarios se hayan completado totalmente totalmente deserializado. Todos los objetos secundarios estará presentes pero no todos los objetos secundarios necesariamente estará presentes. Si un objeto necesita realizar ciertas acciones que dependen de la ejecución de código en sus objetos secundarios, puede retrasar estas acciones, implementar la <xref:System.Runtime.Serialization.IDeserializationCallback> de interfaz y ejecute el código solo cuando se llama de nuevo en esta interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar la <xref:System.Runtime.Serialization.ObjectManager> clase para desplazarse por un gráfico de objetos, pasando sólo una vez por cada objeto.  
  
 [!code-csharp[ObjectManager#1](~/samples/snippets/csharp/VS_Snippets_Misc/ObjectManager/CS/ObjectManager.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectManager(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.ObjectManager : System.Runtime.Serialization.ISurrogateSelector * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.ObjectManager" Usage="new System.Runtime.Serialization.ObjectManager (selector, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">Selector de suplentes que se va a utilizar. <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> determina el suplente que se debe utilizar al deserializar objetos de un tipo dado. En el momento de la deserialización, el selector de suplentes crea una nueva instancia del objeto a partir de la información transmitida en la secuencia.</param>
        <param name="context">Contexto de transmisión por secuencias. <see langword="ObjectManager" /> no utiliza <see cref="T:System.Runtime.Serialization.StreamingContext" />, sino que se pasa como parámetro a los objetos que implementan <see cref="T:System.Runtime.Serialization.ISerializable" /> o tienen <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Estos objetos pueden realizar acciones específicas dependiendo del origen de la información que se va a deserializar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para proporcionar servicios de serialización. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DoFixups">
      <MemberSignature Language="C#" Value="public virtual void DoFixups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoFixups() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.DoFixups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoFixups ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoFixups();" />
      <MemberSignature Language="F#" Value="abstract member DoFixups : unit -&gt; unit&#xA;override this.DoFixups : unit -&gt; unit" Usage="objectManager.DoFixups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza todas las correcciones registradas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las correcciones son realizadas por un suplente adecuado, el propio objeto (si implementa <xref:System.Runtime.Serialization.ISerializable>), o la implementación predeterminada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">No se completó una corrección satisfactoriamente.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (objectID As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(long objectID);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : int64 -&gt; obj&#xA;override this.GetObject : int64 -&gt; obj" Usage="objectManager.GetObject objectID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectID">Identificador del objeto solicitado.</param>
        <summary>Devuelve el objeto que tiene el identificador de objeto especificado.</summary>
        <returns>Objeto que tiene el identificador de objeto especificado, si se ha almacenado previamente, o <see langword="null" /> si no se ha registrado tal objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un objeto se pueden registrar y emite un identificador de objeto con una llamada a la <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
      </Docs>
    </Member>
    <Member MemberName="RaiseDeserializationEvent">
      <MemberSignature Language="C#" Value="public virtual void RaiseDeserializationEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseDeserializationEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RaiseDeserializationEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseDeserializationEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaiseDeserializationEvent : unit -&gt; unit&#xA;override this.RaiseDeserializationEvent : unit -&gt; unit" Usage="objectManager.RaiseDeserializationEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provoca el evento de deserialización para cualquier objeto registrado que implemente <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnDeserializingEvent">
      <MemberSignature Language="C#" Value="public void RaiseOnDeserializingEvent (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseOnDeserializingEvent(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseOnDeserializingEvent (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseOnDeserializingEvent(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.RaiseOnDeserializingEvent : obj -&gt; unit" Usage="objectManager.RaiseOnDeserializingEvent obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Instancia del tipo que contiene el método que se va a invocar.</param>
        <summary>Invoca el método marcado con <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RecordArrayElementFixup">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra una corrección para un elemento de una matriz que se ejecutará más adelante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32 index, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordArrayElementFixup (arrayToBeFixed As Long, index As Integer, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordArrayElementFixup(long arrayToBeFixed, int index, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordArrayElementFixup : int64 * int * int64 -&gt; unit&#xA;override this.RecordArrayElementFixup : int64 * int * int64 -&gt; unit" Usage="objectManager.RecordArrayElementFixup (arrayToBeFixed, index, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">Identificador de la matriz que se utiliza para registrar una corrección.</param>
        <param name="index">Índice de <c>arrayFixup</c> para el que se solicita una corrección.</param>
        <param name="objectRequired">Identificador del objeto al que apuntará el elemento de matriz actual una vez completada la corrección.</param>
        <summary>Registra una corrección para un elemento de una matriz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La corrección es para un elemento especificado de una matriz especificada. El valor que se utiliza durante el proceso de corrección se proporciona en el `objectRequired` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="arrayToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="index" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32[] indices, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordArrayElementFixup (arrayToBeFixed As Long, indices As Integer(), objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordArrayElementFixup(long arrayToBeFixed, cli::array &lt;int&gt; ^ indices, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordArrayElementFixup : int64 * int[] * int64 -&gt; unit&#xA;override this.RecordArrayElementFixup : int64 * int[] * int64 -&gt; unit" Usage="objectManager.RecordArrayElementFixup (arrayToBeFixed, indices, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="indices" Type="System.Int32[]" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">Identificador de la matriz que se utiliza para registrar una corrección.</param>
        <param name="indices">Índices de la matriz multidimensional para los que se solicita una corrección.</param>
        <param name="objectRequired">Identificador del objeto al que apuntarán los elementos de la matriz una vez completada la corrección.</param>
        <summary>Registra correcciones para los elementos especificados de una matriz que se ejecutarán más adelante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La corrección es para los elementos especificados de una matriz especificada. El valor que se utiliza durante el proceso de corrección se proporciona en el `objectRequired` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="arrayToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="indices" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordDelayedFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordDelayedFixup(int64 objectToBeFixed, string memberName, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordDelayedFixup (objectToBeFixed As Long, memberName As String, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordDelayedFixup(long objectToBeFixed, System::String ^ memberName, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordDelayedFixup : int64 * string * int64 -&gt; unit&#xA;override this.RecordDelayedFixup : int64 * string * int64 -&gt; unit" Usage="objectManager.RecordDelayedFixup (objectToBeFixed, memberName, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">Identificador del objeto que requiere la referencia a <c>objectRequired</c>.</param>
        <param name="memberName">Nombre de miembro de <c>objectToBeFixed</c> donde se realizará la corrección.</param>
        <param name="objectRequired">Identificador del objeto requerido por <c>objectToBeFixed</c>.</param>
        <summary>Registra una corrección para un miembro de objeto que se ejecutará más adelante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La corrección es para un miembro especificado de un objeto especificado. El valor que se usarán durante el proceso de corrección se proporciona como el `objectRequired` argumento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="memberName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordFixup(int64 objectToBeFixed, class System.Reflection.MemberInfo member, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordFixup (objectToBeFixed As Long, member As MemberInfo, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordFixup(long objectToBeFixed, System::Reflection::MemberInfo ^ member, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordFixup : int64 * System.Reflection.MemberInfo * int64 -&gt; unit&#xA;override this.RecordFixup : int64 * System.Reflection.MemberInfo * int64 -&gt; unit" Usage="objectManager.RecordFixup (objectToBeFixed, member, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">Identificador del objeto que requiere la referencia al objeto <c>objectRequired</c>.</param>
        <param name="member">Miembro de <c>objectToBeFixed</c> donde se realizará la corrección.</param>
        <param name="objectRequired">Identificador del objeto requerido por <c>objectToBeFixed</c>.</param>
        <summary>Registra una corrección para un miembro de un objeto que se ejecutará más adelante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La corrección es para un miembro especificado de un objeto especificado. El valor que se usarán durante el proceso de corrección se proporciona como el `objectRequired` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="member" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra un objeto cuando se deserializa.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public virtual void RegisterObject (object obj, long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObject(object obj, int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterObject (obj As Object, objectID As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterObject(System::Object ^ obj, long objectID);" />
      <MemberSignature Language="F#" Value="abstract member RegisterObject : obj * int64 -&gt; unit&#xA;override this.RegisterObject : obj * int64 -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a registrar.</param>
        <param name="objectID">Identificador del objeto que se va a registrar.</param>
        <summary>Registra un objeto cuando se deserializa y lo asocia a <paramref name="objectID" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ObjectManager> conserva la información sobre el objeto y su identificador. Más adelante, durante la deserialización, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> puede usarse para determinar si un identificador de objeto concreto ya se ha deserializado o si es una referencia adelantada a un objeto que todavía no se ha deserializado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberSignature Language="F#" Value="member this.RegisterObject : obj * int64 * System.Runtime.Serialization.SerializationInfo -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a registrar.</param>
        <param name="objectID">Identificador del objeto que se va a registrar.</param>
        <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizado si <c>obj</c> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o tiene un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <c>info</c> se completará con la información de corrección necesaria y luego se pasará al objeto requerido cuando ese objeto se complete.</param>
        <summary>Registra un objeto cuando se deserializa, lo asocia a <paramref name="objectID" /> y registra el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se utilizó con el mismo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ObjectManager> conserva la información sobre el objeto y su identificador. Más adelante durante la deserialización, puede utilizar <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> para detectar si un objeto determinado identificador ya se ha deserializado o si es una referencia adelantada a un objeto que todavía no se ha deserializado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo, idOfContainingObj As Long, member As MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info, long idOfContainingObj, System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="member this.RegisterObject : obj * int64 * System.Runtime.Serialization.SerializationInfo * int64 * System.Reflection.MemberInfo -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID, info, idOfContainingObj, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a registrar.</param>
        <param name="objectID">Identificador del objeto que se va a registrar.</param>
        <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizado si <c>obj</c> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o tiene un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <c>info</c> se completará con la información de corrección necesaria y luego se pasará al objeto requerido cuando ese objeto se complete.</param>
        <param name="idOfContainingObj">Identificador del objeto que contiene <c>obj</c>. Este parámetro es obligatorio solo si <c>obj</c> es un tipo de valor.</param>
        <param name="member">Campo del objeto contenedor donde existe <c>obj</c>. Este parámetro tiene significado solo si <c>obj</c> es un tipo de valor.</param>
        <summary>Registra un miembro de un objeto cuando se deserializa, lo asocia a <paramref name="objectID" /> y registra <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe proporcionar el `member` y `idOfContainingObj` parámetros si `obj` es un <xref:System.ValueType> debido a la forma se realizan las correcciones en <xref:System.ValueType> objetos. El espacio para almacenar la información de un <xref:System.ValueType> se asigna de acuerdo con su objeto contenedor. Sin embargo, cuando la <xref:System.ValueType> se encuadra para registrarse con el <xref:System.Runtime.Serialization.ObjectManager>, pierde la conexión a su objeto contenedor. Para garantizar que las correcciones se producen en la instancia de la <xref:System.ValueType> almacenado en el objeto contenedor y no en la instancia de la conversión boxing, el <xref:System.Runtime.Serialization.ObjectManager> conserva información adicional.  
  
 <xref:System.Runtime.Serialization.ObjectManager> conserva la información sobre el objeto y su identificador. Más adelante, durante la deserialización, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> puede utilizarse para detectar si ya se ha deserializado un identificador de objeto concreto, o si no es una referencia adelantada a un objeto deserializan todavía.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />, o <paramref name="member" /> no es <see cref="T:System.Reflection.FieldInfo" /> y <paramref name="member" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member, int32[] arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo, idOfContainingObj As Long, member As MemberInfo, arrayIndex As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info, long idOfContainingObj, System::Reflection::MemberInfo ^ member, cli::array &lt;int&gt; ^ arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.RegisterObject : obj * int64 * System.Runtime.Serialization.SerializationInfo * int64 * System.Reflection.MemberInfo * int[] -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID, info, idOfContainingObj, member, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="arrayIndex" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a registrar.</param>
        <param name="objectID">Identificador del objeto que se va a registrar.</param>
        <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizado si <c>obj</c> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o tiene un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <c>info</c> se completará con la información de corrección necesaria y luego se pasará al objeto requerido cuando ese objeto se complete.</param>
        <param name="idOfContainingObj">Identificador del objeto que contiene <c>obj</c>. Este parámetro es obligatorio solo si <c>obj</c> es un tipo de valor.</param>
        <param name="member">Campo del objeto contenedor donde existe <c>obj</c>. Este parámetro tiene significado solo si <c>obj</c> es un tipo de valor.</param>
        <param name="arrayIndex">Si <c>obj</c> es <see cref="T:System.ValueType" /> y miembro de una matriz, <c>arrayIndex</c> contiene el índice de la matriz donde existe <c>obj</c>. <c>arrayIndex</c> se pasa por alto si <c>obj</c> no es a la vez <see cref="T:System.ValueType" /> y miembro de una matriz.</param>
        <summary>Registra un miembro de una matriz incluida en un objeto mientras se deserializa, lo asocia a <paramref name="objectID" /> y registra <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe proporcionar el `member` y `idOfContainingObj` parámetros si `obj` es un <xref:System.ValueType> debido a la forma se realizan las correcciones en <xref:System.ValueType> objetos. El espacio para almacenar la información de un <xref:System.ValueType> se asigna de acuerdo con su objeto contenedor. Sin embargo, cuando la <xref:System.ValueType> se encuadra para registrarse con el <xref:System.Runtime.Serialization.ObjectManager>, pierde la conexión a su objeto contenedor. Para garantizar que las correcciones se producen en la instancia de la <xref:System.ValueType> almacenado en el objeto contenedor y no en la instancia de la conversión boxing, el <xref:System.Runtime.Serialization.ObjectManager> conserva información adicional.  
  
 <xref:System.Runtime.Serialization.ObjectManager> conserva la información sobre el objeto y su identificador. Más adelante, durante la deserialización, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> puede utilizarse para detectar si ya se ha deserializado un identificador de objeto concreto, o si no es una referencia adelantada a un objeto deserializan todavía.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />, o <paramref name="member" /> no es <see cref="T:System.Reflection.FieldInfo" /> y <paramref name="member" /> no es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>