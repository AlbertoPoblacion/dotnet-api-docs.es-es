<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KnownTypeAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e528e2ed0c01f916d419c3c25d9b01ba53c4774d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e528e2ed0c01f916d419c3c25d9b01ba53c4774d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>Specifies types that should be recognized by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> when serializing or deserializing a given type.</source>
          <target state="translated">Especifica tipos que deberá reconocer <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> al serializar o deserializar un tipo determinado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> attribute to a type to indicate to the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.</source>
          <target state="translated">Aplique el atributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> a un tipo para indicar a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> los tipos que deberá reconocer al serializar o deserializar una instancia del tipo al que se aplica el atributo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>This attribute could also be recognized by other serializers that understand data contracts.</source>
          <target state="translated">Otros serializadores que comprendan los contratos de datos también podrían reconocer este atributo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>In your code, you can use the word <ph id="ph1">`KnownType`</ph> instead of the longer <ph id="ph2">`KnownTypeAttribute`</ph>.</source>
          <target state="translated">En el código, se puede usar la palabra <ph id="ph1">`KnownType`</ph> en lugar de <ph id="ph2">`KnownTypeAttribute`</ph>, que resulta más largo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>You can either apply exactly one <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> instance with the <ph id="ph2">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A&gt;</ph> property set, or one or more <ph id="ph3">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> instances with the <ph id="ph4">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A&gt;</ph> property set.</source>
          <target state="translated">Se puede aplicar exactamente una instancia <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> con la propiedad <ph id="ph2">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A&gt;</ph> establecida, o bien una o más instancias <ph id="ph3">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> con la propiedad <ph id="ph4">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A&gt;</ph> establecida.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>The following example shows a type named <ph id="ph1">`Person`</ph> and a type named <ph id="ph2">`IDInformation`</ph> that should be recognized when serializing or deserializing the <ph id="ph3">`Person`</ph> type.</source>
          <target state="translated">El ejemplo siguiente muestra un tipo denominado <ph id="ph1">`Person`</ph> y un tipo denominado <ph id="ph2">`IDInformation`</ph> que se deberá reconocer al serializar o deserializar el tipo <ph id="ph3">`Person`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>The name of the method that returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> of types used when serializing or deserializing data.</source>
          <target state="translated">El nombre del método que devuelve una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> de tipos usados al serializar o deserializar datos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class with the name of a method that returns an <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> of known types.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> con el nombre de un método que devuelve <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> de tipos conocidos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>This constructor uses a method name that matches a method of the class.</source>
          <target state="translated">Este constructor usa un nombre de método que coincide con un método de la clase.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>The method returns a <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">El método devuelve <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> de objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</source>
          <target state="translated">Durante la serialización o la deserialización, los tipos encontrados en la colección se pueden usar dentro del tipo raíz al que se aplica el atributo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">`methodName`</ph> parameter to identify a method in the type that contains an array of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">El ejemplo siguiente usa el parámetro <ph id="ph1">`methodName`</ph> para identificar un método en el tipo que contiene una matriz de los objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is included as a known type when serializing or deserializing data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que está incluido como un tipo conocido al serializar o deserializar los datos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class with the specified type.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> con el tipo especificado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
          <source>The following example shows a type named <ph id="ph1">`Person`</ph> and a type named <ph id="ph2">`IDInformation`</ph> that should be included when or deserializing.</source>
          <target state="translated">El ejemplo siguiente muestra un tipo denominado <ph id="ph1">`Person`</ph> y un tipo denominado <ph id="ph2">`IDInformation`</ph> que deberá incluirse al serializar o deserializar.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</source>
          <target state="translated">Obtiene el nombre de un método que devolverá una lista de tipos que se deberán reconocer durante la serialización o la deserialización.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name of the method on the type defined by the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el nombre del método en el tipo definido por la clase <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>The method must exist on the class or structure that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, such as the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class, or an array of <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">El método debe existir en la clase o la estructura a los que se aplica <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph>, debe ser estático, no debe aceptar ningún parámetro y debe devolver una instancia de cualquier tipo que implemente la interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> genérica, como la clase <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> o una matriz de los objetos <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>The method is called once per application domain when the data contract is loaded for the type.</source>
          <target state="translated">El método se llama una vez por dominio de aplicación cuando se carga el contrato de datos para el tipo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>The following example uses the <ph id="ph1">`methodName`</ph> parameter to identify a method in the type that contains an array of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">El ejemplo siguiente usa el parámetro <ph id="ph1">`methodName`</ph> para identificar un método en el tipo que contiene una matriz de los objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
          <source>Gets the type that should be recognized during serialization or deserialization by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Obtiene el tipo que <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> deberá reconocer durante la serialización o la deserialización.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is used during serialization or deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se usa durante la serialización o la deserialización.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>