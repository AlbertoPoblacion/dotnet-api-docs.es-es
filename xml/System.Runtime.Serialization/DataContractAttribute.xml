<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0758a28277a90cdd20d33b8545f68c5b87d31302" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37466797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que el tipo define o implementa un contrato de datos y los puede serializar un serializador como, por ejemplo <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. Para que hacer su tipo sea serializable, los autores del tipo deben definir un contrato de datos para dicho tipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplique el atributo <xref:System.Runtime.Serialization.DataContractAttribute> a los tipos (clases, estructuras o enumeraciones) que usa <xref:System.Runtime.Serialization.DataContractSerializer> en serialización y operaciones de la deserialización Si enviar o recibir mensajes mediante la infraestructura de Windows Communication Foundation (WCF), también debe aplicar la <xref:System.Runtime.Serialization.DataContractAttribute> a cualquier clase que contenga y manipule datos enviados en mensajes. Para obtener más información acerca de los contratos de datos, vea [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 También se debe aplicar <xref:System.Runtime.Serialization.DataMemberAttribute> a cualquier campo, propiedad o evento que contenga los valores que desee serializar. Si se aplica <xref:System.Runtime.Serialization.DataContractAttribute>, se permite explícitamente <xref:System.Runtime.Serialization.DataContractSerializer> serializar y deserializar los datos.  
  
> [!CAUTION]
>  Puede aplicar <xref:System.Runtime.Serialization.DataMemberAttribute> a campos privados. Tenga en cuenta que los datos devueltos por el campo (aun cuando es privado) se serializan y deserializan, de modo que un usuario o proceso malintencionado puede verlos o interceptarlos.  
  
 Para obtener más información acerca de los contratos de datos, vea los temas enumerados en [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
## <a name="data-contracts"></a>Contratos de datos  
 Un *contrato de datos* es una descripción abstracta de un conjunto de campos con un nombre y tipo de datos para cada campo. El contrato de datos existe fuera de cualquier implementación única para permitir la interoperación de servicios en plataformas diferentes. Siempre y cuando los datos que se pasen entre los servicios se ajusten al mismo contrato, todos los servicios podrán procesar los datos. Este procesamiento es también se denomina un *sistema flojamente acoplado*. Un contrato de datos también es similar a una interfaz en la que el contrato especifica cómo se deben entregar los datos para que los pueda procesar una aplicación. Por ejemplo, el contrato de datos puede llamar a un tipo de datos denominado "Persona" que tiene dos campos de texto, denominados "Nombre" y "Apellidos". Para crear un contrato de datos, aplique <xref:System.Runtime.Serialization.DataContractAttribute> a la clase y aplique <xref:System.Runtime.Serialization.DataMemberAttribute> a cualquier campo o propiedad que se deba serializar. Cuando esté serializado, los datos se ajustarán al contrato de datos que está integrado implícitamente en el tipo.  
  
> [!NOTE]
>  Un contrato de datos difiere significativamente de una interfaz real en su comportamiento con las herencias. Las interfaces se heredan mediante cualquiera de los tipos derivados. Al aplicar <xref:System.Runtime.Serialization.DataContractAttribute> a una clase base, los tipos derivados no heredan el atributo ni el comportamiento. Sin embargo, si un tipo derivado tiene un contrato de datos, se serializan los miembros de datos de la clase base. No obstante, debe aplicar <xref:System.Runtime.Serialization.DataMemberAttribute> a los nuevos miembros en una clase derivada para que se puedan serializar.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>Documentos de esquema XML y la herramienta SvcUtil  
 Si está intercambiando datos con otros servicios, debe describir el contrato de datos. Para la versión actual de <xref:System.Runtime.Serialization.DataContractSerializer>, se puede usar un esquema XML para definir los contratos de datos. (También se podrían usar otras formas de metadatos/descripción con la misma finalidad.) Para crear un esquema XML de la aplicación, use la [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) con el **/dconly** opción de línea de comandos. Cuando la entrada a la herramienta es un ensamblado, de forma predeterminada, la herramienta genera un conjunto de esquemas XML que define todos los tipos de contrato de datos situados en ese ensamblado. A la inversa, también puede usar la herramienta Svcutil.exe para crear definiciones de clase de Visual Basic o de C# que se ajusten a los requisitos de esquemas XML que usan estructuras que pueden expresarse mediante contratos de datos. En este caso, el **/dconly** opción de línea de comandos no es necesaria.  
  
 Si la entrada a la herramienta Svcutil.exe es un esquema XML, de forma predeterminada, la herramienta crea un conjunto de clases. Si examina esas clases, observará que se ha aplicado <xref:System.Runtime.Serialization.DataContractAttribute>. Puede usar esas clases para crear una nueva aplicación para procesar datos que se deben intercambiar con otros servicios.  
  
 También puede ejecutar la herramienta en un punto de conexión que devuelve un documento de lenguaje de descripción de servicios Web (WSDL) para generar automáticamente el código y configuración para crear a un cliente de Windows Communication Foundation (WCF). Los tipos de inclusiones de código generados que se marcan con <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="reusing-existing-types"></a>Reutilizar tipos existentes  
 Un contrato de datos tiene dos requisitos básicos: un nombre estable y una lista de miembros. El nombre estable consta del identificador uniforme de recursos (URI) para el espacio de nombres y el nombre local del contrato. De forma predeterminada, al aplicar el <xref:System.Runtime.Serialization.DataContractAttribute> a una clase, usa el nombre de clase como el nombre local y espacio de nombres de la clase (con el prefijo "http://schemas.datacontract.org/2004/07/") como el URI de espacio de nombres. Los valores predeterminados se pueden invalidar estableciendo las propiedades <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> y <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A>. También se puede cambiar el espacio de nombres aplicando <xref:System.Runtime.Serialization.ContractNamespaceAttribute> al espacio de nombres. Use esta función cuando tenga un tipo existente que procese datos exactamente como los necesita pero que tienen un espacio de nombres y un nombre de clase diferentes a los del contrato de datos. Mediante la invalidación de los valores predeterminados, puede reutilizar el tipo existente y hacer que los datos serializados se ajusten al contrato de datos.  
  
> [!NOTE]
>  En cualquier código, puede usar la palabra `DataContract` en lugar de la forma más larga <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="versioning"></a>Control de versiones  
 Un contrato de datos también puede alojar versiones posteriores de sí mismo. Es decir, cuando una versión posterior del contrato incluye datos adicionales, esos datos se almacenan y se devuelven a un remitente intactos. Para ello, implemente la interfaz <xref:System.Runtime.Serialization.IExtensibleDataObject>.  
  
 Para obtener más información acerca de las versiones, vea [versiones de contratos de datos](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 En el siguiente ejemplo, se serializa y deserializa una clase denominada `Person` a la que se ha aplicado <xref:System.Runtime.Serialization.DataContractAttribute>. Observe que <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> y las propiedades <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> se han establecido en los valores que reemplazan la configuración predeterminada.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene si <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> se estableció explícitamente.</summary>
        <value>Devuelve <see langword="true" /> si el nombre se estableció explícitamente; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene si <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> se estableció explícitamente.</summary>
        <value>Devuelve <see langword="true" /> si el espacio de nombres se estableció explícitamente; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si conservar los datos de referencia al objeto.</summary>
        <value>
          <see langword="true" /> mantiene los datos de referencia al objeto mediante XML estándar; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad `IsReference` para indicar a <xref:System.Runtime.Serialization.DataContractSerializer> que inserte construcciones XML que conserven información de referencia al objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene si <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> se estableció explícitamente.</summary>
        <value>
          <see langword="true" /> Si la referencia se estableció explícitamente; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del contrato de datos para el tipo.</summary>
        <value>El nombre local del contrato de datos. El valor predeterminado es el nombre de la clase a la que se aplica el atributo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> se usa para dar un nombre a un contrato de datos, cuyo nombre también es el del tipo del esquema XML. Para obtener más información, consulte [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 De forma predeterminada, el nombre de un contrato de datos es el nombre del tipo al que se aplica <xref:System.Runtime.Serialization.DataContractAttribute>. Sin embargo, puede haber razones para cambiar este nombre predeterminado. Una razón es permitir que un tipo existente procese datos que deben ajustarse a un contrato de datos existentes. Por ejemplo, existe un tipo denominado `Person` pero el contrato de datos, contenido en un esquema XML, solicita que el nombre sea `Customer`. El contrato se puede satisfacer estableciendo el valor de propiedad en `Customer`.  
  
 Una segunda razón es permitir la generación de nombres que no son válidos como nombres de tipo. Por ejemplo, si un contrato de datos exige un nombre que no es permitido como nombre de tipo, establezca el valor de propiedad en dicho nombre denegado. Por ejemplo, la cadena "$valor" se deniega como nombre de tipo pero se permite como valor de la propiedad <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el espacio de nombres del contrato de datos para el tipo.</summary>
        <value>Espacio de nombres del contrato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propiedad para especificar un espacio de nombres determinado si su tipo debe devolver datos que obedezcan a un contrato de datos concreto.  
  
> [!TIP]
>  Para que los datos se transmitan correctamente, el nombre de los datos en un contrato de datos debe ser el mismo tanto para el cliente como para el servidor. De forma predeterminada, los proyectos de Visual Basic, agregue un prefijo al espacio de nombres definido en cada archivo (denominado "espacio de nombres raíz," con el nombre del proyecto). Agregar este prefijo hace que los espacios de nombres de servidor y cliente sean diferentes para el mismo tipo. La solución consiste en establecer el <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> propiedad en "", o para establecer explícitamente el espacio de nombres de contrato de datos en esta propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>