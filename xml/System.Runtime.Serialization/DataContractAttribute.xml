<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51b056ba93491521e418681a1e1791c96b415530e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b056ba93491521e418681a1e1791c96b415530e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Especifica que el tipo define o implementa un contrato de datos y los puede serializar un serializador como, por ejemplo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To make their type serializable, type authors must define a data contract for their type.</source>
          <target state="translated">Para que hacer su tipo sea serializable, los autores del tipo deben definir un contrato de datos para dicho tipo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">Aplique el atributo <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a los tipos (clases, estructuras o enumeraciones) que usa <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> en serialización y operaciones de la deserialización</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you send or receive messages by using the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure, you should also apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to any classes that hold and manipulate data sent in messages.</source>
          <target state="translated">Si envía o recibe mensajes con la infraestructura <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, también deberá aplicar <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a cualquier clase que contenga y manipule datos enviados en mensajes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> contratos de datos, vea <bpt id="p1">[</bpt>usar contratos de datos<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You must also apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any field, property, or event that holds values you want to serialize.</source>
          <target state="translated">También se debe aplicar <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a cualquier campo, propiedad o evento que contenga los valores que desee serializar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>, you explicitly enable the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to serialize and deserialize the data.</source>
          <target state="translated">Si se aplica <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>, se permite explícitamente <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> serializar y deserializar los datos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to private fields.</source>
          <target state="translated">Puede aplicar <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a campos privados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</source>
          <target state="translated">Tenga en cuenta que los datos devueltos por el campo (aun cuando es privado) se serializan y deserializan, de modo que un usuario o proceso malintencionado puede verlos o interceptarlos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see the topics listed in <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> contratos de datos, vea los temas enumerados en <bpt id="p1">[</bpt>usar contratos de datos<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Data Contracts</source>
          <target state="translated">Contratos de datos</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A <bpt id="p1">*</bpt>data contract<ept id="p1">*</ept> is an abstract description of a set of fields with a name and data type for each field.</source>
          <target state="translated">A <bpt id="p1">*</bpt>contrato de datos<ept id="p1">*</ept> es una descripción abstracta de un conjunto de campos con un nombre y tipo de datos para cada campo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</source>
          <target state="translated">El contrato de datos existe fuera de cualquier implementación única para permitir la interoperación de servicios en plataformas diferentes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>As long as the data passed between the services conforms to the same contract, all the services can process the data.</source>
          <target state="translated">Siempre y cuando los datos que se pasen entre los servicios se ajusten al mismo contrato, todos los servicios podrán procesar los datos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>This processing is also known as a <bpt id="p1">*</bpt>loosely coupled system<ept id="p1">*</ept>.</source>
          <target state="translated">Este procesamiento es también conocido como un <bpt id="p1">*</bpt>acopladas sistema<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</source>
          <target state="translated">Un contrato de datos también es similar a una interfaz en la que el contrato especifica cómo se deben entregar los datos para que los pueda procesar una aplicación.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</source>
          <target state="translated">Por ejemplo, el contrato de datos puede llamar a un tipo de datos denominado "Persona" que tiene dos campos de texto, denominados "Nombre" y "Apellidos".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To create a data contract, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class and apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any fields or properties that must be serialized.</source>
          <target state="translated">Para crear un contrato de datos, aplique <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a la clase y aplique <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a cualquier campo o propiedad que se deba serializar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When serialized, the data conforms to the data contract that is implicitly built into the type.</source>
          <target state="translated">Cuando esté serializado, los datos se ajustarán al contrato de datos que está integrado implícitamente en el tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract differs significantly from an actual interface in its inheritance behavior.</source>
          <target state="translated">Un contrato de datos difiere significativamente de una interfaz real en su comportamiento con las herencias.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Interfaces are inherited by any derived types.</source>
          <target state="translated">Las interfaces se heredan mediante cualquiera de los tipos derivados.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a base class, the derived types do not inherit the attribute or the behavior.</source>
          <target state="translated">Al aplicar <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a una clase base, los tipos derivados no heredan el atributo ni el comportamiento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, if a derived type has a data contract, the data members of the base class are serialized.</source>
          <target state="translated">Sin embargo, si un tipo derivado tiene un contrato de datos, se serializan los miembros de datos de la clase base.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, you must apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to new members in a derived class to make them serializable.</source>
          <target state="translated">No obstante, debe aplicar <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> a los nuevos miembros en una clase derivada para que se puedan serializar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>XML Schema Documents and the SvcUtil Tool</source>
          <target state="translated">Documentos de esquema XML y la herramienta SvcUtil</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you are exchanging data with other services, you must describe the data contract.</source>
          <target state="translated">Si está intercambiando datos con otros servicios, debe describir el contrato de datos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For the current version of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, an XML schema can be used to define data contracts.</source>
          <target state="translated">Para la versión actual de <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, se puede usar un esquema XML para definir los contratos de datos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> with the <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> command line option.</source>
          <target state="translated">(También se podrían usar otras formas de metadatos/descripción con la misma finalidad.) Para crear un esquema XML de la aplicación, use la <bpt id="p1">[</bpt>la herramienta de utilidad de metadatos de ServiceModel (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> con el <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> opción de línea de comandos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</source>
          <target state="translated">Cuando la entrada a la herramienta es un ensamblado, de forma predeterminada, la herramienta genera un conjunto de esquemas XML que define todos los tipos de contrato de datos situados en ese ensamblado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</source>
          <target state="translated">A la inversa, también puede usar la herramienta Svcutil.exe para crear definiciones de clase de Visual Basic o de C# que se ajusten a los requisitos de esquemas XML que usan estructuras que pueden expresarse mediante contratos de datos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In this case, the <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> command line option is not required.</source>
          <target state="translated">En este caso, el <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> opción de línea de comandos no es necesaria.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</source>
          <target state="translated">Si la entrada a la herramienta Svcutil.exe es un esquema XML, de forma predeterminada, la herramienta crea un conjunto de clases.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you examine those classes, you find that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">Si examina esas clases, observará que se ha aplicado <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can use those classes to create a new application to process data that must be exchanged with other services.</source>
          <target state="translated">Puede usar esas clases para crear una nueva aplicación para procesar datos que se deben intercambiar con otros servicios.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client.</source>
          <target state="translated">También puede ejecutar la herramienta con un extremo que devuelve un documento en lenguaje de descripción de servicios Web (WSDL) para generar automáticamente el código y configuración para crear un cliente <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The generated code includes types that are marked with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">Los tipos de inclusiones de código generados que se marcan con <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Reusing Existing Types</source>
          <target state="translated">Reutilizar tipos existentes</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract has two basic requirements: a stable name and a list of members.</source>
          <target state="translated">Un contrato de datos tiene dos requisitos básicos: un nombre estable y una lista de miembros.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</source>
          <target state="translated">El nombre estable consta del identificador uniforme de recursos (URI) para el espacio de nombres y el nombre local del contrato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By default, when you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a class, it uses the class name as the local name and the class's namespace (prefixed with "<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") as the namespace URI.</source>
          <target state="translated">De forma predeterminada, cuando se aplica el <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> a una clase, utiliza el nombre de clase como el nombre local y el espacio de nombres de la clase (con el prefijo "<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") como el URI de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can override the defaults by setting the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> properties.</source>
          <target state="translated">Los valores predeterminados se pueden invalidar estableciendo las propiedades <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also change the namespace by applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> to the namespace.</source>
          <target state="translated">También se puede cambiar el espacio de nombres aplicando <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> al espacio de nombres.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</source>
          <target state="translated">Use esta función cuando tenga un tipo existente que procese datos exactamente como los necesita pero que tienen un espacio de nombres y un nombre de clase diferentes a los del contrato de datos.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</source>
          <target state="translated">Mediante la invalidación de los valores predeterminados, puede reutilizar el tipo existente y hacer que los datos serializados se ajusten al contrato de datos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In any code, you can use the word <ph id="ph1">`DataContract`</ph> instead of the longer <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">En cualquier código, puede usar la palabra <ph id="ph1">`DataContract`</ph> en lugar de la forma más larga <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Versioning</source>
          <target state="translated">Control de versiones</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract can also accommodate later versions of itself.</source>
          <target state="translated">Un contrato de datos también puede alojar versiones posteriores de sí mismo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</source>
          <target state="translated">Es decir, cuando una versión posterior del contrato incluye datos adicionales, esos datos se almacenan y se devuelven a un remitente intactos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To do this, implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">Para ello, implemente la interfaz <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> versioning, see <bpt id="p1">[</bpt>Data Contract Versioning<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> control de versiones, vea <bpt id="p1">[</bpt>versiones de contratos de datos<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The following example serializes and deserializes a class named <ph id="ph1">`Person`</ph> to which the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">En el siguiente ejemplo, se serializa y deserializa una clase denominada <ph id="ph1">`Person`</ph> a la que se ha aplicado <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> properties have been set to values that override the default settings.</source>
          <target state="translated">Observe que <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> y las propiedades <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> se han establecido en los valores que reemplazan la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Obtiene si <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> se estableció explícitamente.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el nombre se estableció explícitamente; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Obtiene si <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> se estableció explícitamente.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el espacio de nombres se estableció explícitamente; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Gets or sets a value that indicates whether to preserve object reference data.</source>
          <target state="translated">Obtiene o establece un valor que indica si conservar los datos de referencia al objeto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep object reference data using standard XML; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> mantiene los datos de referencia al objeto mediante XML estándar; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Use the <ph id="ph1">`IsReference`</ph> property to instruct the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to insert XML constructs that preserve object reference information.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">`IsReference`</ph> para indicar a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> que inserte construcciones XML que conserven información de referencia al objeto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Obtiene si <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> se estableció explícitamente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reference has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si la referencia se estableció explícitamente; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>Gets or sets the name of the data contract for the type.</source>
          <target state="translated">Obtiene o establece el nombre del contrato de datos para el tipo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The local name of a data contract.</source>
          <target state="translated">El nombre local del contrato de datos.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The default is the name of the class that the attribute is applied to.</source>
          <target state="translated">El valor predeterminado es el nombre de la clase a la que se aplica el atributo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property is used to give a name to a data contract, which is the name of the type in XML schema.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> se usa para dar un nombre a un contrato de datos, cuyo nombre también es el del tipo del esquema XML.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Data Contract Names<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Nombres de contrato de datos<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>By default, the name of a data contract is the name of the type that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> is applied to.</source>
          <target state="translated">De forma predeterminada, el nombre de un contrato de datos es el nombre del tipo al que se aplica <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>However, there may be reasons to change this default name.</source>
          <target state="translated">Sin embargo, puede haber razones para cambiar este nombre predeterminado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>One reason is to allow an existing type to process data that must conform to an existing data contract.</source>
          <target state="translated">Una razón es permitir que un tipo existente procese datos que deben ajustarse a un contrato de datos existentes.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, there exists a type named <ph id="ph1">`Person`</ph> but the data contract, embodied in an XML schema, requires that the name be <ph id="ph2">`Customer`</ph>.</source>
          <target state="translated">Por ejemplo, existe un tipo denominado <ph id="ph1">`Person`</ph> pero el contrato de datos, contenido en un esquema XML, solicita que el nombre sea <ph id="ph2">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The contract can be satisfied by setting the property value to <ph id="ph1">`Customer`</ph>.</source>
          <target state="translated">El contrato se puede satisfacer estableciendo el valor de propiedad en <ph id="ph1">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>A second reason is to allow the generation of names that are invalid as type names.</source>
          <target state="translated">Una segunda razón es permitir la generación de nombres que no son válidos como nombres de tipo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</source>
          <target state="translated">Por ejemplo, si un contrato de datos exige un nombre que no es permitido como nombre de tipo, establezca el valor de propiedad en dicho nombre denegado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For instance, the string "$value" is disallowed as a type name but is allowed as a <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property value.</source>
          <target state="translated">Por ejemplo, la cadena "$valor" se deniega como nombre de tipo pero se permite como valor de la propiedad <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Gets or sets the namespace for the data contract for the type.</source>
          <target state="translated">Obtiene o establece el espacio de nombres del contrato de datos para el tipo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The namespace of the contract.</source>
          <target state="translated">Espacio de nombres del contrato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</source>
          <target state="translated">Use esta propiedad para especificar un espacio de nombres determinado si su tipo debe devolver datos que obedezcan a un contrato de datos concreto.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</source>
          <target state="translated">Para que los datos se transmitan correctamente, el nombre de los datos en un contrato de datos debe ser el mismo tanto para el cliente como para el servidor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</source>
          <target state="translated">Proyectos de Visual Basic, de forma predeterminada, agregan un prefijo al espacio de nombres definido en cada archivo (denominado "espacio de nombres raíz," con el nombre del proyecto).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Adding this prefix causes the client and server namespaces to be different for the same type.</source>
          <target state="translated">Agregar este prefijo hace que los espacios de nombres de servidor y cliente sean diferentes para el mismo tipo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The solution is to set the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> property to "", or to explicitly set the data contract namespace in this property.</source>
          <target state="translated">La solución consiste en establecer el <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> propiedad en "", o para establecer explícitamente el espacio de nombres de contrato de datos en esta propiedad.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>