<Type Name="SerializationBinder" FullName="System.Runtime.Serialization.SerializationBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d51c84f067437aea218df54ebe7c42022691ab77" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36533397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SerializationBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit SerializationBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.SerializationBinder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializationBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializationBinder abstract" />
  <TypeSignature Language="F#" Value="type SerializationBinder = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="77a48-101">Permite a los usuarios controlar la carga de clases y encargar qué clase se debe cargar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77a48-101">Allows users to control class loading and mandate what class to load.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a48-102">Durante la serialización, un formateador transmite la información necesaria para crear una instancia de un objeto con el tipo y la versión correctos.</span><span class="sxs-lookup"><span data-stu-id="77a48-102">During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</span></span> <span data-ttu-id="77a48-103">Por lo general, esta información incluye el nombre de tipo completo y el nombre de ensamblado del objeto.</span><span class="sxs-lookup"><span data-stu-id="77a48-103">This information generally includes the full type name and assembly name of the object.</span></span> <span data-ttu-id="77a48-104">El nombre del ensamblado incluye el nombre, la versión y el nombre seguro (vea [ensamblados con nombre seguro](~/docs/framework/app-domains/strong-named-assemblies.md)) hash del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="77a48-104">The assembly name includes the name, version, and strong name (see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md)) hash of the assembly.</span></span> <span data-ttu-id="77a48-105">De manera predeterminada, el proceso de deserialización utiliza esta información para crear una instancia de un objeto idéntico (con la excepción de cualquier carga de ensamblado restringida por la directiva de seguridad).</span><span class="sxs-lookup"><span data-stu-id="77a48-105">By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</span></span> <span data-ttu-id="77a48-106">Algunos usuarios necesitan controlar qué clase se va a cargar, ya sea porque la clase se ha desplazado entre los ensamblados o porque es necesaria una versión distinta de la clase en el servidor y en el cliente.</span><span class="sxs-lookup"><span data-stu-id="77a48-106">Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</span></span>  
  
 <span data-ttu-id="77a48-107"><xref:System.Runtime.Serialization.SerializationBinder> También puede utilizarse para la seguridad.</span><span class="sxs-lookup"><span data-stu-id="77a48-107"><xref:System.Runtime.Serialization.SerializationBinder> can also be used for security.</span></span> <span data-ttu-id="77a48-108">Puede haber algunas vulnerabilidades de seguridad cuando se intenta deserializar algunos datos de un origen de confianza.</span><span class="sxs-lookup"><span data-stu-id="77a48-108">There might be some security exploits when you are trying to deserialize some data from an untrusted source.</span></span> <span data-ttu-id="77a48-109">El enlazador tendrá una oportunidad para inspeccionar qué tipos se cargan en el dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="77a48-109">The binder gives you an opportunity to inspect what types are being loaded in your application domain.</span></span> <span data-ttu-id="77a48-110">Puede mantener la lista de tipos denegados o una lista de tipos permitidos y restringir qué tipos se van a cargar e instancias.</span><span class="sxs-lookup"><span data-stu-id="77a48-110">You can then either maintain list of denied types or a list of allowed types and restrict which types are being loaded and instantiated.</span></span> <span data-ttu-id="77a48-111">Además, debe prestar atención de qué información es que se va a generar en la conexión, puede que desee proteger (use la seguridad de transporte o mensaje) al enviar los nombres de tipo u otros datos en la conexión.</span><span class="sxs-lookup"><span data-stu-id="77a48-111">In addition you should be mindful of what information is being put out on the wire, you may want to secure (use transport or message security) when sending type names or other data on the wire.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="77a48-112">Utilice únicamente <xref:System.Runtime.Serialization.SerializationBinder> si está completamente seguro de qué información se va a serializar.</span><span class="sxs-lookup"><span data-stu-id="77a48-112">Only use <xref:System.Runtime.Serialization.SerializationBinder> if you are completely sure of what information is being serialized.</span></span> <span data-ttu-id="77a48-113">Tipos malintencionados pueden provocar un comportamiento inesperado.</span><span class="sxs-lookup"><span data-stu-id="77a48-113">Malicious types can cause unexpected behavior.</span></span>  
  
 <span data-ttu-id="77a48-114">Ésta es una clase base abstracta.</span><span class="sxs-lookup"><span data-stu-id="77a48-114">This is an abstract base class.</span></span> <span data-ttu-id="77a48-115">Todos los enlazadores extienden esta clase.</span><span class="sxs-lookup"><span data-stu-id="77a48-115">All binders extend this class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[SerializationBinder Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SerializationBinder Example/CPP/serializationbinder.cpp#1)]
 [!code-csharp[SerializationBinder Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SerializationBinder Example/CS/serializationbinder.cs#1)]
 [!code-vb[SerializationBinder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SerializationBinder Example/VB/serializationbinder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="77a48-116">
        <para>Al heredar de <see cref="T:System.Runtime.Serialization.SerializationBinder" />, debe reemplazar el siguiente miembro: <see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="77a48-116">
          <para>When you inherit from <see cref="T:System.Runtime.Serialization.SerializationBinder" />, you must override the following member: <see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Security.Policy.StrongName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializationBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializationBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77a48-117">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationBinder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToName">
      <MemberSignature Language="C#" Value="public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToName(class System.Type serializedType, [out] string&amp; assemblyName, [out] string&amp; typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BindToName (serializedType As Type, ByRef assemblyName As String, ByRef typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BindToName(Type ^ serializedType, [Runtime::InteropServices::Out] System::String ^ % assemblyName, [Runtime::InteropServices::Out] System::String ^ % typeName);" />
      <MemberSignature Language="F#" Value="abstract member BindToName : Type *  *  -&gt; unit&#xA;override this.BindToName : Type *  *  -&gt; unit" Usage="serializationBinder.BindToName (serializedType, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedType" Type="System.Type" />
        <Parameter Name="assemblyName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="typeName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serializedType">
          <span data-ttu-id="77a48-118">Tipo del objeto del que el formateador va a crear una nueva instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-118">The type of the object the formatter creates a new instance of.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="77a48-119">Especifica el nombre de la clase <see cref="T:System.Reflection.Assembly" /> del objeto serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-119">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="77a48-120">Especifica el nombre de la clase <see cref="T:System.Type" /> del objeto serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-120">Specifies the <see cref="T:System.Type" /> name of the serialized object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77a48-121">Si se reemplaza en una clase derivada, controla el enlace de un objeto serializado a un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-121">When overridden in a derived class, controls the binding of a serialized object to a type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToType">
      <MemberSignature Language="C#" Value="public abstract Type BindToType (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type BindToType(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToType (assemblyName As String, typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ BindToType(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member BindToType : string * string -&gt; Type" Usage="serializationBinder.BindToType (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="77a48-122">Especifica el nombre de la clase <see cref="T:System.Reflection.Assembly" /> del objeto serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-122">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="77a48-123">Especifica el nombre de la clase <see cref="T:System.Type" /> del objeto serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-123">Specifies the <see cref="T:System.Type" /> name of the serialized object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77a48-124">Si se reemplaza en una clase derivada, controla el enlace de un objeto serializado a un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-124">When overridden in a derived class, controls the binding of a serialized object to a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77a48-125">Tipo del objeto del que el formateador va a crear una nueva instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-125">The type of the object the formatter creates a new instance of.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="77a48-126">Ejemplo 1 de SerializationBinder</span><span class="sxs-lookup"><span data-stu-id="77a48-126">SerializationBinder Example#1</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77a48-127">
            <para>Debe implementar el método actual en una clase derivada.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77a48-127">
              <para>You must implement the current method in a derived class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>