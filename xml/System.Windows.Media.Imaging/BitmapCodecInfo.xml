<Type Name="BitmapCodecInfo" FullName="System.Windows.Media.Imaging.BitmapCodecInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9434a107f1df6028278baf9a10e9d91de7a14fb8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668019" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BitmapCodecInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BitmapCodecInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Imaging.BitmapCodecInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BitmapCodecInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapCodecInfo abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona información sobre el códec de creación de imágenes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.Imaging.BitmapCodecInfo> se puede obtener para cada códec en [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] mediante el uso de la <xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A> o <xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
    <altmember cref="T:System.Windows.Media.Imaging.BitmapEncoder" />
    <altmember cref="T:System.Windows.Media.Imaging.BitmapDecoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitmapCodecInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapCodecInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BitmapCodecInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public virtual string Author { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.Author" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Author { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica el autor del códec.</summary>
        <value>Autor del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="ContainerFormat">
      <MemberSignature Language="C#" Value="public virtual Guid ContainerFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContainerFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContainerFormat As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid ContainerFormat { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica el formato de contenedor para el códec.</summary>
        <value>Formato de contenedor del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="DeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string DeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeviceManufacturer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica al fabricante del dispositivo del códec.</summary>
        <value>Fabricante del dispositivo del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="DeviceModels">
      <MemberSignature Language="C#" Value="public virtual string DeviceModels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceModels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceModels As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeviceModels { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica los modelos de dispositivo del códec.</summary>
        <value>Modelo de dispositivo del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="FileExtensions">
      <MemberSignature Language="C#" Value="public virtual string FileExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtensions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtensions As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtensions { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica las extensiones de archivo asociadas con el códec.</summary>
        <value>Extensiones de archivo asociadas con el códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public virtual string FriendlyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FriendlyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que representa el nombre descriptivo del códec.</summary>
        <value>Nombre descriptivo del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="MimeTypes">
      <MemberSignature Language="C#" Value="public virtual string MimeTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeTypes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MimeTypes As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeTypes { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica los [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] asociados al códec.</summary>
        <value>El [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] tipos asociados al códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="SpecificationVersion">
      <MemberSignature Language="C#" Value="public virtual Version SpecificationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version SpecificationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SpecificationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ SpecificationVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica la versión de especificación del códec.</summary>
        <value>Versión de especificación del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="SupportsAnimation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAnimation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el códec admite la animación.</summary>
        <value>
          <see langword="true" /> Si el códec admite la animación; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="SupportsLossless">
      <MemberSignature Language="C#" Value="public virtual bool SupportsLossless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsLossless" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsLossless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsLossless { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el códec admite el formato sin pérdida de la imágenes.</summary>
        <value>
          <see langword="true" /> Si el códec admite sin pérdida de datos de imágenes. en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="SupportsMultipleFrames">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMultipleFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMultipleFrames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMultipleFrames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMultipleFrames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica si el códec admite varios marcos.</summary>
        <value>
          Es <see langword="true" /> si el códec admite varios marcos; de lo contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public virtual Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapCodecInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ Version { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que identifica la versión del códec.</summary>
        <value>Versión del códec.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> propiedad de un determinado <xref:System.Windows.Media.Imaging.BitmapEncoder>. Puede usar el mismo enfoque para recuperar otros <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  
  
 [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Los llamadores deben tener <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permisos de registro para recuperar datos desde el registro.</permission>
        <altmember cref="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
        <altmember cref="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo" />
      </Docs>
    </Member>
  </Members>
</Type>