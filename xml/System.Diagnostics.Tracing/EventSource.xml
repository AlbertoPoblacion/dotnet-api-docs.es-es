<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d3f203c09975bb11794899b8e79533165978c60" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="dc817-101">Proporciona la capacidad de crear eventos de seguimiento de eventos para Windows (ETW).</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc817-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-102">Esta clase está diseñada para ser heredada por una clase de usuario que proporciona eventos específicos que se usará para ETW.</span><span class="sxs-lookup"><span data-stu-id="dc817-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="dc817-103">El <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> se denominan métodos para registrar los eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc817-104">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="dc817-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="dc817-105">Cuando haya terminado de utilizar el tipo, debe eliminar del mismo directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="dc817-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="dc817-106">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="dc817-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="dc817-107">Para deshacerse de él indirectamente, use una construcción de lenguaje como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dc817-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="dc817-108">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="dc817-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="dc817-109">La funcionalidad básica de <xref:System.Diagnostics.Tracing.EventSource> es suficiente para la mayoría de las aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="dc817-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="dc817-110">Si desea más control sobre el manifiesto ETW que se ha creado, puede aplicar el <xref:System.Diagnostics.Tracing.EventAttribute> atributo a los métodos.</span><span class="sxs-lookup"><span data-stu-id="dc817-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="dc817-111">Para las aplicaciones de origen de evento avanzadas, es posible interceptar los comandos que se envían al origen de evento derivado y cambiar el filtrado, o para hacer que las acciones (como el volcado de una estructura de datos) que debe realizar el heredero.</span><span class="sxs-lookup"><span data-stu-id="dc817-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="dc817-112">Un origen de eventos puede activarse con controladores de ETW de Windows, como la herramienta Logman, inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="dc817-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="dc817-113">También es posible controlar mediante programación y interceptar el distribuidor de datos.</span><span class="sxs-lookup"><span data-stu-id="dc817-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="dc817-114">La <xref:System.Diagnostics.Tracing.EventListener> clase proporciona funcionalidad adicional.</span><span class="sxs-lookup"><span data-stu-id="dc817-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="dc817-115">A partir de [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> proporciona soporte para el canal y algunas de las reglas de validación de origen de eventos se han reducido.</span><span class="sxs-lookup"><span data-stu-id="dc817-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="dc817-116">Esto significa que:</span><span class="sxs-lookup"><span data-stu-id="dc817-116">This means:</span></span>  
  
-   <span data-ttu-id="dc817-117"><xref:System.Diagnostics.Tracing.EventSource> tipos ahora pueden implementar interfaces.</span><span class="sxs-lookup"><span data-stu-id="dc817-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="dc817-118">Esto permite el uso de tipos de orígenes de eventos en los sistemas de registro avanzado que usen interfaces para definir un destino de registro comunes.</span><span class="sxs-lookup"><span data-stu-id="dc817-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="dc817-119">Se ha introducido el concepto de un tipo de origen de eventos de utilidad.</span><span class="sxs-lookup"><span data-stu-id="dc817-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="dc817-120">Esta característica permite compartir código entre varios tipos de origen de evento en un proyecto para habilitar escenarios como optimizado <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="dc817-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="dc817-121">Para obtener una versión de la <xref:System.Diagnostics.Tracing.EventSource> se dirige la clase que proporciona compatibilidad con características como canal [!INCLUDE[net_v451](~/includes/net-v451-md.md)] o versiones anteriores, consulte [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span><span class="sxs-lookup"><span data-stu-id="dc817-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc817-122">En el ejemplo siguiente se muestra una implementación simple de la <xref:System.Diagnostics.Tracing.EventSource> clase.</span><span class="sxs-lookup"><span data-stu-id="dc817-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="dc817-123">En el ejemplo siguiente se muestra una implementación más compleja de la <xref:System.Diagnostics.Tracing.EventSource> clase.</span><span class="sxs-lookup"><span data-stu-id="dc817-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="dc817-124">Este tipo es seguro para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc817-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-125">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc817-126">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="dc817-127">
            <see langword="true" /> para producir una excepción cuando se produce un error en el código subyacente de Windows; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-128">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" /> y especifica si se inicia una excepción cuando se produce un error en el código subyacente de Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="dc817-129">Combinación bit a bit de los valores de enumeración que especifican los valores de configuración que se van a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-130">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" /> con las opciones de configuración especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-131">Especificar `settings` cuando el <xref:System.Diagnostics.Tracing.EventSource> se construye le permite especificar si el evento se escribe en un formato autodescriptivo o basado en el manifiesto.</span><span class="sxs-lookup"><span data-stu-id="dc817-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="dc817-132">Además, puede especificar que se debe producir una excepción cuando se produce un error durante el proceso de escritura de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="dc817-133">Nombre que se va a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="dc817-134">No debe ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-135">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" /> con el nombre especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc817-136">
            <paramref name="eventSourceName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="dc817-137">Combinación bit a bit de los valores de enumeración que especifican los valores de configuración que se van a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="dc817-138">Los pares clave-valor que especifican rasgos para el origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-139">Inicializa una nueva instancia del <see cref="T:System.Diagnostics.Tracing.EventSource" /> para su uso con eventos que no forman parte de un contrato y contengan las características y rasgos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-140">Rasgos de proporcionan información adicional para un evento y son interpretados por un agente de escucha de eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="dc817-141">Rasgos se especifican como pares de clave-valor y si no se especifica en parejas, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="dc817-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="dc817-142">Puede recuperar un rasgo, pase la clave para el <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, método.</span><span class="sxs-lookup"><span data-stu-id="dc817-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="dc817-143">Especificar `settings` cuando el <xref:System.Diagnostics.Tracing.EventSource> se construye le permite especificar si el evento se escribe en un formato autodescriptivo o basado en el manifiesto.</span><span class="sxs-lookup"><span data-stu-id="dc817-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="dc817-144">Además, puede especificar que se debe producir una excepción cuando se produce un error durante el proceso de escritura de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc817-145">
            <paramref name="traits" /> no está especificado en pares clave-valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="dc817-146">Nombre que se va a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="dc817-147">No debe ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="dc817-148">Combinación bit a bit de los valores de enumeración que especifican los valores de configuración que se van a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-149">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" /> con el nombre y configuración especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-150">Especificar `settings` cuando el <xref:System.Diagnostics.Tracing.EventSource> se construye le permite especificar si el evento se escribe en un formato autodescriptivo o basado en el manifiesto.</span><span class="sxs-lookup"><span data-stu-id="dc817-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="dc817-151">Además, puede especificar que se debe producir una excepción cuando se produce un error durante el proceso de escritura de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc817-152">
            <paramref name="eventSourceName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="dc817-153">Nombre que se va a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="dc817-154">No debe ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="dc817-155">Combinación bit a bit de los valores de enumeración que especifican los valores de configuración que se van a aplicar al origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="dc817-156">Los pares clave-valor que especifican rasgos para el origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-157">Crea una nueva instancia de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" /> con las opciones de configuración especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-158">Rasgos de proporcionan información adicional para un evento y son interpretados por un agente de escucha de eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="dc817-159">Rasgos se especifican como pares de clave-valor y si no se especifica en parejas, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="dc817-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="dc817-160">Puede recuperar un rasgo, pase la clave para el <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, método.</span><span class="sxs-lookup"><span data-stu-id="dc817-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="dc817-161">Especificar `config` cuando el <xref:System.Diagnostics.Tracing.EventSource> se construye le permite especificar si el evento se escribe en un formato autodescriptivo o basado en el manifiesto.</span><span class="sxs-lookup"><span data-stu-id="dc817-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="dc817-162">Además, puede especificar que se debe producir una excepción cuando se produce un error durante el proceso de escritura de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc817-163">
            <paramref name="eventSourceName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc817-164">
            <paramref name="traits" /> no está especificado en pares clave-valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-165">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-165">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-166">Obtiene cualquier excepción que se produjo durante la construcción de un origen de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-166">Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc817-167">La excepción que se inició durante la construcción del origen del evento o <see langword="null" /> si no se inició ninguna excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-167">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-168"><xref:System.Diagnostics.Tracing.EventSource> constructores no producen excepciones.</span><span class="sxs-lookup"><span data-stu-id="dc817-168"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="dc817-169">En su lugar, se asigna cualquier excepción que se produce a la <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> propiedad y registrados por el <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dc817-169">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-170">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-170">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-171">Obtiene el id. de actividad del subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-171">Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc817-172">Id. de actividad del subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-172">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-173">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-173">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc817-174">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-174">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-175">Llame a `Dispose` cuando haya terminado de usar <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="dc817-175">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="dc817-176">El método `Dispose` deja el <xref:System.Diagnostics.Tracing.EventSource> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="dc817-176">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="dc817-177">Después de llamar a `Dispose`, debe liberar todas las referencias a la <xref:System.Diagnostics.Tracing.EventSource> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Diagnostics.Tracing.EventSource> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="dc817-177">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="dc817-178">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="dc817-178">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc817-179">Realice siempre una llamada a `Dispose` antes de liberar la última referencia al objeto <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="dc817-179">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="dc817-180">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Diagnostics.Tracing.EventSource> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="dc817-180">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="dc817-181">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-181">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-182">Libera los recursos no administrados utilizados por la clase <see cref="T:System.Diagnostics.Tracing.EventSource" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-182">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-183">Se llama a este método público `Dispose()` método y `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="dc817-183">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="dc817-184">`Dispose()` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="dc817-184">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="dc817-185">`Finalize` invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="dc817-185">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="dc817-186">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Diagnostics.Tracing.EventSource> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="dc817-186">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="dc817-187">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="dc817-187">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dc817-188">
              <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dc817-188">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="dc817-189">Al reemplazar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se han eliminado anteriormente en una anterior de la llamada al método Dispose <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dc817-189">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="dc817-190">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="dc817-190">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="dc817-191">Para obtener más información acerca de <see langword="Dispose" /> y <see langword="Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="dc817-191">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-192">Se produce cuando un comando proviene de un agente de escucha de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-192">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc817-193">Permite que el objeto <see cref="T:System.Diagnostics.Tracing.EventSource" /> intente liberar recursos y realizar otras operaciones de limpieza antes de que la recolección de elementos no utilizados lo recupere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-193">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-194">Devuelve una cadena del manifiesto XML asociado al origen de eventos actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-194">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="dc817-195">Tipo del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-195">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="dc817-196">La ruta de acceso al archivo de ensamblado (.dll) que se va a incluir en el elemento [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) del manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-196">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-197">Devuelve una cadena del manifiesto XML asociado al origen de eventos actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-197">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-198">Cadena de datos XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-198">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-199">Consulte la información sobre el esquema XML para el manifiesto del evento, [esquema del manifiesto de evento](http://go.microsoft.com/fwlink/?LinkId=228077) en MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="dc817-199">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="dc817-200">Tipo del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-200">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="dc817-201">La ruta de acceso al archivo de ensamblado (.dll) que se va a incluir en el elemento [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) del manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-201">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="dc817-202">Combinación bit a bit de los valores de enumeración que especifican cómo se genera el manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-202">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-203">Devuelve una cadena del manifiesto XML asociado al origen de eventos actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-203">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-204">Cadena de datos XML o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-204">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-205">Si `flags` especifica `OnlyIfNeededForRegistration` y `eventSourceType` especificado no requiere registro explícito, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="dc817-205">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="dc817-206">Tipo del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-206">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-207">Obtiene el identificador único de esta implementación del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-207">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-208">Un identificador único para este tipo de origen de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-208">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="dc817-209">Tipo del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-209">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-210">Obtiene el nombre descriptivo del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-210">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-211">Nombre descriptivo del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-211">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="dc817-212">El valor predeterminado es el nombre sencillo de la clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-212">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc817-213">Obtiene una instantánea de todos los orígenes de eventos para el dominio de aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-213">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-214">Una enumeración de todos los orígenes de eventos del dominio de aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-214">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="dc817-215">La clave del rasgo que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-215">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-216">Obtiene el valor de rasgo asociado a la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-216">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-217">El valor del rasgo asociado con la calve especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-217">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="dc817-218">Si no se encuentra la calve, devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-218">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-219">Rasgos de proporcionan información adicional para un evento y son interpretados por un agente de escucha de eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-219">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="dc817-220">Rasgos se especifican como pares de clave y valor cuando se construye el origen del evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-220">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-221">Identificador único para el origen de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-221">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc817-222">Un identificador único para el origen de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-222">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-223">Determina si el origen de eventos actual está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-223">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc817-224">Determina si el origen de eventos actual está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-224">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-225">
            <see langword="true" /> si el origen del evento actual está habilitado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-225">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="dc817-226">Nivel del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-226">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="dc817-227">Palabra clave del origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-227">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-228">Determina si el origen de eventos actual que tiene el nivel y la palabra clave especificados está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-228">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-229">
            <see langword="true" /> si el origen del evento está habilitado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-229">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-230">El resultado de este método es solo una aproximación a si un evento en particular está activo.</span><span class="sxs-lookup"><span data-stu-id="dc817-230">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="dc817-231">Se usa para evitar consumir muchos recursos para los registros si estos están deshabilitados.</span><span class="sxs-lookup"><span data-stu-id="dc817-231">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="dc817-232">Orígenes de eventos pueden tener un filtrado adicional que determine su actividad.</span><span class="sxs-lookup"><span data-stu-id="dc817-232">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="dc817-233">Nivel de evento que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-233">The event level to check.</span>
          </span>
          <span data-ttu-id="dc817-234">Se considerará que un origen del evento está habilitado cuando su nivel sea igual o superior a <c>level</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-234">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="dc817-235">Palabras clave del evento que se van a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-235">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="dc817-236">Canal del evento que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-236">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-237">Determina si el origen del evento actual está habilitado para eventos con el nivel, las palabras clave y el canal especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-237">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-238">
            <see langword="true" /> si el origen del evento está habilitado para el nivel de evento especificado, palabras calve y el canal; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-238">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc817-239">El resultado de este método es solo una aproximación a si un evento en particular está activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-239">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="dc817-240">Se usa para evitar consumir muchos recursos para los registros si estos están deshabilitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-240">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="dc817-241">Los orígenes de eventos pueden tener un filtrado adicional que determine su actividad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-241">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-242">Si el</span><span class="sxs-lookup"><span data-stu-id="dc817-242">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-243">Nombre descriptivo de la clase que se deriva del origen de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-243">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc817-244">Nombre descriptivo de la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-244">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="dc817-245">El valor predeterminado es el nombre sencillo de la clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-245">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="dc817-246">Argumentos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-246">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-247">Se llama cuando el origen de eventos actual es actualizado por el controlador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-247">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="dc817-248">Origen de evento al que se va a enviar el comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-248">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="dc817-249">Comando de evento que se va a enviar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-249">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="dc817-250">Argumentos del comando de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-250">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-251">Envía un comando a un origen de eventos especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-251">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-252">Al llamar a <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> reenvía el comando para el <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="dc817-252">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="dc817-253">¿Qué la <xref:System.Diagnostics.Tracing.EventSource> con el comando y sus argumentos son específicos para el origen del evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-253">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="dc817-254">El comando y los argumentos de comando que se pasan a la <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> devolución de llamada del origen del evento especificado.</span><span class="sxs-lookup"><span data-stu-id="dc817-254">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="dc817-255">Si es posible, el origen del evento actual no debería afectar a los eventos de filtrado de los detectores de otros eventos. Sin embargo, que puede no ser posible si el comando hace que una recolección, un sistema de vaciado o alguna otra actividad global.</span><span class="sxs-lookup"><span data-stu-id="dc817-255">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-256">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-256">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-257">Establece el identificador de actividad del subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-257">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="dc817-258">El nuevo identificador de actividad del subproceso actual o <see cref="F:System.Guid.Empty" /> para indicar que el trabajo en el subproceso actual no está asociado con ninguna actividad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-258">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-259">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-259">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-260">Establece el identificador de actividad del subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-260">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-261">Llamar a la <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> método establece el identificador de actividad en una base por subproceso.</span><span class="sxs-lookup"><span data-stu-id="dc817-261">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="dc817-262">Todos los eventos en el subproceso tendrá ese identificador de actividad hasta que se inicie una nueva actividad en el mismo subproceso.</span><span class="sxs-lookup"><span data-stu-id="dc817-262">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="dc817-263">Se llama a este método solo por las bibliotecas que administran sus propios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="dc817-263">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="dc817-264">El nuevo identificador de actividad del subproceso actual o <see cref="F:System.Guid.Empty" /> para indicar que el trabajo en el subproceso actual no está asociado con ninguna actividad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-264">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="dc817-265">El resultado que devuelve este método contiene el identificador de la actividad anterior en el subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-265">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-266">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-266">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-267">Establece el identificador de actividad en el subproceso actual y devuelve el identificador de la actividad anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-267">Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-268">Puede llamar a la <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> método sobrescribir temporalmente los Id. de actividad del subproceso actual con un nuevo identificador de actividad.</span><span class="sxs-lookup"><span data-stu-id="dc817-268">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="dc817-269">A continuación, debe restaurar el identificador de la actividad anterior, pasando el `oldActivityThatWillContinue` argumento pasado a la <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> método.</span><span class="sxs-lookup"><span data-stu-id="dc817-269">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-270">Obtiene la configuración aplicada a este origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-270">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc817-271">Configuración aplicada a este origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-271">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc817-272">Obtiene una representación de cadena de la instancia del origen de eventos actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-272">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc817-273">Nombre e identificador único que identifican el origen de eventos actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-273">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-274">Escribe un evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-274">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="dc817-275">Nombre del evento que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-275">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-276">Escribe un evento sin campos, pero con el nombre especificado y las opciones predeterminadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-276">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc817-277">
            <paramref name="eventName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-277">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="dc817-278">Nombre del evento que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-278">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="dc817-279">Opciones como el nivel, las palabras clave y el código de operación del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-279">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-280">Escribe un evento sin campos, pero con el nombre y las opciones especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-280">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc817-281">
            <paramref name="eventName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-281">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="dc817-282">Tipo que define el evento y los datos asociados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-282">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="dc817-283">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="dc817-284">Nombre del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-284">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dc817-285">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-285">The event data.</span>
          </span>
          <span data-ttu-id="dc817-286">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-286">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-287">Escribe un evento con el nombre y los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-287">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-288">Si `eventName` es `null`, el nombre del evento se deriva automáticamente los datos de evento el tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o si se determina según el nombre de tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="dc817-288">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="dc817-289">Propiedades de instancia de público `data` se va a escribir de forma recursiva para crear los campos de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-289">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="dc817-290">Tipo que define el evento y los datos asociados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-290">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="dc817-291">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-291">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="dc817-292">Nombre del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-292">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="dc817-293">Opciones de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-293">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dc817-294">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-294">The event data.</span>
          </span>
          <span data-ttu-id="dc817-295">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-295">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-296">Escribe un evento con el nombre, los datos de evento y las opciones especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-296">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-297">Si `eventName` es `null`, el nombre del evento se deriva automáticamente los datos de evento el tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o si se determina según el nombre de tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="dc817-297">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="dc817-298">Propiedades de instancia de público `data` se va a escribir de forma recursiva para crear los campos de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-298">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="dc817-299">Tipo que define el evento y los datos asociados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-299">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="dc817-300">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-300">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="dc817-301">Nombre del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-301">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="dc817-302">Opciones de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-302">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dc817-303">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-303">The event data.</span>
          </span>
          <span data-ttu-id="dc817-304">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-304">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-305">Escribe un evento con el nombre, las opciones y los datos de evento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-305">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-306">Si `eventName` es `null`, el nombre del evento se deriva automáticamente los datos de evento el tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o si se determina según el nombre de tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="dc817-306">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="dc817-307">Propiedades de instancia de público `data` se va a escribir de forma recursiva para crear los campos de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-307">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="dc817-308">Tipo que define el evento y los datos asociados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-308">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="dc817-309">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-309">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="dc817-310">Nombre del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-310">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="dc817-311">Opciones de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-311">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="dc817-312">Identificador de la actividad asociada al evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-312">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="dc817-313">El identificador de una actividad asociada o <see cref="F:System.Guid.Empty" /> si no hay una actividad asociada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-313">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dc817-314">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-314">The event data.</span>
          </span>
          <span data-ttu-id="dc817-315">Este tipo debe ser un tipo anónimo o estar marcado con el atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-315">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-316">Escribe un evento con el nombre, las opciones, la actividad relacionada y los datos de evento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-316">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-317">Si `eventName` es `null`, el nombre del evento se deriva automáticamente los datos de evento el tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) o si se determina según el nombre de tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="dc817-317">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="dc817-318">Propiedades de instancia de público `data` se va a escribir de forma recursiva para crear los campos de evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-318">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc817-319">Escribe un evento con el identificador de eventos y los argumentos opcionales especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-319">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-320">El `WriteEvent` método proporciona sobrecargas con combinaciones de argumentos de cadena y enteros.</span><span class="sxs-lookup"><span data-stu-id="dc817-320">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="dc817-321">Si ninguna de estas combinaciones coincide con los parámetros de la llamada, el compilador usa el <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> sobrecarga, que es considerablemente más lento que las otras sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="dc817-321">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="dc817-322">Consulte la página de sobrecarga para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="dc817-322">See the overload page for details.</span></span>  
  
 <span data-ttu-id="dc817-323">En todos los casos, la `eventid` parámetro debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-323">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-324">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-324">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-325">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-325">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-326">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-326">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-327">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-327">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="dc817-328">También puede crear una sobrecarga personalizada mediante el <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dc817-328">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-329">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-329">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-330">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-330">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-331">Escribe un evento con el identificador de eventos proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-331">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-332">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-332">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-333">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-333">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-334">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-334">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-335">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-335">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-336">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-336">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="dc817-337">En el ejemplo siguiente se muestra cómo utilizar esta sobrecarga del método para escribir un evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-337">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="dc817-338">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Diagnostics.Tracing.EventSource> clase.</span><span class="sxs-lookup"><span data-stu-id="dc817-338">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-339">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-339">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-340">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-340">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-341">Argumento de matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-341">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-342">Escribe un evento con el identificador de eventos y el argumento de matriz de bytes especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-342">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-343">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-343">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-344">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-344">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-345">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-345">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-346">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-346">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-347">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-347">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-348">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-348">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-349">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-349">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-350">Argumento de tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-350">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-351">Escribe un evento con el identificador de eventos y el argumento entero de 32 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-351">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-352">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-352">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-353">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-353">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-354">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-354">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-355">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-355">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-356">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-356">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="dc817-357">En el ejemplo siguiente se muestra cómo utilizar esta sobrecarga del método para escribir un evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-357">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="dc817-358">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Diagnostics.Tracing.EventSource> clase.</span><span class="sxs-lookup"><span data-stu-id="dc817-358">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-359">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-359">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-360">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-360">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-361">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-361">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-362">Escribe un evento con el identificador de eventos y el argumento entero de 64 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-362">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-363">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-363">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-364">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-364">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-365">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-365">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-366">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-366">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-367">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-367">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-368">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-368">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-369">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-369">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="dc817-370">Matriz de objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-370">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-371">Escribe un evento con el identificador de eventos y la matriz de argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-371">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-372">De forma predeterminada, el compilador llama a esta sobrecarga si los parámetros de la llamada no coincide con una de las otras sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="dc817-372">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="dc817-373">Esta sobrecarga es mucho más lenta que las otras sobrecargas, porque hace lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="dc817-373">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="dc817-374">Asigna una matriz para albergar el argumento variable.</span><span class="sxs-lookup"><span data-stu-id="dc817-374">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="dc817-375">Proyecta cada parámetro a un objeto (lo que hace que las asignaciones para los tipos primitivos).</span><span class="sxs-lookup"><span data-stu-id="dc817-375">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="dc817-376">Estos objetos asignan a la matriz.</span><span class="sxs-lookup"><span data-stu-id="dc817-376">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="dc817-377">Llama a la función, que, a continuación, determina el tipo de cada argumento, por lo que puede serializarse para ETW.</span><span class="sxs-lookup"><span data-stu-id="dc817-377">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="dc817-378">La sobrecarga alta esta sobrecarga no es significativa cuando el seguimiento de eventos de bajo volumen, porque se utiliza el método solo cuando está habilitado el proveedor.</span><span class="sxs-lookup"><span data-stu-id="dc817-378">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="dc817-379">Sin embargo, para los eventos de gran volumen, la sobrecarga de rendimiento puede ser significativa.</span><span class="sxs-lookup"><span data-stu-id="dc817-379">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="dc817-380">Puede evitar el uso de <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> para cargas de gran volumen mediante la creación de una sobrecarga nueva y más rápida con la <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dc817-380">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="dc817-381">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-381">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-382">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-382">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-383">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-383">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-384">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-384">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-385">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-385">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-386">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-386">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-387">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-387">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-388">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-388">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-389">Escribe un evento con el identificador de eventos y el argumento de cadena especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-389">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-390">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-390">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-391">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-391">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-392">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-392">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-393">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-393">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-394">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-394">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="dc817-395">En el ejemplo siguiente se muestra cómo utilizar esta sobrecarga del método para escribir un evento.</span><span class="sxs-lookup"><span data-stu-id="dc817-395">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="dc817-396">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Diagnostics.Tracing.EventSource> clase.</span><span class="sxs-lookup"><span data-stu-id="dc817-396">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-397">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-397">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-398">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-398">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-399">Argumento de tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-399">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-400">Argumento de tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-400">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-401">Escribe un evento con el identificador de eventos y los argumentos enteros de 32 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-401">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-402">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-402">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-403">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-403">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-404">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-404">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-405">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-405">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-406">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-406">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-407">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-407">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-408">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-408">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-409">Argumento de tipo entero de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-409">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-410">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-410">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-411">Escribe un evento con el identificador de eventos y los argumentos de cadena y enteros de 32 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-411">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-412">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-412">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-413">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-413">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-414">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-414">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-415">Argumento de matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-415">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-416">Escribe los datos del evento con el identificador y los argumentos de matriz de bytes y enteros de 64 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-416">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-417">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-417">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-418">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-418">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-419">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-419">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-420">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-420">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-421">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-421">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-422">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-422">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-423">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-423">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-424">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-424">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-425">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-425">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-426">Escribe un evento con el identificador de eventos y los argumentos de 64 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-426">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-427">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-427">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-428">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-428">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-429">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-429">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-430">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-430">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-431">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-431">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-432">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-432">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-433">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-433">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-434">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-434">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-435">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-435">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-436">Escribe un evento con el identificador de eventos y los argumentos de cadena y enteros de 64 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-436">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-437">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-437">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-438">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-438">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-439">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-439">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-440">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-440">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-441">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-441">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-442">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-442">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-443">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-443">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-444">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-444">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-445">Argumento de tipo entero de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-445">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-446">Escribe un evento con el identificador de eventos y los argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-446">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-447">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-447">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-448">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-448">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-449">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-449">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-450">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-450">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-451">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-451">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-452">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-452">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-453">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-453">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-454">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-454">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-455">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-455">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-456">Escribe un evento con el identificador de eventos y los argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-456">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-457">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-457">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-458">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-458">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-459">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-459">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-460">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-460">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-461">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-461">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-462">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-462">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-463">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-463">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-464">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-464">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-465">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-465">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-466">Escribe un evento con el identificador de eventos y los argumentos de cadena especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-466">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-467">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-467">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-468">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-468">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-469">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-469">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-470">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-470">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-471">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-471">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-472">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-472">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-473">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-473">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-474">Argumento de tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-474">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-475">Argumento de tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-475">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="dc817-476">Argumento de tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-476">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-477">Escribe un evento con el identificador de eventos y los argumentos enteros de 32 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-477">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-478">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-478">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-479">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-479">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-480">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-480">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-481">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-481">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-482">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-482">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-483">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-483">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-484">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-484">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-485">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-485">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-486">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-486">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="dc817-487">Argumento de tipo entero de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-487">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-488">Escribe un evento con el identificador de eventos y los argumentos de 64 bits especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-488">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-489">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-489">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-490">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-490">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-491">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-491">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-492">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-492">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-493">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-493">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-494">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-494">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-495">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-495">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-496">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-496">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-497">Argumento de tipo entero de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-497">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="dc817-498">Argumento de tipo entero de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-498">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-499">Escribe un evento con el identificador de eventos y los argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-499">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-500">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-500">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-501">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-501">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-502">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-502">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-503">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-503">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-504">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-504">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-505">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-505">The event identifier.</span>
          </span>
          <span data-ttu-id="dc817-506">Este valor debe estar comprendido entre 0 y 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-506">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="dc817-507">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-507">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="dc817-508">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-508">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="dc817-509">Argumento de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-509">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-510">Escribe un evento con el identificador de eventos y los argumentos de cadena especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-510">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-511">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-511">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-512">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-512">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-513">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-513">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-514">Cuando se implementa un método que se identifica como un evento ETW en un <xref:System.Diagnostics.Tracing.EventSource>-clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dc817-514">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="dc817-515">Debe llamar a la clase base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método pasando la <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> y los mismos argumentos que el método implementado similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-515">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-516">Identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-516">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="dc817-517">El número de elementos de datos de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-517">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dc817-518">Estructura que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-518">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-519">Crea una nueva sobrecarga de <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> usando el identificador de eventos y los datos de eventos proporcionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-519">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-520">`eventid` debe ser mayor que 0 o inferior a 65535 o pueden producirse errores en la operación.</span><span class="sxs-lookup"><span data-stu-id="dc817-520">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="dc817-521">Si se producen errores, puede obtener más información sobre el origen del error mediante la comprobación de la secuencia de salida del depurador, si tiene un depurador asociado al proceso desencadenar eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-521">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="dc817-522">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span><span class="sxs-lookup"><span data-stu-id="dc817-522">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="dc817-523">Este método protegido permite a los usuarios definan nuevas <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> sobrecargas que son más rápidas que las sobrecargas proporcionadas.</span><span class="sxs-lookup"><span data-stu-id="dc817-523">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="dc817-524">Crear una nueva sobrecarga implica el código no seguro.</span><span class="sxs-lookup"><span data-stu-id="dc817-524">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="dc817-525">El procedimiento básico consiste en pila-asigne una matriz de descriptores de datos de evento que coincide con el número de elementos de carga.</span><span class="sxs-lookup"><span data-stu-id="dc817-525">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="dc817-526">Para cada elemento de carga, establezca el tamaño correcto y el valor en el evento matriz de datos. Llamar a <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> con la matriz inicializada.</span><span class="sxs-lookup"><span data-stu-id="dc817-526">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="dc817-527">En el ejemplo siguiente se muestra cómo agregar un <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> sobrecarga que acepta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="dc817-527">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="dc817-528">Un ejemplo sería si tiene un evento de registro que registra una cadena y enteros de 3.</span><span class="sxs-lookup"><span data-stu-id="dc817-528">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="dc817-529">Puede hacerlo sin llamar a <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, pero es más lento de lo necesario.</span><span class="sxs-lookup"><span data-stu-id="dc817-529">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="dc817-530">Eso es porque utiliza matrices y reflexión para averiguar qué hacer.</span><span class="sxs-lookup"><span data-stu-id="dc817-530">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="dc817-531">Si se registra con una tasa alta (> 1000 / seg), puede ser que vale la pena realizar una aplicación auxiliar de rápido, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dc817-531">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="dc817-532">El método sombrea existente <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc817-532">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="dc817-533">Por lo tanto no cambia realmente el código del llamador original (LogTime), pero el compilador de C# utilizarán la versión más especializada que será más rápida.</span><span class="sxs-lookup"><span data-stu-id="dc817-533">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="dc817-534">Para compilar código no seguro, se debe especificar el [/ unsafe (opciones del compilador de C#)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) opción del compilador.</span><span class="sxs-lookup"><span data-stu-id="dc817-534">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dc817-535">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-535">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dc817-536">Este miembro no puede usarse por código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-536">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-537">Un identificador que identifica de forma única este evento dentro de <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-537">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="dc817-538">Identificador de actividad relacionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-538">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="dc817-539">Matriz de objetos que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-539">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-540">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-540">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-541">Escribe un evento que indica que la actividad actual se relaciona con otra actividad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-541">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-542">El <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> método registra un evento de transferencia.</span><span class="sxs-lookup"><span data-stu-id="dc817-542">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="dc817-543">La actividad del subproceso actual se registra con el evento, y esto permite que dos actividades se relacionen por un consumidor de eventos.</span><span class="sxs-lookup"><span data-stu-id="dc817-543">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="dc817-544">El método de evento ETW llamar a esta función debe seguir estas directrices:</span><span class="sxs-lookup"><span data-stu-id="dc817-544">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="dc817-545">Especificar el primer parámetro como un <xref:System.Guid> denominado `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="dc817-545">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="dc817-546">Especifique <xref:System.Diagnostics.Tracing.EventOpcode.Send> o <xref:System.Diagnostics.Tracing.EventOpcode.Receive> como el <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dc817-546">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="dc817-547">Llame a <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> pasar en el evento identificador, seguido por el identificador GUID relacionados, seguido de todos los parámetros del método de evento se pasa en el mismo orden.</span><span class="sxs-lookup"><span data-stu-id="dc817-547">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="dc817-548">Si `args` no es utilizado, se convierte en una matriz vacía de la llamada resultante a ETW.</span><span class="sxs-lookup"><span data-stu-id="dc817-548">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc817-549">En el ejemplo de código siguiente se muestra cómo puede especificar un origen de eventos que llama a <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc817-549">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="dc817-550">Un identificador que identifica de forma única este evento dentro de <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-550">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="dc817-551">Puntero al GUID del identificador de actividad relacionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-551">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="dc817-552">Número de elementos en el campo <c>data</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-552">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="dc817-553">Un puntero al primer elemento del campo de datos de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-553">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc817-554">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-554">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="dc817-555">Escribe un evento que indica que la actividad actual se relaciona con otra actividad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc817-555">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc817-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> es similar a la <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> método pero ofrece un mejor rendimiento, no tiene que aplicar la conversión unboxing de bevcause el `childActivityID` y `data` argumentos.</span><span class="sxs-lookup"><span data-stu-id="dc817-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="dc817-557">El método de evento ETW llamar a esta función debe seguir estas directrices:</span><span class="sxs-lookup"><span data-stu-id="dc817-557">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="dc817-558">Especificar el primer parámetro como un <xref:System.Guid> denominado `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="dc817-558">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="dc817-559">Especifique <xref:System.Diagnostics.Tracing.EventOpcode.Send> o <xref:System.Diagnostics.Tracing.EventOpcode.Receive> como el <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dc817-559">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="dc817-560">Llame a <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> pasar en el evento identificador, seguido por el identificador GUID relacionados, seguido de todos los parámetros del método de evento se pasa en el mismo orden.</span><span class="sxs-lookup"><span data-stu-id="dc817-560">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc817-561">El siguiente ejemplo de código de C# muestra cómo definir una sobrecarga del método que llama a <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc817-561">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>