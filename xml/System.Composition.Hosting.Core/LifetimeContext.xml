<Type Name="LifetimeContext" FullName="System.Composition.Hosting.Core.LifetimeContext">
  <TypeSignature Language="C#" Value="public sealed class LifetimeContext : System.Composition.CompositionContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LifetimeContext extends System.Composition.CompositionContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.LifetimeContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LifetimeContext&#xA;Inherits CompositionContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LifetimeContext sealed : System::Composition::CompositionContext, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.CompositionContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="19926-101">Representa un nodo del árbol de duración.</span><span class="sxs-lookup"><span data-stu-id="19926-101">Represents a node in the lifetime tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="19926-102">La <xref:System.Composition.Hosting.Core.LifetimeContext> objeto es la unidad de uso compartido para los componentes compartidos.</span><span class="sxs-lookup"><span data-stu-id="19926-102">The <xref:System.Composition.Hosting.Core.LifetimeContext> object is the unit of sharing for shared parts.</span></span> <span data-ttu-id="19926-103">Controla la eliminación de elementos de enlace y puede usarse para recuperar las instancias, ya sea como parte de una operación de composición existente o como base de una nueva operación de composición.</span><span class="sxs-lookup"><span data-stu-id="19926-103">It controls the disposal of bound parts and can be used to retrieve instances, either as part of an existing composition operation or as the basis of a new composition operation.</span></span> <span data-ttu-id="19926-104">Un contexto de duración individuales se puede marcar para que contenga elementos que están restringidos por los límites de uso compartidos determinados.</span><span class="sxs-lookup"><span data-stu-id="19926-104">An individual lifetime context can be marked to contain parts that are constrained by particular sharing boundaries.</span></span>

<span data-ttu-id="19926-105">Este objeto contiene dos partes de un estado compartido protegido de forma independiente: compartido instancias del elemento y enlazar instancias del elemento.</span><span class="sxs-lookup"><span data-stu-id="19926-105">This object contains two pieces of independently protected shared state: shared part instances and bound part instances.</span></span> <span data-ttu-id="19926-106">Una instancia de la parte compartida es legible, sin bloqueo y no produce problemas si se agrega a durante la eliminación.</span><span class="sxs-lookup"><span data-stu-id="19926-106">A shared part instance is lock-free, readable, and does not result in issues if it is added to during disposal.</span></span> <span data-ttu-id="19926-107">Está protegida por la que se está bloqueando propio.</span><span class="sxs-lookup"><span data-stu-id="19926-107">It is protected by being locked itself.</span></span> <span data-ttu-id="19926-108">Inevitablemente se invoca la lógica de activación en este bloqueo.</span><span class="sxs-lookup"><span data-stu-id="19926-108">Activation logic is unavoidably called under this lock.</span></span> <span data-ttu-id="19926-109">Una instancia del elemento de enlace esté siempre protegida bloqueando <see langword="this" />y nunca se deben escribir para tras la cancelación.</span><span class="sxs-lookup"><span data-stu-id="19926-109">A bound part instance is always protected by locking <see langword="this" />, and should never be written to after disposal.</span></span> <span data-ttu-id="19926-110">Una instancia del elemento de enlace se establece en <see langword="null" /> con un bloqueo en el <xref:System.Composition.Hosting.Core.LifetimeContext.Dispose> método.</span><span class="sxs-lookup"><span data-stu-id="19926-110">A bound part instance is set to <see langword="null" /> under a lock in the <xref:System.Composition.Hosting.Core.LifetimeContext.Dispose> method.</span></span> <span data-ttu-id="19926-111">Si se permite escribir tras la cancelación de una instancia del elemento enlazado, se crearán en descartables partes no se liberan.</span><span class="sxs-lookup"><span data-stu-id="19926-111">If writing were allowed after disposal for a bound part instance, it would result in disposable parts not being released.</span></span> <span data-ttu-id="19926-112">Se llama al método dispose en una parte dependiente fuera del bloqueo.</span><span class="sxs-lookup"><span data-stu-id="19926-112">The dispose method on a bound part is called outside of the lock.</span></span> 
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBoundInstance">
      <MemberSignature Language="C#" Value="public void AddBoundInstance (IDisposable instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBoundInstance(class System.IDisposable instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBoundInstance (instance As IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBoundInstance(IDisposable ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="19926-113">El elemento.</span><span class="sxs-lookup"><span data-stu-id="19926-113">The part.</span></span></param>
        <summary><span data-ttu-id="19926-114">Enlaza la duración de un elemento desechable a este contexto de duración.</span><span class="sxs-lookup"><span data-stu-id="19926-114">Binds the lifetime of a disposable part to this lifetime context.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="19926-115">La operación se realizó en un objeto desechado.</span><span class="sxs-lookup"><span data-stu-id="19926-115">The operation was performed on a disposed object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllocateSharingId">
      <MemberSignature Language="C#" Value="public static int AllocateSharingId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AllocateSharingId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateSharingId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AllocateSharingId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19926-116">Genera un identificador que se puede usar para buscar instancias compartidas del elemento.</span><span class="sxs-lookup"><span data-stu-id="19926-116">Generates an identifier that can be used to locate shared part instances.</span></span></summary>
        <returns><span data-ttu-id="19926-117">Un nuevo identificador único.</span><span class="sxs-lookup"><span data-stu-id="19926-117">A new unique identifier.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19926-118">Libera el contexto de duración y cualquier instancia del elemento enlazada a él.</span><span class="sxs-lookup"><span data-stu-id="19926-118">Releases the lifetime context and any part instances bound to it.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindContextWithin">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.LifetimeContext FindContextWithin (string sharingBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.LifetimeContext FindContextWithin(string sharingBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindContextWithin (sharingBoundary As String) As LifetimeContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Hosting::Core::LifetimeContext ^ FindContextWithin(System::String ^ sharingBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.LifetimeContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingBoundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sharingBoundary"><span data-ttu-id="19926-119">El límite de uso compartido en el que buscar un contexto de duración.</span><span class="sxs-lookup"><span data-stu-id="19926-119">The sharing boundary to find a lifetime context within.</span></span></param>
        <summary><span data-ttu-id="19926-120">Busca el contexto de duración más amplio en todos los límites de uso compartido especificados.</span><span class="sxs-lookup"><span data-stu-id="19926-120">Finds the broadest lifetime context within all of the specified sharing boundaries.</span></span></summary>
        <returns><span data-ttu-id="19926-121">El contexto de duración más amplio en todos los límites de uso compartido especificados.</span><span class="sxs-lookup"><span data-stu-id="19926-121">The broadest lifetime context within all of the specified sharing boundaries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19926-122">Actualmente, la raíz no puede ser un límite.</span><span class="sxs-lookup"><span data-stu-id="19926-122">Currently, the root cannot be a boundary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public object GetOrCreate (int sharingId, System.Composition.Hosting.Core.CompositionOperation operation, System.Composition.Hosting.Core.CompositeActivator creator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrCreate(int32 sharingId, class System.Composition.Hosting.Core.CompositionOperation operation, class System.Composition.Hosting.Core.CompositeActivator creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreate (sharingId As Integer, operation As CompositionOperation, creator As CompositeActivator) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrCreate(int sharingId, System::Composition::Hosting::Core::CompositionOperation ^ operation, System::Composition::Hosting::Core::CompositeActivator ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingId" Type="System.Int32" />
        <Parameter Name="operation" Type="System.Composition.Hosting.Core.CompositionOperation" />
        <Parameter Name="creator" Type="System.Composition.Hosting.Core.CompositeActivator" />
      </Parameters>
      <Docs>
        <param name="sharingId"><span data-ttu-id="19926-123">Identificador del elemento compartido.</span><span class="sxs-lookup"><span data-stu-id="19926-123">The ID of the shared part.</span></span></param>
        <param name="operation"><span data-ttu-id="19926-124">Operación donde se va a crear un elemento, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="19926-124">An operation in which to create a part, if necessary.</span></span></param>
        <param name="creator"><span data-ttu-id="19926-125">Activador que puede activar una nueva instancia del elemento, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="19926-125">An activator that can activate a new part instance, if necessary.</span></span></param>
        <summary><span data-ttu-id="19926-126">Recupera una instancia de elemento compartida con el identificador especificado, o si no se puede encontrar la instancia de elemento, crea y comparte una instancia de elemento mediante el creador especificado en la operación especificada.</span><span class="sxs-lookup"><span data-stu-id="19926-126">Retrieves a shared part instance with the specified ID, or if the part instance can not be found, creates and shares a part instance using the specified creator within the specified operation.</span></span></summary>
        <returns><span data-ttu-id="19926-127">Elemento nuevo o recuperado.</span><span class="sxs-lookup"><span data-stu-id="19926-127">The new or retrieved part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19926-128">Este método es sin bloqueo si ya existe la instancia del elemento.</span><span class="sxs-lookup"><span data-stu-id="19926-128">This method is lock-free if the part instance already exists.</span></span> <span data-ttu-id="19926-129">Si se debe crear la instancia del elemento, se realizará un bloqueo que se serializará otras operaciones de escritura que usan este método (lecturas simultáneas seguirá sea segura y sin bloqueo).</span><span class="sxs-lookup"><span data-stu-id="19926-129">If the part instance must be created, a lock will be taken that will serialize other writes that use this method (concurrent reads will continue to be safe and lock-free).</span></span> <span data-ttu-id="19926-130">Es importante que la composición y, por tanto, adquisición de bloqueo, es estrictamente hoja-a-raíz del árbol de duración.</span><span class="sxs-lookup"><span data-stu-id="19926-130">It is important that the composition, and thus lock acquisition, is strictly leaf-to-root in the lifetime tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19926-131">Devuelve la representación en forma de cadena de este objeto <see cref="T:System.Composition.Hosting.Core.LifetimeContext" />.</span><span class="sxs-lookup"><span data-stu-id="19926-131">Returns the string representation of this <see cref="T:System.Composition.Hosting.Core.LifetimeContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="19926-132">Representación en forma de cadena de este objeto <see cref="T:System.Composition.Hosting.Core.LifetimeContext" />.</span><span class="sxs-lookup"><span data-stu-id="19926-132">The string representation of this <see cref="T:System.Composition.Hosting.Core.LifetimeContext" /> object.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public override bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetExport (contract As CompositionContract, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetExport(System::Composition::Hosting::Core::CompositionContract ^ contract, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="19926-133">El contrato.</span><span class="sxs-lookup"><span data-stu-id="19926-133">The contract.</span></span></param>
        <param name="export"><span data-ttu-id="19926-134">Después de que este método devuelve un valor, contiene la instancia del contrato si está disponible; en caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19926-134">After this method returns, contains the contract instance if available; otherwise, <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="19926-135">Recupera una instancia del contrato del contexto de composición.</span><span class="sxs-lookup"><span data-stu-id="19926-135">Retrieves a contract instance from the composition context.</span></span></summary>
        <returns>
          <span data-ttu-id="19926-136"><see langword="true" /> si la instancia se recupera; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="19926-136"><see langword="true" /> if the instance was retrieved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>