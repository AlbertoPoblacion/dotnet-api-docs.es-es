<Type Name="CompositionContract" FullName="System.Composition.Hosting.Core.CompositionContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fea8868e5964d61e939bb08abfeb6a90969c6e87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositionContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositionContract extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.CompositionContract" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositionContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Runtime</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="74510-101">Representa un acuerdo entre los elementos que permite que el motor de composición haga coincidir las importaciones con las exportaciones.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74510-101">Represents an agreement between parts that allows the composition engine to match imports with exports.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContract (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContract(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="74510-102">El tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-102">The contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74510-103">Inicializa una nueva instancia de la clase <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> con el tipo de contrato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-103">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> class with the specified contract type.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContract (Type contractType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type, contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContract(Type ^ contractType, System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="74510-104">El tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-104">The contract type.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="74510-105">El nombre del contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-105">The contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74510-106">Inicializa una nueva instancia de la clase <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> con el nombre de contrato y el tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-106">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> class with the specified contract name and type.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContract (Type contractType, string contractName, System.Collections.Generic.IDictionary&lt;string,object&gt; metadataConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType, string contractName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadataConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type, contractName As String, metadataConstraints As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContract(Type ^ contractType, System::String ^ contractName, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadataConstraints);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="metadataConstraints" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="74510-107">El tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-107">The contract type.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="74510-108">El nombre del contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-108">The contract name.</span>
          </span>
        </param>
        <param name="metadataConstraints">
          <span data-ttu-id="74510-109">Colección de las restricciones de metadatos para el contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-109">A collection of metadata constraints for the contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74510-110">Inicializa una nueva instancia de la clase <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> con el nombre de contrato, el tipo y las restricciones de los metadatos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-110">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> class with the specified contract name, type, and metadata constraints.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.CompositionContract ChangeType (Type newContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.CompositionContract ChangeType(class System.Type newContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.ChangeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeType (newContractType As Type) As CompositionContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Hosting::Core::CompositionContract ^ ChangeType(Type ^ newContractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="newContractType">
          <span data-ttu-id="74510-111">Nuevo tipo de contacto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-111">The new contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74510-112">Crea un nuevo contrato que tiene el elemento especificado pero el mismo nombre y restricciones que este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-112">Creates a new contract that has the specified type but the same name and constraints as this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74510-113">El contrato creado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-113">The created contract.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionContract.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74510-114">Obtiene el nombre del contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-114">Gets the name of the contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74510-115">El nombre del contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-115">The contract name.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionContract.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74510-116">Obtiene el tipo del contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-116">Gets the contract type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74510-117">El tipo de contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-117">The contract type.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="74510-118">Objeto que se va a comparar con este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-118">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74510-119">Determina si el objeto especificado es igual a esta instancia de <see cref="T:System.Composition.Hosting.Core.CompositionContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-119">Determines whether the specified object is equal to this instance of <see cref="T:System.Composition.Hosting.Core.CompositionContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74510-120">
            <see langword="true" /> si el objeto especificado es igual al objeto actual; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-120">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74510-121">Devuelve el código hash de este objeto <see cref="T:System.Composition.Hosting.Core.CompositionContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-121">Returns the hash code for this <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74510-122">Código hash del objeto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-122">The hash code for the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataConstraints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; MetadataConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; MetadataConstraints" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionContract.MetadataConstraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataConstraints As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ MetadataConstraints { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74510-123">Obtiene una colección de las restricciones de los metadatos para el contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-123">Gets a collection of metadata constraints for the contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74510-124">Colección de restricciones de metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-124">A collection of metadata constraints.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74510-125">Devuelve la representación en forma de cadena de este objeto <see cref="T:System.Composition.Hosting.Core.CompositionContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-125">Returns the string representation of this <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74510-126">Representación en forma de cadena de este objeto <see cref="T:System.Composition.Hosting.Core.CompositionContract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-126">The string representation of this <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUnwrapMetadataConstraint&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryUnwrapMetadataConstraint&lt;T&gt; (string constraintName, out T constraintValue, out System.Composition.Hosting.Core.CompositionContract remainingContract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnwrapMetadataConstraint&lt;T&gt;(string constraintName, [out] !!T&amp; constraintValue, [out] class System.Composition.Hosting.Core.CompositionContract&amp; remainingContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnwrapMetadataConstraint(Of T) (constraintName As String, ByRef constraintValue As T, ByRef remainingContract As CompositionContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; bool TryUnwrapMetadataConstraint(System::String ^ constraintName, [Runtime::InteropServices::Out] T % constraintValue, [Runtime::InteropServices::Out] System::Composition::Hosting::Core::CompositionContract ^ % remainingContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="constraintName" Type="System.String" />
        <Parameter Name="constraintValue" Type="T&amp;" RefType="out" />
        <Parameter Name="remainingContract" Type="System.Composition.Hosting.Core.CompositionContract&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="74510-127">Tipo del valor de restricción de metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-127">The type of the metadata constraint value.</span>
          </span>
        </typeparam>
        <param name="constraintName">
          <span data-ttu-id="74510-128">Nombre de la restricción de metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-128">The name of the metadata constraint.</span>
          </span>
        </param>
        <param name="constraintValue">
          <span data-ttu-id="74510-129">Cuando este método devuelve un valor, contiene el valor de la restricción si se encontró.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-129">When this method returns, contains the value of the constraint if it was found.</span>
          </span>
          <span data-ttu-id="74510-130">Este parámetro se trata como sin inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-130">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <param name="remainingContract">
          <span data-ttu-id="74510-131">Cuando este método devuelve un valor, contiene el contrato con la restricción quitada, si la restricción se encontró.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-131">When this method returns, holds the contract with the constraint removed, if the constraint was found.</span>
          </span>
          <span data-ttu-id="74510-132">Este parámetro se trata como sin inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-132">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74510-133">Obtiene una restricción de metadatos que tiene el tipo y el nombre especificados, si existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-133">Gets a metadata constraint that has the specified type and name, if it exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74510-134">
            <see langword="true" /> si el elemento de metadatos limitado se desempaquetó y se extrajo el valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74510-134">
              <see langword="true" /> if the constrained metadata item was unwrapped and the value extracted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>