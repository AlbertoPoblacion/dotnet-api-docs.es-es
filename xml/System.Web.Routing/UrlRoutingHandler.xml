<Type Name="UrlRoutingHandler" FullName="System.Web.Routing.UrlRoutingHandler">
  <TypeSignature Language="C#" Value="public abstract class UrlRoutingHandler : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlRoutingHandler extends System.Object implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.UrlRoutingHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UrlRoutingHandler&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlRoutingHandler abstract : System::Web::IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4952f-101">Actúa como clase base para las clases que permiten personalizar cómo el enrutamiento ASP.NET procesa una solicitud.</span><span class="sxs-lookup"><span data-stu-id="4952f-101">Serves as base class for classes that enable you to customize how ASP.NET routing processes a request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4952f-102">Puede personalizar cómo el enrutamiento de ASP.NET controla las solicitudes asignando una extensión de nombre de archivo a un controlador de enrutamiento determinado en lugar de mediante el uso de la <xref:System.Web.Routing.UrlRoutingModule> clase como el controlador de enrutamiento para cada solicitud.</span><span class="sxs-lookup"><span data-stu-id="4952f-102">You can customize how ASP.NET routing handles requests by mapping a file name extension to a particular routing handler instead of by using the <xref:System.Web.Routing.UrlRoutingModule> class as the routing handler for every request.</span></span>  
  
 <span data-ttu-id="4952f-103">Para personalizar cómo el enrutamiento de ASP.NET controla una solicitud para una dirección URL con una extensión de nombre de archivo específico, cree una clase que deriva de la <xref:System.Web.Routing.UrlRoutingHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="4952f-103">To customize how ASP.NET routing handles a request for a URL with a specific file name extension, you create a class that derives from the <xref:System.Web.Routing.UrlRoutingHandler> class.</span></span> <span data-ttu-id="4952f-104">Por ejemplo, puede crear un controlador de enrutamiento personalizado que procesa solicitudes de un archivo que tiene la extensión `.abc`.</span><span class="sxs-lookup"><span data-stu-id="4952f-104">For example, you can create a customized routing handler that processes requests for a file that has the extension `.abc`.</span></span>  
  
 <span data-ttu-id="4952f-105">Para registrar un controlador personalizado para una extensión de nombre de archivo en particular, debe agregar ese controlador en el archivo Web.config.</span><span class="sxs-lookup"><span data-stu-id="4952f-105">To register a customized handler for a particular file name extension, you must add that handler in the Web.config file.</span></span> <span data-ttu-id="4952f-106">En el ejemplo siguiente se muestra cómo registrar un controlador personalizado para un sitio Web ASP.NET que se ejecuta en IIS 6.0 o [!INCLUDE[iisver](~/includes/iisver-md.md)] en modo clásico.</span><span class="sxs-lookup"><span data-stu-id="4952f-106">The following example shows how to register a customized handler for an ASP.NET Web site that is running in IIS 6.0 or [!INCLUDE[iisver](~/includes/iisver-md.md)] in Classic mode.</span></span>  
  
```  
<system.web>  
  <httpHandlers>  
    <add verb="*" path="*.abc"   
        type="Contoso.Routing.CustomRoutingHandler" />  
  </httpHandlers>  
</system.web>  
```  
  
 <span data-ttu-id="4952f-107">En el ejemplo siguiente se muestra cómo registrar el mismo controlador para un sitio Web ASP.NET que se ejecuta en [!INCLUDE[iisver](~/includes/iisver-md.md)].</span><span class="sxs-lookup"><span data-stu-id="4952f-107">The following example shows how to register the same handler for an ASP.NET Web site that is running in [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span>  
  
```  
<system.webServer>  
  <handlers>  
    <add verb="*" path="*.abc"  
        type="Contoso.Routing.CustomRoutingHandler"   
        resourceType="Unspecified" />  
  </handlers>  
</system.webServer>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlRoutingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UrlRoutingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4952f-108">Inicializa una nueva instancia de la clase <see cref="T:System.Web.Routing.UrlRoutingHandler" />.</span><span class="sxs-lookup"><span data-stu-id="4952f-108">Initializes a new instance of the <see cref="T:System.Web.Routing.UrlRoutingHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="protected virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.UrlRoutingHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4952f-109">Obtiene un valor que indica si otra solicitud puede utilizar la instancia de <see cref="T:System.Web.Routing.UrlRoutingHandler" />.</span><span class="sxs-lookup"><span data-stu-id="4952f-109">Gets a value that indicates whether another request can use the <see cref="T:System.Web.Routing.UrlRoutingHandler" /> instance.</span></span></summary>
        <value><span data-ttu-id="4952f-110">Siempre es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4952f-110">Always <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ProcessRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4952f-111">Procesa una solicitud HTTP que coincide con una ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-111">Processes an HTTP request that matches a route.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="protected virtual void ProcessRequest (System.Web.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ httpContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext"><span data-ttu-id="4952f-112">Objeto que proporciona referencias a los objetos de servidor intrínsecos (por ejemplo, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" /> y <see cref="P:System.Web.HttpContext.Server" />).</span><span class="sxs-lookup"><span data-stu-id="4952f-112">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</span></span></param>
        <summary><span data-ttu-id="4952f-113">Procesa una solicitud HTTP que coincide con una ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-113">Processes an HTTP request that matches a route.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="4952f-114">La solicitud no coincide con ninguna ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-114">The request does not match any route.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4952f-115">No hay ningún controlador definido para la ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-115">No handler is defined for the route.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="protected virtual void ProcessRequest (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.ProcessRequest(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessRequest (httpContext As HttpContextBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessRequest(System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext"><span data-ttu-id="4952f-116">Objeto que proporciona referencias a los objetos de servidor intrínsecos (por ejemplo, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" /> y <see cref="P:System.Web.HttpContext.Server" />).</span><span class="sxs-lookup"><span data-stu-id="4952f-116">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</span></span></param>
        <summary><span data-ttu-id="4952f-117">Procesa una solicitud HTTP que coincide con una ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-117">Processes an HTTP request that matches a route.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="4952f-118">La solicitud no coincide con ninguna ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-118">The request does not match any route.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4952f-119">No hay ningún controlador definido para la ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-119">No handler is defined for the route.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RouteCollection">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteCollection RouteCollection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteCollection RouteCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.UrlRoutingHandler.RouteCollection" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteCollection As RouteCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteCollection ^ RouteCollection { System::Web::Routing::RouteCollection ^ get(); void set(System::Web::Routing::RouteCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4952f-120">Obtiene o establece la colección de rutas definidas para la aplicación de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="4952f-120">Gets or sets the collection of defined routes for the ASP.NET application.</span></span></summary>
        <value><span data-ttu-id="4952f-121">Objeto que contiene las rutas.</span><span class="sxs-lookup"><span data-stu-id="4952f-121">An object that contains the routes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.UrlRoutingHandler.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.IHttpHandler.IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4952f-122">Obtiene un valor que indica si otra solicitud puede utilizar la instancia de <see cref="T:System.Web.Routing.UrlRoutingHandler" />.</span><span class="sxs-lookup"><span data-stu-id="4952f-122">Gets a value that indicates whether another request can use the <see cref="T:System.Web.Routing.UrlRoutingHandler" /> instance.</span></span></summary>
        <value><span data-ttu-id="4952f-123">Siempre es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4952f-123">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4952f-124">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4952f-124">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4952f-125">Solo se puede utilizar cuando la instancia de <xref:System.Web.Routing.UrlRoutingHandler> se convierte en una interfaz <xref:System.Web.IHttpHandler>.</span><span class="sxs-lookup"><span data-stu-id="4952f-125">It can be used only when the <xref:System.Web.Routing.UrlRoutingHandler> instance is cast to an <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4952f-126">Objeto que proporciona referencias a los objetos de servidor intrínsecos (por ejemplo, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" /> y <see cref="P:System.Web.HttpContext.Server" />).</span><span class="sxs-lookup"><span data-stu-id="4952f-126">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</span></span></param>
        <summary><span data-ttu-id="4952f-127">Procesa una solicitud HTTP que coincide con una ruta.</span><span class="sxs-lookup"><span data-stu-id="4952f-127">Processes an HTTP request that matches a route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4952f-128">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4952f-128">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4952f-129">Solo se puede utilizar cuando la instancia de <xref:System.Web.Routing.UrlRoutingHandler> se convierte en una interfaz <xref:System.Web.IHttpHandler>.</span><span class="sxs-lookup"><span data-stu-id="4952f-129">It can be used only when the <xref:System.Web.Routing.UrlRoutingHandler> instance is cast to an <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAndProcessRequest">
      <MemberSignature Language="C#" Value="protected abstract void VerifyAndProcessRequest (System.Web.IHttpHandler httpHandler, System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyAndProcessRequest(class System.Web.IHttpHandler httpHandler, class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub VerifyAndProcessRequest (httpHandler As IHttpHandler, httpContext As HttpContextBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void VerifyAndProcessRequest(System::Web::IHttpHandler ^ httpHandler, System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHandler" Type="System.Web.IHttpHandler" />
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpHandler"><span data-ttu-id="4952f-130">Objeto que se usa para procesar una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="4952f-130">The object that is used to process an HTTP request.</span></span></param>
        <param name="httpContext"><span data-ttu-id="4952f-131">Objeto que proporciona referencias a los objetos de servidor intrínsecos (por ejemplo, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" /> y <see cref="P:System.Web.HttpContext.Server" />).</span><span class="sxs-lookup"><span data-stu-id="4952f-131">An object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />).</span></span></param>
        <summary><span data-ttu-id="4952f-132">Si se reemplaza en una clase derivada, valida el controlador HTTP y realiza los pasos necesarios para procesar la solicitud.</span><span class="sxs-lookup"><span data-stu-id="4952f-132">When overridden in a derived class, validates the HTTP handler and performs the steps that are required to process the request.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>