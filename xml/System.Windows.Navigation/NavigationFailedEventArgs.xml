<Type Name="NavigationFailedEventArgs" FullName="System.Windows.Navigation.NavigationFailedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0e8e9304f3f8210b3f0565b3244be657d8804d1" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33680060" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NavigationFailedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NavigationFailedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationFailedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NavigationFailedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationFailedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento **NavigationFailed**.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estos argumentos de evento contienen información sobre una navegación fallida, y se pasa a los controladores de la **NavigationFailed** evento, que es implementado por el texto siguiente:  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>  
  
 <xref:System.Windows.Navigation.NavigationFailedEventArgs> Encapsula los detalles siguientes de la solicitud de navegación fallida:  
  
-   **Iniciación de navegación**: <xref:System.Windows.Navigation.NavigationFailedEventArgs.Navigator%2A>.  
  
-   **Excepción de navegación**: <xref:System.Windows.Navigation.NavigationFailedEventArgs.Exception%2A>, <xref:System.Windows.Navigation.NavigationFailedEventArgs.Handled%2A>.  
  
-   **Contenido de navegación**: <xref:System.Windows.Navigation.NavigationFailedEventArgs.Uri%2A>.  
  
-   **Detalles de navegación**: <xref:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest%2A>, <xref:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse%2A>.  
  
-   **Estado de navegación**: <xref:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la excepción <see cref="T:System.Exception" /> que se produjo como consecuencia de una navegación fallida.</summary>
        <value>La excepción <see cref="T:System.Exception" /> que se produjo como consecuencia de una navegación fallida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> será un <xref:System.Net.WebException> o un <xref:System.IO.IOException>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraData">
      <MemberSignature Language="C#" Value="public object ExtraData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExtraData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtraData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ExtraData { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Object" /> de datos opcionales que se pasó cuando la navegación comenzó.</summary>
        <value>El objeto <see cref="T:System.Object" /> de datos opcionales que se pasó cuando la navegación comenzó.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData%2A> puede utilizarse para pasar datos específicos del contexto que son específicos para una navegación determinada. <xref:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData%2A> contiene una referencia al objeto que se pasa como segundo argumento al llamar a <xref:System.Windows.Navigation.NavigationService.Navigate%2A> o <xref:System.Windows.Navigation.NavigationService.Navigate%2A>. De lo contrario, es `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si se ha controlado la excepción de navegación fallida.</summary>
        <value>
          <see langword="true" /> si se ha controlado la excepción; de lo contrario, <see langword="false" /> (valor predeterminado).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando controlan <xref:System.Windows.Navigation.NavigationService.NavigationFailed> al proceso de una excepción que se produce como resultado de una navegación fallida y no desea [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] para continuar con el procesamiento de la excepción, debe establecer el <xref:System.Windows.Navigation.NavigationFailedEventArgs.Handled%2A> propiedad `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigator">
      <MemberSignature Language="C#" Value="public object Navigator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Navigator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Navigator As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Navigator { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Navegador que generó este evento.</summary>
        <value>Objeto <see cref="T:System.Object" /> que es el navegador que generó este evento.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] para el contenido al que no se pudo navegar.</summary>
        <value>El <see cref="T:System.Uri" /> para el contenido al que no se pudo navegar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebRequest">
      <MemberSignature Language="C#" Value="public System.Net.WebRequest WebRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebRequest WebRequest" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebRequest As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebRequest ^ WebRequest { System::Net::WebRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la solicitud web que se utilizó para solicitar el contenido especificado.</summary>
        <value>Obtiene el objeto <see cref="T:System.Net.WebRequest" /> que se utilizó para solicitar el contenido especificado. Si se navega a un objeto, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" /> es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest?displayProperty=nameWithType> es una clase base abstracta que encapsula una solicitud web y es independiente del protocolo. Para cada protocolo, .NET Framework incluye una clase que deriva de <xref:System.Net.WebRequest?displayProperty=nameWithType> y se extiende con comportamiento y estado específicos de protocolo, incluidos:  
  
-   <xref:System.IO.Packaging.PackWebRequest>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `pack://` esquema para solicitar archivos de datos de aplicación (consulte [recursos de la aplicación de WPF, contenido y archivos de datos](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).  
  
-   <xref:System.Net.HttpWebRequest>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `http://` esquema para solicitar archivos de servidores Web.  
  
-   <xref:System.Net.FtpWebRequest>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `ftp://` esquema para solicitar archivos de servidores FTP.  
  
-   <xref:System.Net.FileWebRequest>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `file://` esquema para solicitar archivos locales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebResponse">
      <MemberSignature Language="C#" Value="public System.Net.WebResponse WebResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebResponse WebResponse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebResponse As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebResponse ^ WebResponse { System::Net::WebResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la respuesta web que se devolvió después de intentar descargar el contenido especificado solicitado.</summary>
        <value>
          <see cref="T:System.Net.WebResponse" /> que se devolvió después de intentar descargar el contenido especificado solicitado. Si se produjo un error en la navegación, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" /> es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebResponse?displayProperty=nameWithType> es una clase base abstracta que encapsula una respuesta web y es independiente del protocolo. Para cada protocolo, .NET Framework incluye una clase que deriva de <xref:System.Net.WebResponse?displayProperty=nameWithType> y se extiende con un estado específico del protocolo, incluidos:  
  
-   <xref:System.IO.Packaging.PackWebResponse>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `pack://` esquema para solicitar archivos de datos de aplicación (consulte [recursos de la aplicación de WPF, contenido y archivos de datos](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).  
  
-   <xref:System.Net.HttpWebResponse>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `http://` esquema para solicitar archivos de servidores Web.  
  
-   <xref:System.Net.FtpWebResponse>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `ftp://` esquema para solicitar archivos de servidores FTP.  
  
-   <xref:System.Net.FileWebResponse>: [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] que utilizan el `file://` esquema para solicitar archivos locales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>