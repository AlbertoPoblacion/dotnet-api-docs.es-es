<Type Name="PersistenceParticipant" FullName="System.Activities.Persistence.PersistenceParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9864375e6a2584553a424d1c31c78a6d6592fa39" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36722124" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceParticipant abstract" />
  <TypeSignature Language="F#" Value="type PersistenceParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ad95d-101">Esta clase permite que <see cref="T:System.Activities.WorkflowApplication" /> y <see cref="T:System.ServiceModel.WorkflowServiceHost" /> participen en el proceso de persistencia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad95d-101">This class allows both <see cref="T:System.Activities.WorkflowApplication" /> and <see cref="T:System.ServiceModel.WorkflowServiceHost" /> to participate in persistence process.</span>
      </span>
      <span data-ttu-id="ad95d-102">Un participante de persistencia se deriva de la clase <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> o la clase <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> (clase derivada de la clase <see cref="T:System.Activities.Persistence.PersistenceParticipant" />), implementa métodos abstractos y, a continuación, agrega una instancia de la clase como una extensión de instancia de flujo de trabajo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad95d-102">A persistence participant derives from the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class or the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class (derived class of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class), implements abstract methods, and then add an instance of the class as a workflow instance extension.</span>
      </span>
      <span data-ttu-id="ad95d-103">Las clases <see cref="T:System.Activities.WorkflowApplication" /> y <see cref="T:System.ServiceModel.WorkflowServiceHost" /> buscan esas extensiones al hacer persistir una instancia e invocar los métodos adecuados en los momentos oportunos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad95d-103">The <see cref="T:System.Activities.WorkflowApplication" /> and <see cref="T:System.ServiceModel.WorkflowServiceHost" /> look for such extensions when persisting an instance and invoke appropriate methods at appropriate times.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad95d-104">Un host ejecuta los siguientes pasos (o fases) al hacer persistir una instancia:</span><span class="sxs-lookup"><span data-stu-id="ad95d-104">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="ad95d-105">Recopila los valores que se van a conservar.</span><span class="sxs-lookup"><span data-stu-id="ad95d-105">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="ad95d-106">Asigna campos de valores monolíticos estructurados a los valores individuales.</span><span class="sxs-lookup"><span data-stu-id="ad95d-106">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="ad95d-107">Envía el comando <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> al proveedor de persistencia.</span><span class="sxs-lookup"><span data-stu-id="ad95d-107">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="ad95d-108">Realiza las operaciones de E/S de la transacción de persistencia.</span><span class="sxs-lookup"><span data-stu-id="ad95d-108">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="ad95d-109">Los hosts completan cada fase antes de comenzar la fase siguiente.</span><span class="sxs-lookup"><span data-stu-id="ad95d-109">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="ad95d-110">Por ejemplo, al realizar la persistencia, el host recopila valores de todos los participantes de persistencia antes de pasar a la siguiente fase.</span><span class="sxs-lookup"><span data-stu-id="ad95d-110">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="ad95d-111">En la segunda fase, el host proporciona a todos los participantes de persistencia todos los valores recopilados en la primera fase para su asignación.</span><span class="sxs-lookup"><span data-stu-id="ad95d-111">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="ad95d-112">En la tercera fase, el host proporciona al proveedor de persistencia todos los valores recopilados en las dos fases anteriores cuando invoca el comando <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-112">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="ad95d-113">Por último, en la cuarta fase el host proporciona todos los valores recopilados a todos los participantes de persistencia de la transacción de E/S de persistencia.</span><span class="sxs-lookup"><span data-stu-id="ad95d-113">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="ad95d-114">Un host ejecuta las fases siguientes cuando carga una instancia de persistencia:</span><span class="sxs-lookup"><span data-stu-id="ad95d-114">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="ad95d-115">Envía los comandos <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> y <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> al proveedor de persistencia.</span><span class="sxs-lookup"><span data-stu-id="ad95d-115">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="ad95d-116">Realiza las operaciones de E/S de la transacción de persistencia.</span><span class="sxs-lookup"><span data-stu-id="ad95d-116">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="ad95d-117">Publica los valores cargados.</span><span class="sxs-lookup"><span data-stu-id="ad95d-117">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="ad95d-118">En el nivel más alto, las extensiones de instancia de flujo de trabajo que se derivan de la clase <xref:System.Activities.Persistence.PersistenceParticipant> pueden participar en la primera fase (Recopilación) y en la segunda fase (Asignación) del proceso de persistencia, y en la tercera fase (Publicación) del proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="ad95d-118">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="ad95d-119">Las extensiones de instancia de flujo de trabajo que se derivan de la clase PersistenceIOParticipant pueden participar además en la cuarta fase del proceso de persistencia y en la segunda fase del proceso de carga (E/S).</span><span class="sxs-lookup"><span data-stu-id="ad95d-119">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad95d-120">En el ejemplo de código siguiente se muestra cómo crear una clase que deriva de <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-120">The following code sample demonstrates creating a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="ad95d-121">Este ejemplo es de la [proceso de contratación](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ad95d-121">This example is from the [Hiring Process](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad95d-122">Inicializa una instancia de la clase <see cref="T:System.Activities.Persistence.PersistenceParticipant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-122">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad95d-123">En el ejemplo de código siguiente se muestra cómo crear una clase que deriva de <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-123">The following code sample demonstrates creating a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="ad95d-124">Este ejemplo es de la [proceso de contratación](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ad95d-124">This example is from the [Hiring Process](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectValues">
      <MemberSignature Language="C#" Value="protected virtual void CollectValues (out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CollectValues([out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; readWriteValues, [out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CollectValues (ByRef readWriteValues As IDictionary(Of XName, Object), ByRef writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CollectValues([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % readWriteValues, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member CollectValues :  *  -&gt; unit&#xA;override this.CollectValues :  *  -&gt; unit" Usage="persistenceParticipant.CollectValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;&amp;" RefType="out" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="ad95d-125">Valores de lectura y escritura que se deben conservar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-125">The read-write values to be persisted.</span>
          </span>
        </param>
        <param name="writeOnlyValues">
          <span data-ttu-id="ad95d-126">Valores de solo escritura que van a persistir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-126">The write-only values to be persisted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad95d-127">Un host invoca este método en un participante de persistencia personalizado para recopilar los valores de lectura y escritura, y los valores de solo escritura, que se deben conservar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-127">A host invokes this method on a custom persistence participant to collect read-write values and write-only values, to be persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad95d-128">El host empaqueta los valores de lectura y escritura en el primer diccionario como objetos <xref:System.Runtime.DurableInstancing.InstanceValue> de una colección <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*>, y empaqueta los valores de solo escritura en el segundo diccionario como objetos <xref:System.Runtime.DurableInstancing.InstanceValue> con las marcas <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> y <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> establecidas.</span><span class="sxs-lookup"><span data-stu-id="ad95d-128">The host packages read-write values in the first dictionary as <xref:System.Runtime.DurableInstancing.InstanceValue> objects of an <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*> collection, and packages write-only values in the second dictionary as <xref:System.Runtime.DurableInstancing.InstanceValue> objects with <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> and <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> flags set.</span></span> <span data-ttu-id="ad95d-129">Para obtener más información, vea <xref:System.Runtime.DurableInstancing.InstanceValueOptions>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-129">For more information, see <xref:System.Runtime.DurableInstancing.InstanceValueOptions>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ad95d-130">Cada valor proporcionado por implementaciones de <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> en todos los participantes de persistencia dentro de un episodio de persistencia debe tener un nombre XName único.</span><span class="sxs-lookup"><span data-stu-id="ad95d-130">Each value provided by implementations of <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> across all persistence participants within one persistence episode must have a unique XName.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad95d-131">El siguiente ejemplo de código muestra cómo utilizar CollectValues en una clase que deriva de <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-131">The following code sample demonstrates using CollectValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="ad95d-132">Este ejemplo es de la [participantes de persistencia](~/docs/framework/windows-workflow-foundation/persistence-participants.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ad95d-132">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; MapValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; MapValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MapValues (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object)) As IDictionary(Of XName, Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ MapValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;&#xA;override this.MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;" Usage="persistenceParticipant.MapValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="ad95d-133">Valores de lectura y escritura que se deben conservar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-133">The read-write values to be persisted.</span>
          </span>
        </param>
        <param name="writeOnlyValues">
          <span data-ttu-id="ad95d-134">Valores de solo escritura que van a persistir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-134">The write-only values to be persisted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad95d-135">Un host invoca este método una vez ha terminado la colección de los valores en la primera fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-135">A host invokes this method after it is done with collecting the values in the first stage.</span>
          </span>
          <span data-ttu-id="ad95d-136">El host envía dos diccionarios de solo lectura con los valores que recopiló de todos los participantes de persistencia durante la primera fase (fase CollectValues) a este método para asignarlos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-136">The host forwards two read-only dictionaries of values it collected from all persistence participants during the first stage (CollectValues stage) to this method for mapping.</span>
          </span>
          <span data-ttu-id="ad95d-137">El host agrega los valores del diccionario devuelto por este método a la colección de valores de solo escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-137">The host adds values in the dictionary returned by this method to the collection of write-only values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad95d-138">Diccionario que contiene valores de solo escritura adicionales que se deben conservar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-138">A dictionary containing additional write-only values to be persisted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad95d-139">Cada uno de los valores proporcionados por implementaciones de todos los métodos <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> por todos los participantes de persistencia que incluyen todos los valores recopilados en la primera fase (fase CollectValues) debe tener un nombre XName único.</span><span class="sxs-lookup"><span data-stu-id="ad95d-139">Each value provided by implementations of all the <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> methods across all persistence participants including all the values collected in the first stage (CollectValues stage) must have a unique XName.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad95d-140">El siguiente ejemplo de código muestra cómo utilizar MapValues en una clase que deriva de <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-140">The following code sample demonstrates using MapValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="ad95d-141">Este ejemplo es de la [proceso de compra corporativa](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ad95d-141">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/xmlpersistenceparticipant.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishValues">
      <MemberSignature Language="C#" Value="protected virtual void PublishValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PublishValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PublishValues (readWriteValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PublishValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues);" />
      <MemberSignature Language="F#" Value="abstract member PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit&#xA;override this.PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="persistenceParticipant.PublishValues readWriteValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">
          <span data-ttu-id="ad95d-142">Valores de lectura y escritura que se cargaron desde el almacén de persistencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-142">The read-write values that were loaded from the persistence store.</span>
          </span>
          <span data-ttu-id="ad95d-143">Este diccionario corresponde al diccionario de valores de lectura y escritura que se conservaron en el episodio de persistencia más reciente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-143">This dictionary corresponds to the dictionary of read-write values persisted in the most recent persistence episode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad95d-144">El host invoca este método y pasa todos los valores cargados en la colección <see cref="P:System.Activities.Persistence.SaveWorkflowCommand.InstanceData" /> (que rellenan los comandos <see cref="T:System.Activities.Persistence.LoadWorkflowCommand" /> o <see cref="T:System.Activities.Persistence.LoadWorkflowByInstanceKeyCommand" />) como un parámetro de diccionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad95d-144">The host invokes this method and passes all the loaded values in the <see cref="P:System.Activities.Persistence.SaveWorkflowCommand.InstanceData" /> collection (filled by the <see cref="T:System.Activities.Persistence.LoadWorkflowCommand" /> or <see cref="T:System.Activities.Persistence.LoadWorkflowByInstanceKeyCommand" />) as a dictionary parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad95d-145">El siguiente ejemplo de código muestra cómo utilizar PublishValues en una clase que deriva de <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="ad95d-145">The following code sample demonstrates using PublishValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="ad95d-146">Este ejemplo es de la [participantes de persistencia](~/docs/framework/windows-workflow-foundation/persistence-participants.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ad95d-146">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>