<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df67407c6097ad233c005e63868b8e8810f3a9aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene valores pasados al compilador de ASP.NET durante la precompilación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Archivos de código y las páginas Web ASP.NET pueden precompilarse para facilitar una respuesta más rápida para los usuarios y permitir la implementación del sitio sin necesidad de implementar el código fuente. Para obtener más información sobre cómo precompilar un sitio Web ASP.NET, vea [precompilación información general del proyecto de sitio Web ASP.NET](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 La <xref:System.Web.Compilation.ClientBuildManagerParameter> clase almacena valores que se utilizan durante la precompilación. El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad determina cómo se generará el ensamblado. Por ejemplo, puede establecer <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> a <xref:System.Web.Compilation.PrecompilationFlags.Clean> para volver a compilar todos los componentes compilados previamente o establézcalo en <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> para permitir que el ensamblado resultante para sobrescribir cualquier componente en el directorio de destino. El <xref:System.Web.Compilation.PrecompilationFlags> enumerador tiene un <xref:System.FlagsAttribute> atributo que permite una combinación bit a bit de sus valores miembro. El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad puede contener más de un valor de la <xref:System.Web.Compilation.PrecompilationFlags> enumeración para especificar una combinación de comportamientos de precompilación.  
  
 Ya sea la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propiedad o <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> propiedad se asigna un valor para crear un ensamblado con nombre seguro. No es necesario que ambos valores se establece para crear un ensamblado con nombre seguro.  
  
 A <xref:System.Web.Compilation.ClientBuildManagerParameter> objeto se pasa a la <xref:System.Web.Compilation.ClientBuildManager> objeto a través de la <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código que se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> general sobre la clase. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor no inicializa los valores de propiedad. Esos valores se deben establecer a través de la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, y <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedades una vez creado el objeto.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código que se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> general sobre la clase. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las rutas de acceso virtuales excluidas.</summary>
        <value>Excluir rutas de acceso virtuales.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los marcadores que determinan el comportamiento de la precompilación.</summary>
        <value>
          <see cref="T:System.Web.Compilation.PrecompilationFlags" /> para una compilación de cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad determina cómo se generará el ensamblado. Por ejemplo, puede establecer <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> a <xref:System.Web.Compilation.PrecompilationFlags.Clean> para volver a compilar todos los componentes compilados previamente o establézcalo en <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> para permitir que el ensamblado resultante para sobrescribir cualquier componente en el directorio de destino. El <xref:System.Web.Compilation.PrecompilationFlags> enumerador tiene un <xref:System.FlagsAttribute> atributo que permite una combinación bit a bit de sus valores miembro. El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad puede contener más de un valor de la <xref:System.Web.Compilation.PrecompilationFlags> enumeración para especificar una combinación de comportamientos de precompilación.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código que se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> general sobre la clase. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contenedor de claves utilizado durante la compilación.</summary>
        <value>
          <see cref="T:System.String" /> del valor para el contenedor de claves.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ya sea la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propiedad o <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> propiedad se asigna un valor para crear un ensamblado con nombre seguro. No es necesario que ambos valores se establece para crear un ensamblado con nombre seguro.  
  
   
  
## Examples  
 El ejemplo de código siguiente es similar al ejemplo de código que se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> información general de clases, salvo que el ensamblado resultante tendrá un nombre seguro basado en el contenedor de claves proporcionado. Realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el archivo de claves utilizado durante la compilación.</summary>
        <value>
          <see cref="T:System.String" /> del valor para el archivo de claves.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ya sea la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propiedad o <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> propiedad se asigna un valor para crear un ensamblado con nombre seguro. No es necesario que ambos valores se establece para crear un ensamblado con nombre seguro.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código que se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> general sobre la clase. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>