<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06945cb4d38c7601f64dbbb9f74498967153c396" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52357293" /></Metadata><TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene valores pasados al compilador de ASP.NET durante la precompilación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las páginas Web ASP.NET y los archivos de código pueden precompilarse para facilitar una respuesta más rápida para los usuarios y permiten la implementación del sitio sin necesidad de implementar el código fuente. Para obtener más información sobre cómo precompilar un sitio Web ASP.NET, vea [precompilación información general del proyecto de sitio Web ASP.NET](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 La <xref:System.Web.Compilation.ClientBuildManagerParameter> clase almacena valores que se usan durante la precompilación. El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad determina cómo se compilará el ensamblado. Por ejemplo, puede establecer <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> a <xref:System.Web.Compilation.PrecompilationFlags.Clean> para volver a compilar cualquier componente previamente compilado o establecerlo en <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> para permitir que el ensamblado resultante para sobrescribir cualquier componente en el directorio de destino. El <xref:System.Web.Compilation.PrecompilationFlags> enumerador tiene un <xref:System.FlagsAttribute> atributo que permite una combinación bit a bit de sus valores de miembro. El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad puede contener más de un valor de la <xref:System.Web.Compilation.PrecompilationFlags> enumeración para especificar una combinación de comportamientos de precompilación.  
  
 Ya sea el <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propiedad o el <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> propiedad se asigna un valor para crear un ensamblado con nombre seguro. Ambos valores no deben establecerse para crear un ensamblado con nombre seguro.  
  
 Un <xref:System.Web.Compilation.ClientBuildManagerParameter> objeto se pasa a la <xref:System.Web.Compilation.ClientBuildManager> objeto a través de la <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> información general de clases. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilar el sitio de Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor no inicializa los valores de propiedad. Esos valores se deben establecer a través de la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, y <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedades una vez creado el objeto.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> información general de clases. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las rutas de acceso virtuales excluidas.</summary>
        <value>Rutas de acceso virtuales excluidas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los marcadores que determinan el comportamiento de la precompilación.</summary>
        <value><see cref="T:System.Web.Compilation.PrecompilationFlags" /> para una compilación de cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad determina cómo se compilará el ensamblado. Por ejemplo, puede establecer <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> a <xref:System.Web.Compilation.PrecompilationFlags.Clean> para volver a compilar cualquier componente previamente compilado o establecerlo en <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> para permitir que el ensamblado resultante para sobrescribir cualquier componente en el directorio de destino. El <xref:System.Web.Compilation.PrecompilationFlags> enumerador tiene un <xref:System.FlagsAttribute> atributo que permite una combinación bit a bit de sus valores de miembro. El <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propiedad puede contener más de un valor de la <xref:System.Web.Compilation.PrecompilationFlags> enumeración para especificar una combinación de comportamientos de precompilación.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> información general de clases. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilar el sitio de Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contenedor de claves utilizado durante la compilación.</summary>
        <value><see cref="T:System.String" /> del valor para el contenedor de claves.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ya sea el <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propiedad o el <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> propiedad se asigna un valor para crear un ensamblado con nombre seguro. Ambos valores no deben establecerse para crear un ensamblado con nombre seguro.  
  
   
  
## Examples  
 El siguiente ejemplo de código es similar al ejemplo de código se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> información general de clases, excepto en que el ensamblado resultante tendrá un nombre seguro basado en el contenedor de claves proporcionado. Realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilar el sitio de Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f3022b39-f17f-48c1-b067-025eab0ce8bc">Importación y exportación de proteger los contenedores de claves RSA de configuración</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el archivo de claves utilizado durante la compilación.</summary>
        <value><see cref="T:System.String" /> del valor para el archivo de claves.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ya sea el <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propiedad o el <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> propiedad se asigna un valor para crear un ensamblado con nombre seguro. Ambos valores no deben establecerse para crear un ensamblado con nombre seguro.  
  
   
  
## Examples  
 El siguiente ejemplo de código forma parte de un ejemplo de código se encuentra en la <xref:System.Web.Compilation.ClientBuildManager> información general de clases. En el ejemplo, un <xref:System.Web.Compilation.ClientBuildManagerParameter> se crea el objeto y establecen sus valores. El ensamblado resultante tendrá un nombre seguro basado en el archivo de clave proporcionado y realizará la precompilación según proporcionado <xref:System.Web.Compilation.PrecompilationFlags> valores.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Precompilar el sitio de Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9">Crear y utilizar ensamblados con nombre seguro</related>
      </Docs>
    </Member>
  </Members>
</Type>