<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98c8b937128556eb3c6d6e637ca6e48c299cbedb" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874507" /></Metadata><TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="F#" Value="type IWcfReferenceReceiveContextInformation = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define la interfaz que se implementa para obtener información de contexto adicional.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz permite que el mecanismo de importador WSDL recibir información de contexto adicional para una mejor generación de proxy y una mejor experiencia de desarrollador dentro de Visual Studio. Si el importador WSDL implementa el <xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation> interfaz, el `ReceiveImportContextInformation` se llamará al método por el generador del proxy de WCF antes que cualquier método de <xref:System.ServiceModel.Description.IWsdlImportExtension> y <xref:System.ServiceModel.Description.IPolicyImportExtension> se denominan.  
  
 La información de contexto adicional que hace referencia a los parámetros pasados a la `ReceiveImportContextInformation` método. Los parámetros incluyen el contenido de los archivos de extensión y una referencia a un objeto que implementa el <xref:System.IServiceProvider> interfaz. Los archivos de extensión que se pasa al método son específicos del importador y se usan para almacenar cualquier información adicional que necesitan. Es decir, Visual Studio no controla el contenido de estos archivos y no las usa directamente.  
  
> [!NOTE]
>  Importadores hacen referencia a un mecanismo de extensibilidad WCF. Este mecanismo le permite personalizar la forma en que el código de proxy se genera a partir de documentos de metadatos (WSDL o XSD) que describen el servicio. Para obtener más información, consulte [importando los metadatos personalizados para una extensión WCF](https://go.microsoft.com/fwlink/?LinkId=92310) en MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveImportContextInformation : System.Collections.Generic.IDictionary&lt;string, byte[]&gt; * IServiceProvider -&gt; unit" Usage="iWcfReferenceReceiveContextInformation.ReceiveImportContextInformation (serviceReferenceExtensionFileContents, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">Proporciona el contenido de los archivos de extensión asociados al archivo .svcmap de una referencia de servicio WCF.</param>
        <param name="serviceProvider">Referencia a un proveedor de servicios de Visual Studio al que se va a consultar para obtener información adicional.</param>
        <summary>Obtiene información de contexto adicional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `serviceReferenceExtensionFileContents` parámetro proporciona el contenido de los archivos de extensión asociados al archivo .svcmap de una referencia de servicio WCF, como Reference.config o archivos de extensión personalizada que se han agregado a través de la extensibilidad.  
  
> [!NOTE]
>  Las interfaces recibidas desde el proveedor de servicios que es específico de Visual Studio no estará disponible para una extensión de importación cuando se ejecuta en el contexto de un proveedor de compilación ASP.NET. Esto sucede cuando una referencia de servicio WCF se compila en un proyecto de ASP.NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>