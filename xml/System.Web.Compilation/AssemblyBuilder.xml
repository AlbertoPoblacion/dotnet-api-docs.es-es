<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59b9e5ceb06dd34e37db0a8392b87af44c99c6f7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51903078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un contenedor para compilar un ensamblado de una o más rutas de acceso virtuales dentro de un proyecto ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las instancias de la <xref:System.Web.Compilation.AssemblyBuilder> la clase se utilizan con <xref:System.Web.Compilation.BuildProvider> métodos para crear uno o varios archivos en un ensamblado compilado de la clase.  
  
 El <xref:System.Web.Compilation.BuildProvider> clase define la funcionalidad de compilación para los archivos individuales y el <xref:System.Web.Compilation.AssemblyBuilder> clase combina el código fuente aportado por cada <xref:System.Web.Compilation.BuildProvider> instancia en un único ensamblado. Pasa del entorno de compilación de ASP.NET un <xref:System.Web.Compilation.AssemblyBuilder> de objeto para el <xref:System.Web.Compilation.BuildProvider> métodos al compilar un ensamblado de uno o varios archivos, para que cada <xref:System.Web.Compilation.BuildProvider> instancia puede contribuir al código fuente para su archivo de ensamblado global.  
  
 El entorno de compilación ASP.NET determina el idioma y compilador requeridos por los archivos del proyecto, según la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> propiedad. Los archivos de grupos del entorno de compilación según su configuración de compilador y genera un ensamblado de archivos que requieren el mismo compilador.  
  
 El <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> propiedad indica la <xref:System.CodeDom.Compiler.CodeDomProvider> implementación que utiliza el entorno de compilación ASP.NET para compilar un ensamblado desde el código fuente aportado por cada <xref:System.Web.Compilation.BuildProvider> implementación.  
  
 Un <xref:System.Web.Compilation.BuildProvider> contribuye con objeto de código fuente en forma de un gráfico CodeDOM utilizando el <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> método. Un <xref:System.Web.Compilation.BuildProvider> contribuye con objeto de código fuente almacenado en un archivo físico mediante el <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método.  
  
 Después de cada <xref:System.Web.Compilation.BuildProvider> contribuye con código fuente mediante el correspondiente objeto <xref:System.Web.Compilation.AssemblyBuilder> métodos, usos de entorno de compilación de ASP.NET la <xref:System.Web.Compilation.AssemblyBuilder> clase para compilar el código fuente recopilados en un ensamblado.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra una implementación de proveedor de compilación simple, heredar de la clase abstracta <xref:System.Web.Compilation.BuildProvider> clase base. El proveedor de compilación invalida la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, y <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> los miembros de la clase base.  
  
 En el <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementación del método, el proveedor de compilación agrega el código generado para la compilación de ensamblado mediante la <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método. El ejemplo no incluye la implementación de la `SampleClassGenerator` clase. Para obtener más información, vea <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Ensamblado al que hace referencia una unidad de compilación de código o el archivo de código fuente incluido en la compilación de ensamblado.</param>
        <summary>Agrega un ensamblado al que hace referencia el código fuente generado para un archivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementación usa la <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método al generar el código de origen que hace referencia a tipos del ensamblado de entrada.  
  
 ASP.NET entorno de generación inicializa la colección predeterminada de ensamblados disponibles para la referencia a través del proveedor de compilación en el <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> propiedad. Si el proveedor de compilación genera código fuente que hace referencia a ensamblados adicionales, el proveedor de compilación agrega los ensamblajes adicionales utilizando el <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método. El entorno de generación ASP.NET resuelve los tipos externos durante la compilación de ensamblado utilizando tanto los ensamblados que se hace referencia agregados por generación proveedores y la colección predeterminada de ensamblados disponibles para la referencia.  
  
 Normalmente, un <xref:System.Web.Compilation.BuildProvider> objeto agrega el código fuente para el <xref:System.Web.Compilation.AssemblyBuilder> objeto en el <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método. Si un proveedor de compilación genera código fuente que utiliza un tipo externo, el proveedor de compilación agrega el ensamblado del tipo mediante el <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> método.  
  
 Use la <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método para agregar un ensamblado de referencia necesario en el código fuente generado por un <xref:System.Web.Compilation.BuildProvider> instancia para un tipo de archivo específico. Use la [elemento assemblies para compilation (esquema de configuración de ASP.NET)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) elemento de configuración para configurar un ensamblado de referencia en varios tipos de archivo en un proyecto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Proveedor de compilación que genera <c>compileUnit</c>.</param>
        <param name="compileUnit">Unidad de compilación de código que se va a incluir en la compilación de ensamblado.</param>
        <summary>Agrega código fuente para el ensamblado en el formulario de un gráfico CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementación llama el <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> método cuando se genera un gráfico CodeDOM para una ruta de acceso virtual. Agregada con el código fuente <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> se incluye en la compilación de ensamblado.  
  
 Normalmente, un proveedor de generación <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementación del método lee el <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propiedad, analiza el contenido y, a continuación, agrega el código fuente generado a la especificada <xref:System.Web.Compilation.AssemblyBuilder> objeto. El proveedor de compilación usa la <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> método para agregar código fuente como un gráfico CodeDOM al ensamblado. Como alternativa, puede usar el proveedor de compilación la <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método para agregar código fuente como un archivo físico al ensamblado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el compilador utilizado para generar el código fuente en un ensamblado.</summary>
        <value>Una implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> de sólo lectura utilizada para compilar el código fuente aportado por cada proveedor de generación en un ensamblado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> propiedad indica la <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> implementación que utiliza el entorno de compilación ASP.NET para compilar un ensamblado desde el código fuente aportado por cada <xref:System.Web.Compilation.BuildProvider> implementación.  
  
 El entorno de compilación ASP.NET determina el idioma y compilador requeridos por los archivos del proyecto, según la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> propiedad. Los archivos de grupos del entorno de compilación según su configuración de compilador y genera un ensamblado de archivos que requieren el mismo compilador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Proveedor de compilación que genera el archivo de código fuente.</param>
        <summary>Permite a un proveedor de generación crear un archivo de código fuente temporal e incluir el archivo de código fuente en la compilación de ensamblado.</summary>
        <returns>Un objeto <see cref="T:System.IO.TextWriter" /> abierto que se puede utilizar para escribir código fuente en un archivo temporal.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementación llama el <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método cuando se genera un archivo de origen para una ruta de acceso virtual. Agregada con el código fuente <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> se incluye en la compilación de ensamblado.  
  
 Normalmente, un proveedor de compilación <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementación del método lee la <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propiedad, analiza el contenido y, a continuación, agrega el código fuente generado a la especificada <xref:System.Web.Compilation.AssemblyBuilder> objeto. El proveedor de compilación usa la <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método para agregar código fuente como un archivo físico al ensamblado. Como alternativa, puede usar el proveedor de compilación la <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> método para agregar código fuente como un gráfico CodeDOM al ensamblado.  
  
 Después de llamar a <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, el proveedor de compilación escribe el origen de contenido del archivo mediante el valor devuelto <xref:System.IO.TextWriter> objeto. Después de escribir el archivo de origen, el <xref:System.Web.Compilation.BuildProvider> debe usar el objeto el <xref:System.IO.TextWriter.Close%2A> método para cerrar el <xref:System.IO.TextWriter> de objeto y liberar recursos del sistema asociados.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra una implementación de proveedor de compilación simple, heredar de la clase abstracta <xref:System.Web.Compilation.BuildProvider> clase base. El proveedor de compilación invalida la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, y <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> los miembros de la clase base.  
  
 En el <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementación del método, el proveedor de compilación agrega el código generado para la compilación de ensamblado mediante la <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método. El ejemplo no incluye la implementación de la `SampleClassGenerator` clase. Para obtener más información, vea <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Proveedor de compilación que genera el recurso.</param>
        <param name="name">Nombre del archivo de recursos que se va a crear.</param>
        <summary>Permite a un proveedor de generación crear un archivo de recursos e incluirlo en la compilación de ensamblado.</summary>
        <returns>Un objeto <see cref="T:System.IO.Stream" /> abierto que se puede utilizar para escribir recursos, que se incluyen en la compilación de ensamblado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de llamar a la <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> método, un <xref:System.Web.Compilation.BuildProvider> objeto escribe el recurso de contenido del archivo mediante el valor devuelto <xref:System.IO.Stream> objeto. Por ejemplo, el proveedor de compilación puede escribir los recursos mediante un <xref:System.Resources.ResourceWriter> objeto. Después de escribir el archivo de recursos, debe usar el proveedor de compilación la <xref:System.IO.Stream.Close%2A> método para cerrar el <xref:System.IO.Stream> de objeto y liberar recursos del sistema asociados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> no es un nombre de archivo válido.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nombre del tipo que se va a generar.</param>
        <summary>Inserta una plantilla de generación rápida de objetos para un tipo en el ensamblado compilado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementación llama el <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> método para optimizar el rendimiento en las creaciones de instancias del tipo frecuentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Extensión de archivo que se va a utilizar para el archivo temporal.</param>
        <summary>Genera una ruta de acceso de archivo temporal.</summary>
        <returns>Una ruta de acceso a un archivo temporal, con la extensión de archivo especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.Compilation.BuildProvider> implementación llama el <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> método para obtener una ruta de acceso de archivo temporal se elimina automáticamente después de que se compila el ensamblado.  
  
 El <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> método genera una ruta de acceso de archivo temporal único, pero no crea el archivo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>