<Type Name="ResourceProviderFactory" FullName="System.Web.Compilation.ResourceProviderFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a82b377fed9593bf011460f16dc055aac76ac187" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37607813" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ResourceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResourceProviderFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResourceProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceProviderFactory abstract" />
  <TypeSignature Language="F#" Value="type ResourceProviderFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Actúa como clase base para las clases que crean proveedores de recursos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ResourceProviderFactory> es una clase abstracta que actúa como clase base para los objetos que devuelven los proveedores de recursos globales y locales. Las clases deben derivar desde <xref:System.Web.Compilation.ResourceProviderFactory> para implementar su funcionalidad.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra un generador del proveedor de recursos personalizados que recupera los valores almacenados en caché.  
  
 [!code-csharp[System.Web.Compilation.ResourceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ResourceProviderFactory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.IResourceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceProviderFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceProviderFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, inicializa una nueva instancia de la clase derivada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear una instancia de una clase abstract. Las clases que derivan de <xref:System.Web.Compilation.ResourceProviderFactory> puede implementar un constructor para establecer los valores predeterminados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalResourceProvider">
      <MemberSignature Language="C#" Value="public abstract System.Web.Compilation.IResourceProvider CreateGlobalResourceProvider (string classKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Compilation.IResourceProvider CreateGlobalResourceProvider(string classKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceProviderFactory.CreateGlobalResourceProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGlobalResourceProvider (classKey As String) As IResourceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Compilation::IResourceProvider ^ CreateGlobalResourceProvider(System::String ^ classKey);" />
      <MemberSignature Language="F#" Value="abstract member CreateGlobalResourceProvider : string -&gt; System.Web.Compilation.IResourceProvider" Usage="resourceProviderFactory.CreateGlobalResourceProvider classKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.IResourceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey">Nombre de la clase de recurso.</param>
        <summary>Cuando se reemplaza en una clase derivada, crea un proveedor de recursos globales.</summary>
        <returns>Proveedor global de recursos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se invalida en una clase derivada, este método devuelve un <xref:System.Web.Compilation.IResourceProvider> de objeto para el determinado `classKey` parámetro. El método podría implementarse que `classKey` es el nombre de un archivo .resx en la carpeta App_GlobalResources.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una fábrica de proveedor de recursos personalizado que implementa el <xref:System.Web.Compilation.ResourceProviderFactory.CreateGlobalResourceProvider%2A> método y recupera en la caché de valores.  
  
 [!code-csharp[System.Web.Compilation.ResourceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ResourceProviderFactory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalResourceProvider">
      <MemberSignature Language="C#" Value="public abstract System.Web.Compilation.IResourceProvider CreateLocalResourceProvider (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Compilation.IResourceProvider CreateLocalResourceProvider(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceProviderFactory.CreateLocalResourceProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateLocalResourceProvider (virtualPath As String) As IResourceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Compilation::IResourceProvider ^ CreateLocalResourceProvider(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateLocalResourceProvider : string -&gt; System.Web.Compilation.IResourceProvider" Usage="resourceProviderFactory.CreateLocalResourceProvider virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.IResourceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ruta de acceso a un archivo de recursos.</param>
        <summary>Cuando se reemplaza en una clase derivada, crea un proveedor de recursos locales.</summary>
        <returns>Proveedor local de recursos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se invalida en una clase derivada, este método devuelve un <xref:System.Web.Compilation.IResourceProvider> de objeto para el determinado `virtualPath` parámetro. El método podría implementarse que `virtualPath` se asigna a un archivo de recursos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una fábrica de proveedor de recursos personalizado que implementa el <xref:System.Web.Compilation.ResourceProviderFactory.CreateLocalResourceProvider%2A> método y recupera en la caché de valores.  
  
 [!code-csharp[System.Web.Compilation.ResourceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ResourceProviderFactory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>