<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="668c5e9b7f23c5df7df6c74748352d9749118947" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901830" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define un conjunto de propiedades y métodos para generar código fuente dentro del entorno de generación de ASP.NET. Esta clase es abstracta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usos del entorno de compilación de ASP.NET <xref:System.Web.Compilation.BuildProvider> objetos que se va a generar código fuente para los distintos tipos de archivo dentro de una aplicación. Las clases derivadas de <xref:System.Web.Compilation.BuildProvider> fundamentalmente proporciona código fuente de archivos, las páginas Web, recursos y otros elementos personalizados.  
  
 Normalmente, no se crea una instancia de la <xref:System.Web.Compilation.BuildProvider> directamente la clase. En su lugar, implementa una clase que derive de <xref:System.Web.Compilation.BuildProvider>y configurar el <xref:System.Web.Compilation.BuildProvider> entorno de compilación de implementación para su uso dentro de ASP.NET.  
  
 Las instancias de la <xref:System.Web.Compilation.BuildProvider> la clase se utilizan con <xref:System.Web.Compilation.AssemblyBuilder> objetos que se va a crear uno o varios archivos en un ensamblado compilado. Un <xref:System.Web.Compilation.BuildProvider> instancia Genera código fuente en el idioma adecuado para los archivos individuales y el <xref:System.Web.Compilation.AssemblyBuilder> objeto combina el origen que aporta cada <xref:System.Web.Compilation.BuildProvider> instancia en un único ensamblado.  
  
 El entorno de compilación ASP.NET usa instancias de la <xref:System.Web.Compilation.BuildProvider> clase para compilar los archivos dentro de una aplicación. El <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propiedad de la <xref:System.Web.Compilation.BuildProvider> clase indica la ruta de acceso del archivo para compilarse. La extensión de archivo de cada archivo dentro de una aplicación se asigna a un proveedor de generación correspondiente. ASP.NET entorno de generación Inicializa un <xref:System.Web.Compilation.BuildProvider> de instancia para cada archivo basándose en la extensión de archivo y usa el <xref:System.Web.Compilation.BuildProvider> métodos para generar código fuente para el archivo. Pasadas del entorno de compilación de ASP.NET un <xref:System.Web.Compilation.AssemblyBuilder> objeto según el idioma preferido del compilador y el contexto del archivo para el <xref:System.Web.Compilation.BuildProvider> métodos al compilar un ensamblado de uno o varios archivos, para que el <xref:System.Web.Compilation.BuildProvider> instancia puede contribuir código fuente de su archivo de ensamblado global.  
  
 Para definir las acciones de compilación personalizada para un tipo de archivo dentro de una aplicación ASP.NET, debe derivar una clase de <xref:System.Web.Compilation.BuildProvider>, implemente los miembros dentro de la clase derivada para crear el tipo de archivo y configurar el proveedor de compilación para la extensión de archivo correspondiente en el archivo de configuración de aplicación.  
  
 Las especifica la extensión de archivo para los archivos compatibles, y si el proveedor de compilación admite archivos de código, archivos Web, los archivos de recursos o todos los archivos. Use el `type` atributo para especificar el nombre de tipo completo de la implementación del proveedor de compilación. Use la <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> clase para especificar si el proveedor de compilación se aplica a los archivos del directorio App_Code, a los archivos en un directorio de contenido Web, los recursos locales o globales a o a todos los archivos. Use la `extension` atributo para especificar la extensión de archivo que se usa para identificar los archivos que el <xref:System.Web.Compilation.BuildProvider> es compatible con la clase. Use el <xref:System.Web.Configuration.BuildProviderCollection> proveedores en un archivo de configuración de compilación de la clase para examinar. Para obtener más información acerca de cómo configurar un proveedor de compilación, véase [elemento buildProviders para compilation (esquema de configuración de ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Para implementar un proveedor de compilación que genera código fuente para un tipo de archivo personalizado, derive una clase de <xref:System.Web.Compilation.BuildProvider>e invalidar la <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método para generar código fuente para el tipo de archivo admitido. El código fuente generado se agrega a la <xref:System.Web.Compilation.AssemblyBuilder> objeto en el formulario de un gráfico CodeDOM, o como contenido que representa un archivo de código de origen física. Si el proveedor de compilación requiere un lenguaje de programación específico, reemplace el <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propiedad para devolver un <xref:System.Web.Compilation.CompilerType> objeto para el lenguaje de programación compatible. Si el proveedor de compilación no requiere un lenguaje de programación específico, no Reemplace el <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propiedad; utilice la implementación de la clase base, que indica que el proveedor de compilación puede usar cualquier lenguaje de .NET Framework, como Visual Basic o C#.  
  
 Para implementar un proveedor de compilación que genera código fuente para el contenido Web, derive una clase de <xref:System.Web.Compilation.BuildProvider> e invalidar la <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método para devolver el <xref:System.Type> para la clase generada por <xref:System.Web.Compilation.BuildProvider>. Invalidar el <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método para generar código fuente para el tipo proporcionado por el archivo compatible.  
  
> [!NOTE]
>  Agregar una personalizada <xref:System.Web.Compilation.BuildProvider> clase al archivo Web.config funciona en un sitio Web de ASP.NET, pero no funciona en un proyecto de aplicación Web ASP.NET. En un proyecto de aplicación Web, el código generado por el <xref:System.Web.Compilation.BuildProvider> clase no puede incluirse en la aplicación. Para obtener más información, consulte [ASP.NET Web Application Project precompilación Overview](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra una implementación de proveedor de compilación simple, heredar de la clase abstracta <xref:System.Web.Compilation.BuildProvider> clase base. El proveedor de compilación invalida la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, y <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> los miembros de la clase base. El ejemplo no incluye la implementación de la `SampleClassGenerator` clase. Para obtener más información, consulte el <xref:System.CodeDom.CodeCompileUnit> información general de clases.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Compilation.BuildProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el <xref:System.Web.Compilation.BuildProvider> clase es abstracta y no se puede crear una instancia de <xref:System.Web.Compilation.BuildProvider> directamente mediante el constructor.  
  
 Al derivar de la <xref:System.Web.Compilation.BuildProvider> class, reemplace el constructor para implementar acciones de inicialización personalizadas para la implementación del proveedor de compilación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el tipo de compilador utilizado por un proveedor de generación para generar código fuente para un tipo de archivo personalizado.</summary>
        <value>Objeto <see cref="T:System.Web.Compilation.CompilerType" /> de solo lectura que representa el generador de código, el compilador de código y la configuración del compilador que se emplea para compilar código fuente para la ruta de acceso virtual. La clase base devuelve <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propiedad para proporcionar la configuración para compilar el código fuente para una implementación de <xref:System.Web.Compilation.BuildProvider>. El <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propiedad es `null` si el proveedor de compilación no requiere un lenguaje de código específico para generar y compilar código fuente.  
  
 Para establecer el valor de un <xref:System.Web.Compilation.CompilerType> objeto dentro de una implementación de proveedor de compilación, use el <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> método.  
  
 El <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> propiedad especifica el <xref:System.CodeDom.Compiler.CodeDomProvider> implementación que se usa para generar y compilar código fuente para un proveedor de compilación. El <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> propiedad define la configuración que se usa para compilar el código fuente en un ensamblado.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra una implementación de proveedor de compilación simple, heredar de la clase abstracta <xref:System.Web.Compilation.BuildProvider> clase base. El proveedor de compilación invalida la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, y <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> los miembros de la clase base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Compilador de ensamblado que hace referencia al código fuente generado por el proveedor de compilación.</param>
        <summary>Genera código fuente para la ruta de acceso virtual del proveedor de generación y agrega el código fuente a un generador de ensamblado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para implementar un proveedor de compilación que genera código fuente para un tipo de archivo personalizado, derive una clase de la <xref:System.Web.Compilation.BuildProvider> clase e invalidar el <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método para generar código fuente para el tipo de archivo admitido.  
  
 Normalmente, un proveedor de generación <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> lecturas de implementación el <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propiedad, analiza el contenido y agrega el código fuente generado a especificado <xref:System.Web.Compilation.AssemblyBuilder> objeto. Puede contribuir código fuente para el ensamblado en forma de un <xref:System.IO.TextWriter> objeto o un gráfico CodeDOM. Para agregar código fuente para el ensamblado a través de un <xref:System.IO.TextWriter> de objeto, utilice el <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método. Para agregar código fuente en un gráfico CodeDOM al ensamblado, utilice el <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> método.  
  
 Si el proveedor de compilación genera código fuente en un lenguaje de programación específico, debe invalidar el <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propiedad para devolver un <xref:System.Web.Compilation.CompilerType> objeto para el lenguaje de programación compatible.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra una implementación de proveedor de compilación simple, heredar de la clase abstracta <xref:System.Web.Compilation.BuildProvider> clase base. El proveedor de compilación invalida la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, y <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> los miembros de la clase base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Generación y compilación dinámicas de código fuente</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">El resultado que devuelve este método contiene un diccionario con todos los números de línea asociados y pragmas de línea del código fuente. Este parámetro se pasa sin inicializar.</param>
        <summary>Representa el contenedor para el gráfico CodeDOM generado.</summary>
        <returns>Contenedor para el gráfico CodeDOM generado por la instancia de <see cref="T:System.Web.Compilation.BuildProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método puede utilizarse a través de la <xref:System.Web.Compilation.ClientBuildManager> la clase para el resaltado de sintaxis y el diseñador se admiten en Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Resultados de la compilación para la ruta virtual del proveedor de compilación.</param>
        <summary>Genera una cadena para conservar en el ensamblado compilado.</summary>
        <returns>Cadena que se va a conservar en el entorno de compilación o <see langword="null" /> si la instancia de <see cref="T:System.Web.Compilation.BuildProvider" /> no implementa <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> método de un <xref:System.Web.Compilation.BuildManager> objeto crea una instancia de un proveedor de compilación para una ruta de acceso virtual de entrada y llama a la <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> método en el <xref:System.Web.Compilation.BuildProvider> objeto.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> clase devuelve `null` para el <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> método, que indica que <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> no está implementada.  
  
 Pueden implementar algunas implementaciones de proveedor de compilación <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> en lugar de la <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método. Un <xref:System.Web.Compilation.BuildProvider> normalmente usa el objeto <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> para devolver un <xref:System.Type> objeto para una ruta de acceso virtual. Sin embargo, el <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> método puede utilizarse para indicar que un <xref:System.Web.Compilation.BuildProvider> objeto puede generar varios tipos desde una ruta de acceso virtual.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la configuración del compilador para el lenguaje predeterminado de la aplicación.</summary>
        <returns>Objeto <see cref="T:System.Web.Compilation.CompilerType" /> que representa la configuración del compilador para el lenguaje predeterminado de la aplicación. La clase base devuelve el compilador predeterminado basándose en el archivo de configuración de la aplicación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> método para examinar el tipo de compilador predeterminada para un proveedor de compilación. Use el <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> método para examinar el tipo de compilador configurado en un proveedor de compilación para un nombre de idioma específico.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> clase determina el tipo de valor predeterminado del compilador mediante la `defaultLanguage` valor en la sección del archivo de configuración de aplicación del atributo. Si no hay ninguna configuración predeterminada del idioma en la sección de compilación, el tipo de compilador predeterminado se establece mediante la <xref:Microsoft.VisualBasic.VBCodeProvider> proveedor de lenguaje.  
  
 Al derivar de la <xref:System.Web.Compilation.BuildProvider> (clase), puede usar <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> para establecer el <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propiedad dentro de su implementación.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Nombre de lenguaje de código.</param>
        <summary>Devuelve la configuración del compilador para el proveedor de compilación basándose en el lenguaje especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Compilation.CompilerType" /> que representa la configuración del compilador para el proveedor de compilación basándose en el lenguaje especificado. La clase base devuelve la configuración del compilador predeterminada para el lenguaje basándose en el archivo de configuración de la aplicación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> método para examinar el tipo de compilador configurado en el proveedor de compilación para un nombre de idioma específico. Use el <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> método para examinar el tipo de compilador predeterminada para un proveedor de compilación.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> clase determina el tipo de valor predeterminado del compilador mediante la <xref:System.Web.Configuration.Compiler> elementos en el <xref:System.Web.Configuration.CompilationSection.Compilers%2A> propiedad de la <xref:System.Web.Configuration.CompilationSection> objeto para el archivo de configuración. Esto es equivalente a examinar los elementos de elementos y en las secciones del archivo de configuración. Por ejemplo, para el `language` valor VB, el método de clase base devuelve un <xref:System.Web.Compilation.CompilerType> objeto que corresponde a los valores configurados para una instancia de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 Al derivar de la <xref:System.Web.Compilation.BuildProvider> (clase), puede usar <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> para establecer el <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> valor de propiedad para el lenguaje admitido por la implementación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="language" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">El parámetro <paramref name="language" /> no coincide con un compilador configurado para el proveedor de generación.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Resultados de la compilación para la ruta virtual del proveedor de compilación.</param>
        <summary>Devuelve un tipo generado por el proveedor de compilación de la ruta de acceso virtual.</summary>
        <returns>El tipo que genera el proveedor de compilación para la ruta de acceso virtual. La clase base devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para implementar un proveedor de compilación que genera código fuente para el contenido Web, como archivos .aspx, derive una clase de la <xref:System.Web.Compilation.BuildProvider> clase e invalidar el <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método para devolver el tipo generado por el proveedor de compilación.  
  
 El sistema de compilación ASP.NET compila los archivos para cada proveedor de compilación y genera un <xref:System.CodeDom.Compiler.CompilerResults> objeto, que se pasa a la <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método. Normalmente, un proveedor de generación <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementación usa la <xref:System.Reflection.Assembly.GetType%2A> método en el <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> propiedad de la entrada `results` objeto para devolver el tipo proporcionado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Resultados de la compilación para la ruta virtual del proveedor de compilación.</param>
        <summary>Devuelve un valor que indica las acciones necesarias cuando se compila una ruta de acceso virtual.</summary>
        <returns>Valor de <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> que indica las acciones necesarias después de que se cree la ruta de acceso virtual en el entorno de compilación ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> método lo usa el entorno de compilación ASP.NET al usar las instancias de la <xref:System.Web.Compilation.BuildProvider> clase para generar los archivos y cargar los ensamblados compilados.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> clase el método devuelve el <xref:System.Web.Compilation.BuildProviderResultFlags.Default> valor del campo, que indica que se requiere ninguna acción especial cuando se compila la ruta de acceso virtual.  
  
 Al derivar de la <xref:System.Web.Compilation.BuildProvider> (clase), puede implementar la <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> método devuelva otra <xref:System.Web.Compilation.BuildProviderResultFlags> valor para el tipo de archivo personalizado o una ruta de acceso virtual. Por ejemplo, si una recompilación de la ruta de acceso virtual requiere que la contiene <xref:System.AppDomain> objeto que se va a volver a cargarse, puede devolver el <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> valor de enumeración de su <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre un lector de texto para leer de una ruta de acceso virtual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre un lector de texto para leer de la ruta de acceso virtual del objeto de proveedor de compilación actual.</summary>
        <returns>Objeto <see cref="T:System.IO.TextReader" /> abierto que se puede usar para leer el contenido de la propiedad <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.IO.TextReader.Read%2A> método en el valor devuelto <xref:System.IO.TextReader> objeto que se va a leer el contenido de la <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propiedad para un <xref:System.Web.Compilation.BuildProvider> objeto.  
  
 Después de llamar a la <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> método, debe usar el <xref:System.IO.TextReader.Close%2A> método para cerrar el <xref:System.IO.TextReader> de objeto y liberar recursos del sistema asociados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ruta de acceso virtual que se va a leer.</param>
        <summary>Abre un lector de texto para leer de una ruta de acceso virtual especificada.</summary>
        <returns>Objeto <see cref="T:System.IO.TextReader" /> abierto que se puede usar para leer el contenido de la ruta de acceso virtual especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.IO.TextReader.Read%2A> método en el valor devuelto <xref:System.IO.TextReader> objeto que se va a leer el contenido de la ruta de acceso virtual.  
  
 Después de llamar a la <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> método, debe usar el <xref:System.IO.TextReader.Close%2A> método para cerrar el <xref:System.IO.TextReader> de objeto y liberar recursos del sistema asociados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre una secuencia para leer de una ruta de acceso virtual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre una secuencia para leer la ruta de acceso virtual del objeto de proveedor de compilación actual.</summary>
        <returns>Objeto <see cref="T:System.IO.Stream" /> abierto que se puede usar para leer el contenido de la propiedad <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.IO.Stream.Read%2A> método en el valor devuelto <xref:System.IO.Stream> objeto que se va a leer el contenido de la ruta de acceso virtual para la <xref:System.Web.Compilation.BuildProvider> objeto.  
  
 Después de llamar a la <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> método, debe usar el <xref:System.IO.Stream.Close%2A> método para cerrar el <xref:System.IO.Stream> de objeto y liberar recursos del sistema asociados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ruta de acceso virtual que se va a leer.</param>
        <summary>Abre una secuencia para leer de una ruta de acceso virtual especificada.</summary>
        <returns>Objeto <see cref="T:System.IO.Stream" /> abierto que se puede usar para leer el contenido de la ruta de acceso virtual especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.IO.Stream.Read%2A> método en el valor devuelto <xref:System.IO.Stream> objeto que se va a leer el contenido de la ruta de acceso virtual.  
  
 Después de llamar a la <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> método, debe usar el <xref:System.IO.Stream.Close%2A> método para cerrar el <xref:System.IO.Stream> de objeto y liberar recursos del sistema asociados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Resultados del compilador.</param>
        <summary>Cuando se invalida en una clase derivada, permite revisar los mensajes del error del compilador para que pueda modificarlos para proporcionar más información.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, invalide este método para que puedan modificar los errores del compilador antes de que se muestran con el fin de que el texto de error más útil para el usuario. Esto es útil en escenarios donde conocen el contexto de algunos errores y puede proporcionar información al usuario sobre cómo corregirlos. El mensaje de error del compilador original es una construcción de lenguaje determinado suele ser específico y no parezca la causa real o la solución evidente para el usuario.  
  
 Puede obtener acceso a los errores mediante la <xref:System.CodeDom.Compiler.CompilerResults> objeto que se pasa al método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa los ensamblados que se van a compilar con el código fuente que genera el proveedor de compilación.</summary>
        <value>Colección de ensamblados de solo lectura a la que puede hacer referencia el código fuente generado por el proveedor de compilación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET entorno de generación inicializa la colección de ensamblados que están disponibles para el proveedor de compilación que hace referencia. El código fuente generado por un proveedor de compilación puede usar los tipos públicos de los ensamblados que se hace referencia. La colección de ensamblados que se hace referencia se compone de otros ensamblados creados en la aplicación ASP.NET y ensamblados que aparecen en el elemento en el archivo de configuración.  
  
 Si el proveedor de compilación genera código fuente que hace referencia a ensamblados adicionales, el proveedor de compilación agrega los ensamblajes adicionales utilizando el <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método. El entorno de generación ASP.NET resuelve los tipos externos durante la compilación de ensamblado utilizando tanto los ensamblados que se hace referencia agregados por generación proveedores y la colección predeterminada de ensamblados disponibles para la referencia.  
  
 El <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> colección no incluye los ensamblados que se agregan como referencia por otros proveedores de compilación a través de la <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">Extensión de nombre de archivo para el proveedor de compilación.</param>
        <param name="providerType">Clase del proveedor de compilación.</param>
        <summary>Registra un proveedor de compilación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para registrar los proveedores de compilación en lugar de definirlos en el archivo Web.config. Para obtener más información acerca de los proveedores de compilación, vea el <xref:System.Web.Compilation.BuildProvider> clase y [elemento buildProviders para compilation (esquema de configuración de ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el archivo que la implementación de este proveedor de compilación va a crear.</summary>
        <value>Cadena de solo lectura que especifica la ruta de acceso virtual de un archivo que va a compilar este proveedor de compilación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ruta de acceso virtual de un <xref:System.Web.Compilation.BuildProvider> objeto es la ruta de acceso al archivo que se está compilando por el proveedor de compilación. Por ejemplo, si ha configurado un personalizado <xref:System.Web.Compilation.BuildProvider> clase para compilar todos los archivos en el sitio Web con la extensión personalizada .abc, si su sitio Web se denomina WebSite1, y el sitio Web contiene un archivo denominado Example.abc, el <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propiedad contiene el valor `/WebSite1/Example.abc`.  
  
 La extensión de archivo de cada archivo dentro de la aplicación determina el tipo de archivo y el proveedor de compilación correspondiente para el tipo de archivo. ASP.NET entorno de generación Inicializa un <xref:System.Web.Compilation.BuildProvider> objeto para cada archivo en función del tipo de archivo y usa el <xref:System.Web.Compilation.BuildProvider> métodos para generar código fuente para cada archivo.  
  
 Para obtener más información acerca de cómo configurar un proveedor de compilación, véase [elemento buildProviders para compilation (esquema de configuración de ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa una colección de rutas de acceso virtual que es necesario compilar para que el proveedor de generación pueda generar código.</summary>
        <value>Colección de cadenas de solo lectura que representa las rutas de acceso virtual de las que depende esta instancia del proveedor de compilación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> propiedad es una colección de rutas de acceso virtuales que debe compilarse antes de la <xref:System.Web.Compilation.BuildProvider> instancia Genera código fuente. Los ensamblados de las rutas de acceso virtuales <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> se agregan como referencias a la compilación para el <xref:System.Web.Compilation.BuildProvider> instancia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>