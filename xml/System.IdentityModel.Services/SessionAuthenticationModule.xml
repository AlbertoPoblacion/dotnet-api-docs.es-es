<Type Name="SessionAuthenticationModule" FullName="System.IdentityModel.Services.SessionAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7d2c3e066c7161e9965fffcf3d748c0a45c666c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.SessionAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="74976-101">Implementa un módulo de ASP.NET que procesa las cookies de sesión en escenarios de WS-Federation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74976-101">Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-102">Cuando está presente en la canalización ASP.NET, el <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) procesa las cookies de sesión en escenarios de WS-Federation.</span><span class="sxs-lookup"><span data-stu-id="74976-102">When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios.</span></span> <span data-ttu-id="74976-103">Utiliza el controlador de cookie especificado por el <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad para leer la cookie de sesión sin formato de la solicitud HTTP y escribir en la respuesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="74976-103">It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response.</span></span> <span data-ttu-id="74976-104">Usa el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> que está configurado para que una aplicación deserializar la cookie de sesión sin procesar en <xref:System.IdentityModel.Tokens.SessionSecurityToken> objetos.</span><span class="sxs-lookup"><span data-stu-id="74976-104">It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects.</span></span> <span data-ttu-id="74976-105">El token de seguridad de la sesión contiene las notificaciones (<xref:System.Security.Claims.Claim>) y principal (<xref:System.Security.Claims.ClaimsPrincipal>) asociado a la entidad para la que se sirve la solicitud.</span><span class="sxs-lookup"><span data-stu-id="74976-105">The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.</span></span>  
  
 <span data-ttu-id="74976-106">Agrega el SAM su <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> controlador de eventos para el <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> eventos en la canalización ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-106">The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> event in the ASP.NET pipeline.</span></span> <span data-ttu-id="74976-107">Este controlador intercepta las solicitudes de inicio de sesión y, si no hay una cookie de sesión, se deserializa en un token de sesión y se establece la <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> y <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> propiedades de la entidad de seguridad de notificaciones contenidas en el token de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-107">This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> properties to the claims principal contained in the session token.</span></span> <span data-ttu-id="74976-108">Invoca algunos de los otros métodos expuestos por el SAM durante este proceso.</span><span class="sxs-lookup"><span data-stu-id="74976-108">It invokes several of the other methods exposed by the SAM during this process.</span></span>  
  
 <span data-ttu-id="74976-109">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método se puede invocar para cerrar la sesión el usuario fuera de una sesión (por ejemplo, en un archivo de código subyacente SignOut.aspx.cs).</span><span class="sxs-lookup"><span data-stu-id="74976-109">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).</span></span>  
  
 <span data-ttu-id="74976-110">El SAM expone varios eventos que proporcionan acceso a la canalización de procesamiento.</span><span class="sxs-lookup"><span data-stu-id="74976-110">The SAM exposes several events that provide access to its processing pipeline.</span></span> <span data-ttu-id="74976-111">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> y <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> eventos permiten modificar los tokens de sesión que se leen desde las cookies o se crea durante el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="74976-111">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing.</span></span> <span data-ttu-id="74976-112">Normalmente, esto se realiza para agregar, quitar o transformar las notificaciones en el token o para ajustar la fecha de expiración.</span><span class="sxs-lookup"><span data-stu-id="74976-112">Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time.</span></span> <span data-ttu-id="74976-113">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, y <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> eventos proporcionan enlaces en el procesamiento de solicitudes de cierre de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-113">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests.</span></span> <span data-ttu-id="74976-114">En muchos casos, basta con agregar controladores para estos eventos, a menudo en el archivo global.asax.cs, será suficiente.</span><span class="sxs-lookup"><span data-stu-id="74976-114">For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.</span></span>  
  
 <span data-ttu-id="74976-115">Para los escenarios más complicados, puede derivar de <xref:System.IdentityModel.Services.SessionAuthenticationModule> para implementar un SAM personalizado.</span><span class="sxs-lookup"><span data-stu-id="74976-115">For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM.</span></span> <span data-ttu-id="74976-116">Con este fin, muchos de los métodos que se invocan durante <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> y <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> se exponen para que pueda proporcionar un comportamiento personalizado en determinadas fases del ciclo de vida de procesamiento de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-116">To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.</span></span>  
  
 <span data-ttu-id="74976-117">Puede agregar el SAM a la canalización ASP.NET en un archivo de configuración, éste se agrega a los módulos HTTP bajo el `<system.webServer>` elemento para IIS 7 y versiones posteriores, o en la `<system.web>` (elemento) para las versiones anteriores a IIS 7.</span><span class="sxs-lookup"><span data-stu-id="74976-117">You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7.</span></span> <span data-ttu-id="74976-118">Se puede configurar el controlador de cookie utilizado por el SAM con los [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="74976-118">The cookie handler used by the SAM can be configured with the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span>  
  
   
  
## Examples  
 [!code-csharp[WifSAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#1)]  
  
 <span data-ttu-id="74976-119">El siguiente código XML muestra cómo configurar el SAM en la canalización ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-119">The following XML shows how to configure the SAM in the ASP.NET pipeline.</span></span> <span data-ttu-id="74976-120">Muchos otros elementos que están presentes en una configuración típica se omiten aquí por razones de brevedad.</span><span class="sxs-lookup"><span data-stu-id="74976-120">Many other elements that are present in a typical configuration are omitted here for brevity.</span></span>  
  
```xml  
<configuration>  
  <system.webServer>  
    <modules>  
      <!--WIF 4.5 modules -->  
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74976-121">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-121">Initializes a new instance of the <see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-122">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> propiedad está establecida en `false` y <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad se inicializa en una instancia predeterminada de la <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> clase.</span><span class="sxs-lookup"><span data-stu-id="74976-122">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> property is set to `false` and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized to a default instance of the <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateSessionSecurityToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateSessionSecurityToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateSessionSecurityToken (sessionToken As SessionSecurityToken, writeCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateSessionSecurityToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool writeCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="writeCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="74976-123">El token de seguridad de sesión que se usará para autenticar la solicitud HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-123">The session security token to use to authenticate the incoming HTTP request.</span>
          </span>
        </param>
        <param name="writeCookie">
          <span data-ttu-id="74976-124">
            <see langword="true" /> para escribir la cookie de sesión; si no <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-124">
              <see langword="true" /> to write the session cookie; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-125">Autentica la solicitud entrante validando el token de entrada de la sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-125">Authenticates the incoming request by validating the incoming session token.</span>
          </span>
          <span data-ttu-id="74976-126">Cuando la validación se realiza correctamente, actualiza la entidad de seguridad de contexto y subproceso HTTP actual con el <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-126">Upon successful validation, it updates the current HTTP context and thread principal with the specified  <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-127">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> método se llama desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-127">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.</span></span> <span data-ttu-id="74976-128">Lo llama el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> método para validar el token entrante y la actualización la <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> y la <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="74976-128">It calls the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> method to validate the incoming token and update the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> and the <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="74976-129">Si el `writeCookie` parámetro es `true`, el <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> se invoca el método para escribir el token de sesión en una cookie.</span><span class="sxs-lookup"><span data-stu-id="74976-129">If the `writeCookie` parameter is `true`, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> method is invoked to write the session token to a cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsSessionTokenCookie">
      <MemberSignature Language="C#" Value="public bool ContainsSessionTokenCookie (System.Web.HttpCookieCollection httpCookieCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsSessionTokenCookie(class System.Web.HttpCookieCollection httpCookieCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsSessionTokenCookie(System::Web::HttpCookieCollection ^ httpCookieCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpCookieCollection" Type="System.Web.HttpCookieCollection" />
      </Parameters>
      <Docs>
        <param name="httpCookieCollection">
          <span data-ttu-id="74976-130">Colección de cookies donde se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-130">The collection of cookies in which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-131">Determina si una cookie de sesión está en la colección de cookies especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-131">Determines whether a session cookie is in the specified cookie collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74976-132">
            <see langword="true" /> si se encuentra una cookie de sesión; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-132">
              <see langword="true" /> if a session cookie is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="74976-133">
            <paramref name="httpCookieCollection" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-133">
              <paramref name="httpCookieCollection" /> is null</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContextSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextSessionSecurityToken As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SessionSecurityToken ^ ContextSessionSecurityToken { System::IdentityModel::Tokens::SessionSecurityToken ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-134">Obtiene el <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> activo para el <see cref="T:System.Web.HttpContext" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-134">Gets the active <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> for the current <see cref="T:System.Web.HttpContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74976-135">El token de seguridad de la sesión activa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-135">The active session security token.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.CookieHandler CookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieHandler As CookieHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::CookieHandler ^ CookieHandler { System::IdentityModel::Services::CookieHandler ^ get(); void set(System::IdentityModel::Services::CookieHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-136">Obtiene el controlador de cookies que se usa para leer, escribir y eliminar las cookies de sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-136">Gets the cookie handler that is used to read, write, and delete session cookies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74976-137">Controlador de cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-137">The cookie handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-138">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad se inicializa con el <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-138">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> method.</span></span> <span data-ttu-id="74976-139">Este método inicializa la propiedad basándose en el controlador de cookie especificado en el <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> objeto que se establece en el <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-139">This method initializes the property based on the cookie handler specified on the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="74976-140">Puede establecer el controlador de cookies en un archivo de configuración a través de la [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="74976-140">You can set the cookie handler in a configuration file through the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie" />
        <altmember cref="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)" />
        <altmember cref="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, DateTime validFrom, DateTime validTo, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, valuetype System.DateTime validFrom, valuetype System.DateTime validTo, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, validFrom As DateTime, validTo As DateTime, isPersistent As Boolean) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, DateTime validFrom, DateTime validTo, bool isPersistent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="74976-141">La entidad de seguridad que se capturará en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-141">The principal to be captured in the token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="74976-142">Una cadena de contexto definida por la aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-142">An application-defined context string.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="74976-143">Primer instante en el que este token es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-143">The first instant in which this token is valid.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="74976-144">Último instante en el que este token es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-144">The last instant in which this token is valid.</span>
          </span>
        </param>
        <param name="isPersistent">
          <span data-ttu-id="74976-145">
            <see langword="true" /> si el agente de usuario debe conservar el valor; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-145">
              <see langword="true" /> if the value should be persisted by the user agent; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-146">Crea un objeto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> a partir de los parámetros especificados mediante el controlador de tokens de sesión configurado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-146">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from the specified parameters by using the configured session token handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74976-147">El token de sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-147">The session token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="74976-148">No hay configurado ningún controlador de token de sesión válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-148">There is not a valid session token handler configured.</span>
          </span>
          <span data-ttu-id="74976-149">(No hay ningún <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configurado en la propiedad <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-149">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSessionTokenCookie">
      <MemberSignature Language="C#" Value="public void DeleteSessionTokenCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSessionTokenCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSessionTokenCookie ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSessionTokenCookie();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74976-150">Elimina la cookie de sesión y la quita de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-150">Deletes the session cookie and removes it from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-151">Elimina la cookie de sesión mediante el controlador de cookie especificado por el <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-151">Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.</span></span> <span data-ttu-id="74976-152">Se llama a este método durante el cierre de sesión mediante el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-152">This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="74976-153">Objeto de aplicación HTTP que contiene este módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-153">The HTTP application object that contains this module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-154">Inicializa el módulo y se prepara para controlar eventos de su objeto de aplicación de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] del módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-154">Initializes the module and prepares it to handle events from the module's [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] application object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-155">Agrega el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> y <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> controladores para la <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> y <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> eventos del objeto de aplicación especificado por la `context` parámetro.</span><span class="sxs-lookup"><span data-stu-id="74976-155">Adds the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handlers to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> and <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> events of the application object specified by the `context` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74976-156">Inicializa las propiedades del módulo basadas en definiciones en el archivo de configuración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-156">Initializes the module properties based on definitions in the configuration file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-157">Inicializa el <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad desde el controlador especificado en la configuración del <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType> objeto que se establece en el <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-157">Initializes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property from the handler specified in configuration by the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="74976-158">Puede especificar el controlador de cookies en un archivo de configuración a través de la [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="74976-158">You can specify the cookie handler in a configuration file through the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-159">Obtiene o establece un valor que especifica si la información de sesión (valores de notificación, etc.) debe almacenarse en la cookie de sesión o si el contenido de sesión debe almacenarse en el servidor, mediante la cookie para almacenar solo una referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-159">Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74976-160">
            <see langword="true" /> si las cookies emitidas están en modo de referencia; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-160">
              <see langword="true" /> if issued cookies are in reference mode; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74976-161">El valor predeterminado es <see langword="false" />, que especifica que las cookies emitidas no están en modo de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-161">The default is <see langword="false" />, which specifies that issued cookies are not in reference mode.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-162">En el modo de referencia, el <xref:System.IdentityModel.Tokens.SessionSecurityToken> se almacenan en una caché de servidor (un objeto que se deriva de <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</span><span class="sxs-lookup"><span data-stu-id="74976-162">In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</span></span> <span data-ttu-id="74976-163">La cookie emitida solo contiene un identificador de contexto que se usa para recuperar el token de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="74976-163">The issued cookie just contains a context identifier that is used to retrieve the token from the cache.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="74976-164">Para que funcione en modo de referencia, Microsoft recomienda proporcionando un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> eventos en el archivo global.asax.cs y estableciendo el <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad en el token se pasa en el <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-164">To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="74976-165">Así se asegurará de que el token de sesión funciona en modo de referencia para cada solicitud y se prefiere basta con establecer la <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> propiedad en el módulo de autenticación de la sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-165">This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> property on the Session Authentication Module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="74976-166">Origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-166">The source for the event.</span>
          </span>
          <span data-ttu-id="74976-167">Este debe ser un objeto <see cref="T:System.Web.HttpApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-167">This will be an <see cref="T:System.Web.HttpApplication" /> object.</span>
          </span>
        </param>
        <param name="eventArgs">
          <span data-ttu-id="74976-168">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-168">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-169">Controla el evento <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> de canalización de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] .</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-169">Handles the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-170">Este método hace lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="74976-170">This method does the following:</span></span>  
  
1.  <span data-ttu-id="74976-171">Se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> método para leer un <xref:System.IdentityModel.Tokens.SessionSecurityToken> de la cookie de sesión, si hay alguno.</span><span class="sxs-lookup"><span data-stu-id="74976-171">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> method to read a <xref:System.IdentityModel.Tokens.SessionSecurityToken> from the session cookie, if one is present.</span></span>  
  
2.  <span data-ttu-id="74976-172">Si una sesión de token de seguridad no puede ser devuelto (probablemente porque no se ha establecido una sesión), de lectura.</span><span class="sxs-lookup"><span data-stu-id="74976-172">If a session security token cannot be read (most likely because a session has not been established), return.</span></span>  
  
3.  <span data-ttu-id="74976-173">Se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> método para generar el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> eventos.</span><span class="sxs-lookup"><span data-stu-id="74976-173">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event.</span></span> <span data-ttu-id="74976-174">Esto proporciona una oportunidad para la lectura de la cookie a modificarse token o para la solicitud de cancelación.</span><span class="sxs-lookup"><span data-stu-id="74976-174">This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled.</span></span> <span data-ttu-id="74976-175">El controlador también puede especificar que el token debe volver a enviarse, estableciendo el <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-175">The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> property.</span></span>  
  
4.  <span data-ttu-id="74976-176">Si el token es volver a emitirse, quita de la caché y se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> método para generar el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> eventos.</span><span class="sxs-lookup"><span data-stu-id="74976-176">If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event.</span></span> <span data-ttu-id="74976-177">Esto proporciona la oportunidad de token para volver a modificarse.</span><span class="sxs-lookup"><span data-stu-id="74976-177">This provides opportunity for the token to again be modified.</span></span> <span data-ttu-id="74976-178">También es posible modificar el comportamiento de volver a emitir estableciendo la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> propiedad en el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="74976-178">The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> property in the event handler.</span></span>  
  
5.  <span data-ttu-id="74976-179">Se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> método para autenticar al usuario.</span><span class="sxs-lookup"><span data-stu-id="74976-179">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user.</span></span> <span data-ttu-id="74976-180">Si tiene éxito, esto tiene el efecto de la configuración de la <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propiedad a la entidad de seguridad que se encuentra en la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType> propiedad del token entrante.</span><span class="sxs-lookup"><span data-stu-id="74976-180">If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType> property of the incoming token.</span></span>  
  
6.  <span data-ttu-id="74976-181">Si la sesión ha expirado, se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-181">If the session has expired, invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.</span></span>  
  
 <span data-ttu-id="74976-182">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> método se agrega a los controladores para la <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> evento en el <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-182">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method is added to the handlers for the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="74976-183">No hay configurado ningún controlador de token de sesión válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-183">There is not a valid session token handler configured.</span>
          </span>
          <span data-ttu-id="74976-184">(No hay ningún <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configurado en la propiedad <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-184">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="74976-185">Origen del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-185">The source for the event.</span>
          </span>
          <span data-ttu-id="74976-186">Este debe ser un objeto <see cref="T:System.Web.HttpApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-186">This will be an <see cref="T:System.Web.HttpApplication" /> object.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="74976-187">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-187">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-188">Controla el evento <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> de canalización de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] .</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-188">Handles the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-189">La implementación predeterminada está vacía.</span><span class="sxs-lookup"><span data-stu-id="74976-189">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="74976-190">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> controlador se agrega a los controladores para la <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> evento en el <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-190">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handler is added to the handlers for the <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="74976-191">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-191">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-192">Genera el evento <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-192">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-193">Llamar desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-193">Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenReceived">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenReceived (System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenReceived(class System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenReceived (args As SessionSecurityTokenReceivedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenReceived(System::IdentityModel::Services::SessionSecurityTokenReceivedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="74976-194">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-194">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-195">Genera el evento <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-195">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-196">Llamar desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-196">Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="74976-197">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-197">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-198">Genera el evento <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-198">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-199">Este método se invoca desde la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método después de que se ha realizado el cierre de sesión y se ha eliminado la cookie de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-199">This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method after the sign-out has been performed and the session cookie has been deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (e As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="74976-200">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-200">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-201">Genera el evento <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-201">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-202">Este método se invoca desde la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método para realizar el cierre de sesión. Se invoca antes de que se elimina la cookie de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-202">This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out. It is invoked before the session cookie is deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="74976-203">Datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-203">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-204">Genera el evento <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-204">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-205">Este método se invoca desde la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método si se produce un error durante el cierre de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-205">This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method if an error occurs during sign-out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSessionTokenFromCookie">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie (byte[] sessionCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie(unsigned int8[] sessionCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadSessionTokenFromCookie (sessionCookie As Byte()) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SessionSecurityToken ^ ReadSessionTokenFromCookie(cli::array &lt;System::Byte&gt; ^ sessionCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionCookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionCookie">
          <span data-ttu-id="74976-206">Cookie, sin formato, que contiene el token de la sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-206">The cookie, in raw form, that contains the session token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-207">Lee un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> de la cookie de sesión especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-207">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from the specified session cookie.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74976-208">El token de sesión leído de la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-208">The session token that was read from the cookie.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="74976-209">No hay configurado ningún controlador de token de sesión válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-209">There is not a valid session token handler configured.</span>
          </span>
          <span data-ttu-id="74976-210">(No hay ningún <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configurado en la propiedad <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-210">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-211">Se produce cuando se ha creado un token de seguridad de la sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-211">Occurs when a session security token has been created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-212">Puede usar este evento para modificar el token de seguridad de la sesión antes de que se escriban en una cookie.</span><span class="sxs-lookup"><span data-stu-id="74976-212">You can use this event to modify the session security token before it is written to a cookie.</span></span>  
  
 <span data-ttu-id="74976-213">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> evento se provoca desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> método después de un token de sesión (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) se ha creado.</span><span class="sxs-lookup"><span data-stu-id="74976-213">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created.</span></span> <span data-ttu-id="74976-214">Esto sucede, por ejemplo, si un controlador de eventos para el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> eventos modifica el token.</span><span class="sxs-lookup"><span data-stu-id="74976-214">This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token.</span></span>  
  
 <span data-ttu-id="74976-215">Puede utilizar este evento para modificar las propiedades del token de sesión antes de que se pasa más adelante la canalización y se utiliza para autenticar la entidad que realiza la solicitud (usuario).</span><span class="sxs-lookup"><span data-stu-id="74976-215">You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</span></span>  
  
 <span data-ttu-id="74976-216">En un controlador de eventos puede tener acceso el token a través de la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-216">In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="74976-217">Después de modificar el token, puede asegurarse de que se reescriben en la cookie estableciendo la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="74976-217">After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> property to `true`.</span></span> <span data-ttu-id="74976-218">A diferencia, el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> eventos, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> no es un evento cancelable.</span><span class="sxs-lookup"><span data-stu-id="74976-218">Unlike, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> is not a cancelable event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74976-219">El código siguiente muestra un controlador para el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> evento implementado en el archivo global.asax.cs de una aplicación web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-219">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="74976-220">También debe agregar el controlador al evento.</span><span class="sxs-lookup"><span data-stu-id="74976-220">You must also add the handler to the event.</span></span> <span data-ttu-id="74976-221">Un ejemplo más completo se muestra en el <xref:System.IdentityModel.Services.SessionAuthenticationModule> tema de introducción.</span><span class="sxs-lookup"><span data-stu-id="74976-221">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt; SessionSecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt; SessionSecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenReceived As EventHandler(Of SessionSecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenReceivedEventArgs ^&gt; ^ SessionSecurityTokenReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-222">Se produce una vez leído un token de seguridad de la sesión de una cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-222">Occurs when a session security token has been read from a cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-223">El <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> evento se provoca desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> método después de un token de sesión (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) se ha leído correctamente desde la cookie de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-223">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.</span></span>  
  
 <span data-ttu-id="74976-224">Puede utilizar este evento para modificar las propiedades del token de sesión antes de que se pasa más adelante la canalización y se utiliza para autenticar la entidad que realiza la solicitud (usuario).</span><span class="sxs-lookup"><span data-stu-id="74976-224">You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</span></span> <span data-ttu-id="74976-225">Uno de los escenarios más comunes implica la modificación de la fecha de expiración de la sesión (accesible a través de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> propiedad) para invalidar la hora de expiración de sesión establecida en la configuración a través de la `lifetime` atributo de la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="74976-225">One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element.</span></span> <span data-ttu-id="74976-226">Al modificar esta propiedad en cada solicitud, puede implementar una sesión deslizante; es decir, una sesión en el que se extiende el período de duración cada momento los accesos de usuario del sitio.</span><span class="sxs-lookup"><span data-stu-id="74976-226">By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.</span></span>  
  
 <span data-ttu-id="74976-227">En un controlador de eventos puede tener acceso el token a través de la <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-227">In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="74976-228">Después de modificar el token, puede asegurarse de que se reescriben en la cookie estableciendo la <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> a `true`.</span><span class="sxs-lookup"><span data-stu-id="74976-228">After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> to `true`.</span></span> <span data-ttu-id="74976-229">Por último, el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> evento es un evento cancelable, y puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> para anular la operación de procesamiento posterior de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="74976-229">Finally, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74976-230">El código siguiente muestra un controlador para el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> evento implementado en el archivo global.asax.cs de una aplicación web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-230">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="74976-231">También debe agregar el controlador al evento.</span><span class="sxs-lookup"><span data-stu-id="74976-231">You must also add the handler to the event.</span></span> <span data-ttu-id="74976-232">Un ejemplo más completo se muestra en el <xref:System.IdentityModel.Services.SessionAuthenticationModule> tema de introducción.</span><span class="sxs-lookup"><span data-stu-id="74976-232">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalFromSessionToken">
      <MemberSignature Language="C#" Value="protected virtual void SetPrincipalFromSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPrincipalFromSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetPrincipalFromSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionSecurityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionSecurityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionSecurityToken">
          <span data-ttu-id="74976-233">El token de sesión del que se va a establecer la entidad de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-233">The session token from which to set the principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-234">Establece la entidad de seguridad de <see cref="T:System.Web.HttpContext" /> y <see cref="T:System.Threading.Thread" /> en la entidad de seguridad contenida en el token de sesión especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-234">Sets the principal on the <see cref="T:System.Web.HttpContext" /> and <see cref="T:System.Threading.Thread" /> to the principal that is contained in the specified session token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-235">Invoca la <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> método y establece el <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propiedad y el <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> propiedad en <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> utilizando las identidades que se devuelven.</span><span class="sxs-lookup"><span data-stu-id="74976-235">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> method and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property and the <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> property on <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> using the identities that are returned.</span></span>  
  
 <span data-ttu-id="74976-236">Este método se llama desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-236">This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-237">Se produce una vez ha cerrado sesión el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-237">Occurs after the user is signed out.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-238">Generan a partir de la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método justo después del <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> se invoca el método.</span><span class="sxs-lookup"><span data-stu-id="74976-238">Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just after the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.</span></span>  
  
 <span data-ttu-id="74976-239">Este evento no se garantiza que se llama para cada sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-239">This event is not guaranteed to be called for every session.</span></span> <span data-ttu-id="74976-240">Por ejemplo, pueden eliminarse las cookies en el lado cliente, en cuyo caso, este evento no podría nunca se produce porque no hay ningún evento de servidor para eliminar la sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-240">For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74976-241">El código siguiente muestra un controlador para el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut> evento implementado en el archivo global.asax.cs de una aplicación web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-241">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="74976-242">También debe agregar el controlador al evento.</span><span class="sxs-lookup"><span data-stu-id="74976-242">You must also add the handler to the event.</span></span> <span data-ttu-id="74976-243">Un ejemplo más completo se muestra en el <xref:System.IdentityModel.Services.SessionAuthenticationModule> tema de introducción.</span><span class="sxs-lookup"><span data-stu-id="74976-243">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-244">Se produce antes de eliminar la sesión de inicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-244">Occurs before deleting the sign-in session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-245">Generan a partir de la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método justo antes del <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> se invoca el método.</span><span class="sxs-lookup"><span data-stu-id="74976-245">Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just before the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.</span></span>  
  
 <span data-ttu-id="74976-246">Este evento no se garantiza que se llama para cada sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-246">This event is not guaranteed to be called for every session.</span></span> <span data-ttu-id="74976-247">Por ejemplo, pueden eliminarse las cookies en el lado cliente, en cuyo caso, este evento no podría nunca se produce porque no hay ningún evento de servidor para eliminar la sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-247">For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74976-248">El código siguiente muestra un controlador para el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut> evento implementado en el archivo global.asax.cs de una aplicación web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-248">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="74976-249">También debe agregar el controlador al evento.</span><span class="sxs-lookup"><span data-stu-id="74976-249">You must also add the handler to the event.</span></span> <span data-ttu-id="74976-250">Un ejemplo más completo se muestra en el <xref:System.IdentityModel.Services.SessionAuthenticationModule> tema de introducción.</span><span class="sxs-lookup"><span data-stu-id="74976-250">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74976-251">Cierra la sesión del usuario actual y genera los eventos asociados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-251">Signs the current user out and raises the associated events.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-252">Se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, y <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> métodos para realizar el cierre de sesión. Si se produce una excepción, el <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> método se invoca para generar el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> eventos.</span><span class="sxs-lookup"><span data-stu-id="74976-252">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out. If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event.</span></span> <span data-ttu-id="74976-253">Puede establecer la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.IdentityModel.Services.ErrorEventArgs> objeto pasado en el controlador de eventos para este evento cancelar el cierre de sesión y evitar que la excepción se propaga al cliente.</span><span class="sxs-lookup"><span data-stu-id="74976-253">You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.</span></span>  
  
 <span data-ttu-id="74976-254">Puede invalidar este método para agregar un comportamiento específico de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="74976-254">You can override this method to add application-specific behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74976-255">El código siguiente muestra el código para invocar la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método desde una página SignOut.aspx (SignOut.aspx.cs) en una aplicación web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-255">The following code shows code for invoking the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application.</span></span> <span data-ttu-id="74976-256">Un ejemplo más completo se muestra en el <xref:System.IdentityModel.Services.SessionAuthenticationModule> tema de introducción.</span><span class="sxs-lookup"><span data-stu-id="74976-256">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74976-257">Se produce cuando hay un error durante el cierre de sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-257">Occurs when there is an error during sign-out.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-258">Generan a partir de la <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> método cuando se produce un error durante el cierre de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-258">Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method when an error occurs during sign-out.</span></span>  
  
 <span data-ttu-id="74976-259">En un controlador de eventos, puede obtener la excepción que se produjo en el evento que se provoca desde el <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-259">In an event handler, you can get the exception that resulted in the event being raised from the <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="74976-260">Puede cancelar el procesamiento adicional de la excepción, que tiene el resultado de no propagar la excepción al cliente, estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.IdentityModel.Services.ErrorEventArgs> a `true`.</span><span class="sxs-lookup"><span data-stu-id="74976-260">You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="74976-261">Este evento no se garantiza que se llama para cada sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-261">This event is not guaranteed to be called for every session.</span></span> <span data-ttu-id="74976-262">Por ejemplo, pueden eliminarse las cookies en el lado cliente, en cuyo caso, este evento no podría nunca se produce porque no hay ningún evento de servidor para eliminar la sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-262">For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74976-263">El código siguiente muestra un controlador para el <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> evento implementado en el archivo global.asax.cs de una aplicación web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="74976-263">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="74976-264">También debe agregar el controlador al evento.</span><span class="sxs-lookup"><span data-stu-id="74976-264">You must also add the handler to the event.</span></span> <span data-ttu-id="74976-265">Un ejemplo más completo se muestra en el <xref:System.IdentityModel.Services.SessionAuthenticationModule> tema de introducción.</span><span class="sxs-lookup"><span data-stu-id="74976-265">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadSessionTokenFromCookie">
      <MemberSignature Language="C#" Value="public bool TryReadSessionTokenFromCookie (out System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadSessionTokenFromCookie([out] class System.IdentityModel.Tokens.SessionSecurityToken&amp; sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadSessionTokenFromCookie (ByRef sessionToken As SessionSecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadSessionTokenFromCookie([Runtime::InteropServices::Out] System::IdentityModel::Tokens::SessionSecurityToken ^ % sessionToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="74976-266">Cuando este método vuelve, contiene el token de seguridad de sesión leído de la cookie de sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-266">When this method returns, contains the session security token that was read from the session cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-267">Se intenta leer un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> de una cookie de sesión y devuelve un valor que indica si la cookie de sesión se leyó correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-267">Attempts to read a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a session cookie and returns a value that indicates whether the session cookie was successfully read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74976-268">
            <see langword="true" /> si la cookie de sesión se leyó correctamente de la solicitud; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-268">
              <see langword="true" /> if the session cookie was successfully read from the request; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-269">Lee la cookie mediante el controlador de cookies que se configura en el <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad y, a continuación, se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> método para leer el token de la cookie de sesión.</span><span class="sxs-lookup"><span data-stu-id="74976-269">Reads the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property and then invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> method to read the token from the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSessionToken">
      <MemberSignature Language="C#" Value="protected System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionSecurityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionSecurityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionSecurityToken">
          <span data-ttu-id="74976-270">Token que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-270">The token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-271">Valida el <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> especificado y devuelve sus identidades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-271">Validates the specified <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> and returns its identities.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74976-272">La colección de identidades contenidas en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-272">The collection of identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-273">Este método se llama desde el <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74976-273">This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.</span></span> <span data-ttu-id="74976-274">Invoca el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType> método del controlador de token de sesión configurado para validar el token y extraer sus identidades.</span><span class="sxs-lookup"><span data-stu-id="74976-274">It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType> method of the configured session token handler to validate the token and extract its identities.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Services.FederatedSessionExpiredException">
          <span data-ttu-id="74976-275">El token ha expirado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-275">The token has expired.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Services.FederationException">
          <span data-ttu-id="74976-276">La hora de inicio del token no es aún válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-276">The token start time is not yet valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="74976-277">No hay configurado ningún controlador de token de sesión válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-277">There is not a valid session token handler configured.</span>
          </span>
          <span data-ttu-id="74976-278">(No hay ningún <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configurado en la propiedad <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-278">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSessionTokenToCookie">
      <MemberSignature Language="C#" Value="public void WriteSessionTokenToCookie (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSessionTokenToCookie(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSessionTokenToCookie (sessionToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSessionTokenToCookie(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="74976-279">Token de seguridad de la sesión que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-279">The session security token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74976-280">Escribe el <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> especificado en una cookie de sesión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-280">Writes the specified <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> to a session cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74976-281">Escribe la cookie con el controlador de cookies que se configura en el <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74976-281">Writes the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="74976-282">
            <paramref name="sessionToken" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-282">
              <paramref name="sessionToken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="74976-283">No hay configurado ningún controlador de token de sesión válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-283">There is not a valid session token handler configured.</span>
          </span>
          <span data-ttu-id="74976-284">(No hay ningún <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configurado en la propiedad <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="74976-284">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>