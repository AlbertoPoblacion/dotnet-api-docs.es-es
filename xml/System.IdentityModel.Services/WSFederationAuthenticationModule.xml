<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4946a226efb8c22b2cb54ac00bf7e2cedea35d6e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36558386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> is an HTTP module which is used to secure an ASP.NET application by enforcing  federated authentication settings on incoming requests. The <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> is the main module that WIF offers out of the box for handling claims-based identity access in ASP.NET applications.  The <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> raises several events, which allows ASP.NET developers to change the default behavior and control the details of how authentication and claims processing take place. The <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> functionality is divided into task-specific methods.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> clase implementa un módulo HTTP que se conoce como el módulo de autenticación de WS-Federation (WSFAM). El WSFAM se implementa de fábrica mediante Windows Identity Foundation (WIF). El WSFAM se agrega a la canalización ASP.NET mediante la realización de una entrada en el archivo web.config. Deriva de <xref:System.IdentityModel.Services.HttpModuleBase>, que implementa <xref:System.Web.IHttpModule>. Registra con el tiempo de ejecución ASP.NET para realizar escuchas de los <xref:System.Web.HttpApplication.EndRequest> y <xref:System.Web.HttpApplication.AuthenticateRequest> eventos. Escuchar la <xref:System.Web.HttpApplication.EndRequest> eventos, permite la WSFAM redirigir los clientes a un servicio de token de seguridad (STS) para obtener un token de seguridad cuando se produce un error de autorización en un recurso solicitado. Escuchar la <xref:System.Web.HttpApplication.AuthenticateRequest> evento permite el WSFAM supervisar las solicitudes HTTP para una respuesta desde el STS que contiene el token solicitado. Cuando un token de este tipo está presente y es válido, crea una instancia de <xref:System.Security.Claims.ClaimsPrincipal> para el usuario autenticado con las notificaciones que se encuentran en el token.  
  
 Cuando se usa el WSFAM, administración de la sesión es proporcionada por un módulo de autenticación de sesión (SAM), que es una instancia de la <xref:System.IdentityModel.Services.SessionAuthenticationModule> clase o una clase derivada de ella. El SAM también se agrega a la canalización ASP.NET en el archivo de configuración. El SAM controla las solicitudes para las cookies de autenticación (sesión). Cuando estas cookies están presentes y son válidos, el módulo extrae el <xref:System.Security.Claims.ClaimsPrincipal> del usuario autenticado en el <xref:System.IdentityModel.Tokens.SessionSecurityToken> y establece la <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> propiedad y la entidad de seguridad de subprocesos <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propiedades.  
  
 Proporciona el WSFAM:  
  
-   La capacidad de una aplicación ASP.NET para externalizar la autenticación a un servicio de token de seguridad (STS) mediante el protocolo WS-Federation. Identidad se puede federar en uno o más dominios de identidad e implican varias STS.  
  
-   Identidad basada en notificaciones para las aplicaciones ASP.NET. Durante la autenticación, el WSFAM genera una entidad de seguridad de las notificaciones en el token de seguridad enviados por el STS y establece esta entidad de seguridad de notificaciones como la entidad de seguridad de subprocesos. A continuación, puede utilizar esta entidad de seguridad para realizar más autorización, presentación y lógica decisiones sobre el usuario que representa en el código.  
  
 La WSFAM expone varias propiedades que proporcionan predeterminados de parámetros de mensaje que se usarán en las solicitudes de inicio de sesión y cierre de sesión de WS-Federation. Estas propiedades se inicializan normalmente desde el [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento en un archivo de configuración. El más importante de estas propiedades es:  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad, que especifica la dirección del servicio de token de seguridad (STS) que se va a enviar solicitudes de inicio de sesión y cierre de sesión de WS-Federation.  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> propiedad, que especifica el parámetro wtrealm para usar en las solicitudes de inicio de sesión de WS-Federation. El parámetro wtrealm identifica el dominio de seguridad de la aplicación del usuario (RP) autenticado al STS.  
  
 Parámetros de inicio de sesión de mensajes también se pueden cambiar en cada solicitud proporcionando un delegado de controlador de eventos para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos.  
  
 Dos propiedades controlan el comportamiento del módulo. Ambas propiedades se inicializan normalmente también desde el `<wsFederation>` elemento de configuración.  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad especifica si el módulo debe realizar redirecciones pasivas al STS para la autenticación.  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> propiedad especifica si las sesiones deben ser persistentes. Si esta propiedad se establece en true, se usa el SAM para escribir una cookie de sesión al cliente. En las posteriores solicitudes del cliente, el SAM proporciona autenticación usando el token se conserva en la cookie de sesión.  
  
 El WSFAM genera varios eventos durante el inicio de sesión y cierre de sesión, que permiten a los desarrolladores ASP.NET cambiar el comportamiento predeterminado del módulo y controlar los detalles de la autenticación y procesamiento de reclamaciones tienen lugar.  
  
 Los siguientes eventos se generan antes de enviar la solicitud de inicio de sesión de WS-Federation al STS:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Se genera cuando se habilita la redirección pasiva y se produce un error de autorización en un recurso solicitado.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Genera justo antes del WSFAM envía la solicitud de inicio de sesión de WS-Federation al STS. Puede utilizar este evento para cambiar los parámetros en la solicitud de inicio de sesión.  
  
 Los siguientes eventos se generan cuando se recibe una respuesta de inicio de sesión (emitida el token de seguridad) del STS:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Se produce justo después de que se lee el token de seguridad enviado por el STS de la respuesta.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Se produce justo después de que se ha validado el token. Puede usar este evento para filtrar, transformar o agregar notificaciones a la entidad de seguridad de notificaciones (<xref:System.Security.Claims.ClaimsPrincipal>) creados a partir del token de seguridad.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Se produce justo antes del token de sesión (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) creado a partir de la entidad de seguridad se usa para establecer el subproceso principal de notificaciones y el usuario actual y se escribe en la cookie de sesión. Proporciona una oportunidad de modificar el token de sesión o habilitar o deshabilitar la escritura de la cookie de sesión.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Se genera al final de la autenticación justo después de que el subproceso principal actual de usuario y se han establecido.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Se genera si se produce una excepción durante el inicio de sesión. Puede cancelar la solicitud y evitar que la excepción que se devuelve al llamador.  
  
 Al iniciar sesión de una sesión o cuando se procesa una solicitud de limpieza cierre de sesión de WS-Federation (wsignoutcleanup1.0), se generan los siguientes eventos:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Se produce justo antes de que se elimina la sesión para poder realizar las operaciones de limpieza que podrían depender de la sesión o para cancelar el cierre de sesión.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Se produce justo después de la sesión se ha eliminado.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Se genera si se produce una excepción durante el cierre de sesión. Puede cancelar el cierre de sesión y evitar que la excepción que se devuelve al llamador.  
  
> [!NOTE]
>  No se generan los eventos de cierre de sesión al cierre de sesión en el STS mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 Hay dos maneras de iniciar sesión en un STS usando WSFAM. La primera consiste en habilitar las redirecciones de pasivas a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad. En este caso, cuando la autorización da error en un recurso solicitado, en lugar de devolver un `401:Access Denied` respuesta al cliente, WSFAM genera un mensaje de solicitud de inicio de sesión de WS-Federation de sus propiedades y redirige el cliente al STS para recuperar un token de seguridad. La segunda manera es redirigir explícitamente el cliente al STS mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método desde una página web o un control personalizado en la aplicación. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método también utiliza las propiedades de la WSFAM para construir la solicitud de inicio de sesión.  
  
 Cualquiera de los sobrecargados <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> métodos pueden usarse para cerrar la sesión de la sesión. Esto elimina la cookie de sesión en el cliente. No se envía un mensaje de cierre de sesión de WS-Federation ("wsignout1.0") al STS. En el cierre de sesión en el STS, debe usar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 El WSFAM controla solicitudes de limpieza cierre de sesión de WS-Federation ("wsignoutcleanup1.0"), mediante la eliminación de su sesión con el cliente. Si no se establece el parámetro wreply en el mensaje de limpieza de cierre de sesión, el WSFAM devuelve una imagen de una marca de verificación verde al STS que envió el mensaje. Esta característica puede usarse por un STS como una confirmación de que el punto de reunión ha completado el cierre de sesión.  
  
 La WSFAM expone su funcionalidad: por ejemplo, la canalización de procesamiento de solicitud--a través de varios métodos específicos de la tarea. Puede invalidar estos métodos en clases derivadas para alterar el comportamiento de la WSFAM.  
  
 Para ser utilizado, el módulo debe agregarse a la canalización como se muestra en el siguiente código XML:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Una vez configurado, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> genera eventos en diversas etapas del procesamiento de una solicitud HTTP. Los programadores de ASP.NET pueden controlar estos eventos en el archivo global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Called by constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wauth parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Un URI que especifica el tipo de autenticación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wauth es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wauth no está incluida en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the module is determining whether it should redirect the user to the configured issuer to authenticate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> evento se desencadena cuando se produce un error de autorización para una solicitud HTTP. Se genera desde la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegado de controlador de eventos a través de una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> método.  
  
 Puede establecer el <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> propiedad para controlar si se redirige la solicitud al proveedor de identidades. El marco de trabajo inicializa esta propiedad a `false` si ya se ha autenticado el usuario. En este caso, si se establece la propiedad en `true` puede provocar un bucle circular con el STS.  
  
> [!NOTE]
>  El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento puede utilizarse para modificar la dirección URL o cancelar la redirección.  
  
 Para controlar este evento en una aplicación ASP.NET, cree un método denominado `WSFederationAuthentication_AuthorizationFailed` en el archivo global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a value that indicates whether the specified HTTP request is a WS-Federation sign-in response message. If the message is a WS-Federation sign-out clean-up message ("wsignoutcleanup1.0"), this method processes the request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se envía un mensaje de respuesta de inicio de sesión al usuario de confianza (RP) por un servicio de token de seguridad (STS) en respuesta a un mensaje de solicitud de inicio de sesión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">The incoming HTTP request.</param>
        <summary>Returns a value that indicates whether the specified HTTP request is a WS-Federation sign-in response message. If the message is a WS-Federation sign-out clean-up message ("wsignoutcleanup1.0"), this method processes the request.</summary>
        <returns>
          <see langword="true" /> if the specified HTTP request contains a form POST in which the wa parameter is set to "wsignout1.0" and the wresult parameter is not empty; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se invoca desde la canalización de procesamiento de solicitud para determinar si la solicitud HTTP de entrada es una entrada de formulario que contiene un mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> se puede sobrecargar con el `onPage` conjunto de parámetros `false` para indicar que no se originó la llamada al procesar una página.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">The incoming HTTP request.</param>
        <param name="onPage">
          <see langword="true" /> if the call originates while processing a page request. <see langword="false" /> if the caller is an HTTP module. This parameter determines how to terminate processing or send redirects if the incoming message is a WS-Federation sign-out cleanup message ("wsignoutcleanup1.0").</param>
        <summary>Returns a value that indicates whether the specified HTTP request is a WS-Federation sign-in response message. If the message is a WS-Federation sign-out clean-up message ("wsignoutcleanup1.0"), this method processes the request.</summary>
        <returns>
          <see langword="true" /> if the specified HTTP request contains a FORM post in which the wa parameter is set to "wsignout1.0" and the wresult parameter is not empty; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se invoca desde la canalización de procesamiento de la solicitud a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> sobrecarga para determinar si la solicitud HTTP de entrada es un formulario de entrada de blog que contiene un mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 La implementación predeterminada realiza lo siguiente:  
  
-   Si la solicitud entrante es un formulario POST, llama a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> método para determinar si el formulario POST contiene una respuesta de inicio de sesión.  
  
-   Si la solicitud entrante no es un formulario POST, y la solicitud contiene una solicitud de limpieza cierre de sesión de WS-Federation (el parámetro de wa es "wsignoutcleanup1.0"), se realiza la limpieza de cierre de sesión. En este caso, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> se invoca el método (con el parámetro establecido en `true` para indicar una limpieza cierre de sesión) para cerrar la sesión de la sesión. Esto también provoca que se generen los eventos de cierre de sesión.  
  
     A continuación, si la solicitud de limpieza de cierre de sesión contiene un parámetro de wreply, el cliente se redirige a la dirección URL devuelta por la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> método; en caso contrario, se devuelve una imagen de una marca de verificación verde al STS. La recepción de esta imagen puede usarse por el STS como una confirmación de que la solicitud de limpieza de cierre de sesión se ha recibido y procesado correctamente por el punto de reunión.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">The WSFAM saves this value in the wctx parameter in the WS-Federation sign in request; however, the module does not use it when processing sign-in requests or sign-in responses. You can set it to any value. It does not have to be unique.</param>
        <param name="returnUrl">The URL to which the module should return upon authentication.</param>
        <param name="rememberMeSet">The WSFAM saves this value in the wctx parameter in the WS-Federation sign in request; however, the module does not use it when processing sign-in requests or sign-in responses. You can set it either <see langword="true" /> or <see langword="false" />.</param>
        <summary>Creates a WS-Federation sign in request message by using the WS-Federation parameters configured on the module.</summary>
        <returns>The WS-Federation sign-in request message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea una solicitud de inicio de sesión de WS-Federation que se representa mediante un <xref:System.IdentityModel.Services.SignInRequestMessage> objeto. Las propiedades del nuevo <xref:System.IdentityModel.Services.SignInRequestMessage> objeto se establecen como sigue:  
  
-   El <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> (el parámetro wctx) de la propiedad está establecida en un valor que se crean mediante los parámetros del método.  
  
-   El <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> (el parámetro wct) de la propiedad se establece en la hora actual.  
  
-   Todas las demás propiedades se establecen mediante las propiedades equivalentes de la instancia actual.  
  
 Los parámetros pasados al método se utilizan para crear el parámetro de mensaje wctx. Se trata de una cadena con el formato siguiente: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   El `ru` valor se establece en el valor de la `returnUrl` parámetro pasado al método y especifica la dirección URL que el módulo debe dirigir el explorador a la siguiente autenticación correcta. Este es el único valor que se almacena en la cadena de wctx utilizado por el WSFAM. Las llamadas de módulo el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> método para extraer este valor del parámetro wctx al procesar una respuesta de inicio de sesión de WS-Federation. No debe confundirse con el parámetro de mensaje wreply, que se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propiedad y que proporciona la dirección en el punto de reunión en la que el servicio de token de seguridad (STS) debe dirigir su respuesta.  
  
-   El `cx` parámetro se establece en el valor de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> propiedad. Esta propiedad se expone para permitirle establecer cualquier contexto definido por la aplicación que se debe almacenar en la cadena de wctx; Sin embargo, WSFAM no expone un método para extraer este valor en la respuesta. Si el valor es necesario para la aplicación, debe proporcionar el código para analizar la cadena de wctx y leer este valor cuando se procesa la respuesta. Puede lograr esto invalidando el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> método.  
  
-   Ni el `rm` valor, que se establece en el valor de la `rememberMeSet` parámetro, ni la `id` parámetro, que se establece en el valor de la `uniqueId` WSFAM se utiliza el parámetro. Estos se pueden establecer en cualquier valor.  
  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> property is <see langword="null" /> or an empty string.  -or-  The <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> property is <see langword="null" /> or an empty string.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">The URL of the STS to receive the WS-Federation sign-out request message. Cannot be <see langword="null" />.</param>
        <param name="replyUrl">The URL to be sent as the wreply value in the sign-out request message.</param>
        <summary>Signs out at the specified security token service (STS) by using the WS-Federation protocol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método para enviar un mensaje de solicitud de cierre de sesión de WS-Federation al STS especificado. Opcionalmente, puede proporcionar un valor para el parámetro wreply en la solicitud de cierre de sesión.  
  
 El método hace lo siguiente:  
  
1.  Crea un mensaje de solicitud de cierre de sesión de WS-Federation mediante los parámetros especificados.  
  
2.  Llamadas a la <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> método en la base de datos SAM elimina la cookie de sesión.  
  
3.  Redirige al STS usando el mensaje de solicitud de cierre de sesión desde el primer paso.  
  
 Ninguno de los eventos de cierre de sesión: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, o <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> generados por este método. Para eliminar la sesión sin necesidad de enviar un mensaje de solicitud de cierre de sesión al STS, llame a uno de los sobrecargados <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> métodos.  
  
> [!NOTE]
>  Para llevar a cabo pasivo de cierre de sesión con el token de sesión, el módulo se basa en un valor que se almacenó en el <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> propiedad durante el inicio de sesión, para obtener más información, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutUrl" /> is not <see langword="null" /> and is not an absolute URI.  -or-  <paramref name="replyUrl" /> is not <see langword="null" /> and is not an absolute URI.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="signOutUrl" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wfresh parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>El tiempo máximo deseado de las solicitudes de autenticación, en minutos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wfresh es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wfresh no está incluida en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">The issuer address. The address of the security token service (STS) to which to direct the request.</param>
        <param name="signOutReply">A URL that specifies the address to return to after sign-out. This sets the wreply parameter in the sign-out request. Can be <see langword="null" /> or empty if no wreply parameter should be included in the generated sign-out request. This should be an absolute URI.</param>
        <param name="signOutQueryString">Additional query string parameters to be included in the sign-out request. Can be <see langword="null" /> or empty if no additional to be parameters included in the generated sign-out request. This should be a relative URI.</param>
        <summary>Returns a URL that represents a WS-Federation sign-out request addressed to the specified issuer and that contains the specified wreply parameter and the specified additional parameters.</summary>
        <returns>A URL that contains a WS-Federation passive sign-out request that is built by using the specified parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la dirección URL que se devuelve: la base de URI se establece en `issuer`; el parámetro wa está establecido en "wsignout1.0"; el parámetro wreply está establecido en `signOutReply`; y los parámetros especificados en `signOutQueryString` están presentes como parámetros de cadena de consulta adicionales.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">The URL that specifies the address of the issuance result.</param>
        <summary>Gets the issuance result (typically the issued token) from the specified URL. Resolves the URL specified in the wresultptr parameter in a sign-in response message.</summary>
        <returns>The issuance result that was referenced by the URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> método desde dentro de la canalización de procesamiento para resolver la dirección URL especificada en el parámetro wresultptr en el mensaje de inicio de sesión de respuesta recibido de un servicio de token de seguridad (STS).  
  
 De forma predeterminada, este método produce una <xref:System.NotSupportedException>. Invalide este método en una clase derivada para admitir el parámetro wresultptr. La dirección URL señala al resultado de emisión, que debe ser uno de los siguientes: una `<wst:RequestSecurityTokenResponse>` elemento, un `<wst:RequestSecurityTokenResponseCollection>` elemento, una respuesta SOAP o SOAP `<S:Fault>` elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">This method is not supported in the base class. You must override it in a derived class.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">The HTTP request that contains a form POST, which contains the WS-Federation sign-in response message.</param>
        <summary>Extracts the URL of the page that was originally requested from the sign-in response.</summary>
        <returns>The URL of the page that was originally requested by the client. This is the URL (at the relying party) to which the client should be redirected following successful sign-in.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama desde la canalización de procesamiento de la solicitud (el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> (método)) para obtener la dirección URL de la página en el usuario de confianza (RP) para dirigir el cliente después de un inicio de sesión correcto. Esto es, por lo general, la dirección URL del recurso RP a la que el cliente solicitó originalmente el acceso.  
  
 De forma predeterminada, WSFAM guarda la dirección URL de retorno dentro del parámetro de mensaje wctx cuando envía la solicitud de inicio de sesión de WS-Federation para el servicio de token de seguridad (STS). Según la especificación WS-Federation, el parámetro wctx se conserva en las entidades a través del cual el mensaje pasa y se devuelve sin modificar en el mensaje de respuesta de inicio de sesión de WS-Federation que se envía por el STS.  
  
 La implementación predeterminada Obtiene la dirección URL devuelta desde el parámetro wctx en la respuesta de inicio de sesión. Para obtener más información sobre el formato del parámetro wctx utilizada por WSFAM, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Reads a security token from the specified request.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">The sign-in response message from which to read the token.</param>
        <summary>Reads a security token from the specified WS Federation sign-in response message.</summary>
        <returns>The security token that was read from the message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada, se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> método para obtener el token y lee mediante el controlador adecuado de los controladores de tokens de seguridad configuradas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">The HTTP request from which to read the token.</param>
        <summary>Reads a security token from the specified HTTP request.</summary>
        <returns>The security token that was read.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde la canalización de procesamiento de solicitud para obtener el mensaje de solicitud de inicio de sesión de WS-Federation como un <xref:System.IdentityModel.Tokens.SecurityToken> objeto.  
  
 La implementación predeterminada, se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> método para obtener un <xref:System.IdentityModel.Services.SignInResponseMessage> objeto y, a continuación, se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> sobrecarga.  
  
 Utilice una clase derivada para interpretar un tipo específico de solicitud.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a string that should be persisted with the session cookie in the <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" /> property.</summary>
        <returns>The string to persist in the session cookie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> método se llama desde la canalización de procesamiento de solicitud al procesar un mensaje de respuesta de inicio de sesión de WS-Federation para obtener el valor para almacenar en la <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> propiedad dentro de la cookie de sesión.  
  
 Puede invalidar este método para proporcionar un valor específico de la aplicación que se almacena en la cookie. WSFAM no expone ningún método para recuperar el valor de la cookie. Debe proporcionar la lógica de la aplicación para leer el valor de la cookie si es necesario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> property is <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">The HTTP request from which to read the sign-in response message. The request should represent a form POST.</param>
        <summary>Reads a <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> object from the form POST represented by the specified HTTP request.</summary>
        <returns>The sign-in response message that was created.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> método en la canalización de procesamiento de solicitud para obtener un mensaje de respuesta de inicio de sesión del formulario POST contenida en la solicitud HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A sign-in response message could not be read from the specified request.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">The sign-out clean-up request.</param>
        <summary>Determines the URL to which to redirect when processing a WS-Federation sign-out clean-up request (wsignoutcleanup1.0) that contains a wreply parameter.</summary>
        <returns>The URL to redirect to.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> método en la canalización de procesamiento de solicitud para determinar la dirección URL para redirigir a después de procesar una solicitud de limpieza de cierre de sesión de WS-Federation. Solo se invoca si el mensaje tiene un parámetro de wreply (el `signOutMessage` parámetro tiene un <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> propiedad que no se han `null` ni está vacío).  
  
 La implementación predeterminada valida la URL de respuesta contenida en el mensaje (el <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> propiedad) con la dirección del servicio de token de seguridad (STS) que se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad. Las siguientes condiciones deben cumplirse para la dirección URL de respuesta sea válida:  
  
1.  La URL de respuesta es una dirección URL absoluta.  
  
2.  La URL de respuesta tiene el mismo esquema que el emisor.  
  
3.  La URL de respuesta tiene el mismo puerto que el emisor.  
  
4.  La URL de respuesta tiene el mismo host como el emisor o la dirección URL de respuesta especifica un subdominio del emisor.  
  
 Si todas estas condiciones son true, que se devuelve la dirección URL de respuesta (respuesta); en caso contrario, la dirección URL especificada por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad se devuelve.  
  
 Invalide este método para proporcionar validación adicional a la URL de respuesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutMessage" /> has a <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> property that is <see langword="null" /> or empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signOutMessage" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extracts the issued token from the specified WS-Federation sign-in response message.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">The sign-in response message to extract the token from. The sign-in response contains the token issued by the STS.</param>
        <summary>Extracts the issued token from the specified WS-Federation sign-in response message.</summary>
        <returns>A string that contains the XML that represents the issued token. This is a <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no hay ningún parámetro wresult en el mensaje de respuesta de inicio de sesión, la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> método se llama para intentar obtener el token con el parámetro wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="message" /> does not contain a token. (It does not contain a valid wresult or wresultptr parameter.)</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">The sign-in response message to extract the token from. The sign-in response contains the token issued by the STS.</param>
        <param name="federationSerializer">The WS-Federation serializer to use to de-serialize the sign-in response message.</param>
        <summary>Extracts the issued token from the specified WS-Federation sign-in response message by using the specified WS-Federation serializer.</summary>
        <returns>A string that contains the XML that represents the issued token. This is a <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> element.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the whr parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>La dirección del proveedor de identidades.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro whr es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro whr no está incluida en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">The HTTP application object that contains this module.</param>
        <summary>Initializes the module and prepares it to handle events from the module's [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] application object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Agrega controladores de eventos de la canalización ASP.NET según la tabla siguiente.  
  
|evento|Controlador|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Las propiedades del módulo, como <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , se inicializan desde la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the module properties based on the configuration specified by the <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> property of the module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Propiedades del módulo se inicializan mediante las propiedades equivalentes de la <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> objeto especificado por el <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> propiedad.  
  
 Puede especificar la configuración en un archivo de configuración a través de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">The incoming HTTP request.</param>
        <summary>Gets a value that indicates whether the specified request is a WS-Federation sign-in response message.</summary>
        <returns>
          <see langword="true" /> if the request is a WS-Federation sign-in response message; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> método en la canalización de procesamiento de solicitud para determinar si la solicitud HTTP de entrada es un mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 La implementación predeterminada devuelve `true` si el parámetro wa es "wsignin1.0" y el wreq de WebRequest y wreqptr parámetros se establecen no ambos.  
  
 Puede invalidar este método en clases derivadas para realizar una validación adicional.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a URI that identifies the intended issuer of the security token.</summary>
        <value>El URI que identifica el servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es una propiedad necesaria. Se debe establecer si están habilitadas las redirecciones de pasivas. Especifica la dirección URL del servicio de token de seguridad (STS) a la que se deben emitir solicitudes de WS-Federation.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt to set the property to <see langword="null" /> or an empty string occurs.  -or-  An attempt to set the property to a value that is not a valid, absolute URI occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source for the event. This will be an <see cref="T:System.Web.HttpApplication" /> object.</param>
        <param name="args">The data for the event.</param>
        <summary>Handles the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> método implementa la canalización de procesamiento de la solicitud de WS-Federation. Se agrega a la <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> evento en el [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] de canalización por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> método.  
  
 El método realiza lo siguiente:  
  
1.  Llamadas a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> método para determinar si se ha recibido un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0"). Si la respuesta es una solicitud de limpieza cierre de sesión de WS-Federation ("wsignoutcleanup1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> procesa el mensaje, finaliza la solicitud y redirige al cliente según los parámetros de WS-Federation en la solicitud. Si el mensaje no es una respuesta de inicio de sesión o una solicitud de limpieza de cierre de sesión, solo devuelve el módulo; en caso contrario, realiza los pasos siguientes para procesar la respuesta de inicio de sesión.  
  
2.  Llamadas a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> método para deserializar una <xref:System.IdentityModel.Tokens.SecurityToken> objeto de la solicitud.  
  
3.  Genera el evento <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>. Puede cancelar el procesamiento posterior o modificar el token de seguridad recibido en un controlador para este evento. Un controlador se utiliza normalmente para modificar el <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> o <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> propiedades.  
  
4.  Valida el token de seguridad y crea un <xref:System.Security.Claims.ClaimsPrincipal> objeto desde las notificaciones en el token de seguridad.  
  
5.  Genera el evento <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>. Puede cancelar el procesamiento posterior o modificar la entidad de seguridad de notificaciones en un controlador para este evento.  
  
6.  Usa el módulo de autenticación de sesión configurado (SAM) para crear un <xref:System.IdentityModel.Tokens.SessionSecurityToken> objeto. (El SAM configurado es el <xref:System.IdentityModel.Services.SessionAuthenticationModule> objeto devuelto por la <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> propiedad.) El token de sesión se crea mediante el uso de la entidad de seguridad de notificaciones que se devuelven en el paso 5. El <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> y <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> propiedades se establecen mediante el uso de la <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> y <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> propiedades de la <xref:System.IdentityModel.Tokens.SecurityToken> devuelta en el paso 3 y se valida con respecto a la hora actual y la duración del token especificado por cualquiera de los <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>o <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propiedad de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> objeto en la colección de controlador de token WSFAM usándola. Se puede especificar la duración del token en el controlador de token de sesión en la configuración a través de la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento. Nota: La <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> propiedad en el controlador de cookies configurado para el SAM no se utiliza.  
  
7.  Llamadas a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> método con el token de sesión para escribir la cookie de sesión. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> método primera genera la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> eventos. Puede cambiar las propiedades en el token de sesión o cambiar si la cookie debe conservarse en un controlador para este evento. Después de que se genera el evento, el método, a continuación, escribe la cookie mediante el SAM.  
  
    > [!NOTE]
    >  El <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> conjunto de configuración no se usa para escribir la cookie.  
  
8.  Llamadas a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> eventos.  
  
9. Llamadas a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> método para obtener la página RP que se va a redirigir al cliente. De forma predeterminada, este método lee la dirección URL devuelta desde el parámetro wctx en la respuesta de inicio de sesión. Para obtener más información acerca de cómo WSFAM almacena la dirección URL de retorno, vea el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegado de controlador de eventos cuando se produce un error de autorización.  
  
 Inicializa el <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> propiedad antes de generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> eventos para evitar las redirecciones circulares si ya se ha autenticado el usuario. Si el usuario ya está autenticado, la propiedad se inicializa en `false` evitar que redirige; en caso contrario, se inicializa en `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source for the event. This will be an <see cref="T:System.Web.HttpApplication" /> object.</param>
        <param name="args">The data for the event.</param>
        <summary>Handles the <see cref="E:System.Web.HttpApplication.EndRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El evento se omite a menos que la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad es `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source for the event. This will be an <see cref="T:System.Web.HttpApplication" /> object.</param>
        <param name="e">The data for the event.</param>
        <summary>Handles the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, este es un controlador vacío.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método justo después de que se elimina la sesión.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método justo antes de que se elimina la sesión.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The data for the event.</param>
        <summary>Raises the <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método si se produce una excepción durante el procesamiento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the module is enabled to initiate WS-Federation protocol redirects.</summary>
        <value>
          <see langword="true" /> Para habilitar redirige; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El módulo no iniciarán las redirecciones del protocolo WS-Federation cuando este modo no está habilitado. Si esta propiedad es `true`, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad debe establecerse en la dirección URL de Token de seguridad servicio (STS) a la que se debe redirigir al llamador.  
  
> [!WARNING]
>  Código de la aplicación puede emitir las solicitudes de inicio de sesión de WS-Federation explícitamente mediante la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método, independientemente del valor de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether a persistent session cookie is issued on successful authentication.</summary>
        <value>
          <see langword="true" /> para emitir una cookie de sesión persistente; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> eventos. Este evento se provoca desde la solicitud de canalización de procesamiento al procesar un mensaje de respuesta de inicio de sesión de WS-Federation de un servicio de token de seguridad (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wp parameter to be used in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Una dirección URL que identifica la directiva que se utilizará.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wp es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wp no está incluida en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wtrealm parameter to be used for WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Un URI que identifica el usuario de confianza (RP) para el servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de una propiedad obligatoria para las solicitudes de inicio de sesión de WS-Federation. Se debe establecer si están habilitadas las redirecciones de pasivas. El URI identifica el punto de reunión al STS. (Para identificar el STS al punto de reunión, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad).  
  
 El valor de esta propiedad se serializa como el parámetro de cadena de consulta wtrealm de protocolo WS-Federation. Identifica el punto de reunión al STS. Se utiliza el STS para decidir qué directiva se aplique de emisión de tokens y la ubicación redirigir al usuario después de la emisión de tokens. (Para identificar el STS al punto de reunión, consulte <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt to set the property to <see langword="null" /> or an empty string occurs.  -or-  An attempt to set the property to a value that is not a valid, absolute URI occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the module is going to redirect the user to the identity provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede obtener acceso y modificar la solicitud de inicio de sesión de WS-Federation a través de la <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> propiedad. Por ejemplo, puede modificar el <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> propiedad en el mensaje de inicio de sesión para cambiar el proveedor de identidad a la que se redirigirá la solicitud. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento es un evento cancelable y puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` para cancelar la redirección.  
  
 El evento se provoca desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> método.  
  
 Para controlar este evento en una aplicación ASP.NET, cree un método llamado `WSFederationAuthentication_RedirectingToIdentityProvider` en el archivo global.asax.  
  
   
  
## Examples  
 El código siguiente muestra cómo agregar un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento en el `Application_Init` eventos en el archivo global.asax. El código se toma de la `FederationForWebApps` ejemplo. Para obtener más información acerca de este ejemplo, vea [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 El código siguiente muestra el controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento en el en el archivo global.asax de RP. El código comprueba si la solicitud HTTP de entrada contiene un parámetro de horas de servicio y, si es así, establece este parámetro en la solicitud de inicio de sesión de WS-Federation que se enviará al STS. El código se toma de la `FederationForWebApps` ejemplo. Para obtener más información acerca de este ejemplo, vea [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 El código siguiente muestra el controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento en el en el archivo global.asax de un proveedor de federación STS. El código comprueba si la solicitud HTTP de entrada contiene un parámetro de horas de servicio. Si la solicitud contiene el parámetro de horas de servicio, el cliente se dirige al STS de IP de inicio de sesión; de lo contrario, el cliente se dirige a una página de detección de dominio de inicio para seleccionar al STS de IP en el que se va a iniciar sesión. El código se toma de la `FederationForWebApps` ejemplo. Para obtener más información acerca de este ejemplo, vea [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">The WSFAM saves this value in the wctx parameter in the WS-Federation sign in request; however, the module does not use it when processing sign-in requests or sign-in responses. You can set it to any value. It does not have to be unique. For more information, see the <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> method.</param>
        <param name="returnUrl">The URL to which the module should return upon authentication.</param>
        <param name="persist">The WSFAM saves this value in the wctx parameter in the WS-Federation sign in request; however, the module does not use it when processing sign-in requests or sign-in responses. You can set it either <see langword="true" /> or <see langword="false" />.</param>
        <summary>Redirects the user to the security token service (STS) specified by the <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> property to obtain a security token using the WS-Federation protocol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método cuando se emite la solicitud de una página web que se presentan por el usuario de confianza (RP) o desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegado de controlador de eventos para realizar una redirección pasiva al proveedor de identidades en Error de autorización.  
  
 Los parámetros pasados al método se utilizan para crear el parámetro de mensaje wctx. El parámetro solo significativo es el `returnUrl` parámetro. Especifica la dirección URL que RP debe dirigir el explorador a la siguiente autenticación correcta. No debe confundirse con el parámetro de mensaje wreply, que se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propiedad y que proporciona la dirección en el punto de reunión en la que el servicio de token de seguridad (STS) debe dirigir su respuesta.  
  
 El método realiza lo siguiente:  
  
1.  Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> método para asegurarse de que el módulo puede emitir una solicitud de inicio de sesión válida.  
  
2.  Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método para crear la solicitud de inicio de sesión de las propiedades se configuran en el módulo.  
  
3.  Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Puede cancelar la redirección o modificar el mensaje de solicitud de inicio de sesión en el controlador de eventos para este evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> is <see langword="null" /> or an empty string.  -or-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> is <see langword="null" /> or an empty string.  -or-  The <see cref="P:System.Web.HttpContext.Current" /> property is <see langword="null" /> or empty.  -or-  The <see cref="P:System.Web.HttpContext.Response" /> property of the context returned by <see cref="P:System.Web.HttpContext.Current" /> is <see langword="null" /> or empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wreply parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Una dirección URL que identifica la dirección a la que la aplicación del usuario (RP) autenticado le gustaría recibir respuestas desde el servicio de Token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wreply es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreply no está incluida en la solicitud de inicio de sesión.  
  
 El STS lo utiliza el parámetro wreply para decidir dónde se redirige al usuario después de emisión de tokens. No es conveniente para el STS usar esta dirección para redirigir al usuario como tal redirección presenta vulnerabilidades de seguridad. El STS (posiblemente por lo compara con un conjunto de direcciones de respuesta preconfigurados para los propósitos o algún otro método) debe validar la dirección de respuesta para asegurarse de que la respuesta se envía a entender ubicación muy conocida y segura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt to set the property to a value that is not a valid, absolute URI occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wreq parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>La solicitud de emisión de tokens se expresa como un <see langword="&lt;wst:RequestSecurityToken&gt;" /> elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wreq de WebRequest es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreq de WebRequest no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wreqptr parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Una dirección URL que especifica la ubicación de la solicitud de emisión de tokens expresada como un <see langword="&lt;wst:RequestSecurityToken&gt;" /> elemento</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wreqptr es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreq de WebRequest no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt to set the property to a value that is not a valid, absolute URI occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether communication with the security token service (STS) must use HTTPS protocol.</summary>
        <value>
          <see langword="true" /> Si la comunicación con el STS debe protegerse mediante HTTPS; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get or sets the value of the wres parameter to use in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Un URI que identifica el recurso que se obtiene acceso, el usuario de confianza (RP), a la que el servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wtrealm, que se establece mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> propiedad, debe utilizarse en lugar de este parámetro.  
  
 El parámetro wres es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wres no está incluida en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a security token has been received from a security token service (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar un controlador de eventos para modificar el token antes de que se valida. En el evento controlador puede acceder al token de seguridad a través de la <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> propiedad. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> evento es un evento cancelable, puede establecer la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` en un controlador de eventos para finalizar el procesamiento del mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 Este evento se provoca desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos al procesar un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0") recibido desde el servicio de token de seguridad (STS). Se produce justo después de un token de seguridad se ha deserializado desde el wresult o el parámetro wresultptr en el mensaje de respuesta de inicio de sesión, pero antes de que se valida el token de seguridad.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after a security token that was received from the security token service (STS) has been validated but before the session security token is created.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar un controlador de eventos para modificar la entidad de seguridad que se crearon al procesar un mensaje de respuesta de inicio de sesión de WS-Federation de un servicio de token de seguridad (STS) antes de que se utiliza para crear el token de sesión. En el evento controlador, se puede obtener acceso a la entidad de seguridad a través de la <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> propiedad. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> evento es un evento cancelable, puede establecer la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` en un controlador de eventos para finalizar el procesamiento del mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 Este evento se provoca desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos al procesar un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0") recibido desde el servicio de token de seguridad (STS). Se produce justo después del token de seguridad que se deserializó desde el wresult o se ha validado el parámetro wresultptr en el mensaje de respuesta de inicio de sesión y antes de la seguridad de sesión se crea el símbolo (token).  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a session security token has been created from the security token received from a security token service (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar un controlador de eventos para modificar el token de sesión antes de que se usa para establecer la entidad de seguridad de subprocesos y se escribe en la cookie de sesión. En el evento controlador, puede acceder al token de sesión a través de la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad. Puede especificar si se debe escribir una cookie de sesión estableciendo la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> propiedad.  
  
 Este evento se provoca desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos al procesar un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0") recibido desde el servicio de token de seguridad (STS). Se produce justo después del token de seguridad que se deserializó desde el wresult o se ha validado el parámetro wresultptr en el mensaje de respuesta de inicio de sesión y antes de las notificaciones de entidad de seguridad se establece en el <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (y en el <xref:System.Web.HttpContext.User%2A> propiedad de <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Para funcionar las sesiones en el modo de referencia, Microsoft recomienda proporcionando un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> eventos en el archivo global.asax.cs y la configuración de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad en el token se pasa en el <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad. Así se asegurará de que el token de sesión funciona en modo de referencia para cada solicitud y se prefiere basta con establecer la <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> propiedad en el módulo de autenticación de la sesión.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">The session security token that was created from the WS-Federation sign-in response message from the STS.</param>
        <param name="isSession">
          <see langword="true" /> to write a cookie that represents the session included with the response; otherwise, <see langword="false" />.</param>
        <summary>Sets the thread principal and optionally writes the session cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar desde la solicitud de procesamiento de canalización que se implementa en el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos. Este método hace lo siguiente:  
  
1.  Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> eventos. Puede usar este evento para modificar el token de sesión antes de que se usa para establecer la entidad de seguridad de subprocesos y se escriben en la cookie de sesión y para especificar si se debe escribir la cookie de sesión.  
  
2.  Se invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> método en el módulo de autenticación de sesión configurado (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) para establecer la entidad de seguridad del subproceso y, opcionalmente, escribir la cookie de sesión.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs after the user is signed in.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la solicitud se registra en la página de inicio de sesión, un control en la página, producirá este evento, no en este módulo.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs just after deleting the session during sign-out.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena a través de una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> método desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método al firmar fuera de la sesión al usuario de confianza (RP). El evento no se desencadena cuando hacerlo federada cierre de sesión a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 Puede agregar un controlador de eventos para realizar cualquier procesamiento adicional que es necesario para la aplicación después de que se ha eliminado la cookie de sesión.  
  
 Este evento no se garantiza que se llama para cada sesión. Las cookies pueden eliminarse en el lado del cliente, por ejemplo, por lo que nunca se debería generar este evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">The WSFAM saves this value in the wctx parameter in the WS-Federation sign in request; however, the module does not use it when processing sign-in requests or sign-in responses. You can set it to any value. It does not have to be unique. For more information, see the <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> method.</param>
        <summary>Performs sign-in to a security token service (STS) through the WS-Federation protocol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada, se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método para realizar el inicio de sesión de.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gest or sets an application specific context value to be included in the wctx parameter in WS-Federation sign-in requests.</summary>
        <value>El valor de contexto específico de aplicación que se incluirá en el parámetro wctx para las solicitudes de inicio de sesión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> se invoca el método, el mensaje de inicio de sesión que se genera contiene un parámetro wctx que tiene el formato siguiente: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. El valor de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> se almacena en la `cx` parámetro. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> pueden llamarse directamente desde el código. También se llama cuando el WSFAM está realizando las redirecciones de pasivas y también cuando ya sea el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método o la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> se invoca el método por el código de la aplicación.  
  
 Aunque el WSFAM guarda la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> valor en los mensajes de solicitud de inicio de sesión, si el valor es utilizado por la aplicación durante el procesamiento de respuesta, debe proporcionar la lógica para extraer del parámetro wctx en el mensaje de respuesta de inicio de sesión.  
  
 Para obtener más información sobre el formato y el procesamiento del parámetro wctx, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised when an error during sign-in occurs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la solicitud se registra en la página de inicio de sesión, un control en la página, producirá este evento, no en este módulo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before deleting the session during sign-out.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena a través de una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> método desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método al firmar fuera de la sesión al usuario de confianza (RP). El evento no se desencadena cuando hacerlo federada cierre de sesión a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 Puede agregar un controlador de eventos para realizar cualquier procesamiento adicional que es necesario para la aplicación antes de que se elimina la cookie de sesión. Puede leer el <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> propiedad en el controlador de eventos para determinar si el cierre de sesión es el resultado de la recepción de un mensaje de solicitud de limpieza de cierre de sesión de WS-Federation ("wsignoutcleanup1.0") de un servicio de token de seguridad (STS) o si se inició en el punto de reunión.  
  
 Este evento no se garantiza que se llama para cada sesión. Las cookies pueden eliminarse en el lado del cliente, por ejemplo, por lo que nunca se debería generar este evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a query string that contains any additional parameters to be sent in WS-Federation sign-in requests ("wsignin1.0").</summary>
        <value>Un fragmento de dirección URL que contiene los parámetros de mensaje adicional en el siguiente formato: <c>parámetro1 = valor1&amp;parámetro2 = valor2&amp;paramN = valorN</c>. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para enviar parámetros adicionales en una solicitud de inicio de sesión. Podría tratarse de parámetros específicos de la aplicación que no pertenecen a uno de los parámetros que se especifican mediante el protocolo WS-Federation. Para quitar parámetros adicionales de la solicitud, establezca la propiedad en una cadena vacía.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se produce justo antes de que el módulo se redirige el servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">An attempt to set the property to <see langword="null" /> occurs.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Signs out of the current session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Al cierre de sesión en el STS mediante el protocolo WS-Federation, use la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signs out of the current session and requests a redirect back to the URL specified in the current HTTP request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual y redirige el explorador a la dirección URL especificada en la solicitud HTTP actual.  
  
 Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> método con el `redirectUrl` parámetro establecido en la dirección URL de la solicitud actual.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Al cierre de sesión en el STS mediante el protocolo WS-Federation, use la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">
          <see langword="true" /> if the request was initiated by the IP-STS via a WS-Federation sign-out cleanup request message ("wsignoutcleanup1.0"); otherwise, <see langword="false" />.</param>
        <summary>Signs out of the current session and raises the appropriate events.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método realiza el trabajo real de la eliminación de la sesión actual y provocar los eventos de cierre de sesión adecuados. El método hace lo siguiente:  
  
1.  Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> eventos. Un controlador de eventos puede proporcionar cualquier procesamiento necesario antes de que se elimina la sesión. El <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> propiedad se establece según el `isIPRequest` parámetro.  
  
2.  Llamadas a la <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> método en el Administrador de autenticación de la sesión actual para eliminar la cookie de sesión.  
  
     Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> eventos.  
  
3.  Si se produce un error durante el proceso de cierre de sesión, se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> eventos. Puede cancelar el procesamiento y se evita que una excepción que se devuelve al autor de llamada de un controlador de eventos <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Puede llamar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> método con el `isIPRequest` conjunto de parámetros `false` cerrar sesión en una sesión sin tener que realizar una redirección. En última instancia se llama al método todos los de otros sobrecargado <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> métodos (con la `isIPRequest` parámetro establecido en `false`) para realizar el cierre de sesión control. Se llama al método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> método con el `isIPRequest` conjunto de parámetros `true` para cerrar la sesión de la sesión cuando está procesando un mensaje de limpieza cierre de sesión de WS-Federation ("wsignoutcleanup1.0").  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Al cierre de sesión en el STS mediante el protocolo WS-Federation, use la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">The URL to which the browser should be redirected after the session is deleted.</param>
        <summary>Signs out of the current session and requests a redirect back to the specified URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual y redirige el explorador a la dirección URL especificada.  
  
 Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> método con el `redirectUrl` parámetro y con el `initiateSignoutCleanup` establecer `false`.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Al cierre de sesión en el STS mediante el protocolo WS-Federation, use la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> is not a valid URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">The URL to which the browser should be redirected after sign-out.</param>
        <param name="initiateSignoutCleanup">Always set <see langword="false" />. Setting this parameter to <see langword="true" /> is not supported.</param>
        <summary>Signs out of the current session and requests a redirect back to the specified URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual y redirige el explorador a la dirección URL especificada.  
  
 Se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método con el `initiateSignoutCleanup` conjunto de parámetros `false`.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Al cierre de sesión en el STS mediante el protocolo WS-Federation, use la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> is not a valid URI.</exception>
        <exception cref="T:System.NotImplementedException">The <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> class throws this exception if <paramref name="initiateSignoutCleanup" /> is <see langword="true" />. Do not set this parameter to <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised when an error occurs during sign-out.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena a través de una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> método desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método al firmar fuera de la sesión al usuario de confianza (RP). El evento no se desencadena cuando hacerlo federada cierre de sesión a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> evento es un evento cancelable. Puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad en un controlador de eventos para evitar la excepción que produjo el error que se devuelva al iniciador de la sesión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a query string that contains any additional parameters to be sent in WS-Federation sign-out requests ("wsignout1.0").</summary>
        <value>Un fragmento de dirección URL que contiene los parámetros de mensaje adicional en el siguiente formato: <c>parámetro1 = valor1&amp;parámetro2 = valor2&amp;paramN = valorN</c>. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, esta propiedad se inicializa desde la `signOutQueryString` atributo de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento en el archivo de configuración. Está diseñado para que contenga los parámetros específicos de la aplicación va a enviar en una solicitud de cierre de sesión de WS-Federation. Para quitar estos parámetros, puede establecer la propiedad en una cadena vacía.  
  
 El WSFAM no utiliza esta propiedad directamente; Sin embargo, puede pasar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> método para crear una URL de cierre de sesión de WS-Federation completa que puede usarse en el código.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">An attempt to set the property to <see langword="null" /> occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the wreply parameter to use during WS-Federation sign-out requests ("wsignout1.0").</summary>
        <value>La dirección URL a la que se debe redirigir el cliente con el servicio de token de seguridad (STS) después de cierre de sesión a través del protocolo WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, esta propiedad se inicializa desde la `signOutReply` atributo de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento en el archivo de configuración. Está diseñado para representar el parámetro wreply en una solicitud de cierre de sesión de WS-Federation.  
  
 El parámetro wreply es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreply no está incluida en la solicitud de cierre de sesión.  
  
 El WSFAM no utiliza esta propiedad directamente. Sin embargo, puede pasar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método cuando se realiza el cierre de sesión de WS-Federation desde el código o puede pasar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> método para crear una URL de cierre de sesión de WS-Federation completa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifies that the <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> and <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> properties are non-empty, and, that, if the <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> property is <see langword="true" />, that the URIs specified for <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> and <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> are HTTPS-compliant.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> is <see langword="null" /> or an empty string.  -or-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> is <see langword="null" /> or an empty string.  -or-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> is <see langword="true" /> and <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> not HTTPS-compliant.  -or-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> is <see langword="true" /> and <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> not HTTPS-compliant.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> object to use when deserializing WS-Federation sign-in response messages to get the token issued by the security token service (STS).</summary>
        <value>La <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> objeto que se va a usar al deserializar los mensajes de respuesta de inicio de sesión de WS-Federation para obtener el token emitido por el servicio de token de seguridad (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">An attempt to set the property to <see langword="null" /> occurs.</exception>
      </Docs>
    </Member>
  </Members>
</Type>