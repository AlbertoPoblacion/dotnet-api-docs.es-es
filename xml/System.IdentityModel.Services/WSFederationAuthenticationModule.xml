<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0905b13de01b677d6acc1b90aba8e7904efd4601" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59355584" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> es un módulo HTTP que se usa para proteger una aplicación de ASP.NET aplicando valores federados de autenticación en las solicitudes entrantes. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> es el módulo principal que WIF proporciona listo para usar para administrar el acceso de identidad basado en notificaciones en las aplicaciones de ASP.NET.  
  
<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> provoca varios eventos, lo que permite a los desarrolladores de ASP.NET cambiar el comportamiento predeterminado y controlar los detalles de cómo tienen lugar la autenticación y el procesamiento de notificaciones. La funcionalidad de <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> se divide en métodos específicos de la tarea.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> clase implementa un módulo HTTP que se conoce como el módulo de autenticación de WS-Federation (WSFAM). El WSFAM se implementa de fábrica mediante Windows Identity Foundation (WIF). El WSFAM se agrega a la canalización de ASP.NET mediante la realización de una entrada en el archivo web.config. Se deriva de <xref:System.IdentityModel.Services.HttpModuleBase>, que implementa <xref:System.Web.IHttpModule>. Registra con el tiempo de ejecución ASP.NET para escuchar el <xref:System.Web.HttpApplication.EndRequest> y <xref:System.Web.HttpApplication.AuthenticateRequest> eventos. Escuchar el <xref:System.Web.HttpApplication.EndRequest> eventos, permite que el WSFAM redirigir los clientes a un servicio de token de seguridad (STS) para obtener un token de seguridad cuando se produce un error de autorización en un recurso solicitado. Escuchar el <xref:System.Web.HttpApplication.AuthenticateRequest> evento permite el WSFAM supervisar las solicitudes HTTP para una respuesta del STS que contiene el token solicitado. Cuando un token de este tipo está presente y es válida, crea una instancia de <xref:System.Security.Claims.ClaimsPrincipal> para el usuario autenticado utilizando las notificaciones que se encuentran en el token.  
  
 Cuando se usa el WSFAM, administración de sesiones proporciona un módulo de autenticación de sesión (SAM), que es una instancia de la <xref:System.IdentityModel.Services.SessionAuthenticationModule> clase o una clase derivada de él. El SAM también se agrega a la canalización ASP.NET en el archivo de configuración. El SAM controla las solicitudes para las cookies de autenticación (sesión). Cuando estas cookies están presentes y son válidos, el módulo extrae la <xref:System.Security.Claims.ClaimsPrincipal> para el usuario autenticado desde el <xref:System.IdentityModel.Tokens.SessionSecurityToken> y establece el <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> propiedad y la entidad de seguridad del subproceso <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propiedades.  
  
 El WSFAM proporciona:  
  
-   La capacidad de una aplicación ASP.NET para externalizar la autenticación a un servicio de token de seguridad (STS) mediante el protocolo WS-Federation. Identidad se puede federar en uno o varios dominios de identidad e implican varios STS.  
  
-   Identidad basada en notificaciones para aplicaciones ASP.NET. Durante la autenticación, el WSFAM genera una entidad de seguridad de las notificaciones del token de seguridad enviado por el STS y establece esta entidad de seguridad de notificaciones como la entidad de seguridad del subproceso. A continuación, puede usar esta entidad de seguridad para realizar más autorización, presentación y lógica decisiones sobre el usuario que representa en el código.  
  
 El WSFAM expone varias propiedades que proporcionan predeterminados de parámetros de mensaje que se usarán en las solicitudes de inicio de sesión y cierre de sesión de WS-Federation. Estas propiedades se inicializan normalmente desde el [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento en un archivo de configuración. Estas propiedades más importantes son:  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad, que especifica la dirección del servicio de token de seguridad (STS) que se va a enviar las solicitudes de inicio de sesión y cierre de sesión de WS-Federation.  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> propiedad, que especifica el parámetro wtrealm que se usa en las solicitudes de inicio de sesión de WS-Federation. El parámetro wtrealm identifica el dominio Kerberos de seguridad de la aplicación de confianza (RP) de usuario de confianza al STS.  
  
 Parámetros de inicio de sesión de mensajes también se pueden cambiar por solicitud proporcionando un delegado del controlador de eventos para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos.  
  
 Dos propiedades controlan el comportamiento del módulo. Ambas propiedades se inicializan normalmente también desde el `<wsFederation>` elemento de configuración.  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad especifica si el módulo debe realizar redirecciones pasivas al STS para la autenticación.  
  
-   El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> propiedad especifica si las sesiones deben ser persistentes. Si esta propiedad se establece en true, se usa el SAM para escribir una cookie de sesión en el cliente. En solicitudes posteriores desde el cliente, SAM proporciona autenticación mediante el token que se conserva en la cookie de sesión.  
  
 El WSFAM genera varios eventos durante el inicio de sesión y cierre de sesión, que permiten a los desarrolladores ASP.NET cambiar el comportamiento predeterminado del módulo y controlar los detalles de cómo la autenticación y notificaciones de procesamiento tienen lugar.  
  
 Antes de enviar la solicitud de inicio de sesión de WS-Federation al STS, se generan los eventos siguientes:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Se genera cuando se habilita la redirección pasiva y se produce un error de autorización en un recurso solicitado.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Se genera justo antes el WSFAM envía la solicitud de inicio de sesión de WS-Federation al STS. Puede usar este evento para cambiar los parámetros en la solicitud de inicio de sesión.  
  
 Los siguientes eventos se generan cuando se recibe una respuesta de inicio de sesión (emitida el token de seguridad) del STS:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Se genera después de que se lee el token de seguridad enviado por el STS de la respuesta.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Se genera después de que se ha validado el token. Puede usar este evento para filtrar, transformar o agregar notificaciones a la entidad de seguridad de notificaciones (<xref:System.Security.Claims.ClaimsPrincipal>) creado a partir del token de seguridad.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Se genera justo antes que el token de sesión (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) creado a partir de la entidad de seguridad se usa para establecer el subproceso principal de notificaciones y el usuario actual y se escribe en la cookie de sesión. Proporciona una oportunidad para modificar el token de sesión o habilitar o deshabilitar la escritura de la cookie de sesión.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Se genera al final de la autenticación justo después de que el usuario del subproceso actual y entidad de seguridad se han establecido.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Se genera si se produce una excepción durante el inicio de sesión. Puede cancelar la solicitud y evitar que la excepción que se va a devolver al llamador.  
  
 Al iniciar sesión fuera de una sesión o cuando se procesa una solicitud de limpieza de cierre de sesión WS-Federation (wsignoutcleanup1.0), se generan los siguientes eventos:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Se genera justo antes de elimina la sesión para poder realizar cualquier limpieza que puede depender de la sesión o cancelar el cierre de sesión.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Se genera después de la sesión se ha eliminado.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Se genera si se produce una excepción durante el cierre de sesión. Puede cancelar el cierre de sesión y evitar que la excepción que se va a devolver al llamador.  
  
> [!NOTE]
>  No se generan los eventos de cierre de sesión cuando el cierre de sesión en el STS mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 Hay dos maneras de iniciar sesión en un STS con WSFAM. La primera es habilitando las redirecciones pasivas a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad. En este caso, cuando autorización se produce un error en un recurso solicitado, en lugar de devolver un `401:Access Denied` respuesta al cliente, WSFAM genera un mensaje de solicitud de inicio de sesión de WS-Federation de sus propiedades y redirige el cliente al STS para recuperar un token de seguridad. La segunda manera es redirigir explícitamente el cliente al STS mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método desde una página web o un control personalizado en la aplicación. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método también utiliza las propiedades de WSFAM para construir la solicitud de inicio de sesión.  
  
 Cualquiera de los métodos <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> métodos pueden utilizarse para cerrar la sesión de la sesión. Esto elimina la cookie de sesión en el cliente. No se envía un mensaje de cierre de sesión de WS-Federation ("wsignout1.0") al STS. Para cerrar la sesión en el STS, debe usar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 El WSFAM controla las solicitudes de limpieza cierre de sesión de WS-Federation ("wsignoutcleanup1.0"), mediante la eliminación de su sesión con el cliente. Si no se establece el parámetro wreply en el mensaje de limpieza de cierre de sesión, el WSFAM devuelve una imagen de marca de verificación verde en el STS que envió el mensaje. Esta característica puede utilizarse por un STS como una confirmación de que el RP ha completado el cierre de sesión.  
  
 El WSFAM expone su funcionalidad, por ejemplo, su canalización de procesamiento de solicitud--a través de varios métodos específicos de la tarea. Puede invalidar estos métodos en clases derivadas para modificar el comportamiento de WSFAM.  
  
 Para utilizarlo, el módulo debe agregarse a la canalización como se muestra en el siguiente código XML:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Una vez configurado, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> genera eventos en distintas fases de procesamiento de una solicitud HTTP. Los desarrolladores de ASP.NET pueden controlar estos eventos en el archivo global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Se le llama desde los constructores en las clases derivadas para inicializar la clase <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wauth que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>URI que especifica el tipo de autenticación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wauth es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wauth no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el módulo determina si debe redirigir el usuario al emisor configurado para autenticar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> evento se desencadena cuando se produce un error de autorización para una solicitud HTTP. Se genera desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegado de controlador de eventos mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> método.  
  
 Puede establecer el <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> propiedad para controlar si se redirige la solicitud al proveedor de identidades. El marco de trabajo inicializa esta propiedad a `false` si ya se ha autenticado el usuario. En este caso, establecer la propiedad en `true` puede producir un bucle circular con el STS.  
  
> [!NOTE]
>  El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento puede utilizarse para modificar la dirección URL o cancelar la redirección.  
  
 Para controlar este evento en una aplicación ASP.NET, cree un método denominado `WSFederationAuthentication_AuthorizationFailed` en el archivo global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve un valor que indica si la solicitud HTTP especificada es un mensaje de respuesta de inicio de sesión en WS-Federation. Si el mensaje es un mensaje de limpieza de cierre de sesión de WS-Federation ("wsignoutcleanup1.0"), este método procesa la solicitud.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se envía un mensaje de respuesta de inicio de sesión al usuario de confianza (RP) por un servicio de token de seguridad (STS) en respuesta a un mensaje de solicitud de inicio de sesión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Solicitud HTTP de entrada.</param>
        <summary>Devuelve un valor que indica si la solicitud HTTP especificada es un mensaje de respuesta de inicio de sesión en WS-Federation. Si el mensaje es un mensaje de limpieza de cierre de sesión de WS-Federation ("wsignoutcleanup1.0"), este método procesa la solicitud.</summary>
        <returns>Es <see langword="true" /> si la solicitud HTTP especificada contiene un envío de formulario (POST) en el que el parámetro wa se ha establecido en "wsignout1.0" y el parámetro wresult no está vacío; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se invoca desde la canalización de procesamiento de solicitudes para determinar si la solicitud HTTP entrante es un envío de formulario que contiene un mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> sobrecarga con el `onPage` conjunto de parámetros `false` para indicar que no se originó la llamada al procesar una página.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Solicitud HTTP de entrada.</param>
        <param name="onPage"><see langword="true" /> si la llamada se origina mientras se procesa una solicitud de página. <see langword="false" /> si el llamador es un módulo HTTP. Este parámetro determina cómo finalizar el procesamiento o enviar redirecciones si el mensaje entrante es un mensaje de limpieza de cierre de sesión de WS-Federation ("wsignoutcleanup1.0").</param>
        <summary>Devuelve un valor que indica si la solicitud HTTP especificada es un mensaje de respuesta de inicio de sesión en WS-Federation. Si el mensaje es un mensaje de limpieza de cierre de sesión de WS-Federation ("wsignoutcleanup1.0"), este método procesa la solicitud.</summary>
        <returns>Es <see langword="true" /> si la solicitud HTTP especificada contiene un envío de formulario (FORM) en el que el parámetro wa se estableció en "wsignout1.0" y el parámetro wresult no está vacío; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se invoca desde la canalización de procesamiento de la solicitud a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> sobrecarga para determinar si la solicitud HTTP entrante es un formulario POST que contiene un mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 La implementación predeterminada realiza lo siguiente:  
  
-   Si la solicitud entrante no es un formulario POST, llama a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> método para determinar si el formulario POST contiene una respuesta de inicio de sesión.  
  
-   Si la solicitud entrante no es un formulario POST, y la solicitud contiene una solicitud de limpieza de cierre de sesión WS-Federation (el parámetro wa es "wsignoutcleanup1.0"), se realiza la limpieza de cierre de sesión. En este caso, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> se invoca el método (con el parámetro establecido en `true` para indicar una limpieza cierre de sesión) para cerrar la sesión de la sesión. Esto también hace que los eventos de cierre de sesión que se genere.  
  
     A continuación, si la solicitud de limpieza de cierre de sesión contiene un parámetro wreply, el cliente se redirige a la dirección URL devuelta por la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> método; en caso contrario, se devuelve una imagen de marca de verificación verde en el STS. La recepción de esta imagen puede usarse por el STS como una confirmación de que la solicitud de limpieza de cierre de sesión se ha recibido y procesado correctamente por el RP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">El WSFAM guarda este valor en el parámetro wctx de la solicitud de inicio de sesión de WS-Federation; sin embargo, el módulo no lo usa al procesar solicitudes o respuestas de inicio de sesión. Puede establecerse en cualquier valor. No tiene que ser único.</param>
        <param name="returnUrl">Dirección URL a la que el módulo debe volver después de la autenticación.</param>
        <param name="rememberMeSet">El WSFAM guarda este valor en el parámetro wctx de la solicitud de inicio de sesión de WS-Federation; sin embargo, el módulo no lo usa al procesar solicitudes o respuestas de inicio de sesión. Puede establecerlo en <see langword="true" /> o <see langword="false" />.</param>
        <summary>Crea una solicitud de inicio de sesión de WS-Federation en el mensaje de solicitud usando los parámetros de WS-Federation configurados en el módulo.</summary>
        <returns>Mensaje de solicitud de inicio de sesión de WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea una solicitud de inicio de sesión de WS-Federation que se representa mediante un <xref:System.IdentityModel.Services.SignInRequestMessage> objeto. Las propiedades del nuevo <xref:System.IdentityModel.Services.SignInRequestMessage> objeto se establecen como sigue:  
  
-   El <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> (el parámetro wctx) de la propiedad está establecida en un valor creado mediante el uso de los parámetros del método.  
  
-   El <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> (el parámetro wct) de la propiedad está establecida en la hora actual.  
  
-   Todas las demás propiedades se establecen mediante el uso de las propiedades equivalentes de la instancia actual.  
  
 Los parámetros pasados al método se usan para crear el parámetro wctx del mensaje. Se trata de una cadena con el siguiente formato: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   El `ru` valor se establece en el valor de la `returnUrl` parámetro pasa al método y especifica la dirección URL que el módulo debe dirigir el explorador al siguiente una autenticación correcta. Este es el único valor que se almacena en la cadena de wctx que se usa el wsfam. Las llamadas de módulo el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> método para extraer este valor del parámetro wctx al procesar una respuesta de inicio de sesión de WS-Federation. No debe confundirse con el parámetro de mensaje wreply, que se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propiedad y que proporciona la dirección en el RP a la que el servicio de token de seguridad (STS) debe dirigir su respuesta.  
  
-   El `cx` parámetro se establece en el valor de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> propiedad. Esta propiedad se expone para que pueda establecer en cualquier contexto definido por la aplicación que se debe almacenar en la cadena wctx; Sin embargo, WSFAM no expone un método para extraer este valor en la respuesta. Si el valor se necesita la aplicación, debe proporcionar el código para analizar la cadena wctx y lee este valor al procesar la respuesta. Puede lograr esto reemplazando el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> método.  
  
-   Ni el `rm` valor, que se establece en el valor de la `rememberMeSet` parámetro, ni la `id` parámetro, que se establece en el valor de la `uniqueId` WSFAM se utiliza el parámetro. Estos se pueden establecer en cualquier valor.  
  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> se llama al método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> es <see langword="null" /> o una cadena vacía.  
  
O bien 
La propiedad <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> es <see langword="null" /> o una cadena vacía.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">La dirección URL del STS para recibir el mensaje de solicitud de cierre de sesión de WS-Federation. El valor no puede ser <see langword="null" />.</param>
        <param name="replyUrl">La dirección URL que se enviará como valor wreply en el mensaje de solicitud de cierre de sesión.</param>
        <summary>Cierra sesión en el servicio de token de seguridad (STS) especificado mediante el protocolo WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llame a este método para enviar un mensaje de solicitud de cierre de sesión de WS-Federation al STS especificado. Opcionalmente, puede proporcionar un valor para el parámetro wreply en la solicitud de cierre de sesión.  
  
 El método hace lo siguiente:  
  
1.  Crea un mensaje de solicitud de cierre de sesión de WS-Federation usando los parámetros especificados.  
  
2.  Las llamadas del <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> método en la base de datos SAM elimina la cookie de sesión.  
  
3.  Redirige a la STS con el mensaje de solicitud de cierre de sesión desde el primer paso.  
  
 Ninguno de los eventos de cierre de sesión: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, o <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> generados por este método. Para eliminar la sesión sin necesidad de enviar un mensaje de solicitud de cierre de sesión al STS, llame a uno de los métodos <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> métodos.  
  
> [!NOTE]
>  Para realizar el cierre de sesión pasivo mediante el token de sesión, el módulo se basa en un valor que se almacenó en el <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> propiedad durante el inicio de sesión único, para obtener más información, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutUrl" /> no es <see langword="null" /> y no es un URI absoluto.  
  
O bien 
 <paramref name="replyUrl" /> no es <see langword="null" /> y no es un URI absoluto.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="signOutUrl" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wfresh que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Edad máxima deseada de las solicitudes de autenticación, en minutos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wfresh es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wfresh no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Dirección del emisor. La dirección del servicio de token de seguridad (STS) al que dirigir la solicitud.</param>
        <param name="signOutReply">Una dirección URL que especifica la dirección a la que volver después de cerrar sesión. Esto configura el parámetro wreply en la solicitud de cierre de sesión. Puede ser <see langword="null" /> o vacía si no se incluye ningún parámetro wreply en la solicitud generada de cierre de sesión. Debe ser un URI absoluto.</param>
        <param name="signOutQueryString">Parámetros adicionales de la cadena de consulta que se van a incluir en la solicitud de cierre de sesión. Puede ser <see langword="null" /> o vacío si no se incluyen parámetros adicionales en la solicitud generada del cierre de sesión. Debería ser un URI relativo.</param>
        <summary>Devuelve una dirección URL que representa una solicitud de cierre de sesión de WS-Federation dirigida al emisor especificado y que contiene el parámetro wreply indicado y los parámetros adicionales especificados.</summary>
        <returns>Una dirección URL que contiene una solicitud pasiva de inicio de sesión WS-Federation compilada utilizando los parámetros especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la dirección URL que se devuelve: la base de URI se establece en `issuer`; el parámetro wa se estableció en "wsignout1.0"; se establece el parámetro wreply en `signOutReply`; y los parámetros especificados en `signOutQueryString` están presentes como parámetros de cadena de consulta adicionales.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">La dirección URL que especifica la dirección del resultado de emisión.</param>
        <summary>Obtiene el resultado de emisión (normalmente el token emitido) de la dirección URL especificada. Resuelve la dirección URL especificada en el parámetro wresultptr en un mensaje de respuesta de inicio de sesión.</summary>
        <returns>Resultado de emisión al que hizo referencia la dirección URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo llama el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> método desde dentro de la canalización de procesamiento para resolver la dirección URL especificada en el parámetro wresultptr en el mensaje de respuesta de inicio de sesión recibido desde un servicio de token de seguridad (STS).  
  
 De forma predeterminada, este método produce una <xref:System.NotSupportedException>. Invalide este método en una clase derivada para admitir el parámetro wresultptr. La dirección URL señala al resultado de emisión, que debe ser uno de los siguientes: un `<wst:RequestSecurityTokenResponse>` elemento, un `<wst:RequestSecurityTokenResponseCollection>` elemento, una respuesta SOAP o SOAP `<S:Fault>` elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Este método no se admite en la clase base. Debe reemplazarlo en una clase derivada.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">La solicitud HTTP que contiene un envío de formulario (POST), que contiene el mensaje de respuesta de inicio de sesión de WS-Federation.</param>
        <summary>Extrae la dirección URL de la página solicitada originalmente de la respuesta de inicio de sesión.</summary>
        <returns>La dirección URL de la página solicitada originalmente por el cliente. Es la dirección URL (en el usuario de confianza) a la que el cliente debe ser redirigido después de que inicie sesión correctamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama desde la canalización de procesamiento de solicitud (el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> método) para obtener la dirección URL de la página en el usuario de confianza (RP) para dirigir el cliente después de inicio de sesión correcto. Esto es, por lo general, la dirección URL del recurso RP a la que el cliente solicitó originalmente acceso.  
  
 De forma predeterminada, WSFAM guarda la dirección URL de retorno en el parámetro wctx del mensaje cuando envía la solicitud de inicio de sesión de WS-Federation para el servicio de token de seguridad (STS). Según la especificación WS-Federation, el parámetro wctx se conserva entre las entidades a través del cual pasa el mensaje y se devuelve sin modificaciones en el mensaje de respuesta de inicio de sesión de WS-Federation que se envía por el STS.  
  
 La implementación predeterminada Obtiene la dirección URL devuelta desde el parámetro wctx en la respuesta de inicio de sesión. Para obtener más información sobre el formato del parámetro wctx que usa WSFAM, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lee un token de seguridad en la solicitud especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje de respuesta de inicio de sesión del que se va a leer el token.</param>
        <summary>Lee un token de seguridad del mensaje de respuesta de inicio de sesión de WS-Federation especificado.</summary>
        <returns>El token de seguridad leído del mensaje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada invoca la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> método para obtener el token y lee mediante el controlador adecuado de los controladores de token de seguridad configuradas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Solicitud HTTP desde el que se debe leer el token.</param>
        <summary>Lee un token de seguridad en la solicitud HTTP especificada.</summary>
        <returns>El token de seguridad que se ha leído.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde la canalización de procesamiento de solicitud para obtener el mensaje de solicitud de inicio de sesión de WS-Federation como un <xref:System.IdentityModel.Tokens.SecurityToken> objeto.  
  
 La implementación predeterminada invoca la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> método para obtener un <xref:System.IdentityModel.Services.SignInResponseMessage> de objetos y, a continuación, invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> sobrecargar.  
  
 Utilice una clase derivada para interpretar un tipo específico de la solicitud.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una cadena que se debe conservar con la cookie de sesión en la propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />.</summary>
        <returns>La cadena para conservar en la cookie de sesión.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> método se llama desde la canalización de procesamiento de solicitudes al procesar un mensaje de respuesta de inicio de sesión de WS-Federation para obtener el valor que se almacenará en el <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> propiedad dentro de la cookie de sesión.  
  
 Puede invalidar este método para proporcionar un valor específico de la aplicación que se almacenará en la cookie. WSFAM no expone ningún método para recuperar el valor de la cookie. Debe proporcionar la lógica de la aplicación para leer el valor de la cookie si es necesario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> es <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Solicitud HTTP de la que se va a leer el mensaje de respuesta de inicio de sesión. La solicitud debe representar un envío de formulario (POST).</param>
        <summary>Lee un objeto <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> del formulario POST representado por la solicitud HTTP especificada.</summary>
        <returns>Mensaje de respuesta de inicio de sesión creado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> método en la canalización de procesamiento de solicitud para recibir un mensaje de respuesta de inicio de sesión del formulario POST contenida en la solicitud HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Un mensaje de respuesta de inicio de sesión no pudo leer de la solicitud especificada.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">La solicitud de limpieza de cierre de sesión.</param>
        <summary>Determina la dirección URL a la que se debe redirigir cuando se procesa una solicitud de limpieza de cierre de sesión de la WS-Federation (wsignoutcleanup1.0) que contiene un parámetro wreply.</summary>
        <returns>Dirección URL a la que se va a redirigir.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> método en la canalización de procesamiento de solicitudes para determinar la dirección URL para redirigir a después de procesar una solicitud de limpieza de cierre de sesión de WS-Federation. Solo se invoca si el mensaje tiene un parámetro wreply (el `signOutMessage` parámetro tiene un <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> propiedad que no es ni `null` ni está vacío).  
  
 La implementación predeterminada valida la dirección URL de respuesta contenida en el mensaje (el <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> propiedad) en la dirección de que el servicio de token de seguridad (STS) especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad. Las siguientes condiciones deben cumplirse para la dirección URL de respuesta sea válido:  
  
1.  La dirección URL de respuesta es una dirección URL absoluta.  
  
2.  La dirección URL de respuesta tiene el mismo esquema que el emisor.  
  
3.  La dirección URL de respuesta tiene el mismo puerto que el emisor.  
  
4.  La dirección URL de respuesta tiene el mismo host que el emisor o la dirección URL de respuesta especifica un subdominio del emisor.  
  
 Si todas estas condiciones son true, que se devuelve la dirección URL de respuesta (respuesta); en caso contrario, la dirección URL especificada por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> se devuelve la propiedad.  
  
 Invalide este método para proporcionar validación adicional para la dirección URL de respuesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutMessage" /> tiene una propiedad <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> que es <see langword="null" /> o está vacía.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="signOutMessage" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrae el token emitido del mensaje de respuesta de inicio de sesión de WS-Federation especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje de respuesta de inicio de sesión del que se va a extraer el token. La respuesta de inicio de sesión contiene el token emitido por el STS.</param>
        <summary>Extrae el token emitido del mensaje de respuesta de inicio de sesión de WS-Federation especificado.</summary>
        <returns>Cadena que contiene el XML que representa el token emitido. Se trata de un elemento <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no hay ningún parámetro wresult del mensaje de respuesta de inicio de sesión, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> método se llama para intentar obtener el token mediante el parámetro wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="message" /> no contiene un token. (No contiene un parámetro de wresult o wresultptr válido).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje de respuesta de inicio de sesión del que se va a extraer el token. La respuesta de inicio de sesión contiene el token emitido por el STS.</param>
        <param name="federationSerializer">El serializador de WS-Federation que se usará para deserializar el mensaje de respuesta de inicio de sesión.</param>
        <summary>Extrae el token emitido del mensaje de respuesta de inicio de sesión de WS-Federation usando el serializador especificado de la WS-Federation.</summary>
        <returns>Cadena que contiene el XML que representa el token emitido. Se trata de un elemento <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro whr que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Dirección del proveedor de identidades.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro whr es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro whr no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Objeto de aplicación HTTP que contiene este módulo.</param>
        <summary>Inicializa el módulo y se prepara para controlar eventos de su objeto de aplicación de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] del módulo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Agrega controladores de eventos de la canalización ASP.NET según la tabla siguiente.  
  
|evento|controlador|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Las propiedades del módulo, como <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , se inicializan desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa las propiedades del módulo basadas en la configuración especificada por la propiedad <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> del módulo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Propiedades del módulo se inicializan mediante las propiedades equivalentes de la <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> objeto especificado por el <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> propiedad.  
  
 Puede especificar la configuración en un archivo de configuración a través de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Solicitud HTTP de entrada.</param>
        <summary>Obtiene un valor que indica si la solicitud especificada es un mensaje de respuesta de inicio de sesión en WS-Federation.</summary>
        <returns><see langword="true" /> si la solicitud es un mensaje de respuesta de inicio de sesión de WS-Federation; si no <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> método en la canalización de procesamiento de solicitudes para determinar si la solicitud HTTP entrante es un mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 La implementación predeterminada devuelve `true` si el parámetro wa es "wsignin1.0" y el wreq y wreqptr parámetros se establecen no ambos.  
  
 Puede invalidar este método en clases derivadas para realizar una validación adicional.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un URI que identifica el emisor previsto del token de seguridad.</summary>
        <value>El URI que identifica el servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es una propiedad necesaria. Se debe establecer si las redirecciones pasivas están habilitadas. Especifica la dirección URL del servicio de token de seguridad (STS) al que se deben emitir las solicitudes de WS-Federation.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Se ha intentado establecer la propiedad <see langword="null" /> en una cadena vacía.  
  
O bien 
Se intenta establecer la propiedad en un valor que no es un URI absoluto válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origen del evento. Este debe ser un objeto <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Datos del evento.</param>
        <summary>Controla el evento <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> de canalización de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> método implementa la canalización de procesamiento de solicitudes de WS-Federation. Se agrega a la <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> eventos en el [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] de canalización por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> método.  
  
 El método realiza lo siguiente:  
  
1.  Las llamadas del <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> método para determinar si se ha recibido un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0"). Si la respuesta es una solicitud de limpieza de cierre de sesión WS-Federation ("wsignoutcleanup1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> procesa el mensaje, finaliza la solicitud y redirige al cliente según los parámetros de WS-Federation en la solicitud. Si el mensaje no es una respuesta de inicio de sesión o una solicitud de limpieza de cierre de sesión, simplemente devuelve el módulo; en caso contrario, realiza los pasos siguientes para procesar la respuesta de inicio de sesión.  
  
2.  Las llamadas del <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> método para deserializar un <xref:System.IdentityModel.Tokens.SecurityToken> objeto de la solicitud.  
  
3.  Genera el evento <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>. Puede cancelar todo procesamiento subsiguiente o modificar el token de seguridad recibido en un controlador para este evento. Un controlador se utiliza normalmente para modificar el <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> o <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> propiedades.  
  
4.  Valida el token de seguridad y crea un <xref:System.Security.Claims.ClaimsPrincipal> objeto desde las notificaciones del token de seguridad.  
  
5.  Genera el evento <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>. Puede cancelar todo procesamiento subsiguiente o modificar la entidad de seguridad de notificaciones en un controlador para este evento.  
  
6.  Usa el módulo de autenticación configurado sesión (SAM) para crear un <xref:System.IdentityModel.Tokens.SessionSecurityToken> objeto. (El SAM configurado es el <xref:System.IdentityModel.Services.SessionAuthenticationModule> objeto devuelto por la <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> propiedad.) El token de sesión se crea mediante el uso de la entidad de seguridad de notificaciones devuelta en el paso 5. El <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> y <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> propiedades se establecen mediante el uso de la <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> y <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> propiedades de la <xref:System.IdentityModel.Tokens.SecurityToken> devuelta en el paso 3 y se valida con respecto a la hora actual y la duración del token especificado por cualquier el<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>o <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propiedad de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> objeto en la colección de controladores de token, WSFAM usa. Se puede especificar la duración del token en el controlador de token de sesión en la configuración a través de la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento. Nota: El <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> propiedad en el controlador de cookies configurado para el SAM no se utiliza.  
  
7.  Las llamadas del <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> método con el token de sesión para escribir la cookie de sesión. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> primer método que provoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> eventos. Puede cambiar las propiedades en el token de sesión o cambiar si la cookie debe conservarse en un controlador para este evento. Después de que se genera el evento, el método, a continuación, escribe la cookie mediante el SAM.  
  
    > [!NOTE]
    >  El <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> conjunto de configuración no se utiliza para escribir la cookie.  
  
8.  Las llamadas del <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> eventos.  
  
9. Las llamadas del <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> método para obtener la página RP que se va a redirigir al cliente. De forma predeterminada, este método lee la dirección URL de retorno de la respuesta de inicio de sesión en el parámetro wctx. Para obtener más información acerca de cómo WSFAM almacena la dirección URL de retorno, vea el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegado de controlador de eventos cuando se produce un error de autorización.  
  
 Inicializa el <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> propiedad antes de generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> eventos para evitar que las redirecciones circulares si ya se ha autenticado el usuario. Si el usuario ya está autenticado, la propiedad se inicializa en `false` evitar que redirige; en caso contrario, se inicializa en `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origen del evento. Este debe ser un objeto <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Datos del evento.</param>
        <summary>Controla el evento <see cref="E:System.Web.HttpApplication.EndRequest" /> de canalización de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El evento se omite a menos que el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad es `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origen del evento. Este debe ser un objeto <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="e">Datos del evento.</param>
        <summary>Controla el evento <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> de canalización de [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se trata de un controlador vacío.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método justo después de la sesión se elimina.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método justo antes de elimina la sesión.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método si se produce una excepción durante el procesamiento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el módulo está habilitado para iniciar redirecciones de protocolo de federación de WS.</summary>
        <value><see langword="true" /> para habilitar las redirecciones; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El módulo no iniciará redirecciones de protocolo de WS-Federation cuando este modo no está habilitado. Si esta propiedad es `true`, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad debe establecerse en la dirección URL de la Security Token Service (STS) al que se debe redirigir el llamador.  
  
> [!WARNING]
>  Código de la aplicación puede emitir las solicitudes de inicio de sesión de WS-Federation explícitamente mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método, independientemente del valor de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si una cookie de sesión persistente se emite en la autenticación correcta.</summary>
        <value><see langword="true" /> para emitir una cookie de sesión persistente; si no, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> eventos. Este evento se genera desde la solicitud de canalización de procesamiento al procesar un mensaje de respuesta de inicio de sesión de WS-Federation de un servicio de token de seguridad (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wp que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Una dirección URL que identifica la directiva que utilizar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wp es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wp no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wtrealm que se usa para las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>UN URI que identifica el usuario de confianza (RP) ante el servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de una propiedad obligatoria para las solicitudes de inicio de sesión de WS-Federation. Se debe establecer si las redirecciones pasivas están habilitadas. El URI identifica el RP al STS. (Para identificar el STS al RP, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad).  
  
 El valor de esta propiedad se serializa como el parámetro de cadena de consulta wtrealm de protocolo WS-Federation. Identifica el RP al STS. Es utilizado por el STS para decidir qué directiva se aplique para que la emisión de tokens y dónde redirigir al usuario después de la emisión de tokens. (Para identificar el STS al RP, consulte <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Se ha intentado establecer la propiedad <see langword="null" /> en una cadena vacía.  
  
O bien 
Se intenta establecer la propiedad en un valor que no es un URI absoluto válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el módulo va a redirigir el usuario al proveedor de identidad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede acceder y modificar la solicitud de inicio de sesión de WS-Federation a través de la <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> propiedad. Por ejemplo, puede modificar el <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> propiedad en el mensaje de inicio de sesión para cambiar el proveedor de identidades a la que se redirigirá la solicitud. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> evento es un evento cancelable y puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` para cancelar la redirección.  
  
 El evento se genera desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> método.  
  
 Para controlar este evento en una aplicación ASP.NET, cree un método llamado `WSFederationAuthentication_RedirectingToIdentityProvider` en el archivo global.asax.  
  
   
  
## Examples  
 El código siguiente muestra cómo agregar un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos en el `Application_Init` eventos en el archivo global.asax. El código se toma de la `FederationForWebApps` ejemplo. Para obtener más información acerca de este ejemplo, vea [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 El código siguiente muestra el controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos en el en el archivo global.asax de RP. El código comprueba si la solicitud HTTP entrante contiene un parámetro whr y, si es así, establece este parámetro en la solicitud de inicio de sesión de WS-Federation que se enviará al STS. El código se toma de la `FederationForWebApps` ejemplo. Para obtener más información acerca de este ejemplo, vea [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 El código siguiente muestra el controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos en el en el archivo global.asax de un STS del proveedor de federación. El código comprueba si la solicitud HTTP entrante contiene un parámetro whr. Si la solicitud contiene el parámetro whr, el cliente se dirige a la IP-STS para inicio de sesión; Si no es así, el cliente se dirige a una página de detección del dominio de inicio para seleccionar al STS de IP en el que se va a iniciar sesión. El código se toma de la `FederationForWebApps` ejemplo. Para obtener más información acerca de este ejemplo, vea [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">El WSFAM guarda este valor en el parámetro wctx de la solicitud de inicio de sesión de WS-Federation; sin embargo, el módulo no lo usa al procesar solicitudes o respuestas de inicio de sesión. Puede establecerse en cualquier valor. No tiene que ser único. Para obtener más información, vea el método <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <param name="returnUrl">Dirección URL a la que el módulo debe volver después de la autenticación.</param>
        <param name="persist">El WSFAM guarda este valor en el parámetro wctx de la solicitud de inicio de sesión de WS-Federation; sin embargo, el módulo no lo usa al procesar solicitudes o respuestas de inicio de sesión. Puede establecerlo en <see langword="true" /> o <see langword="false" />.</param>
        <summary>Redirige al usuario al servicio de token de seguridad (STS) especificado por la propiedad <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> para obtener un token de seguridad con el protocolo WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> se llama al método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método cuando se emite la solicitud desde una página web que se presentan por el usuario de confianza (RP) o desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegado de controlador de eventos para realizar una redirección pasiva al proveedor de identidades en Error de autorización.  
  
 Los parámetros pasados al método se usan para crear el parámetro wctx del mensaje. El parámetro solo significativo es el `returnUrl` parámetro. Especifica la dirección URL que el RP debe dirigir el explorador al siguiente una autenticación correcta. No debe confundirse con el parámetro de mensaje wreply, que se especifica mediante el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propiedad y que proporciona la dirección en el RP a la que el servicio de token de seguridad (STS) debe dirigir su respuesta.  
  
 El método realiza lo siguiente:  
  
1.  Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> método para asegurarse de que se puede emitir una solicitud de inicio de sesión válida por el módulo.  
  
2.  Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método para crear la solicitud de inicio de sesión de las propiedades configuradas en el módulo.  
  
3.  Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Puede cancelar el redireccionamiento o modificar el mensaje de solicitud de inicio de sesión en el controlador de eventos para este evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> es <see langword="null" /> o una cadena vacía.  
  
O bien 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> es <see langword="null" /> o una cadena vacía.  
  
O bien 
La propiedad <see cref="P:System.Web.HttpContext.Current" /> es <see langword="null" /> o está vacía.  
  
O bien 
La propiedad <see cref="P:System.Web.HttpContext.Response" /> del contexto devuelto por <see cref="P:System.Web.HttpContext.Current" /> es <see langword="null" /> o está vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wreply que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Una dirección URL que identifica la dirección en la que la aplicación de usuario de confianza (RP) desea recibir las respuestas del Servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wreply es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreply no se incluye en la solicitud de inicio de sesión.  
  
 El parámetro wreply se utiliza el STS para decidir dónde redirigir al usuario después de la emisión de tokens. No es aconsejable para el STS usar esta dirección para redirigir al usuario, ya que este tipo de redirección tiene vulnerabilidades de seguridad. La dirección de respuesta debe validarse por el STS (posiblemente por en comparación a un conjunto de direcciones de respuesta preconfigurada para los fines o algún otro método) para asegurarse de que la respuesta se envía a entender ubicación muy conocida y segura.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Se intenta establecer la propiedad en un valor que no es un URI absoluto válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wreq que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Solicitud de emisión de token expresada como un elemento <see langword="&lt;wst:RequestSecurityToken&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wreq es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreq no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wreqptr que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Una dirección URL que especifica la ubicación de la solicitud de emisión de tokens expresada como elemento de <see langword="&lt;wst:RequestSecurityToken&gt;" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wreqptr es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreq no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Se intenta establecer la propiedad en un valor que no es un URI absoluto válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si la comunicación con el servicio de tokens de seguridad (STS) debe utilizar el protocolo HTTPS.</summary>
        <value><see langword="true" /> si la comunicación con el STS debe protegerse mediante HTTPS; si no, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wres que se usa en las solicitudes de inicio de sesión de WS-Federation ("wsignin1.0").</summary>
        <value>Un URI que identifica el recurso al que se obtiene acceso, el usuario de confianza (RP), al servicio de token de seguridad (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro wtrealm, que se establece mediante la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> propiedad, se debe usar en lugar de este parámetro.  
  
 El parámetro wres es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wres no se incluye en la solicitud de inicio de sesión.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se ha recibido un token de seguridad procedente de un servicio de token de seguridad (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar un controlador de eventos para modificar el token antes de se valida. En el evento controlador puede acceder al token de seguridad a través de la <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> propiedad. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> evento es un evento cancelable, puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` en un controlador de eventos para finalizar el procesamiento del mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 Este evento se genera desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos al procesar un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0") recibido desde el servicio de token de seguridad (STS). Se produce justo después de un token de seguridad se ha deserializado desde el parámetro wresult o el parámetro wresultptr del mensaje de respuesta de inicio de sesión, pero antes de que se valida el token de seguridad.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce después de que un token de seguridad recibido del servicio de token de seguridad (STS) se haya validado pero antes de la creación del token de seguridad de la sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar un controlador de eventos para modificar la entidad de seguridad que se crearon al procesar un mensaje de respuesta de inicio de sesión de WS-Federation de un servicio de token de seguridad (STS) antes de se usa para crear el token de sesión. En el evento de controlador, puede tener acceso a la entidad de seguridad a través de la <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> propiedad. El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> evento es un evento cancelable, puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true` en un controlador de eventos para finalizar el procesamiento del mensaje de respuesta de inicio de sesión de WS-Federation.  
  
 Este evento se genera desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos al procesar un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0") recibido desde el servicio de token de seguridad (STS). Se produce justo después del token de seguridad que se ha deserializado desde el parámetro wresult o se ha validado el parámetro wresultptr del mensaje de respuesta de inicio de sesión y antes de la seguridad de la sesión de creación del token.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se ha creado un token de seguridad de la sesión a partir del token de seguridad recibido procedente de un servicio de token de seguridad (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar un controlador de eventos para modificar el token de sesión antes de que se usa para establecer la entidad de seguridad del subproceso y se escribe en la cookie de sesión. En el evento controlador, puede acceder al token de sesión a través de la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad. Puede especificar si se debe escribir una cookie de sesión estableciendo la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> propiedad.  
  
 Este evento se genera desde dentro de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado de controlador de eventos al procesar un mensaje de respuesta de inicio de sesión de WS-Federation ("wsignin1.0") recibido desde el servicio de token de seguridad (STS). Se produce justo después del token de seguridad que se ha deserializado desde el parámetro wresult o se ha validado el parámetro wresultptr del mensaje de respuesta de inicio de sesión y antes de las notificaciones se establece la entidad de seguridad en el <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (y en el <xref:System.Web.HttpContext.User%2A> propiedad de <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Para funcionar las sesiones en modo de referencia, Microsoft recomienda proporcionar un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> eventos en el archivo global.asax.cs y la configuración de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad en el token se pasa en el <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propiedad. Así se asegurará de que el token de sesión funciona en modo de referencia para cada solicitud y mero establecimiento la <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> propiedad en el módulo de autenticación de la sesión.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">El token de seguridad de sesión creado a partir del mensaje de respuesta de inicio de sesión de WS-Federation del STS.</param>
        <param name="isSession"><see langword="true" /> para escribir una cookie que representa la sesión incluida con la respuesta; si no, <see langword="false" />.</param>
        <summary>Establece la entidad de seguridad del subproceso y, opcionalmente, escribe la cookie de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama desde la solicitud de procesamiento de canalización implementado en el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegado controlador de eventos. Este método hace lo siguiente:  
  
1.  Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> eventos. Puede usar este evento para modificar el token de sesión antes de que se usa para establecer la entidad de seguridad del subproceso y escribe en la cookie de sesión y para especificar si se debe escribir la cookie de sesión.  
  
2.  Invoca el <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> método en el módulo de autenticación de sesión configurado (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) para establecer la entidad de seguridad del subproceso y, opcionalmente, escribir la cookie de sesión.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sessionToken" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce una vez ha iniciado sesión el usuario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la solicitud se registra en la página de inicio de sesión, un control en la página, producirá este evento, no en este módulo.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar inmediatamente después de eliminar la sesión durante el cierre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método mientras la sesión de la sesión del usuario de confianza (RP). No se provoca el evento cuando hacerlo federada de cierre de sesión a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 Puede agregar un controlador de eventos para realizar cualquier procesamiento adicional que se necesita la aplicación después de que se ha eliminado la cookie de sesión.  
  
 Este evento no se garantiza que se llama para cada sesión. Las cookies pueden eliminarse en el lado cliente, por ejemplo, por lo que nunca se generaría este evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">El WSFAM guarda este valor en el parámetro wctx de la solicitud de inicio de sesión de WS-Federation; sin embargo, el módulo no lo usa al procesar solicitudes o respuestas de inicio de sesión. Puede establecerse en cualquier valor. No tiene que ser único. Para obtener más información, vea el método <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <summary>Realiza el inicio de sesión en un servicio de token de seguridad (STS) mediante el protocolo WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada invoca la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método para realizar el inicio de sesión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor de contexto específico de la aplicación que se incluirá en el parámetro wctx en las solicitudes de inicio de sesión WS-Federation.</summary>
        <value>El valor de contexto específico de la aplicación que se va incluir en el parámetro wctx para las solicitudes de inicio de sesión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> se invoca el método, el mensaje de inicio de sesión que se genera contiene un parámetro wctx que tiene el formato siguiente: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. El valor de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> se almacena en el `cx` parámetro. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> se puede llamar directamente desde el código. También se llama cuando el WSFAM realiza redirecciones pasivas y también cuando ya sea el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> método o la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> método se invoca el código de aplicación.  
  
 Aunque el WSFAM guarda la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> valor en los mensajes de solicitud de inicio de sesión, si se usa el valor de la aplicación durante el procesamiento de respuesta, debe proporcionar la lógica para la extracción de desde el parámetro wctx del mensaje de respuesta de inicio de sesión.  
  
 Para obtener más información sobre el formato y el procesamiento del parámetro wctx, consulte el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se genera al producirse un error durante el inicio de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la solicitud se registra en la página de inicio de sesión, un control en la página, producirá este evento, no en este módulo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de eliminar la sesión durante su cierre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método mientras la sesión de la sesión del usuario de confianza (RP). No se provoca el evento cuando hacerlo federada de cierre de sesión a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 Puede agregar un controlador de eventos para realizar cualquier procesamiento adicional que se necesita la aplicación antes de que se elimina la cookie de sesión. Puede leer el <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> propiedad en el controlador de eventos para determinar si el cierre de sesión es el resultado de recibir un mensaje de solicitud de limpieza de cierre de sesión de WS-Federation ("wsignoutcleanup1.0") de un servicio de token de seguridad (STS) o si se inició en el RP.  
  
 Este evento no se garantiza que se llama para cada sesión. Las cookies pueden eliminarse en el lado cliente, por ejemplo, por lo que nunca se generaría este evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena de consulta que contiene los parámetros adicionales que se van a enviar en las solicitudes de inicio de sesión de WS-Federación ("wsignin1.0").</summary>
        <value>Un fragmento de dirección URL que contiene los parámetros adicionales de mensajes en el siguiente formato: <c>parámetro1 = valor1&amp;parámetro2 = valor2&amp;paramN = valorN</c>. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para enviar parámetros adicionales en una solicitud de inicio de sesión. Podría tratarse de parámetros específicos de la aplicación que no son uno de los parámetros que se especifican mediante el protocolo WS-Federation. Para quitar los parámetros adicionales de la solicitud, establezca la propiedad en una cadena vacía.  
  
 Puede invalidar esta configuración en cada solicitud HTTP mediante la adición de un controlador para el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> eventos. Este evento se desencadena justo antes de que el módulo redirecciona al servicio de token de seguridad (STS) con un mensaje de solicitud de inicio de sesión de WS-Federation. El STS es especificado por el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer la propiedad en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cierra la sesión actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Para cerrar la sesión en el STS mediante el protocolo WS-Federation, utilice el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra la sesión actual y solicita redirigirse de nuevo a la dirección URL especificada en la solicitud HTTP actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual y redirige el explorador a la dirección URL especificada en la solicitud HTTP actual.  
  
 Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> método con el `redirectUrl` parámetro establecido en la dirección URL de la solicitud actual.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Para cerrar la sesión en el STS mediante el protocolo WS-Federation, utilice el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest"><see langword="true" /> si IP-STS inició la solicitud mediante un mensaje de solicitud de limpieza de cierre de sesión de WS-Federation (“wsignoutcleanup1.0"); en caso contrario, <see langword="false" />.</param>
        <summary>Cierra la sesión actual y genera los eventos adecuados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método realiza el trabajo real de la eliminación de la sesión actual y generar los eventos de cierre de sesión adecuados. El método hace lo siguiente:  
  
1.  Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> eventos. Un controlador de eventos puede proporcionar cualquier procesamiento necesario antes de elimina la sesión. El <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> propiedad está establecida según el `isIPRequest` parámetro.  
  
2.  Las llamadas del <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> método en el Administrador de autenticación de la sesión actual para eliminar la cookie de sesión.  
  
     Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> eventos.  
  
3.  Si se produce un error durante el proceso de cierre de sesión, se invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> método para generar el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> eventos. Puede cancelar el procesamiento y evitar una excepción que se va a devolver al llamador de un controlador de eventos <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Puede llamar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> método con el `isIPRequest` conjunto de parámetros `false` cerrar la sesión de una sesión sin realizar una redirección. En última instancia, se llama al método por todos los demás sobrecargado <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> métodos (con el `isIPRequest` parámetro establecido en `false`) para realizar el control de cierre de sesión. Se llama al método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> método con el `isIPRequest` conjunto de parámetros `true` para cerrar la sesión de la sesión cuando se está procesando un mensaje de limpieza de cierre de sesión WS-Federation ("wsignoutcleanup1.0").  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Para cerrar la sesión en el STS mediante el protocolo WS-Federation, utilice el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Dirección URL a la que se debe redirigir el explorador después de eliminarse la sesión.</param>
        <summary>Cierra la sesión actual y solicita redirigirse de nuevo a la dirección URL especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual y redirige el explorador a la dirección URL especificada.  
  
 Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> método con el `redirectUrl` parámetro y con el `initiateSignoutCleanup` establecer `false`.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Para cerrar la sesión en el STS mediante el protocolo WS-Federation, utilice el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> no es un URI válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Dirección URL a la que se debe redirigir el explorador después del cierre de sesión.</param>
        <param name="initiateSignoutCleanup">Siempre se establece en <see langword="false" /> No se admite el establecimiento de este parámetro en <see langword="true" />.</param>
        <summary>Cierra la sesión actual y solicita redirigirse de nuevo a la dirección URL especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elimina la sesión actual y redirige el explorador a la dirección URL especificada.  
  
 Invoca el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método con el `initiateSignoutCleanup` conjunto de parámetros `false`.  
  
 Se envía ningún mensaje de solicitud de cierre de sesión ("wsignout1.0") para el servicio de token de seguridad (STS). Para cerrar la sesión en el STS mediante el protocolo WS-Federation, utilice el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> no es un URI válido.</exception>
        <exception cref="T:System.NotImplementedException">La clase <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> produce esta excepción si <paramref name="initiateSignoutCleanup" /> es <see langword="true" />. No establezca este parámetro en <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se genera al producirse un error durante el cierre de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena mediante una llamada a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> método desde el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> método mientras la sesión de la sesión del usuario de confianza (RP). No se provoca el evento cuando hacerlo federada de cierre de sesión a través de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método.  
  
 El <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> evento es un evento cancelable. Puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad en un controlador de eventos para evitar la excepción que produjo el error que se devuelva al iniciador del cierre de sesión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena de consulta que contiene los parámetros adicionales que se van a enviar en las solicitudes de cierre de sesión de WS-Federation ("wsignout1.0").</summary>
        <value>Un fragmento de dirección URL que contiene los parámetros adicionales de mensajes en el siguiente formato: <c>parámetro1 = valor1&amp;parámetro2 = valor2&amp;paramN = valorN</c>. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, esta propiedad se inicializa desde la `signOutQueryString` atributo de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento en el archivo de configuración. Se está diseñado para contener los parámetros específicos de la aplicación que se va a enviarse en una solicitud de cierre de sesión de WS-Federation. Para quitar estos parámetros, puede establecer la propiedad en una cadena vacía.  
  
 El WSFAM no utiliza esta propiedad directamente. Sin embargo, puede pasar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> método para crear una URL de cierre de sesión de WS-Federation completa que, a continuación, se puede usar el código.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer la propiedad en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro wreply que se usa durante las solicitudes de inicio de sesión de WS-Federation ("wsignout1.0").</summary>
        <value>Dirección URL a la que el servicio de token de seguridad (STS) debe redirigir al cliente seguido de un cierre de sesión mediante el protocolo WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, esta propiedad se inicializa desde la `signOutReply` atributo de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elemento en el archivo de configuración. Se está diseñado para representar el parámetro wreply en una solicitud de cierre de sesión de WS-Federation.  
  
 El parámetro wreply es opcional. Si el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> propiedad está establecida en `null` o una cadena vacía, el parámetro wreply no se incluye en la solicitud de cierre de sesión.  
  
 El WSFAM no utiliza esta propiedad directamente. Sin embargo, puede pasar a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> método cuando se realiza el cierre de sesión de WS-Federation desde el código, o bien puede pasarlo a la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> método para crear una URL de cierre de sesión de WS-Federation completa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprueba si las propiedades <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> y <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> no están vacías y si la propiedad <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> es <see langword="true" />, los URI especificados para <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> y <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> son conformes a HTTPS.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> es <see langword="null" /> o una cadena vacía.  
  
O bien 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> es <see langword="null" /> o una cadena vacía.  
  
O bien 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> es <see langword="true" /> y <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> no es conforme a HTTPS.  
  
O bien 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> es <see langword="true" /> y <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> no es conforme a HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se usa al deserializar los mensajes de respuesta de inicio de sesión de WS-Federation para obtener el token emitido por el servicio de token de seguridad (STS).</summary>
        <value>El objeto <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se usa al deserializar los mensajes de respuesta de inicio de sesión de WS-Federation para obtener el token emitido por el servicio de token de seguridad (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer la propiedad en <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>