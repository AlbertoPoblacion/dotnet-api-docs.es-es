<Type Name="CustomPopupPlacement" FullName="System.Windows.Controls.Primitives.CustomPopupPlacement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49466fbc2f6e2ba14d91eb75b29b50b790ba09c2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39904201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomPopupPlacement" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CustomPopupPlacement extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomPopupPlacement" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomPopupPlacement" />
  <TypeSignature Language="F#" Value="type CustomPopupPlacement = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define los parámetros de colocación personalizada para un control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.Primitives.CustomPopupPlacement> estructura define una ubicación para un <xref:System.Windows.Controls.Primitives.Popup> control con respecto a su elemento primario y define cómo el <xref:System.Windows.Controls.Primitives.Popup> pasa a ser más visible cuando está oculto por un límite de la pantalla.  
  
 Un <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback?displayProperty=nameWithType> delegado devuelve una matriz de estas estructuras personalizadas como opciones de selección de ubicación para un <xref:System.Windows.Controls.Primitives.Popup> cuando el <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> propiedad está establecida en <xref:System.Windows.Controls.Primitives.PlacementMode.Custom>.  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Controls.Primitives.PlacementMode.Custom" />
    <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
    <altmember cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
    <altmember cref="T:System.Windows.Controls.Primitives.Popup" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPopupPlacement (System.Windows.Point point, System.Windows.Controls.Primitives.PopupPrimaryAxis primaryAxis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Controls.Primitives.PopupPrimaryAxis primaryAxis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomPopupPlacement(System::Windows::Point point, System::Windows::Controls::Primitives::PopupPrimaryAxis primaryAxis);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.Primitives.CustomPopupPlacement : System.Windows.Point * System.Windows.Controls.Primitives.PopupPrimaryAxis -&gt; System.Windows.Controls.Primitives.CustomPopupPlacement" Usage="new System.Windows.Controls.Primitives.CustomPopupPlacement (point, primaryAxis)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="primaryAxis" Type="System.Windows.Controls.Primitives.PopupPrimaryAxis" />
      </Parameters>
      <Docs>
        <param name="point">
          <see cref="T:System.Windows.Point" /> relativo a <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> donde se coloca la esquina superior izquierda de <see cref="T:System.Windows.Controls.Primitives.Popup" />.</param>
        <param name="primaryAxis">
          <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" /> a lo largo del cual se mueve un control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando lo obstruye un margen de la pantalla.</param>
        <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customPopupPlacement.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">La estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> que se va a comparar.</param>
        <summary>Compara esta estructura con otra estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> para determinar si son iguales.</summary>
        <returns>
          <see langword="true" /> si las estructuras tienen los mismos valores; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
        <altmember cref="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customPopupPlacement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el código hash de esta estructura.</summary>
        <returns>Código hash para esta estructura.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.Primitives.CustomPopupPlacement placement1, System.Windows.Controls.Primitives.CustomPopupPlacement placement2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement1, valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (placement1 As CustomPopupPlacement, placement2 As CustomPopupPlacement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::Primitives::CustomPopupPlacement placement1, System::Windows::Controls::Primitives::CustomPopupPlacement placement2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.Primitives.CustomPopupPlacement * System.Windows.Controls.Primitives.CustomPopupPlacement -&gt; bool" Usage="placement1 = placement2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placement1" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
        <Parameter Name="placement2" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
      </Parameters>
      <Docs>
        <param name="placement1">Primera estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> que se va a comparar.</param>
        <param name="placement2">Segunda estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> que se va a comparar.</param>
        <summary>Compara dos estructuras <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> para determinar si son iguales.</summary>
        <returns>
          <see langword="true" /> si las estructuras tienen los mismos valores; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
        <altmember cref="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.Primitives.CustomPopupPlacement placement1, System.Windows.Controls.Primitives.CustomPopupPlacement placement2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement1, valuetype System.Windows.Controls.Primitives.CustomPopupPlacement placement2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (placement1 As CustomPopupPlacement, placement2 As CustomPopupPlacement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::Primitives::CustomPopupPlacement placement1, System::Windows::Controls::Primitives::CustomPopupPlacement placement2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.Primitives.CustomPopupPlacement * System.Windows.Controls.Primitives.CustomPopupPlacement -&gt; bool" Usage="System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality (placement1, placement2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placement1" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
        <Parameter Name="placement2" Type="System.Windows.Controls.Primitives.CustomPopupPlacement" />
      </Parameters>
      <Docs>
        <param name="placement1">Primera estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> que se va a comparar.</param>
        <param name="placement2">Segunda estructura <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> que se va a comparar.</param>
        <summary>Compara dos estructuras <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> para determinar si no son iguales.</summary>
        <returns>
          <see langword="true" /> si las estructuras no tienen los mismos valores; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)" />
        <altmember cref="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point : System.Windows.Point with get, set" Usage="System.Windows.Controls.Primitives.CustomPopupPlacement.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el punto que es relativo al objeto de destino donde se coloca la esquina superior izquierda del control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</summary>
        <value>
          <see cref="T:System.Windows.Point" /> que se utiliza para colocar un control <see cref="T:System.Windows.Controls.Primitives.Popup" />. El valor predeterminado es (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto de destino es el elemento que el <xref:System.Windows.Controls.Primitives.Popup> es relativa. Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryAxis">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PopupPrimaryAxis PrimaryAxis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PopupPrimaryAxis PrimaryAxis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryAxis As PopupPrimaryAxis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PopupPrimaryAxis PrimaryAxis { System::Windows::Controls::Primitives::PopupPrimaryAxis get(); void set(System::Windows::Controls::Primitives::PopupPrimaryAxis value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryAxis : System.Windows.Controls.Primitives.PopupPrimaryAxis with get, set" Usage="System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupPrimaryAxis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección en la que se mueve un control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando <see cref="T:System.Windows.Controls.Primitives.Popup" /> está oculto por un límite de la pantalla.</summary>
        <value>Dirección en la que se va a mover un control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando <see cref="T:System.Windows.Controls.Primitives.Popup" /> queda oculto por un límite de la pantalla.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>