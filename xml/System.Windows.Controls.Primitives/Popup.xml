<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Popup.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051fb78da1038a04b2cd19db3f0e4655c7cfb1c26248.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b78da1038a04b2cd19db3f0e4655c7cfb1c26248</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>Represents a pop-up window that has content.</source>
          <target state="translated">Representa una ventana emergente que tiene contenido.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source><bpt id="p1">**</bpt>Content Model<ept id="p1">**</ept>:  <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> has one content property: <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Un modelo de contenido<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> tiene una propiedad de contenido: <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> can have a maximum of one child, which can be any <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> puede tener un máximo de un elemento secundario, que puede ser cualquier <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The following illustration shows a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control that has a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> as its parent.</source>
          <target state="translated">La siguiente ilustración muestra un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control que tiene un <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> como su elemento primario.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source><bpt id="p1">![</bpt>Popup illustration<ept id="p1">]</ept><bpt id="p2">(~/add/media/popuppicture.JPG "</bpt>Popup illustration<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Ilustración emergente<ept id="p1">]</ept><bpt id="p2">(~/add/media/popuppicture.JPG "</bpt>ilustración emergente<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Puede colocar un elemento emergente estableciendo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Posición de un control Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is displayed on the screen, it does not reposition itself if its parent is repositioned.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se muestra en la pantalla, no cambie de posición si se vuelve a colocar su elemento primario.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> displays its content in its own window on the screen.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> muestra su contenido en su propia ventana en la pantalla.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control supports animation when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the application is running with full trust.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control admite la animación cuando el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> propiedad está establecida en <ph id="ph3">`true`</ph> y la aplicación se ejecuta con plena confianza.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>An application that is running with full trust has complete access to system resources and is typically installed on the user's system.</source>
          <target state="translated">Una aplicación que se ejecuta con plena confianza tiene acceso completo a los recursos del sistema y normalmente está instalada en el sistema del usuario.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For more information, see <bpt id="p1">[</bpt>Security (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguridad (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For bitmap and opacity effects to appear on the content of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>, you must set the effects directly on the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content.</source>
          <target state="translated">Para los efectos de mapa de bits y opacidad que aparecerá en el contenido de un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>, debe establecer los efectos directamente en el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenido.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The content of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> does not inherit effects that are set on the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control or on any other element that is in the parent window.</source>
          <target state="translated">El contenido de un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> no hereda los efectos que se establecen en el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> controlar o en cualquier otro elemento que se encuentra en la ventana primaria.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is sized to its content by default.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> tamaño se ajusta a su contenido de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>When this occurs, applying a <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> or bitmap effects may cause the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to be obscured.</source>
          <target state="translated">Cuando esto ocurre, aplicar un <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> o los efectos de imagen pueden causar la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se ocultan.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>This occurs because the default size of the content does not provide enough area for the effects to display.</source>
          <target state="translated">Esto ocurre porque el tamaño predeterminado del contenido no proporciona espacio suficiente para que se muestren los efectos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>If more space is required, you can define a margin around the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content to increase the area that is available to the control.</source>
          <target state="translated">Si se requiere más espacio, puede definir un margen alrededor del <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenido para aumentar el área que está disponible para el control.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> property must be set on the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when used in a <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> propiedad debe establecerse en el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> cuando se utiliza en un <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>To create a tooltip, use the <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph> classes.</source>
          <target state="translated">Para crear una información sobre herramientas, use la <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For more information, see <bpt id="p1">[</bpt>ToolTip Overview<ept id="p1">](~/docs/framework/wpf/controls/tooltip-overview.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Información general de información sobre herramientas<ept id="p1">](~/docs/framework/wpf/controls/tooltip-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Gets or sets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control can contain transparent content.</source>
          <target state="translated">Obtiene o establece un valor que indica si un control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> puede incluir contenido transparente.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control can contain transparent content; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> puede incluir contenido transparente; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control can only contain transparent content when the application runs with full trust.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control solo puede incluir contenido transparente cuando la aplicación se ejecuta con plena confianza.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>An application that runs with full trust has complete access to system resources and is typically installed on the local system.</source>
          <target state="translated">Una aplicación que se ejecuta con plena confianza tiene acceso completo a los recursos del sistema y normalmente se instala en el sistema local.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>For more information, see <bpt id="p1">[</bpt>Security (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguridad (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>This property cannot be set to <ph id="ph1">`true`</ph> when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is hosted in a <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</source>
          <target state="translated">Esta propiedad no puede establecerse en <ph id="ph1">`true`</ph> cuando el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se hospeda en un <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> in an application that does not run in full trust, the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property value is changed to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph> en una aplicación que no se ejecuta con plena confianza, el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> valor de propiedad se cambia a <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>An application that is hosted in a browser is an example of an application that does not run in full trust.</source>
          <target state="translated">Una aplicación que se hospeda en un explorador es un ejemplo de una aplicación que no se ejecuta con plena confianza.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo establecer el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> propiedad en un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>for setting this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Para establecer esta propiedad en <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
          <source>The identifier for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> dependency property.</source>
          <target state="translated">Identificador de la propiedad de dependencia <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
          <source><bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Información general sobre las propiedades de dependencia<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Gets or sets the content of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtiene o establece el contenido del control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> content of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Contenido del elemento <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> del control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source><bpt id="p1">**</bpt>Content Model<ept id="p1">**</ept>: The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> property is the only content property for the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated"><bpt id="p1">**</bpt>Un modelo de contenido<ept id="p1">**</ept>: el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> propiedad es la propiedad de contenido solo para el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> can only have one <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> as a child, but that child can contain complex embedded content.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> sólo puede tener una <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> como un elemento secundario, pero ese elemento secundario puede tener incrustado contenido complejo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>For example, the child can be a <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that contains an <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph>, text, and other types of controls.</source>
          <target state="translated">Por ejemplo, el secundario puede ser un <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> que contiene un <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph>, texto y otros tipos de controles.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>When content is added to a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control becomes the logical parent to the content.</source>
          <target state="translated">Cuando se agrega contenido a un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> (control), el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control pasa a ser el elemento primario lógico para el contenido.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content is considered to be the logical child of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">De forma similar, el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenido se considera que el elemento secundario lógico de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The child content is not added to the visual tree that contains the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">El contenido secundario no se agrega al árbol visual que contiene el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Instead, the child content is rendered in a separate window with its own visual tree when the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">En su lugar, el contenido secundario se representa en una ventana independiente con su propio objeto visual de árbol cuando el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> está establecido en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The following example shows how to add content to a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar contenido a un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Child" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Child" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.Primitives.Popup.Closed">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se produce cuando la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> cambia a <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Closed">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is opened and closed by toggling the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se abre y se cierra alternando el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Closed">
          <source>The following example shows how to define an event handler for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Closed&gt;</ph> event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo definir un controlador de eventos para el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Closed&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> to which to add child content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> al que se va a agregar el contenido secundario.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> child content.</source>
          <target state="translated">Contenido secundario de <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>Attaches a child element to a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Asocia un elemento secundario a un control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Desea crear un control personalizado que tiene la misma funcionalidad que un control existente y también muestra el comportamiento de un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>You can make your control behave like a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> by adding a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to your control and calling the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph> method.</source>
          <target state="translated">Puede hacer que el control se comportan como un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> agregando un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> a su control y la llamada la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>This method assigns <ph id="ph1">`child`</ph> to the child property and binds the following properties to <ph id="ph2">`child`</ph>.</source>
          <target state="translated">Este método asigna <ph id="ph1">`child`</ph> en la propiedad secundaria y enlaza las siguientes propiedades para <ph id="ph2">`child`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>You should implement these as dependency properties in your control so it can be used the same way as a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Debe implementar estas como propiedades de dependencia en el control para que se pueda usan la misma manera que una <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/docs/framework/wpf/advanced/custom-dependency-properties.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Propiedades de dependencia personalizadas<ept id="p1">](~/docs/framework/wpf/advanced/custom-dependency-properties.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>When you call <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph>, <ph id="ph2">`child`</ph> cannot be a child of a <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">Cuando se llama a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph>, <ph id="ph2">`child`</ph> no puede ser un elemento secundario de un <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>Also, <ph id="ph1">`PlacementTarget`</ph> should be set on your control before you call this method.</source>
          <target state="translated">Además, <ph id="ph1">`PlacementTarget`</ph> debe establecerse en el control antes de llamar a este método.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Gets or sets a delegate handler method that positions the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtiene o establece el método controlador delegado que coloca el control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph> delegate method that provides placement information for the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Método delegado <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph> que proporciona información de ubicación para el control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>The following example shows how to set a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A&gt;</ph> delegate.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo establecer un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A&gt;</ph> delegar.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
          <source>Returns the logical parent of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</source>
          <target state="translated">Devuelve el elemento lógico primario de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> does not have a defined parent and the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> is not <ph id="ph3">&lt;see langword="null" /&gt;</ph>, the <ph id="ph4">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> is returned.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> no tiene definido ningún elemento primario y el valor de la propiedad <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> no es <ph id="ph3">&lt;see langword="null" /&gt;</ph>, se devuelve el valor de la propiedad <ph id="ph4">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
          <source>Otherwise, the return values are the same as <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.GetUIParentCore" /&gt;</ph>.</source>
          <target state="translated">De lo contrario, los valores devueltos son iguales que <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.GetUIParentCore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is displayed with a drop shadow effect.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se muestra con un efecto de sombra.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is displayed with a drop shadow; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se muestra con un efecto de sombra; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>A drop shadow effect displays when the <ph id="ph1">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType&gt;</ph> property are set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Un efecto de sombra paralela muestra cuando el <ph id="ph1">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph> propiedad y el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType&gt;</ph> propiedad se establece en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>The following example shows how to get the value of the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo obtener el valor de la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
          <source>The identifier for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph> dependency property.</source>
          <target state="translated">Identificador de la propiedad de dependencia <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
          <source><bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Información general sobre las propiedades de dependencia<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Get or sets the horizontal distance between the target origin and the popup alignment point.</source>
          <target state="translated">Obtiene o establece la distancia horizontal entre el origen de destino y el punto de alineación emergente.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The horizontal distance between the target origin and the popup alignment point.</source>
          <target state="translated">Distancia horizontal entre el origen de destino y el punto de alineación emergente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>For information about the target origin and popup alignment point, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para obtener información sobre el punto de alineación de origen y los elementos emergentes de destino, vea <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The default is 0.</source>
          <target state="translated">El valor predeterminado es 0.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Puede colocar un elemento emergente estableciendo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Posición de un control Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso de atributos XAML</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>A string representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">Una representación de cadena de un <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Esto se interpreta como un <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Strings do not have to explicitly include decimal points.</source>
          <target state="translated">Las cadenas no es necesario incluir explícitamente separadores decimales.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>For example, a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por ejemplo, un valor de <ph id="ph1">`1`</ph> es aceptable.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions apply as those that are mentioned in the Property Value section of this topic.</source>
          <target state="translated">El mismo <ph id="ph1">&lt;xref:System.Double&gt;</ph> se aplican restricciones de intervalo como los que se mencionan en la sección de valor de propiedad de este tema.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>A <ph id="ph1">`double`</ph> value as described earlier in this table, followed by one of the following unit declaration strings: <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, or <ph id="ph5">`pt`</ph>.</source>
          <target state="translated">A <ph id="ph1">`double`</ph> valor, tal como se describe anteriormente en esta tabla, seguido de una de las siguientes cadenas de declaración de unidad: <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, o <ph id="ph5">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> (valor predeterminado) es <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`in`</ph> is inches; 1in=96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> pulgadas; 1 en = 96 px</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm=(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> es centímetros; 1cm=(96/2.54) px</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`pt`</ph> is points; 1pt=(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> es puntos; 1pt=(96/72) px</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> properties to 20.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> y establece la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> propiedades a 20.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (which is the default), so the target origin is the bottom left corner of the target area and the popup alignment point is the top left corner of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> propiedad está establecida en <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (que es el valor predeterminado), por lo que el origen del destino es la esquina inferior izquierda del área de destino y el punto de alineación del elemento emergente es la esquina superior izquierda de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is visible.</source>
          <target state="translated">Obtiene o establece un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> está visible.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is visible; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> está visible; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>If a control uses a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> as part of its default style, bind the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to a property of the control.</source>
          <target state="translated">Si utiliza un control de un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> como parte de su estilo predeterminado, enlazar la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> a una propiedad del control.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> can bind its <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Por ejemplo, un <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> puede enlazar su <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A&gt;</ph> propiedad a la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propiedad de la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>This simplifies the logic for controlling when the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is visible.</source>
          <target state="translated">Esto simplifica la lógica para controlar cuándo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> está visible.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo establecer la propiedad <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>Gets an enumerator that you can use to access the logical child elements of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtiene un enumerador que puede utilizar para obtener acceso a los elementos lógicos secundarios del control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that you can use to access the logical child elements of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que puede utilizar para obtener acceso a los elementos lógicos secundarios de un control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>When you add content to a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control becomes the logical parent to the content.</source>
          <target state="translated">Al agregar contenido a un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> (control), el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control pasa a ser el elemento primario lógico para el contenido.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content is considered to be the logical child of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">De forma similar, el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenido se considera que el elemento secundario lógico de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>The child content is not added to the visual tree that contains the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">El contenido secundario no se agrega al árbol visual que contiene el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>Instead, the child content is rendered in a separate window that has its own visual tree when the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">En su lugar, el contenido secundario se representa en una ventana independiente que tiene su propio objeto visual de árbol cuando el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>The available size that this element can give to the child.</source>
          <target state="translated">Tamaño disponible que este elemento puede otorgar al elemento secundario.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>You can use infinity as a value to indicate that the element can size to whatever content is available.</source>
          <target state="translated">Puede utilizar infinito como valor para indicar que el elemento puede ajustarse a cualquier contenido disponible.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>Determines the required size of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> content within the visual tree of the logical parent.</source>
          <target state="translated">Determina el tamaño necesario del contenido de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> dentro del árbol visual del elemento lógico primario.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that has the <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> properties both equal to zero (0).</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> cuyas propiedades <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> y <ph id="ph3">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> son iguales a cero (0).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>This method always returns a <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> that has a width and height of zero (0), because <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content is not located in the visual tree of its logical parent or <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</source>
          <target state="translated">Este método devuelve siempre un <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> que tiene un ancho y alto de cero (0), porque <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenido no se encuentra en el árbol visual de su elemento primario lógico o <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>The child content is created in a different window that has its own visual tree.</source>
          <target state="translated">El contenido secundario se crea en una ventana diferente que tenga su propio árbol visual.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
          <source>Responds when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes from to <ph id="ph2">&lt;see langword="true" /&gt;</ph> to <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Responde cuando el valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> cambia de <ph id="ph2">&lt;see langword="true" /&gt;</ph> a <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
          <source>The event arguments.</source>
          <target state="translated">Argumentos del evento.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
          <source>Responds to the condition in which the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes from <ph id="ph2">&lt;see langword="false" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Responde a la condición en la que el valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> cambia de <ph id="ph2">&lt;see langword="false" /&gt;</ph> a <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /&gt;</ph> event.</source>
          <target state="translated">Proporciona el control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Esta implementación asegura de que un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se cierra cuando se produce un evento de mouse fuera de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> cuando el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> propiedad está establecida en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /&gt;</ph> event.</source>
          <target state="translated">Proporciona el control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Esta implementación asegura de que un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se cierra cuando se produce un evento de mouse fuera de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> cuando el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> propiedad está establecida en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /&gt;</ph> event.</source>
          <target state="translated">Proporciona el control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Esta implementación asegura de que un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se cierra cuando se produce un evento de mouse fuera de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> cuando el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> propiedad está establecida en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /&gt;</ph> event.</source>
          <target state="translated">Proporciona el control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Esta implementación asegura de que un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se cierra cuando se produce un evento de mouse fuera de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> cuando el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> propiedad está establecida en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.Primitives.Popup.Opened">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se produce cuando la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> cambia a <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Opened">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is opened and closed by toggling the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se abre y se cierra alternando el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Opened">
          <source>The following example shows how to define an event handler for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Opened&gt;</ph> event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo definir un controlador de eventos para el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Opened&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Gets or sets the orientation of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control when the control opens, and specifies the behavior of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control when it overlaps screen boundaries.</source>
          <target state="translated">Obtiene o establece la orientación del control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> cuando se abre, y especifica el comportamiento del control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> cuando se superpone con los límites de la pantalla.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PlacementMode" /&gt;</ph> enumeration value that determines the orientation of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control when the control opens, and that specifies how the control interacts with screen boundaries.</source>
          <target state="translated">Valor de enumeración <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PlacementMode" /&gt;</ph> que determina la orientación del control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> cuando se abre y que especifica cómo interactúa el control con los límites de la pantalla.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Puede colocar un elemento emergente estableciendo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Posición de un control Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.SystemParameters.MenuDropAlignment%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, setting <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> reverses the position of the <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>; a <ph id="ph7">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> with <ph id="ph8">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> set to <ph id="ph9">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> aligns its left edge with the right edge of <ph id="ph10">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> and a <ph id="ph11">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> with <ph id="ph12">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> set to <ph id="ph13">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> aligns its right edge with the left edge of <ph id="ph14">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.SystemParameters.MenuDropAlignment%2A&gt;</ph> propiedad es <ph id="ph2">`true`</ph>, si se establece <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> a <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> o <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> invierte la posición de la <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>; <ph id="ph7">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> con <ph id="ph8">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> establecido en <ph id="ph9">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> alinea el borde izquierdo con el borde derecho de <ph id="ph10">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> y un <ph id="ph11">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> con <ph id="ph12">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> establecido en <ph id="ph13">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> alinea el borde derecho con el borde izquierdo del <ph id="ph14">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>The following example creates four <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> controls that are relative to an image.</source>
          <target state="translated">En el ejemplo siguiente se crea cuatro <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> controles que están en relación con una imagen.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> has a different value for the placement property.</source>
          <target state="translated">Cada <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> tiene un valor diferente para la propiedad de colocación.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Gets or sets the rectangle relative to which the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control is positioned when it opens.</source>
          <target state="translated">Obtiene o establece el rectángulo con respecto al cual se coloca el control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> cuando se abre.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The rectangle that is used to position the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Rectángulo que se utiliza para colocar el control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Puede colocar un elemento emergente estableciendo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Posición de un control Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">El ejemplo siguiente se establece la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> are 50, 50, 50, and 100, respectively.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> propiedades de la <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> son 50, 50, 50 y 100, respectivamente.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is relative to the bounds of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> es relativo a los límites de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> property does not create a visible element in the application; the example creates a <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> with the same bounds to represent the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>.</source>
          <target state="translated">Tenga en cuenta que la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> propiedad no crea un elemento visible en la aplicación; en el ejemplo se crea un <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> con los mismos límites para representar el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Gets or sets the element relative to which the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is positioned when it opens.</source>
          <target state="translated">Obtiene o establece el elemento con respecto al cual se coloca el control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> cuando se abre.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> that is the logical parent of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> que es el elemento primario lógico del control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Puede colocar un elemento emergente estableciendo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Posición de un control Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> that is the child of a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, and sets <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> to <ph id="ph4">`ellipse1`</ph>, so the popup is relative to the <ph id="ph5">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> que es el elemento secundario de un <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>y establece <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> a <ph id="ph4">`ellipse1`</ph>, por lo que el elemento emergente es relativa a la <ph id="ph5">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Gets or sets an animation for the opening and closing of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtiene o establece una animación para la apertura y cierre de un control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /&gt;</ph> enumeration value that defines an animation to open and close a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Valor de enumeración <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /&gt;</ph> que define una animación para abrir y cerrar un control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> can only animate when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> sólo puede animarse cuando la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> propiedad está establecida en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>This requires the application that creates the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control to run with full trust.</source>
          <target state="translated">Esto requiere que la aplicación que crea el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control para que se ejecute con plena confianza.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> is animated, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> will not be animated.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> está animada, el <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> no serán animadas.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo establecer la propiedad <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control closes when the control is no longer in focus.</source>
          <target state="translated">Obtiene o establece un valor que indica si el control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> debe cerrarse cuando deja de estar en el foco.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control closes when <ph id="ph3">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property is set to <ph id="ph4">&lt;see langword="false" /&gt;</ph>; <ph id="ph5">&lt;see langword="false" /&gt;</ph> if the <ph id="ph6">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control closes when a mouse or keyboard event occurs outside the <ph id="ph7">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se cierra cuando la propiedad <ph id="ph3">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> se establece en <ph id="ph4">&lt;see langword="false" /&gt;</ph>; <ph id="ph5">&lt;see langword="false" /&gt;</ph> si el control <ph id="ph6">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se cierra cuando se produce un evento del mouse o teclado fuera del control <ph id="ph7">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> stays open until it is explicitly closed by setting the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> permanece abierta hasta que se cierra explícitamente estableciendo la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propiedad <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> es <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control intercepta todos los eventos de mouse y teclado para determinar cuándo se produce uno de estos eventos fuera de la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo establecer la propiedad <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
          <source>An object to add as a child.</source>
          <target state="translated">Objeto que se va a agregar como elemento secundario.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Este miembro es compatible con la infraestructura de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> y no está diseñado para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>A string to add to the object.</source>
          <target state="translated">Cadena que se va a agregar al objeto.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Este miembro es compatible con la infraestructura de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> y no está diseñado para utilizarse directamente desde el código.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Gets or sets the vertical distance between the target origin and the popup alignment point.</source>
          <target state="translated">Obtiene o establece la distancia vertical entre el origen del destino y el punto de alineación del elemento emergente.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The vertical distance between the target origin and the popup alignment point.</source>
          <target state="translated">Distancia vertical entre el origen de destino y el punto de alineación emergente.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>For information about the target origin and popup alignment point, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para obtener información sobre el punto de alineación de origen y los elementos emergentes de destino, vea <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The default is 0.</source>
          <target state="translated">El valor predeterminado es 0.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Puede colocar un elemento emergente estableciendo el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Posición de un control Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso de atributos XAML</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>A string representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">Una representación de cadena de un <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Esto se interpreta como un <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Strings do not have to explicitly include decimal points.</source>
          <target state="translated">Las cadenas no es necesario incluir explícitamente separadores decimales.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>For example, a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por ejemplo, un valor de <ph id="ph1">`1`</ph> es aceptable.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions apply as those that are mentioned in the Property Value section of this topic.</source>
          <target state="translated">El mismo <ph id="ph1">&lt;xref:System.Double&gt;</ph> se aplican restricciones de intervalo como los que se mencionan en la sección de valor de propiedad de este tema.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>A <ph id="ph1">`double`</ph> value as described earlier in this table, followed by one of the following unit declaration strings: <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, or <ph id="ph5">`pt`</ph>.</source>
          <target state="translated">A <ph id="ph1">`double`</ph> valor, tal como se describe anteriormente en esta tabla, seguido de una de las siguientes cadenas de declaración de unidad: <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, o <ph id="ph5">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> (valor predeterminado) es <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`in`</ph> is inches; 1in=96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> pulgadas; 1 en = 96 px</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm=(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> es centímetros; 1cm=(96/2.54) px</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`pt`</ph> is points; 1pt=(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> es puntos; 1pt=(96/72) px</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> properties to 20.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> y establece la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> propiedades a 20.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (which is the default), so the target origin is the bottom left corner of the target area, and the popup alignment point is the top left corner of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> propiedad está establecida en <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (que es el valor predeterminado), por lo que el origen del destino es la esquina inferior izquierda del área de destino y el punto de alineación del elemento emergente es la esquina superior izquierda de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>