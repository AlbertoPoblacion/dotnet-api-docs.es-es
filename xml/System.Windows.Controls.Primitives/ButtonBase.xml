<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ButtonBase.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac513e555cd2ed8ffe1e34cbc976d8ddc082c6bce0a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13e555cd2ed8ffe1e34cbc976d8ddc082c6bce0a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>Represents the base class for all <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> controls.</source>
          <target state="translated">Representa la clase base para todos los controles <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event to respond when the user clicks a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph>.</source>
          <target state="translated">Controlar la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> evento para responder cuando el usuario hace clic en un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>The user can raise the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event by using an <ph id="ph2">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> or by pressing ENTER or the SPACEBAR when the control has focus.</source>
          <target state="translated">El usuario puede provocar la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos mediante el uso de un <ph id="ph2">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> o presionando ENTRAR o la barra espaciadora cuando el control tiene el foco.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>When the user presses the SPACEBAR, the control sets <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> to <ph id="ph2">`true`</ph> and captures the mouse.</source>
          <target state="translated">Cuando el usuario presiona la barra espaciadora, los conjuntos de controles <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> a <ph id="ph2">`true`</ph> y captura el mouse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>As a result, the control will raise mouse events such as <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</ph>.</source>
          <target state="translated">Como resultado, el control generará los eventos del mouse como <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>Note that using the <ph id="ph1">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> or ENTER does not change <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> or capture the mouse, but it does raise the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">Tenga en cuenta que cuando se utiliza el <ph id="ph1">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> o ENTRAR no cambia <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> o capturar el mouse, pero provoca la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> sets the <ph id="ph2">&lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;</ph> attached property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> establece la <ph id="ph2">&lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;</ph> propiedad adjunta <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> sets the <ph id="ph2">&lt;xref:System.Windows.UIElement.IsInputMethodEnabled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> establece la <ph id="ph2">&lt;xref:System.Windows.UIElement.IsInputMethodEnabled%2A&gt;</ph> propiedad <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> es un <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, lo que significa que solo puede contener un único objeto de cualquier tipo (por ejemplo, una cadena, una imagen o un panel).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.ButtonBase">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> class.</source>
          <target state="translated">Para obtener más información, vea la clase <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ButtonBase" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ButtonBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is clicked.</source>
          <target state="translated">Se genera cuando se hace clic en <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>The user can raise the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event by using an <ph id="ph2">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> or by pressing ENTER or the SPACEBAR when the control has focus.</source>
          <target state="translated">El usuario puede provocar la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos mediante el uso de un <ph id="ph2">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> o presionando ENTRAR o la barra espaciadora cuando el control tiene el foco.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>When the user presses the SPACEBAR, the control sets <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> to <ph id="ph2">`true`</ph> and captures the mouse.</source>
          <target state="translated">Cuando el usuario presiona la barra espaciadora, los conjuntos de controles <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> a <ph id="ph2">`true`</ph> y captura el mouse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>As a result, the control will raise mouse events such as <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</ph>.</source>
          <target state="translated">Como resultado, el control generará los eventos del mouse como <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Note that using the <ph id="ph1">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> or ENTER does not change <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> or capture the mouse, but it does raise the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">Tenga en cuenta que cuando se utiliza el <ph id="ph1">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> o ENTRAR no cambia <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> o capturar el mouse, pero provoca la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> marks the <ph id="ph2">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> event as handled in the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</ph> method and raises the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph> marcas el <ph id="ph2">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> evento como controlado en los <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</ph> método y genera el <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Hence, the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</ph> event will never occur for a control that inherits from <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph>.</source>
          <target state="translated">Por lo tanto, la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</ph> nunca se producirán eventos para un control que hereda de <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Instead, attach an event handler to the <ph id="ph1">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;</ph> event, or call <ph id="ph2">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> with <ph id="ph3">`handledEventsToo`</ph> set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">En su lugar, adjuntar un controlador de eventos para el <ph id="ph1">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;</ph> llamada o evento <ph id="ph2">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> con <ph id="ph3">`handledEventsToo`</ph> establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Routed Event Information</source>
          <target state="translated">Información sobre eventos enrutados</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Routing strategy</source>
          <target state="translated">Estrategia de enrutamiento</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Bubbling</source>
          <target state="translated">Propagación</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>The following example shows three buttons that respond to clicks in three different ways.</source>
          <target state="translated">En el ejemplo siguiente se muestra tres botones que responden a los clics de tres maneras diferentes.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Hover - the first button changes colors when the user hovers with the mouse over the button</source>
          <target state="translated">Al mantener el mouse - el primer botón cambia de color cuando el usuario se desplaza con el mouse sobre el botón</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</source>
          <target state="translated">Presionar: el segundo botón requiere que se presione el mouse mientras el puntero del mouse se encuentra en el botón.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.ButtonBase.Click">
          <source>Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</source>
          <target state="translated">Versión, el tercero no restablece el color de fondo de los botones hasta que el mouse se presionó y se soltó el botón de.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica el evento enrutado <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
          <source>This event corresponds to a left mouse button click.</source>
          <target state="translated">Este evento se corresponde con un clic del botón primario del mouse.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>Gets or sets when the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph> event occurs.</source>
          <target state="translated">Obtiene o establece cuándo se produce el evento <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>When the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph> event occurs.</source>
          <target state="translated">Cuando se produce el evento <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ClickMode.Release" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ClickMode.Release" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>Gets or sets the command to invoke when this button is pressed.</source>
          <target state="translated">Obtiene o establece el comando que hay que invocar cuando se presiona este botón.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>A command to invoke when this button is pressed.</source>
          <target state="translated">Comando que se invoca cuando se presiona este botón. </target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>This property is used to associate a command with a particular button instance.</source>
          <target state="translated">Esta propiedad se utiliza para asociar un comando a una instancia de botón determinada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, this property is most often set to be a static command value from one of the existing command libraries, such as <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.NavigationCommands&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, con más frecuencia se establece esta propiedad debe ser un valor de comando estático de una de las bibliotecas de comandos existentes, como <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Input.NavigationCommands&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>For details, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept> or <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Introducción estableciendo<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept> o <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso de atributos XAML</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source><bpt id="p1">*</bpt>commandName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>commandName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>The command to invoke when this button is pressed.</source>
          <target state="translated">El comando que se invoca cuando se presiona el botón.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.Command">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Gets or sets the parameter to pass to the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /&gt;</ph> property.</source>
          <target state="translated">Obtiene o establece el parámetro que se va a pasar a la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Parameter to pass to the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /&gt;</ph> property.</source>
          <target state="translated">Parámetro que se va a pasar a la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Most existing commands from the command libraries do not use a command parameter.</source>
          <target state="translated">La mayoría de los comandos existentes de las bibliotecas de comandos no usan un parámetro de comando.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</source>
          <target state="translated">Los comandos que utilizan un parámetro de comando, la mayoría de estas toman un parámetro con algún valor de tipo primitivo, como un entero o una cadena.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</source>
          <target state="translated">Sin embargo, es posible crear un comando personalizado donde ese comando espera un tipo no primitivo como su parámetro de comando.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>For a custom command case like this, setting <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A&gt;</ph> in code might require a new or existing object instance.</source>
          <target state="translated">Para un caso de comando personalizado como este, establecer <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A&gt;</ph> en el código requiera una instancia de objeto nueva o existente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A&gt;</ph> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A&gt;</ph> en marcado requiera una sintaxis de elemento de propiedad, donde el elemento de objeto rellenar la sintaxis de elemento de propiedad es un nuevo elemento del tipo esperado por ese comando.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept> or <bpt id="p2">[</bpt>StaticResource Markup Extension<ept id="p2">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>).</source>
          <target state="translated">Como alternativa, configuración de marcado puede requerir una referencia a través de una extensión de marcado a un objeto existente (normalmente estas referencias se realizan con <bpt id="p1">[</bpt>extensión de marcado de enlace<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept> o <bpt id="p2">[</bpt>extensión de marcado StaticResource<ept id="p2">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso de atributos XAML</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source><bpt id="p1">*</bpt>commandParameter<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>commandParameter<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>A value of the same type as the particular command specified in the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A&gt;</ph> property expects.</source>
          <target state="translated">Un valor del mismo tipo que el comando determinado especificado en el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A&gt;</ph> propiedad espera.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>If you use an existing command library command, see that command library's documentation for <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage information, including which type of <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A&gt;</ph> the command expects.</source>
          <target state="translated">Si utiliza un comando de biblioteca de comandos existente, consulte la documentación de esa biblioteca de comandos de <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> información de uso, incluidos los tipos de <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A&gt;</ph> que espera el comando.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>If you use a custom command, see Remarks.</source>
          <target state="translated">Si utiliza un comando personalizado, vea la sección Comentarios.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
          <source>Identifies the routed <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /&gt;</ph> enrutada.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>Gets or sets the element on which to raise the specified command.</source>
          <target state="translated">Obtiene o establece el elemento en el que se emite el comando especificado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>Element on which to raise a command.</source>
          <target state="translated">Elemento en el que se va a producir un comando.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A&gt;</ph> property cannot be used to define a <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A&gt;</ph> propiedad no puede usarse para definir un <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A&gt;</ph> property provides a reference to an element that is already defined somewhere in your application.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A&gt;</ph> propiedad proporciona una referencia a un elemento que ya está definido en alguna parte de la aplicación.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso de atributos XAML</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source><bpt id="p1">*</bpt>elementName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>elementName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>The name of <ph id="ph1">&lt;xref:System.Windows.IInputElement&gt;</ph> that receives the command.</source>
          <target state="translated">El nombre de <ph id="ph1">&lt;xref:System.Windows.IInputElement&gt;</ph> que recibe el comando.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.ContentElement.IsEnabled" /&gt;</ph> property.</source>
          <target state="translated">Obtiene el valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.ContentElement.IsEnabled" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control está habilitado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
          <source>If you choose to override this implementation, make certain that you call the base method.</source>
          <target state="translated">Si opta por invalidar esta implementación, asegúrese de que se llame al método base.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ButtonBase" /&gt;</ph> is currently activated.</source>
          <target state="translated">Obtiene un valor que indica si un control <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ButtonBase" /&gt;</ph> está actualmente activado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ButtonBase" /&gt;</ph> is activated; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ButtonBase" /&gt;</ph> está activado; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> es el estado de un botón que indica el botón primario del mouse o presionar la barra espaciadora sobre el botón.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the control captures the mouse.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> es <ph id="ph2">`true`</ph>, el control captura el mouse.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>As a result, the control will raise mouse events such as <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</ph>.</source>
          <target state="translated">Como resultado, el control generará los eventos del mouse como <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>Note that using the <ph id="ph1">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> or ENTER does not change <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> or capture the mouse, but is does raise the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">Tenga en cuenta que cuando se utiliza el <ph id="ph1">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> o ENTRAR no cambia <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> o capturar el mouse, pero provoca la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>Starting with the .NET Framework version 3.0 Service Pack 1, <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> has a protected setter.</source>
          <target state="translated">A partir de la versión de .NET Framework 3.0 Service Pack 1, <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> tiene un establecedor protegido.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>To use this functionality, your application should target the .NET Framework version 3.5.</source>
          <target state="translated">Para utilizar esta funcionalidad, la aplicación debe tener como destino la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>Dependency Property Information</source>
          <target state="translated">Información sobre propiedades de dependencia</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>Identifier field</source>
          <target state="translated">Campo identificador</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propiedades de metadatos establecidos en <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> property in a trigger style.</source>
          <target state="translated">Este ejemplo muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> propiedad en un estilo de desencadenador.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica la propiedad de dependencia <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph> event.</source>
          <target state="translated">Datos para el evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>Responds when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.AccessText.AccessKey" /&gt;</ph> for this control is called.</source>
          <target state="translated">Responde cuando se llama a <ph id="ph1">&lt;see cref="P:System.Windows.Controls.AccessText.AccessKey" /&gt;</ph> para este control.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A&gt;</ph> is <ph id="ph2">`true`</ph>, this method calls the base implementation, which gives this control focus.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A&gt;</ph> es <ph id="ph2">`true`</ph>, este método llama a la implementación base, que proporciona este foco de control.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>Otherwise, this method raises the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">En caso contrario, este método provoca el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph> routed event.</source>
          <target state="translated">Genera el evento enrutado <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
          <source>The control raises the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event by calling <ph id="ph2">&lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;</ph>.</source>
          <target state="translated">El control provoca la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos mediante una llamada a <ph id="ph2">&lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>enrutan Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /&gt;</ph> método para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The data for <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /&gt;</ph>.</source>
          <target state="translated">Datos para <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /&gt;</ph> property changes.</source>
          <target state="translated">Se llama a este método cuando cambia la propiedad de <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> routed event that occurs when the user presses a key while this control has focus.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> enrutado que se produce si el usuario presiona una tecla cuando este control tiene el foco.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is not set to <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph> and one of the following cases are true:</source>
          <target state="translated">Esta implementación marca el <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> evento como controlado estableciendo la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph3">`true`</ph> cuando <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> no está establecido en <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph> y uno de los casos siguientes son ciertas:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The user presses the SPACEBAR.</source>
          <target state="translated">El usuario presiona la barra espaciadora.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The user presses ENTER and <ph id="ph1">&lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;</ph> is <ph id="ph2">`true`</ph> for this control.</source>
          <target state="translated">El usuario presiona la tecla ENTRAR y <ph id="ph1">&lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;</ph> es <ph id="ph2">`true`</ph> para este control.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>In all other cases, this implementation does not change the handled state (the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property) of the <ph id="ph2">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> event data.</source>
          <target state="translated">En todos los demás casos, esta implementación no cambia el estado controlado (la <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad) de la <ph id="ph2">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> datos del evento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">Datos para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> routed event that occurs when the user releases a key while this control has focus.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> enrutado que se produce si el usuario suelta una tecla cuando este control tiene el foco.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyUp&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when the user releases the SPACEBAR.</source>
          <target state="translated">Esta implementación marca el <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyUp&gt;</ph> evento como controlado estableciendo la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph3">`true`</ph> cuando el usuario suelta la barra espaciadora.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>Otherwise, this implementation does not change the handled state (the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property) of the <ph id="ph2">&lt;xref:System.Windows.UIElement.KeyUp&gt;</ph> event data.</source>
          <target state="translated">En caso contrario, esta implementación no cambia el estado controlado (la <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad) de la <ph id="ph2">&lt;xref:System.Windows.UIElement.KeyUp&gt;</ph> datos del evento.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /&gt;</ph> event.</source>
          <target state="translated">Datos para el evento <ph id="ph1">&lt;see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <source>Called when an element loses keyboard focus.</source>
          <target state="translated">Llamado cuando un elemento pierde el foco de teclado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> event.</source>
          <target state="translated">Datos para el evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.LostMouseCapture" /&gt;</ph> routed event that occurs when this control is no longer receiving mouse event messages.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.LostMouseCapture" /&gt;</ph> enrutado que se produce cuando este control ya no está recibiendo los mensajes de eventos del mouse.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <source>This implementation does not change the handled state (the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property) of the <ph id="ph2">&lt;xref:System.Windows.UIElement.LostMouseCapture&gt;</ph> event data.</source>
          <target state="translated">Esta implementación no cambia el estado controlado (la <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad) de la <ph id="ph2">&lt;xref:System.Windows.UIElement.LostMouseCapture&gt;</ph> datos del evento.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> event.</source>
          <target state="translated">Datos para el evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /&gt;</ph> routed event that occurs when the mouse enters this control.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /&gt;</ph> enrutado que se produce cuando el mouse entra en este control.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>, this implementation marks the <ph id="ph3">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> event as handled by setting the <ph id="ph4">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph5">`true`</ph> and raises the <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> está establecido en <ph id="ph2">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>, esta implementación marca el <ph id="ph3">&lt;xref:System.Windows.UIElement.MouseEnter&gt;</ph> evento como controlado estableciendo la <ph id="ph4">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph5">`true`</ph> y genera el <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">Datos para el evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseLeave" /&gt;</ph> routed event that occurs when the mouse leaves an element.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseLeave" /&gt;</ph> enrutado que se produce cuando el mouse deja un elemento.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeave&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is set to <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>.</source>
          <target state="translated">Esta implementación marca el <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeave&gt;</ph> evento como controlado estableciendo la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph3">`true`</ph> cuando <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> está establecido en <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /&gt;</ph> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /&gt;</ph> enrutado que se produce cuando se presiona el botón primario mientras el puntero del mouse está sobre este control.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is not set to <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>.</source>
          <target state="translated">Esta implementación marca el <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> evento como controlado estableciendo la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph3">`true`</ph> cuando <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> no está establecido en <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>To respond to the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> event, attach an event handler to the <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;</ph> event, or call <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> with <ph id="ph4">`handledEventsToo`</ph> set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">Para responder a la <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> eventos, adjuntar un controlador de eventos para el <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;</ph> llamada o evento <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> con <ph id="ph4">`handledEventsToo`</ph> establecido en <ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Controls.ClickMode.Press&gt;</ph>, this method raises the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> está establecido en <ph id="ph2">&lt;xref:System.Windows.Controls.ClickMode.Press&gt;</ph>, este método provoca el <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /&gt;</ph> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /&gt;</ph> enrutado que se produce cuando se suelta el botón primario mientras el puntero del mouse está sobre este control.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is not set to <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>.</source>
          <target state="translated">Esta implementación marca el <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</ph> evento como controlado estableciendo la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph3">`true`</ph> cuando <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> no está establecido en <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>To respond to the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</ph> event, attach an event handler to the <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp&gt;</ph> event, or call <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> with <ph id="ph4">`handledEventsToo`</ph> set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">Para responder a la <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</ph> eventos, adjuntar un controlador de eventos para el <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp&gt;</ph> llamada o evento <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> con <ph id="ph4">`handledEventsToo`</ph> establecido en <ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Controls.ClickMode.Release&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> is <ph id="ph4">`true`</ph>, this method raises the <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> está establecido en <ph id="ph2">&lt;xref:System.Windows.Controls.ClickMode.Release&gt;</ph> es <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> es <ph id="ph4">`true`</ph>, este método provoca el <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseMove" /&gt;</ph> routed event that occurs when the mouse pointer moves while over this element.</source>
          <target state="translated">Proporciona control de clases para el evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.MouseMove" /&gt;</ph> enrutado que se produce cuando se mueve el puntero del mouse mientras está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseMove&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> is not set to <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> is <ph id="ph7">`true`</ph>.</source>
          <target state="translated">Esta implementación marca el <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseMove&gt;</ph> evento como controlado estableciendo la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propiedad de los datos del evento para <ph id="ph3">`true`</ph> cuando <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;</ph> no está establecido en <ph id="ph5">&lt;xref:System.Windows.Controls.ClickMode.Hover&gt;</ph> y <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> es <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>To respond to the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseMove&gt;</ph> event, attach an event handler to the <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseMove&gt;</ph> event, or call <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> with <ph id="ph4">`handledEventsToo`</ph> set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">Para responder a la <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseMove&gt;</ph> eventos, adjuntar un controlador de eventos para el <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseMove&gt;</ph> llamada o evento <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> con <ph id="ph4">`handledEventsToo`</ph> establecido en <ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Si invalida <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /&gt;</ph>, llame siempre a la implementación base su <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">Error al llamar a la implementación base evita que las clases base de controlar el evento con un controlador de clase, que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de los requisitos.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Specifies the size changes.</source>
          <target state="translated">Especifica los cambios de tamaño.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Called when the rendered size of a control changes.</source>
          <target state="translated">Llamado cuando cambia el tamaño representado de un control.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Overrides the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">Invalida el <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A&gt;</ph> método de la <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>