<Type Name="ToggleButton" FullName="System.Windows.Controls.Primitives.ToggleButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83ec8ebc400cf1435c465274cfd86fda341b10ad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToggleButton : System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToggleButton extends System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ToggleButton&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToggleButton : System::Windows::Controls::Primitives::ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Checked")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Clase base para controles que pueden intercambiar estados, como <see cref="T:System.Windows.Controls.CheckBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Controls.Primitives.ToggleButton> es un <xref:System.Windows.Controls.ContentControl>, lo que significa que solo puede contener un único objeto de cualquier tipo (por ejemplo, una cadena, una imagen o un panel). Para obtener más información, vea la clase <xref:System.Windows.Controls.ContentControl>.  
  
 El <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> propiedad especifica el estado de la <xref:System.Windows.Controls.Primitives.ToggleButton>. El <xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A> propiedad especifica si el <xref:System.Windows.Controls.Primitives.ToggleButton> tiene dos o tres estados.  
  
## <a name="customizing-the-togglebutton-control"></a>Personalizar el Control ToggleButton  
 Para aplicar la misma configuración de propiedad a varios <xref:System.Windows.Controls.Primitives.ToggleButton> controles, utilice la <xref:System.Windows.FrameworkElement.Style%2A> propiedad. Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para dar al control una apariencia única. Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Para ver los elementos y los Estados que son específicos de la <xref:System.Windows.Controls.Primitives.ToggleButton>, consulte [ToggleButton Syles y plantillas de](~/docs/framework/wpf/controls/togglebutton-syles-and-templates.md).  
  
 Propiedades de dependencia para este control se pueden establecer el estilo predeterminado del control.  Si se establece una propiedad de un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación. El estilo predeterminado se determina por el tema del escritorio que se utiliza cuando se ejecuta la aplicación.  Para obtener más información, consulte [temas de WPF predeterminado](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Establecer una propiedad visual solo tendrá un efecto si esa propiedad es presentes en la plantilla predeterminada del control de botón y se establece mediante una. Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente mediante la creación de un elemento ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToggleButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToggleButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Checked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Checked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ToggleButton.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Checked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Checked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se activa <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Checked"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 El ejemplo siguiente se cambia se suscribe a la <xref:System.Windows.Controls.Primitives.ToggleButton.Checked> y <xref:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent> eventos para cambiar la <xref:System.Windows.Controls.TextBlock.FontStyle%2A> de la <xref:System.Windows.Controls.TextBlock>, `textBlock1`.  
  
 [!code-xaml[CheckBox_Snippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml#2)]  
  
 [!code-csharp[CheckBox_Snippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml.cs#3)]
 [!code-vb[CheckBox_Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CheckBox_Snippets/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indeterminate">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Indeterminate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Indeterminate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Indeterminate As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Indeterminate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el estado de <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> no está activado ni desactivado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Indeterminate"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndeterminateEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent IndeterminateEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent IndeterminateEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IndeterminateEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ IndeterminateEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property IsChecked As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsChecked { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.NullableBoolConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si se activa <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> está activado; false si <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> no está activado; de lo contrario, <see langword="null" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control que hereda de <xref:System.Windows.Controls.Primitives.ToggleButton> determina su comportamiento cuando esta propiedad es `null`.  
  
## <a name="checkbox"></a>CheckBox  
 Cuando el <xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A> propiedad está establecida en true, un usuario puede hacer clic en un <xref:System.Windows.Controls.CheckBox> para elegir entre tres posibles estados. La tabla siguiente describen los tres estados de un <xref:System.Windows.Controls.CheckBox>.  
  
|Estado de la <xref:System.Windows.Controls.CheckBox>|Valor de <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A>|  
|------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|Activado|`true`|  
|No está activada|`false`|  
|Indeterminado|`null`|  
  
 Si <xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A> es false, todavía mediante programación, puede establecer esta propiedad en `null` para colocar el <xref:System.Windows.Controls.CheckBox> en un estado indeterminado, pero el usuario no se puede establecer la <xref:System.Windows.Controls.CheckBox> al estado indeterminado a través de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
## <a name="radiobutton"></a>RadioButton  
 Si establece esta propiedad en `null` en un <xref:System.Windows.Controls.RadioButton>, el <xref:System.Windows.Controls.RadioButton> está desactivada.  
  
<a name="xamlAttributeUsage_IsChecked"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
 <*object* `IsChecked`="<xref:System.Boolean>"/>  
  
 \- o -  
  
 <*objeto* `IsChecked`= "{[extensión de marcado x: Null](~/docs/framework/xaml-services/x-null-markup-extension.md)}" / >  
  
<a name="dependencyPropertyInfo_IsChecked"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.Controls.CheckBox> establecido en un estado indeterminado.  
  
 [!code-xaml[CheckBox_Snippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThreeState">
      <MemberSignature Language="C#" Value="public bool IsThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" />
      <MemberSignature Language="VB.NET" Value="Public Property IsThreeState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreeState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina si el control admite dos o tres estados.</summary>
        <value>
          <see langword="true" /> si el control admite tres estados; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> propiedad puede establecerse en `null` como un tercer estado cuando <xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A> es `true`.  
  
<a name="dependencyPropertyInfo_IsThreeState"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty>|  
|Propiedades de metadatos establecidos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThreeStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsThreeStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsThreeStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsThreeStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsThreeStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnChecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos para el evento <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" />.</param>
        <summary>Llamado cuando <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> provoca un evento <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Llamado cuando se hace clic con el mouse o el teclado en un control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Proporciona una implementación adecuada de <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> para este control, como parte de la infraestructura de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</summary>
        <returns>Implementación de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica del tipo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndeterminate">
      <MemberSignature Language="C#" Value="protected virtual void OnIndeterminate (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIndeterminate(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIndeterminate (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIndeterminate(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos para el evento <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" />.</param>
        <summary>Se invoca cuando un control <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> genera un evento <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnToggle">
      <MemberSignature Language="C#" Value="protected internal virtual void OnToggle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnToggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnToggle ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnToggle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Llamado por el método <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> para implementar el comportamiento de alternancia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método alterna el <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnchecked">
      <MemberSignature Language="C#" Value="protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnchecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnchecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnchecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos para el evento <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" />.</param>
        <summary>Se invoca cuando un control <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> genera un evento <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ToggleButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una representación de cadena de un objeto <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />.</summary>
        <returns>Representación de cadena de un objeto <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.Primitives.ToggleButton.ToString%2A> método devuelve una cadena que contiene el <xref:System.Windows.Controls.ContentControl.Content%2A> y el valor de la <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unchecked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unchecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unchecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unchecked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unchecked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se desactiva <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Unchecked"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 El ejemplo siguiente se cambia se suscribe a la <xref:System.Windows.Controls.Primitives.ToggleButton.Checked> y <xref:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent> eventos para cambiar la <xref:System.Windows.Controls.TextBlock.FontStyle%2A> de la <xref:System.Windows.Controls.TextBlock>, `textBlock1`.  
  
 [!code-xaml[CheckBox_Snippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml#2)]  
  
 [!code-csharp[CheckBox_Snippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml.cs#3)]
 [!code-vb[CheckBox_Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CheckBox_Snippets/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UncheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UncheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UncheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UncheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento enrutado <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>