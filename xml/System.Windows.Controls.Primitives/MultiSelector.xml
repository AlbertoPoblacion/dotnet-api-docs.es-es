<Type Name="MultiSelector" FullName="System.Windows.Controls.Primitives.MultiSelector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16636ab82bb8df52930bff60c00b29067ef7fe16" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618129" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MultiSelector : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MultiSelector extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.MultiSelector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MultiSelector&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiSelector abstract : System::Windows::Controls::Primitives::Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase abstracta para los controles que permiten la selección de varios elementos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al derivar una clase a partir de la <xref:System.Windows.Controls.Primitives.MultiSelector> clase, establezca el <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> propiedad `true` para permitir la selección múltiple en el control.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultiSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MultiSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Primitives.MultiSelector> es una clase abstracta y no se pueden crear instancias directamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void BeginUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdateSelectedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginUpdateSelectedItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginUpdateSelectedItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia una nueva transacción de selección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> método establece <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> a `true`. El <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> método establece <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> a `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> método en una clase derivada de <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> es <see langword="true" /> cuando se llama a este método.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleItems">
      <MemberSignature Language="C#" Value="protected bool CanSelectMultipleItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultipleItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" />
      <MemberSignature Language="VB.NET" Value="Protected Property CanSelectMultipleItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool CanSelectMultipleItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los distintos elementos de <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> pueden seleccionarse al mismo tiempo.</summary>
        <value>
          Es <see langword="true" /> si se pueden seleccionar al mismo tiempo varios elementos de <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> propiedad `true` en una clase derivada para permitir la selección múltiple para esa clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer esta propiedad en una clase derivada.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#1](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void EndUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdateSelectedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndUpdateSelectedItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndUpdateSelectedItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Confirma los elementos seleccionados en <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método establece <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> a `false` y actualiza el <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> colección.  
  
 El <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> método establece <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> a `true`.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> método en una clase derivada de <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> es <see langword="false" /> cuando se llama a este método.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatingSelectedItems">
      <MemberSignature Language="C#" Value="protected bool IsUpdatingSelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdatingSelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsUpdatingSelectedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsUpdatingSelectedItems { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> está realizando actualmente una actualización masiva en la colección <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" />.</summary>
        <value>
          Es <see langword="true" /> si <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> está realizando actualmente una actualización masiva en la colección <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" />; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> método establece <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> a `true`. El <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> método establece <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> a `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> propiedad en una clase derivada de <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Selecciona todos los elementos de <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este solo si método <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> es `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> es <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ SelectedItems { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los elementos de <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> que están seleccionados.</summary>
        <value>Elementos de <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> que están seleccionados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> es `false`, no se puede agregar más de un elemento a la <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> colección. Intenta hacerlo, producirá una excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public void UnselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnselectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anula la selección de todos los elementos de <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método independientemente de si <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> es `true` o `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>