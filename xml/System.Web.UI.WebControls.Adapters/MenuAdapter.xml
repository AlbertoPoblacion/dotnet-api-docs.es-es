<Type Name="MenuAdapter" FullName="System.Web.UI.WebControls.Adapters.MenuAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5499eea392ecdf75756f2f53c5e0ad25697ab2b1" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51900907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuAdapter&#xA;Inherits WebControlAdapter&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type MenuAdapter = class&#xA;    inherit WebControlAdapter&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Proporciona un medio de modificar el comportamiento del control <see cref="T:System.Web.UI.WebControls.Menu" /> para ciertos exploradores Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> modifica el marcado o el comportamiento de un <xref:System.Web.UI.WebControls.Menu> control para un explorador específico o una clase de exploradores o actúa como filtro en alguna capacidad.  
  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.MenuItem> objetos en el <xref:System.Web.UI.WebControls.Menu> control se representan como hipervínculos para alojar la navegación del menú. El <xref:System.Web.UI.WebControls.Menu> clase mantiene el estado implementando la <xref:System.Web.UI.IPostBackEventHandler> interfaz para que pueda responder a y provocar eventos concretos durante la devolución de datos. Puede ampliar el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> clase para personalizar aún más la representación o el comportamiento de la <xref:System.Web.UI.WebControls.Menu> control.  
  
 Hace que la solicitud inicial para un adaptador de .NET Framework buscar un adaptador asignado para el control, dadas las características del explorador que realiza solicitud. La <xref:System.Web.HttpBrowserCapabilities> clase utiliza los archivos de definición de explorador para identificar las características del explorador del cliente y para asignar el adaptador para el tipo de explorador.  
  
 Para obtener más información sobre la representación adaptable en ASP.NET, vea [arquitectura información general de Control de comportamiento adaptable](https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.AspNetHostingPermission" />
    <altmember cref="T:System.Web.HttpBrowserCapabilities" />
    <related type="Article" href="https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)">Introducción a la arquitectura de comportamiento de Control adaptable</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hace que la solicitud inicial para un adaptador de .NET Framework buscar un adaptador asignado para el control, dadas las características del explorador que realiza solicitud. Después de que se encuentra el adaptador, el control mantiene una referencia a la instancia de adaptador asignada en su <xref:System.Web.UI.Control.Adapter%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.Menu Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Menu Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Menu" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::Menu ^ Control { System::Web::UI::WebControls::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.Menu" Usage="System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera una referencia fuertemente tipada al control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado con este objeto <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />.</summary>
        <value>El control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado al objeto <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> propiedad proporciona una manera de hacer referencia a control correspondiente del adaptador. Cuando un adaptador está asociado con un control determinado, .NET Framework llamará a los métodos de ciclo de vida del adaptador en lugar de o además de los métodos de ciclo de vida del control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> propiedad para recuperar el <xref:System.Web.UI.WebControls.Menu> control de la clase primaria. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/CS/contosomenuadapter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/VB/contosomenuadapter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadAdapterControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadAdapterControlState : obj -&gt; unit" Usage="menuAdapter.LoadAdapterControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Objeto <see cref="T:System.Object" /> existente en el formulario de un diccionario que contiene la información de estado del adaptador.</param>
        <summary>Carga cualquier información de estado de control guardada por el método <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" /> durante una solicitud anterior a la página.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un adaptador necesita mantener la información de estado privado, puede invalidar el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> y <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> métodos. En el caso de los <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> (clase), donde la jerarquía de menús mostrada depende del elemento seleccionado anteriormente <xref:System.Web.UI.WebControls.MenuItem> objeto, `state` proporciona un diccionario de pares nombre/valor que contiene la ruta de acceso del elemento seleccionado en la jerarquía del menú. El `state` parámetro es un <xref:System.Web.UI.Pair> objeto guardado por el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> durante una solicitud anterior a la página.  
  
 Si el control no está registrado para participar en el estado de control, el adaptador debe registrarse para el estado de control. Además del estado del control, a diferencia de otros métodos de ciclo de vida, se mantiene el estado del control de adaptador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Estado del control Ejemplo de estado de vista</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menuAdapter.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos de <see cref="T:System.EventArgs" /> asociados a este evento.</param>
        <summary>Registra el control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado como uno que requiere el estado de control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> método registra el control asociado como uno que requiere el estado del control. De forma predeterminada, .NET Framework llama el control de servidor Web propio <xref:System.Web.UI.Control.OnInit%2A> método. Sin embargo, después de la <xref:System.Web.UI.Control.Adapter%2A> está establecida la propiedad del control de servidor, .NET Framework llamará a la implementación del adaptador de la <xref:System.Web.UI.Control.OnInit%2A> método en lugar de la implementación del control.  
  
 Use el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> método para inicializar la configuración del control. Durante un postback, se trata de una fase importante para administrar la interacción con los datos de estado de vista existentes. Para obtener más información, consulte [arquitectura información general de Control de comportamiento adaptable](https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si el adaptador reemplaza el <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" /> método, debe llamar al método correspondiente en la clase base. En caso contrario, el control propio <see cref="E:System.Web.UI.Control.Init" /> no se producirá el evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menuAdapter.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos de <see cref="T:System.EventArgs" /> asociados a este evento.</param>
        <summary>Controla el método <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> del control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> método llama a una instancia interna `OnPreRender` método en el <xref:System.Web.UI.WebControls.Menu> clase. Todas las demás funciones de representación previa de las clases principales, como el enlace de datos, aplicar estilos y las asignaciones de eventos realizan según lo previsto.  
  
 De forma predeterminada, .NET Framework llama el <xref:System.Web.UI.WebControls.Menu> del control <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> método. Sin embargo, después de la <xref:System.Web.UI.Control.Adapter%2A> está establecida la propiedad de ese control, .NET Framework llamará a la implementación del adaptador de la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> método en lugar de la implementación del control.  
  
 Use el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> método para finalizar la configuración del control. Se guardarán los cambios realizados en las propiedades de control en esta fase para ver el estado, pero los cambios realizan en el <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> método no se guardan. Para obtener más información, consulte [arquitectura información general de Control de comportamiento adaptable](https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si el adaptador reemplaza el <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" /> método, debe llamar al método correspondiente en la clase base. En caso contrario, propios del control <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> no se generará ningún método.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menuAdapter.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Objeto <see cref="T:System.String" /> que representa la ruta de acceso del nodo actual en la jerarquía de menús.</param>
        <summary>Se utiliza para mantener la ruta de acceso del menú cuando se genera un evento de postback.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent%2A> método se llama cuando el <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> evento se genera y se usa para mantener la ruta de navegación del menú. El `eventArgument` parámetro contiene una cadena delimitada de elementos de menú que identifican la ubicación actual en la jerarquía de menús.  
  
 La página pasa el valor de `eventArgument` al control asociado <xref:System.Web.UI.WebControls.Menu.RaisePostBackEvent%2A> método. El asociado <xref:System.Web.UI.WebControls.Menu> control también representa el elemento de marcado que provoca la devolución de datos que se produzca. Si el control representa script de cliente para la devolución, el argumento de la secuencia de comandos se pasa en el `eventArgument` parámetro. Si la devolución de datos está causado por un envío simple, `eventArgument` es `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La profundidad del nodo actual es superior a la permitida. Este problema puede deberse a una declaración no válida, a un cambio desde la última petición, o a una petición falsificada (con suplantación).</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Instancia de <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para compilar y representar los resultados específicos del dispositivo.</param>
        <summary>Agrega atributos de etiqueta y escribe el marcado para la etiqueta de apertura del control en el flujo de salida enviado al explorador o dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> método agrega los atributos de etiqueta y escribe el marcado para la etiqueta de apertura del control en el flujo de salida que se envían a la secuencia de respuesta para el explorador del cliente. El <xref:System.Web.UI.WebControls.MenuItem> objetos se representará de forma individual en el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> método y el control se cerrará con una llamada posterior <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> método.  
  
 Invalidar <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> cuando desee implementar un comportamiento personalizado. Por ejemplo, invalide el método para escribir varias etiquetas en la secuencia de respuesta antes de cualquier control de contenido, como `<table><tr><td>`. Use la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> método junto con el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> método para garantizar la coherencia etiqueta en la salida de apertura y cierre.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene métodos para compilar y representar la salida específica del dispositivo.</param>
        <summary>Escribe los elementos de menú asociados en el control <see cref="T:System.Web.UI.WebControls.Menu" /> asociado al flujo de salida como una serie de hipervínculos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> método escribe el <xref:System.Web.UI.WebControls.MenuItem> objetos asociado <xref:System.Web.UI.WebControls.Menu> control en el flujo de salida como hipervínculos. El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> se llama al método desde el <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> método y se usa para realizar modificaciones en el código de marcado que se representa en un explorador del dispositivo.  
  
 Antes de esta fase del ciclo de vida y solo la creación real de marcado para el control hecho aquí, se deben establecer las propiedades del control. No se guardan los cambios realizados en el control en esta fase del ciclo de vida para el estado de vista. Para guardar los cambios realizados en el control, reemplace el <xref:System.Web.UI.Control.OnPreRender%2A> eventos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La profundidad del elemento actual es superior a la permitida.  
  
O bien 
El elemento actual está deshabilitado.</exception>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Instancia de <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para compilar y representar los resultados específicos del dispositivo.</param>
        <summary>Crea el marcado final y escribe el marcado de la etiqueta de cierre del control en el flujo de salida enviado al explorador o dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> método escribe el marcado para la etiqueta de cierre del control en el flujo de salida enviado al flujo de respuesta para el explorador del cliente. Los atributos, atributos de estilo y etiqueta de apertura se representan en el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> método. El <xref:System.Web.UI.WebControls.MenuItem> objetos se representan de forma individual en el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> método.  
  
 Invalidar <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> cuando desee implementar un comportamiento personalizado. Por ejemplo, invalide el método para escribir varias etiquetas de cierre en la secuencia de respuesta después de cualquier control de contenido, como `</td></tr></table>`. Use la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> método junto con el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> método para garantizar la coherencia etiqueta en la salida de apertura y cierre.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderItem">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderItem (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderItem(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.MenuItem item, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderItem (writer As HtmlTextWriter, item As MenuItem, position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderItem(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::MenuItem ^ item, int position);" />
      <MemberSignature Language="F#" Value="abstract member RenderItem : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.MenuItem * int -&gt; unit&#xA;override this.RenderItem : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.MenuItem * int -&gt; unit" Usage="menuAdapter.RenderItem (writer, item, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="writer">Instancia de <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para compilar y representar los resultados específicos del dispositivo.</param>
        <param name="item">Objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> que contiene las propiedades que se escribirán en el flujo de respuesta.</param>
        <param name="position">Posición del objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado en la jerarquía de menús.</param>
        <summary>Representa un solo elemento de menú como un hipervínculo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> se llama al método desde el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> método para recuperar los estilos y atributos del espacio de la <xref:System.Web.UI.WebControls.MenuItem> objeto y aplicarlos a un elemento de hipervínculo recién creado. Se recorre la jerarquía de menús en la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> método y llamará a la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> método para procesar cada elemento. Cada elemento se representa como un hipervínculo y hereda las propiedades y los estilos del elemento especificado <xref:System.Web.UI.WebControls.MenuItem> control. El hipervínculo que se representa en la página es uno de los siguientes:  
  
-   Un evento de postback para abrir o seleccione el elemento.  
  
-   Un vínculo para navegar hasta el destino especificado en el <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> propiedad de la <xref:System.Web.UI.WebControls.MenuItem> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveAdapterControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveAdapterControlState : unit -&gt; obj" Usage="menuAdapter.SaveAdapterControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los cambios de estado de control privado del adaptador que se hayan producido desde que la página se devolvió al servidor.</summary>
        <returns>Un objeto <see cref="T:System.Object" /> que contiene la información de estado de los controles del adaptador como <see cref="T:System.Web.UI.StateBag" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> método usa el <xref:System.Web.UI.WebControls.Menu> estado para mantener la ruta de navegación actual del menú de control. Cuando un adaptador necesita mantener la información de estado privado, puede invalidar el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> y <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> métodos. Un adaptador puede mantener el estado de control privado cuando hay características complejas que necesitan para mantener el estado entre las solicitudes, separadas del estado del control asociado. El adaptador debe registrarse para el estado de control durante la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> llamada al método en cada solicitud.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Un objeto <see cref="T:System.String" /> que contiene un argumento de evento opcional que se pasará al controlador de eventos.</param>
        <summary>Permite que la clase <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> procese un evento provocado al devolver una página al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> método permite el <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> clase para procesar un evento que se desencadena cuando se publica una página al servidor. La página pasa `eventArgument` a la <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
      </Docs>
    </Member>
  </Members>
</Type>