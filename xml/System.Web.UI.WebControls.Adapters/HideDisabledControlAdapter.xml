<Type Name="HideDisabledControlAdapter" FullName="System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19565069d457490e79686d96becc264cb17a31a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HideDisabledControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HideDisabledControlAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class HideDisabledControlAdapter&#xA;Inherits WebControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HideDisabledControlAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona funciones de representación al control Web asociado con el fin de modificar el comportamiento o el marcado predeterminado para un explorador concreto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase adapta asociado <xref:System.Web.UI.WebControls.WebControl> control para modificar el marcado o comportamiento predeterminado para un explorador específico. Puede ampliar el <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase para personalizar aún más la representación de la <xref:System.Web.UI.WebControls.WebControl> control.  
  
 Los adaptadores son componentes compilados de .NET Framework que llevar a cabo a través de una o varias fases del ciclo de vida de una página o un control. Extender el <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase proporcionará acceso a las fases del ciclo de vida de la <xref:System.Web.UI.WebControls.WebControl> control. Para obtener más información, consulte [arquitectura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 La solicitud inicial de un adaptador hace que .NET Framework busque un adaptador asignado para el control de acuerdo con las características del explorador que lo solicita. Archivos de definición de explorador se usan por el <xref:System.Web.HttpBrowserCapabilities> clase para identificar las características del explorador del cliente y asignar el adaptador para el tipo de explorador. Para obtener más información, consulte [arquitectura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 Para obtener una descripción de la arquitectura de representación adaptable de ASP.NET y un tutorial paso a paso que muestra cómo implementar un adaptador de control y asignarlo a un control, vea "Creación de ASP.NET Server Control Adapters: An Introduction" en MSDN Library en [ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo extender el <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase para mostrar un <xref:System.Web.UI.WebControls.Label> control en un estado habilitado y deshabilitado. Este ejemplo consta de tres partes:  
  
-   Adaptador derivado de la <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase.  
  
-   El archivo .aspx que incorpora el <xref:System.Web.UI.WebControls.Label> control y contenido específico del dispositivo.  
  
-   Un archivo de explorador para vincular el adaptador a un tipo de dispositivo.  
  
 En el ejemplo de código siguiente se muestra cómo extender la <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter/CS/hidedisabledcontrolcontosoadapter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter/VB/hidedisabledcontrolcontosoadapter.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo declarar un <xref:System.Web.UI.WebControls.Label> control con contenido específico del dispositivo.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter/CS/implcs.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter/VB/implvb.aspx#3)]  
  
 En el ejemplo de código siguiente se muestra cómo vincular el <xref:System.Web.UI.WebControls.Label> control para el adaptador personalizado para exploradores que se ejecutan en Windows CE. NET.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.AspNetHostingPermission" />
    <altmember cref="T:System.Web.HttpBrowserCapabilities" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HideDisabledControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HideDisabledControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework construye una instancia de la <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase. La solicitud inicial de un adaptador hace que .NET Framework busque un adaptador asignado para el control de acuerdo con las características del explorador que lo solicita. Una vez encontrado, el control contiene una referencia a la instancia de adaptador asignada en su <xref:System.Web.UI.Control.Adapter%2A> propiedad. Para obtener información sobre las asignaciones de adaptador y archivos de definición de explorador, vea [arquitectura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene métodos para compilar y representar la salida específica del dispositivo.</param>
        <summary>Escribe el control Web asociado en el flujo de salida como HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render%2A> método escribe asociado <xref:System.Web.UI.WebControls.WebControl> control en el flujo de salida como HTML.  
  
 De forma predeterminada, .NET Framework llama en el control de servidor Web propio <xref:System.Web.UI.Control.Render%2A> método. Sin embargo, una vez que la <xref:System.Web.UI.Control.Adapter%2A> se establece la propiedad de ese control, .NET Framework se ejecutará la implementación del adaptador de la <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render%2A> eventos a través de la que el control asociado.  
  
 El <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render%2A> eventos se usan para realizar modificaciones en el código de marcado que se representa en un explorador del dispositivo. Propiedades del control deben establecerse antes de esta fase del ciclo de vida y solo la creación de marcado reales para el control hecho aquí. No se guardan los cambios realizados en el control en esta fase del ciclo de vida para ver el estado. Para guardar los cambios realizados en el control, reemplace el <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> eventos.  
  
 El <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render%2A> eventos también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado, que es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render%2A> método para pasar la <xref:System.Web.UI.HtmlTextWriter> objeto al control principal para representar si está habilitado el control asociado. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter/CS/hidedisabledcontrolcontosoadapter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter/VB/hidedisabledcontrolcontosoadapter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
  </Members>
</Type>