<Type Name="UrlEncodedParameterWriter" FullName="System.Web.Services.Protocols.UrlEncodedParameterWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cc9e2d1791fd77e4412cf494453604226591cf1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36395077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UrlEncodedParameterWriter : System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlEncodedParameterWriter extends System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UrlEncodedParameterWriter&#xA;Inherits MimeParameterWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlEncodedParameterWriter abstract : System::Web::Services::Protocols::MimeParameterWriter" />
  <TypeSignature Language="F#" Value="type UrlEncodedParameterWriter = class&#xA;    inherit MimeParameterWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeParameterWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona la funcionalidad de codificación de la dirección URL para los escritores de parámetros de solicitud salientes, para los clientes de servicios Web implementados mediante HTTP pero sin SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> y otras clases en el <xref:System.Web.Services.Protocols> espacio de nombres admiten implementaciones de .NET Framework de los servicios Web a través de las operaciones HTTP-GET y HTTP-POST. Los lectores y escritores de servicios web serializan y deserializan, respectivamente, entre los parámetros o los objetos devueltos de métodos Web y las secuencias de solicitud o respuesta HTTP. Los lectores y escritores de servicios web usan HTTP para el transporte pero no para intercambiar mensajes con la norma de SOAP.  
  
 Abstracto <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> clase hereda de la clase abstracta <xref:System.Web.Services.Protocols.MimeParameterWriter> (clase), agregar funcionalidad para la escritura de cliente de los parámetros del método Web en secuencias de solicitud HTTP de codificación de URL.  
  
 Normalmente no necesitará utilizar <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> o directamente en sus clases descendientes. En su lugar, cuando la herramienta Wsdl.exe genera código de proxy del cliente según las implementaciones HTTP-GET o HTTP-POST, aplica el <xref:System.Web.Services.Protocols.HttpMethodAttribute> a cada método Web y establece el atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> propiedad al tipo adecuado.  
  
> [!NOTE]
>  El protocolo de transferencia de hipertexto--HTTP/1.1 especifica el uso de una variación en formato de mensaje de extensiones multipropósito de correo Internet (MIME), que a su vez permite que los mensajes de correo electrónico especificar diferentes tipos de contenido, texto y binarias.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlEncodedParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UrlEncodedParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encode">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codifica todos los valores de parámetro para un método Web y los escribe en el escritor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.Encode : System.IO.TextWriter * obj[] -&gt; unit" Usage="urlEncodedParameterWriter.Encode (writer, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> que escribe en la solicitud HTTP.</param>
        <param name="values">Valores de parámetro del método Web.</param>
        <summary>Codifica todos los valores de parámetro para un método Web y los escribe en el escritor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga de la <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> método llama a la otra sobrecarga, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, para cada uno de los valores de parámetro, incluidos los elementos individuales en matrices.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Encode : System.IO.TextWriter * string * obj -&gt; unit" Usage="urlEncodedParameterWriter.Encode (writer, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.IO.TextWriter" /> que escribe en la solicitud HTTP.</param>
        <param name="name">Nombre del parámetro que se va a codificar.</param>
        <param name="value">Valor del parámetro que se va a codificar.</param>
        <summary>Codifica un valor de parámetro especificado y lo escribe en el escritor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La otra firma de la <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> método <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, que se llama para cada método Web, llama a esta firma de la <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> método para cada uno de los valores de parámetro, incluidos los elementos individuales en matrices.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="override this.GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="urlEncodedParameterWriter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Objeto <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica el método Web para el que se obtiene el inicializador.</param>
        <summary>Devuelve un inicializador para el método especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que contiene el inicializador para el método especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un inicializador es un objeto que se pasa como un parámetro a la <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> método. Para el <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> (clase), el inicializador es el valor de la <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> propiedad de la entrada <xref:System.Web.Services.Protocols.LogicalMethodInfo> objeto. La propiedad es una <xref:System.Reflection.ParameterInfo> matriz. El <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> método se invoca durante la inicialización del servicio. Más adelante, en el momento en que se rellena una solicitud, el objeto inicializador se pasa a la <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> método de otro <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instancia. El otro objeto realiza la escritura real.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="override this.Initialize : obj -&gt; unit" Usage="urlEncodedParameterWriter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Matriz <see cref="T:System.Reflection.ParameterInfo" />, obtenida a través de la propiedad <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> de la clase <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</param>
        <summary>Inicializa una instancia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> método se invoca en el momento en que se rellena una solicitud.  
  
 El parámetro de entrada, `initializer`, se obtiene mediante una llamada a la <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> método en otra instancia durante la inicialización del cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la codificación utilizada para escribir los parámetros en la solicitud HTTP.</summary>
        <value>Codificación utilizada para escribir parámetros en la solicitud HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una codificación, tal como está representado por la <xref:System.Text.Encoding> de clases, define cómo transformar los caracteres en una secuencia de bytes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>