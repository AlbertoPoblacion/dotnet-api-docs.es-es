<Type Name="AnyReturnReader" FullName="System.Web.Services.Protocols.AnyReturnReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60b996fc12a7fded21f71629de866c60dc53f838" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AnyReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnyReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.AnyReturnReader" />
  <TypeSignature Language="VB.NET" Value="Public Class AnyReturnReader&#xA;Inherits MimeReturnReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnyReturnReader : System::Web::Services::Protocols::MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un lector mínimo de valores devueltos correspondientes a la respuesta de entrada para aquellos clientes de servicios Web implementados utilizando HTTP pero sin SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader> y otras clases en el <xref:System.Web.Services.Protocols> espacio de nombres admiten implementaciones de .NET Framework de los servicios Web a través de las operaciones HTTP-GET y HTTP-POST. Los lectores y escritores de servicios web serializan y deserializan, respectivamente, entre los parámetros o los objetos devueltos de métodos Web y las secuencias de solicitud o respuesta HTTP. Los lectores y escritores de servicios web usan HTTP para el transporte pero no para intercambiar mensajes con la norma de SOAP.  
  
 El <xref:System.Web.Services.Protocols.AnyReturnReader> clase proporciona una implementación mínima de la interfaz de la clase abstracta principal <xref:System.Web.Services.Protocols.MimeReturnReader>. Normalmente no necesitará usar <xref:System.Web.Services.Protocols.AnyReturnReader> directamente. Cuando la herramienta Wsdl.exe genera código de proxy del cliente según las implementaciones HTTP-GET o HTTP-POST, se aplica el <xref:System.Web.Services.Protocols.HttpMethodAttribute> a cada método Web y de forma predeterminada se establece el atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> propiedad <xref:System.Web.Services.Protocols.XmlReturnReader>, otra clase se deriva de <xref:System.Web.Services.Protocols.MimeReturnReader>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeReturnReader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnyReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnyReturnReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.AnyReturnReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que indica el método web para el que se obtiene el inicializador.</param>
        <summary>Devuelve el parámetro pasado al método <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" />.</summary>
        <returns>Parámetro pasado al método <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un inicializador es un objeto que se pasa como un parámetro a la <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> método. Para el <xref:System.Web.Services.Protocols.AnyReturnReader> (clase), el inicializador es la instancia que hace referencia la palabra clave `this`, a menos que la <xref:System.Web.Services.Protocols.LogicalMethodInfo> valor del parámetro tiene un tipo de valor devuelto void, en el que caso el inicializador se establece en `null`.  
  
 El <xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer%2A> método se invoca durante la inicialización del servicio. Más adelante, cuando se procesa una respuesta, el inicializador <xref:System.Web.Services.Protocols.AnyReturnReader> objeto se pasa a la <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> método de otro <xref:System.Web.Services.Protocols.AnyReturnReader> instancia. La otra instancia realiza la llamada a la <xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Otra instancia de la clase <see cref="T:System.Web.Services.Protocols.AnyReturnReader" />, en la que se llamó previamente al método <see cref="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />.</param>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Web.Services.Protocols.AnyReturnReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> método no hace nada.  
  
 Este método se invoca en el momento en que se procesa una respuesta. El parámetro de entrada, `initializer`, es otra instancia de <xref:System.Web.Services.Protocols.AnyReturnReader>, obtenida durante la inicialización del cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (response As WebResponse, responseStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Read(System::Net::WebResponse ^ response, System::IO::Stream ^ responseStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">Representación de la respuesta HTTP enviada por un servicio Web, con el mensaje de salida para una operación.</param>
        <param name="responseStream">Flujo de salida cuyo contenido es el cuerpo de la respuesta HTTP representada por el parámetro <c>response</c>.</param>
        <summary>Devuelve el flujo de respuesta HTTP de entrada.</summary>
        <returns>Flujo de respuesta HTTP de entrada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.AnyReturnReader> implementación de la clase de la <xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A> método no realiza ninguna lectura. En su lugar, simplemente devuelve el <xref:System.IO.Stream> objeto pasado como un parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>