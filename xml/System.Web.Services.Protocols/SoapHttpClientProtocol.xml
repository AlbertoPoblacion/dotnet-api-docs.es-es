<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SoapHttpClientProtocol.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52ecf0c0b2e728e3d99693d8911f8def281322ee2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ecf0c0b2e728e3d99693d8911f8def281322ee2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
          <target state="translated">Especifica la clase cliente de la que se derivan los proxies cuando se utiliza el protocolo SOAP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> must be created for the XML Web service.</source>
          <target state="translated">Si está generando un cliente de servicios Web XML, a continuación, una clase de proxy que se deriva directa o indirectamente de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> deben crearse para el servicio Web XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</source>
          <target state="translated">Cuando el cliente del servicio Web XML llame mediante SOAP, la clase de proxy debe derivarse de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, que deriva de <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, in turn, derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, a su vez, deriva de <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> for the XML Web service you want to call.</source>
          <target state="translated">Para comunicarse con un servicio Web XML, cree una clase de proxy que se derive directa o indirectamente de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> para el servicio Web XML que desea llamar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">En lugar de crear manualmente la clase de proxy, utilice la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para crear una clase de proxy para la descripción del servicio de un servicio Web XML determinado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method, whereas asynchronous calls are made using the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se genera una clase de proxy para el protocolo SOAP, se realizan las llamadas sincrónicas a métodos de servicio Web XML a través de la <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> método, mientras que las llamadas asincrónicas se realizan utilizando la <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> método y el <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">El siguiente ejemplo de código es una clase de proxy generada por Wsdl.exe para el <ph id="ph1">`Math`</ph> servicio Web XML.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class.</source>
          <target state="translated">La clase de proxy se deriva de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, que deriva de la clase abstracta <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was generated.</source>
          <target state="translated">El ejemplo de código siguiente es el <ph id="ph1">`Math`</ph> servicio Web XML, desde el que se generó la clase de proxy anterior.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Información general sobre los ataques mediante scripts<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo es seguro para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</source>
          <target state="translated">Al invalidar esta clase, se pueden introducir métodos en la clase derivada que son específicos de un tipo determinado de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</source>
          <target state="translated">Los métodos de capturan de los parámetros y llamar a la clase base para realizar el trabajo de la comunicación con el servicio Web XML.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method and the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">Si los métodos introducidos son asincrónicos, llame a la <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> método y <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Si los métodos introducidos son sincrónicos, llame a la <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> property to the URL of the XML Web service method.</source>
          <target state="translated">El constructor reemplazado normalmente establece el <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> propiedad a la dirección URL del método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Nombre del método de servicios Web XML de la clase derivada que llama al método <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
          <target state="translated">Matriz de objetos que contiene los parámetros que se pasan al servicio Web XML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">El orden de los valores de la matriz se corresponde con el orden de los parámetros del método de llamada de la clase derivada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
          <target state="translated">Delegado al que se va a llamar cuando finalice la invocación asincrónica.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, no se llama al delegado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Extra information supplied by the caller.</source>
          <target state="translated">Información adicional proporcionada por el llamador.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">Inicia una invocación asincrónica de un método de servicios web XML utilizando SOAP.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the remote method call.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que se pasa al método <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> para obtener los valores devueltos en la llamada al método remoto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">Por lo general, no se llama el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método directamente, a menos que se haya creado su propia clase de proxy para un servicio Web XML.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
          <target state="translated">Una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) de una descripción del servicio expone los métodos de servicio Web XML como nombres de derivado de la clase de proxy para llamar a los métodos de servicio Web XML de forma sincrónica.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">Para llamar a los métodos de servicio Web XML de forma asincrónica, se agregan dos métodos adicionales a la clase de proxy para cada método de servicio Web XML, uno con la <ph id="ph1">`Begin`</ph> prefijo agregado al nombre del método del servicio Web XML y otro con el <ph id="ph2">`End`</ph> prefijo agregado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method to start an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">La clase proxy llama el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método para iniciar una llamada de invocación asincrónica al método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
          <target state="translated">Por ejemplo, si un servicio Web XML expone un método de servicio Web XML denominado <ph id="ph1">`Add`</ph>, la clase de proxy contiene un método denominado <ph id="ph2">`BeginAdd`</ph>, método de servicio para iniciar una llamada a la Web de XML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method and the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Dentro del código para el <ph id="ph1">`BeginAdd`</ph>, se realiza una llamada a la <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método y los resultados se colocan en el tipo de valor devuelto esperado para <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">`methodName`</ph> se usa para buscar los atributos personalizados que pueden haber agregado al método, como <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information about the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> Proporciona información adicional sobre el método derivado es necesario para el protocolo SOAP.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> se pasa a <ph id="ph2">`callback`</ph> y se incluye en el <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> que se devuelve desde el <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
          <target state="translated">El <ph id="ph1">`asyncState`</ph> parámetro puede utilizarse para pasar información sobre el contexto de la llamada asincrónica, especificada en el <ph id="ph2">`callback`</ph> parámetro, al delegado que controla el resultado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">El siguiente ejemplo de código es una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para el <ph id="ph1">`Math`</ph> servicio Web XML.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method is starting an asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">Dentro de la <ph id="ph1">`BeginAdd`</ph> método de la clase de proxy, el <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método está iniciando una llamada asincrónica a la <ph id="ph3">`Add`</ph> método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">El ejemplo de código siguiente es el <ph id="ph1">`Math`</ph> servicio Web XML, desde el que se creó la clase de proxy anterior.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">La solicitud llegó al servidor, pero no se procesó correctamente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">La solicitud no fue válida para el estado actual del objeto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Error al obtener acceso a la red.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Dynamically binds to an XML Web service described in the discovery document at <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</source>
          <target state="translated">Enlaza dinámicamente con el servicio Web XML descrito en el documento de descubrimiento en <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method.</source>
          <target state="translated">Un cliente de servicios Web XML puede enlazar dinámicamente a un servicio Web XML distinto del que se hace referencia en la clase de proxy utilizando la <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property refers to the base address of the XML Web service.</source>
          <target state="translated">Normalmente, el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> propiedad hace referencia a la dirección base del servicio Web XML.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>However, before invoking the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method, set the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to a URL of a discovery document.</source>
          <target state="translated">Sin embargo, antes de invocar el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método, Establece el <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> propiedad a una dirección URL de un documento de descubrimiento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método intenta encontrar una coincidencia en el documento de descubrimiento con el enlace definido en la clase de proxy y, a continuación, lo enlaza dinámicamente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
          <target state="translated">Si se realiza correctamente, las llamadas subsiguientes al método se dirigen al servicio Web XML se describe en el documento de descubrimiento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</source>
          <target state="translated">Si la clase de proxy se genera mediante la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe), la clase de proxy define el enlace implementado por los métodos de servicio Web XML que se invoca utilizando la <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
          <target state="translated">Cuando un servicio Web XML implementa varios enlaces, Wsdl.exe crea una clase de proxy para cada enlace.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Applied to each proxy class is a <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> that defines the name of the binding and its namespace.</source>
          <target state="translated">Aplicado a cada clase de proxy es un <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> que define el nombre del enlace y su espacio de nombres.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The discovery document you set the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
          <target state="translated">El documento de detección se ha establecido la <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> propiedad debe contener una referencia a un servicio Web XML que implementa el mismo nombre de enlace y espacio de nombres, o se produce una excepción.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a proxy class generated using the Wsdl.exe utility for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">El siguiente ejemplo de código es una clase de proxy generada por la utilidad Wsdl.exe para el <ph id="ph1">`Math`</ph> servicio Web XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>A <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> is applied to the <ph id="ph2">`Math`</ph> proxy class setting the binding name to <ph id="ph3">`MathSoap`</ph> and its namespace to <ph id="ph4">`http://tempuri.org/`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> se aplica a la <ph id="ph2">`Math`</ph> clase de proxy si se establece el nombre del enlace en <ph id="ph3">`MathSoap`</ph> y su espacio de nombres <ph id="ph4">`http://tempuri.org/`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a Web Service client using the preceding proxy class.</source>
          <target state="translated">El ejemplo de código siguiente es un cliente de servicio Web utilizando la clase de proxy anterior.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> event of the Web Form, the XML Web service client calls the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempting to dynamically bind to the URL supplied by the user.</source>
          <target state="translated">En el <ph id="ph1">`EnterBtn_Click`</ph> evento del formulario Web, las llamadas de cliente del servicio Web XML la <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método intenta enlazarse dinámicamente a la dirección URL proporcionada por el usuario.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">Para más información, consulte <bpt id="p1">[</bpt>Información general sobre los ataques mediante scripts<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The proxy class does not have a binding defined.</source>
          <target state="translated">La clase de proxy no tiene un enlace definido.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> devuelto a partir del método <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">Finaliza una invocación asincrónica de un método de servicios Web XML utilizando SOAP.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects that contains the return value and any by-reference or <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Matriz de objetos que contiene el valor devuelto, así como cualquiera de los parámetros <ph id="ph1">&lt;see langword="out" /&gt;</ph> o por referencia del método de la clase derivada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">Por lo general, no se llama el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método directamente, a menos que se haya creado su propia clase de proxy para un servicio Web XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
          <target state="translated">Una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para un servicio Web XML expone los métodos de servicio Web XML como nombres de la clase de proxy para llamar a los métodos de servicio Web XML de forma sincrónica.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">Para llamar a los métodos de servicio Web XML de forma asincrónica, se agregan dos métodos adicionales a la clase de proxy para cada método de servicio Web XML, uno con la <ph id="ph1">`Begin`</ph> prefijo agregado al nombre del método del servicio Web XML y otro con el <ph id="ph2">`End`</ph> prefijo agregado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method to complete an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">La clase proxy llama el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método para completar una llamada de invocación asincrónica al método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
          <target state="translated">Por ejemplo, si un servicio Web XML expone un método de servicio Web XML denominado <ph id="ph1">`Add`</ph>, la clase de proxy contiene un método denominado <ph id="ph2">`EndAdd`</ph>, método de servicio para finalizar una llamada asincrónica de una Web de XML.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Dentro del código para el <ph id="ph1">`EndAdd`</ph> se realiza una llamada a la <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método y, a continuación, los resultados se colocan en el tipo de valor devuelto esperado para <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">El siguiente ejemplo de código es una clase de proxy generada por Wsdl.exe para el <ph id="ph1">`Math`</ph> servicio Web XML.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method completes the asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">Dentro de la <ph id="ph1">`EndAdd`</ph> método de la clase de proxy, el <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método completa la llamada asincrónica a la <ph id="ph3">`Add`</ph> método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">El ejemplo de código siguiente es el <ph id="ph1">`Math`</ph> servicio Web XML, desde el que se creó la clase de proxy anterior.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> no es un valor devuelto a partir del método <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">La solicitud llegó al servidor, pero no se procesó correctamente.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">La solicitud no fue válida para el estado actual del objeto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Error al obtener acceso a la red.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> que proporciona la propiedad <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> para inicializar el objeto <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Tamaño de búfer inicial del objeto <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> utilizado por <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> inicializado con la propiedad <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> del parámetro <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> inicializado con la propiedad <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> del parámetro <ph id="ph3">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to use when creating the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> que se utiliza al crear <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> para el <ph id="ph2">&lt;paramref name="uri" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> del URI especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>This method can be overridden to customize the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> before the XML Web service request is made.</source>
          <target state="translated">Este método se puede invalidar para personalizar el <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> antes de la Web de XML se realiza la solicitud de servicio.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>For example, you could add a custom header to the request.</source>
          <target state="translated">Por ejemplo, podría agregar un encabezado personalizado a la solicitud.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> que proporciona la propiedad <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> para inicializar el objeto <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Tamaño de búfer inicial del objeto <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> utilizado por <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> inicializado con la propiedad <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> del parámetro <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> inicializado con la propiedad <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> del parámetro <ph id="ph3">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
          <target state="translated">Matriz de objetos que contiene los parámetros que se pasan al servicio Web XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">El orden de los valores de la matriz se corresponde con el orden de los parámetros del método de llamada de la clase derivada.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
          <target state="translated">Llama a un método de servicios web XML de forma asincrónica utilizando SOAP.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the return value and any <ph id="ph1">&lt;see langword="reference" /&gt;</ph> or <ph id="ph2">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Matriz de objetos que contiene el valor devuelto, así como cualquiera de los parámetros <ph id="ph1">&lt;see langword="reference" /&gt;</ph> o <ph id="ph2">&lt;see langword="out" /&gt;</ph> del método de la clase derivada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Typically, you do not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method directly, unless you are building your own proxy class for an XML Web service.</source>
          <target state="translated">Por lo general, no se llama el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> método directamente, a menos que se va a compilar su propia clase de proxy para un servicio Web XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
          <target state="translated">Una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para un servicio Web XML expone los métodos de servicio Web XML como nombres de la clase de proxy.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method to invoke an XML Web service method call.</source>
          <target state="translated">La clase proxy llama el <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> método que se invoca una llamada al método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">Por ejemplo, si un servicio Web XML expone un método de servicio Web XML denominado <ph id="ph1">`Add`</ph>, la clase de proxy también contiene un método denominado <ph id="ph2">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Dentro del código para el <ph id="ph1">`Add`</ph> método en la clase de proxy, se realiza una llamada sincrónica al método de servicio Web XML a través de la <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> método y, a continuación, los resultados se colocan en el tipo de valor devuelto esperado para <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">`methodName`</ph> parámetro se usa para buscar los atributos personalizados que pueden haber agregado al método, como <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information on the derived method which is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> Proporciona información adicional sobre el método derivado que es necesario para el protocolo SOAP.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">El siguiente ejemplo de código es una clase de proxy generada por Wsdl.exe para el <ph id="ph1">`Math`</ph> servicio Web XML.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method is calling the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">En el <ph id="ph1">`Add`</ph> método de la clase de proxy, el <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> está llamando al método el <ph id="ph3">`Add`</ph> método de servicio Web XML.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">El ejemplo de código siguiente es el <ph id="ph1">`Math`</ph> servicio Web XML, desde el que se creó la clase de proxy anterior.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">La solicitud llegó al servidor, pero no se procesó correctamente.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">La solicitud no fue válida para el estado actual del objeto.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Error al obtener acceso a la red.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Invoca al método especificado de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">Nombre del método que se va a invocar.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Parámetros que se van a pasar al método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">Delegado al que se llama cuando termina la invocación del método.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Invoca al método especificado de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">Nombre del método que se va a invocar.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Parámetros que se van a pasar al método.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">Delegado al que se llama cuando termina la invocación del método.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object used to pass state information into the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate.</source>
          <target state="translated">Objeto usado para pasar información de estado en el delegado <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Invoca al método especificado de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">Obtiene o establece la versión del protocolo SOAP utilizada para realizar la solicitud SOAP al servicio Web XML.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> propiedad se establece en la clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) a <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> de forma predeterminada cuando un documento WSDL para un servicio Web XML admite la versión 1.1 de SOAP.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</source>
          <target state="translated">Sin embargo, cuando un servicio Web XML sólo admite SOAP 1.2, Wsdl.exe establece la <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> propiedad <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> and <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>, respectively.</source>
          <target state="translated">Para elegir la versión del protocolo SOAP al generar la clase de proxy con Wsdl.exe, utilice el <ph id="ph1">`/protocol`</ph> cambiar con el <ph id="ph2">`SOAP`</ph> o <ph id="ph3">`SOAP12`</ph> configuración para establecer el <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> propiedad <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> y <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>, respectivamente.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</source>
          <target state="translated">En el ejemplo de código siguiente se establece la versión del protocolo utilizado para comunicarse con un servicio Web XML para SOAP 1.2.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>