<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc4afe7a4e8a0a96f6d8e8e0def604b33093901" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa los datos de una solicitud o una respuesta SOAP en una fase <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> específica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El uso principal de la <xref:System.Web.Services.Protocols.SoapMessage> clase es para las extensiones SOAP, que representa los datos en una solicitud SOAP o la respuesta SOAP. Cuando el <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método se llama, un <xref:System.Web.Services.Protocols.SoapExtension> recibe un <xref:System.Web.Services.Protocols.SoapMessage> en cada <xref:System.Web.Services.Protocols.SoapMessageStage>. Depende de la extensión SOAP en particular para elegir cómo procesar el <xref:System.Web.Services.Protocols.SoapMessage>. Las extensiones SOAP comunes incluyen el cifrado y compresión.  
  
 Las extensiones SOAP pueden aplicarse a uno o ambos un método de servicio Web XML creado mediante ASP.NET o un cliente de servicios Web XML. Cuando se aplica una extensión SOAP a un método de servicio Web XML, el <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método recibe una instancia de <xref:System.Web.Services.Protocols.SoapServerMessage>, que deriva de <xref:System.Web.Services.Protocols.SoapMessage>. Del mismo modo, cuando se aplica una extensión SOAP a un cliente de servicios Web XML, <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> recibe una instancia de <xref:System.Web.Services.Protocols.SoapClientMessage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se reemplaza en una clase derivada, obtiene el campo de encabezado de la solicitud HTTP del valor SOAPAction para la solicitud o respuesta SOAP.</summary>
        <value>Campo del encabezado de la solicitud HTTP del valor SOAPAction para la solicitud o respuesta SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Action%2A> puede tener acceso a la propiedad durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contenido del encabezado HTTP <see langword="Content-Encoding" />.</summary>
        <value>Contenido del encabezado HTTP <see langword="Content-Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una extensión SOAP puede establecer la <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> propiedad para proporcionar información adicional sobre la codificación de un mensaje SOAP sin cambiar el tipo de medio tal y como se expresa en el `Content-Type` encabezado HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La actual fase <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> es <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> o <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see langword="Content-Type" /> HTTP de la solicitud o respuesta de SOAP.</summary>
        <value>
          <see langword="Content-Type" /> HTTP de la solicitud o respuesta de SOAP. El valor predeterminado es "text/xml".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> propiedad solo puede tener acceso en la <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> y <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> fases; de lo contrario, un <xref:System.InvalidOperationException> se produce.  
  
 Use la <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> propiedad, en lugar de la <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> propiedad para proporcionar información adicional sobre la codificación de un mensaje SOAP.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Se tiene acceso a la propiedad <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />en la fase <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> o en la fase <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se reemplaza en una clase derivada, declara que los parámetros in están disponibles en la fase <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase declarada es diferente para los clientes de servicios Web XML y los métodos de servicio Web XML. En los parámetros de un método de servicio Web XML está disponible después de la solicitud SOAP se deserializa en el <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> fase. Un cliente de servicios Web XML, los parámetros in están disponibles antes del proceso de serialización de la solicitud SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> fase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> se puede llamar durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>; no obstante, un <xref:System.InvalidOperationException> se produce cuando parámetros no están disponibles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Los parámetros in no están disponibles.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se reemplaza en una clase derivada, declara que la fase <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> actual es una fase en la que los parámetros out están disponibles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase declarada es diferente para los clientes de servicios Web XML y los métodos de servicio Web XML. Los parámetros de salida de un método de servicio Web XML está disponible antes del proceso de serialización de la respuesta SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> fase. En un cliente de servicio Web XML, los parámetros out están disponibles después del proceso de deserialización de la respuesta SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> fase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> se puede llamar durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>; no obstante, un <xref:System.InvalidOperationException> se produce cuando parámetros no están disponibles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Los parámetros out no están disponibles.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">
          <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> que se ha declarado.</param>
        <summary>Garantiza que la fase <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> de la llamada al método de servicios Web XML es la fase o fases que se han pasado. Si la fase de procesamiento actual no es ninguna de las fases que se han pasado, se producirá una excepción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pueden declarar varias fases mediante la realización de una operación OR bit a bit en varias instancias de la <xref:System.Web.Services.Protocols.SoapMessageStage> clase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> se puede llamar durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 En el ejemplo siguiente se declara que el actual <xref:System.Web.Services.Protocols.SoapMessageStage> sea <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> o <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>; si no es así, se produce una excepción.  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La fase <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> actual no es la fase o no son las fases que se han declarado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.Web.Services.Protocols.SoapException" /> a partir de la llamada al método de servicios Web XML.</summary>
        <value>Excepción <see cref="T:System.Web.Services.Protocols.SoapException" /> que se ha producido al llamar al método de servicios Web XML. Es <see langword="null" /> si no se ha producido ninguna excepción <see cref="T:System.Web.Services.Protocols.SoapException" /> durante la llamada al método de servicios Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A> puede tener acceso a la propiedad durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del parámetro en la matriz de parámetros.</param>
        <summary>Obtiene el parámetro que se ha pasado al método de servicios Web XML en el índice especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro en el índice especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> propiedad es de solo están disponibles cuando está accesible en parámetros. ASP.NET genera <xref:System.InvalidOperationException> al tener acceso a la <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> propiedad cuando los parámetros in no están disponibles.  
  
 En un <xref:System.Web.Services.Protocols.SoapClientMessage> los parámetros in están disponibles en la <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. En un <xref:System.Web.Services.Protocols.SoapServerMessage> los parámetros in están disponibles en la <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">El parámetro <paramref name="index" /> es menor que 0 o mayor que la longitud de la matriz de parámetros.</exception>
        <exception cref="T:System.InvalidOperationException">Se obtiene acceso a esta propiedad cuando los parámetros in no están disponibles.</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del parámetro en la matriz de parámetros.</param>
        <summary>Obtiene el parámetro out que se ha pasado al método de servicios Web XML en el índice especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro en el índice especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If espera parámetros no están disponibles, ASP.NET genera un <xref:System.InvalidOperationException> al tener acceso a la <xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A> propiedad.  
  
 En un <xref:System.Web.Services.Protocols.SoapClientMessage> los parámetros out están disponibles en la <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. En un <xref:System.Web.Services.Protocols.SoapServerMessage> los parámetros out están disponibles en la <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> de la <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">El parámetro <paramref name="index" /> es mayor que la longitud de la matriz de parámetros.</exception>
        <exception cref="T:System.InvalidOperationException">Se obtiene acceso a esta propiedad cuando los parámetros out no están disponibles.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el valor devuelto por un método de servicios Web XML.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el valor devuelto por el método de servicios Web XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un valor devuelto no está disponible, ASP.NET genera <xref:System.InvalidOperationException> al tener acceso a la <xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A> propiedad.  
  
 En un <xref:System.Web.Services.Protocols.SoapClientMessage> el valor devuelto está disponible cuando la <xref:System.Web.Services.Protocols.SoapMessageStage> valor es <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>. En un <xref:System.Web.Services.Protocols.SoapServerMessage> el valor devuelto está disponible cuando <xref:System.Web.Services.Protocols.SoapMessageStage> valor es <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El método de servicios Web XML no ha devuelto ningún valor.  
  
 O  
  
 El valor devuelto no está disponible.</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Colección de encabezados SOAP aplicados a la solicitud o respuesta SOAP actual.</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> de encabezados SOAP aplicados a la solicitud o respuesta SOAP actual. Es <see langword="null" />, si no existen encabezados SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los encabezados SOAP son una parte opcional de una solicitud SOAP o la respuesta SOAP. Para obtener más detalles sobre el uso de encabezados SOAP en servicios Web XML creados mediante ASP.NET y sus clientes, consulte la <xref:System.Web.Services.Protocols.SoapHeader> clase.  
  
 Aunque la <xref:System.Web.Services.Protocols.SoapMessage.Headers%2A> puede tener acceso a la propiedad en cualquier momento, solo se rellena con la información del encabezado SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> y <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> fases.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se reemplaza en una clase derivada, obtiene una representación del prototipo de método del método de servicios Web XML al que se destina la solicitud SOAP.</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que representa el método de servicios Web XML al que se destina la solicitud SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque <xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A> pueda tener acceso durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>, solo tiene datos durante la <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> y <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica la propiedad <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> del atributo <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> o del atributo <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> que se aplica al método de servicios Web XML.</summary>
        <value>
          Es <see langword="true" /> si la propiedad <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> del atributo <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> o del atributo <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> que se aplica al método de servicios Web XML es <see langword="true" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte la <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType> propiedad de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> para obtener más información acerca de los métodos de servicio Web XML unidireccionales.  
  
 El <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A> es accesible en todas las fases de la propiedad <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión del protocolo SOAP utilizado para comunicar con el servicio Web XML.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. El valor predeterminado es <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para una <xref:System.Web.Services.Protocols.SoapServerMessage>, <xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A> se garantiza que la propiedad sea válida después de la <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> fase. En el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> fase de la propiedad está disponible, sin embargo, el mensaje SOAP no se ha procesado completamente y no se han ejecutado las extensiones SOAP que pueden modificar el contenido del mensaje SOAP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> de <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> del objeto <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A> puede tener acceso a la propiedad en cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo determinar la <xref:System.Web.Services.Protocols.SoapMessageStage> dentro de la <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType> método.  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los datos que representan la solicitud o respuesta SOAP en forma de <see cref="T:System.IO.Stream" />.</summary>
        <value>Instancia de sólo lectura de la clase <see cref="T:System.IO.Stream" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pueden usar las extensiones SOAP que examinan los datos que representa una solicitud SOAP o la respuesta SOAP, como un extensión SOAP, el registro del `Stream` propiedad para ver los datos en cada <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 Las extensiones SOAP que modifican los datos que representa una solicitud SOAP o la respuesta SOAP, como las extensiones SOAP de cifrado o compresión, deberían hacerlo con el <xref:System.IO.Stream> pasará el <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> método <xref:System.Web.Services.Protocols.SoapExtension>. El <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> propiedad de <xref:System.Web.Services.Protocols.SoapMessage> pasará <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> es de solo lectura.  
  
 Para obtener más información acerca de cómo modificar los datos que representa una solicitud SOAP o la respuesta SOAP, vea <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se reemplaza en una clase derivada, obtiene la dirección URL base del servicio Web XML.</summary>
        <value>Dirección URL base del servicio Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Url%2A> puede tener acceso a la propiedad durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>