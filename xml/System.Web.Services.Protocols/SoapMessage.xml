<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="919af48304a98c0e4abe15c95979944dddb1a8fc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37749212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <TypeSignature Language="F#" Value="type SoapMessage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the data in a SOAP request or SOAP response at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El uso principal de la <xref:System.Web.Services.Protocols.SoapMessage> clase es para las extensiones SOAP, que representa los datos en una solicitud o respuesta SOAP. Cuando el <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> se invoca un <xref:System.Web.Services.Protocols.SoapExtension> recibe un <xref:System.Web.Services.Protocols.SoapMessage> en cada <xref:System.Web.Services.Protocols.SoapMessageStage>. Depende de la extensión SOAP determinada para elegir cómo procesar el <xref:System.Web.Services.Protocols.SoapMessage>. Las extensiones SOAP comunes incluyen el cifrado y compresión.  
  
 Las extensiones SOAP se pueden aplicar a uno o ambos un método de servicios Web XML creados con ASP.NET o un cliente de servicios Web XML. Cuando se aplica una extensión SOAP a un método de servicios Web XML, el <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método recibe una instancia de <xref:System.Web.Services.Protocols.SoapServerMessage>, que se deriva de <xref:System.Web.Services.Protocols.SoapMessage>. Del mismo modo, cuando se aplica una extensión SOAP a un cliente de servicios Web XML, <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> recibe una instancia de <xref:System.Web.Services.Protocols.SoapClientMessage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : string" Usage="System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the SOAPAction HTTP request header field for the SOAP request or SOAP response.</summary>
        <value>El campo de encabezado de solicitud HTTP SOAPAction para la solicitud o respuesta SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Action%2A> puede tener acceso a la propiedad durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the <see langword="Content-Encoding" /> HTTP header.</summary>
        <value>Contenido del encabezado HTTP <see langword="Content-Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una extensión SOAP puede establecer el <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> propiedad para proporcionar información adicional sobre la codificación de un mensaje SOAP sin cambiar el tipo de medio como se expresa en el `Content-Type` encabezado HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> or <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stages.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the HTTP <see langword="Content-Type" /> of the SOAP request or SOAP response.</summary>
        <value>HTTP <see langword="Content-Type" /> de la solicitud o respuesta SOAP. El valor predeterminado es "text/xml".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> propiedad solo se puede acceder en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> y <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> fases; de lo contrario, un <xref:System.InvalidOperationException> se produce.  
  
 Use la <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> propiedad, en lugar de la <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> propiedad para proporcionar información adicional sobre la codificación de un mensaje SOAP.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> is accessed <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> or <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stages.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureInStage : unit -&gt; unit" Usage="soapMessage.EnsureInStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where in parameters are available.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase declarada es diferente para los clientes de servicios Web XML y los métodos de servicio Web XML. En los parámetros de un método de servicios Web XML está disponible después de la solicitud SOAP se deserializa en el <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> fase. Un cliente de servicios Web XML, los parámetros in están disponibles antes del proceso de serialización de solicitud SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> fase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> se puede llamar durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>; no obstante, un <xref:System.InvalidOperationException> se produce cuando los parámetros no están disponibles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">In parameters are not available.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureOutStage : unit -&gt; unit" Usage="soapMessage.EnsureOutStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> stage is a stage where out parameters are available.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase declarada es diferente para los clientes de servicios Web XML y los métodos de servicio Web XML. Los parámetros de salida de un método de servicios Web XML está disponible antes del proceso de serialización de respuesta SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> fase. En un cliente de servicios Web XML, los parámetros out están disponibles después del proceso de deserialización de la respuesta SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> fase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> se puede llamar durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>; no obstante, un <xref:System.InvalidOperationException> se produce cuando parámetros no están disponibles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Out parameters are not available.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberSignature Language="F#" Value="member this.EnsureStage : System.Web.Services.Protocols.SoapMessageStage -&gt; unit" Usage="soapMessage.EnsureStage stage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">The <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> asserted.</param>
        <summary>Ensures that the <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the call to the XML Web service method is the stage or stages passed in. If the current processing stage is not one of the stages passed in, an exception is thrown.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se pueden declarar varias fases mediante la realización de una operación OR bit a bit en varias instancias de la <xref:System.Web.Services.Protocols.SoapMessageStage> clase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> se puede llamar durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 El ejemplo siguiente declara que el actual <xref:System.Web.Services.Protocols.SoapMessageStage> sea <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> o <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>; si no lo es, se produce una excepción.  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is not the asserted stage or stages.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.Services.Protocols.SoapException with get, set" Usage="System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.Services.Protocols.SoapException" /> from the call to the XML Web service method.</summary>
        <value>El <see cref="T:System.Web.Services.Protocols.SoapException" /> que se produjo en la llamada al método de servicio Web XML. <see langword="null" /> Si no hay ningún <see cref="T:System.Web.Services.Protocols.SoapException" /> se ha producido durante la llamada al método de servicios Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A> puede tener acceso a la propiedad durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetInParameterValue : int -&gt; obj" Usage="soapMessage.GetInParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the parameter in the array of parameters.</param>
        <summary>Gets the parameter passed into the XML Web service method at the specified index.</summary>
        <returns>An <see cref="T:System.Object" /> representing the parameter at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> propiedad es de solo están disponibles cuando está accesible en los parámetros. ASP.NET inicia <xref:System.InvalidOperationException> al tener acceso a la <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> propiedad cuando los parámetros in no están disponibles.  
  
 En un <xref:System.Web.Services.Protocols.SoapClientMessage> los parámetros in están disponibles en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. En un <xref:System.Web.Services.Protocols.SoapServerMessage> los parámetros in están disponibles en el <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than 0 or greater than the length of the parameters array.</exception>
        <exception cref="T:System.InvalidOperationException">Accessing this property when in parameters are not available.</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetOutParameterValue : int -&gt; obj" Usage="soapMessage.GetOutParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the parameter in the array of parameters.</param>
        <summary>Gets the out parameter passed into the XML Web service method at the specified index.</summary>
        <returns>An <see cref="T:System.Object" /> representing the parameter at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If out parámetros no están disponibles, ASP.NET inicia un <xref:System.InvalidOperationException> al tener acceso a la <xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A> propiedad.  
  
 En un <xref:System.Web.Services.Protocols.SoapClientMessage> los parámetros out están disponibles en el <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. En un <xref:System.Web.Services.Protocols.SoapServerMessage> los parámetros out están disponibles en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> de la <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is greater than the length of the parameters array.</exception>
        <exception cref="T:System.InvalidOperationException">Accessing this property when out parameters are not available.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberSignature Language="F#" Value="member this.GetReturnValue : unit -&gt; obj" Usage="soapMessage.GetReturnValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the return value of an XML Web service method.</summary>
        <returns>An <see cref="T:System.Object" /> representing the return value of the XML Web service method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un valor devuelto no está disponible, ASP.NET genera <xref:System.InvalidOperationException> al tener acceso a la <xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A> propiedad.  
  
 En un <xref:System.Web.Services.Protocols.SoapClientMessage> el valor devuelto está disponible cuando el <xref:System.Web.Services.Protocols.SoapMessageStage> valor es <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>. En un <xref:System.Web.Services.Protocols.SoapServerMessage> el valor devuelto está disponible cuando <xref:System.Web.Services.Protocols.SoapMessageStage> valor es <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The XML Web service method does not have a return value.  OR  The return value is not available.</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Web.Services.Protocols.SoapHeaderCollection" Usage="System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A collection of the SOAP headers applied to the current SOAP request or SOAP response.</summary>
        <value>Un <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> de encabezados SOAP aplicados a la actual solicitud o respuesta SOAP. <see langword="null" />, si existen encabezados SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los encabezados SOAP son una parte opcional de una solicitud o respuesta SOAP. Para obtener más detalles sobre el uso de encabezados SOAP en servicios Web XML creados con ASP.NET y sus clientes, consulte el <xref:System.Web.Services.Protocols.SoapHeader> clase.  
  
 Aunque el <xref:System.Web.Services.Protocols.SoapMessage.Headers%2A> puede tener acceso a la propiedad en cualquier etapa, solo se rellena con la información del encabezado SOAP en el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> y <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> fases.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Web.Services.Protocols.LogicalMethodInfo" Usage="System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets a representation of the method prototype for the XML Web service method for which the SOAP request is intended.</summary>
        <value>Un <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que representa el método de servicio Web XML para el que se destina la solicitud SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque <xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A> pueda tener acceso durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>, solo tiene datos durante <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> y <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool" Usage="System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> property of either the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> or the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> attribute applied to the XML Web service method.</summary>
        <value>
          <see langword="true" /> Si el <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> propiedad de la <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> o <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> aplicado al método de servicios es XML Web <see langword="true" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte la <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType> propiedad de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> para obtener más información acerca de los métodos de servicio Web XML unidireccionales.  
  
 El <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A> es accesible en todas las fases de la propiedad <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the SOAP protocol used to communicate with the XML Web service.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. De manera predeterminada, es <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para un <xref:System.Web.Services.Protocols.SoapServerMessage>, <xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A> propiedad se garantiza que será válido tras la <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> fase. En el <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> fase de la propiedad está disponible, sin embargo, el mensaje SOAP no se ha procesado completamente y que no han ejecutado las extensiones SOAP que pueden modificar el contenido del mensaje SOAP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberSignature Language="F#" Value="member this.Stage : System.Web.Services.Protocols.SoapMessageStage" Usage="System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> del objeto <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A> puede tener acceso a la propiedad en cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo se determina la <xref:System.Web.Services.Protocols.SoapMessageStage> dentro de la <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType> método.  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream" Usage="System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data representing the SOAP request or SOAP response in the form of a <see cref="T:System.IO.Stream" />.</summary>
        <value>Una instancia de solo lectura de la <see cref="T:System.IO.Stream" /> clase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pueden usar las extensiones SOAP que inspeccionar los datos que representa una solicitud o respuesta SOAP, como una extensión SOAP, registro el `Stream` propiedad para ver los datos en cada <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 Las extensiones SOAP que modifican los datos que representa una solicitud o respuesta SOAP, como las extensiones SOAP de cifrado o compresión, deben hacerlo con el <xref:System.IO.Stream> pasó el <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> método <xref:System.Web.Services.Protocols.SoapExtension>. El <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> propiedad de <xref:System.Web.Services.Protocols.SoapMessage> pasó <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> es de solo lectura.  
  
 Para obtener más información acerca de cómo modificar los datos que representa una solicitud o respuesta SOAP, vea <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : string" Usage="System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the base URL of the XML Web service.</summary>
        <value>La dirección URL base del servicio Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.SoapMessage.Url%2A> puede tener acceso a la propiedad durante cualquier <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>