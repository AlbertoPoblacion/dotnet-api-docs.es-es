<Type Name="TextReturnReader" FullName="System.Web.Services.Protocols.TextReturnReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09c9dc09933847d7e0e1cd894848145292e87dd5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37603012" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.TextReturnReader" />
  <TypeSignature Language="VB.NET" Value="Public Class TextReturnReader&#xA;Inherits MimeReturnReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReturnReader : System::Web::Services::Protocols::MimeReturnReader" />
  <TypeSignature Language="F#" Value="type TextReturnReader = class&#xA;    inherit MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Lee los valores devueltos del texto de respuesta HTTP para los clientes de servicios Web implementados mediante HTTP pero sin SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.TextReturnReader> y otras clases en el <xref:System.Web.Services.Protocols> espacio de nombres admiten implementaciones de .NET Framework de servicios Web a través de las operaciones HTTP-GET y HTTP-POST. Los lectores y escritores de servicios web serializar y deserializan, respectivamente, entre los parámetros o los objetos devueltos de métodos Web y las secuencias de solicitud o respuesta HTTP. Los lectores y escritores de servicios web usan HTTP para el transporte, pero no intercambian mensajes con la norma de SOAP.  
  
 La <xref:System.Web.Services.Protocols.TextReturnReader> clase implementa la lectura del lado cliente de texto no XML en valores devueltos del método Web. Para obtener un valor devuelto, se analiza el texto, que está codificado en el cuerpo de una respuesta HTTP, mediante la coincidencia de patrones de expresiones regulares, tal y como especifica el atributo <xref:System.Web.Services.Protocols.MatchAttribute>, que se puede aplicar a un método Web en una clase de proxy de cliente. El <xref:System.Web.Services.Protocols.TextReturnReader> clase llama a la <xref:System.Web.Services.Protocols.PatternMatcher> clase para llevar a cabo la coincidencia de patrones.  
  
 Coincidencia de patrones de texto proporciona una manera para los servicios Web recuperar el contenido HTML sin convertirlo a documentos XML que se deben enlazar a las definiciones de esquema XML. Destinos de búsqueda de expresión regular se especifican en un documento de lenguaje de descripción de servicios Web (WSDL) a través de `match` elementos XML dentro de `text` elementos. Ambos elementos pertenecen al espacio de nombres http://microsoft.com/wsdl/mime/textMatching/.  
  
 Cuando **coinciden** elementos se especifican en un documento WSDL, la herramienta Wsdl.exe aplica <xref:System.Web.Services.Protocols.MatchAttribute> atributos a los métodos Web correspondientes en la clase de proxy de cliente que se genera. Además, <xref:System.Web.Services.Protocols.TextReturnReader> se utiliza en lugar de <xref:System.Web.Services.Protocols.XmlReturnReader>, la clase predeterminada para deserializar el método Web devolver valores de acuerdo con las implementaciones de .NET Framework de los servicios Web a través de las operaciones HTTP-GET y HTTP-POST.  
  
 Normalmente no necesitará utilizar el <xref:System.Web.Services.Protocols.TextReturnReader> directamente la clase.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeReturnReader" />
    <altmember cref="T:System.Web.Services.Protocols.PatternMatcher" />
    <altmember cref="T:System.Web.Services.Protocols.MatchAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextReturnReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.TextReturnReader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="override this.GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="textReturnReader.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica el método web para el que se obtiene el inicializador.</param>
        <summary>Devuelve un inicializador del método especificado.</summary>
        <returns>Inicializador para el método especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un inicializador es un objeto pasado como parámetro a la <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> método. Para el <xref:System.Web.Services.Protocols.TextReturnReader> (clase), el inicializador es un <xref:System.Web.Services.Protocols.PatternMatcher> objeto según el tipo de valor devuelto del método Web.  
  
 El <xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A> método se invoca durante la inicialización del servicio. Más adelante, al tiempo que se procesa una respuesta, el objeto inicializador se pasa a la <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> otro método <xref:System.Web.Services.Protocols.TextReturnReader> instancia. La otra instancia realiza la lectura real.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Initialize : obj -&gt; unit" Usage="textReturnReader.Initialize o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto <see cref="T:System.Web.Services.Protocols.PatternMatcher" /> para el tipo de valor devuelto del método Web que se invoca.</param>
        <summary>Inicializa una instancia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> método proporciona la <xref:System.Web.Services.Protocols.PatternMatcher> objeto utilizado por el <xref:System.Web.Services.Protocols.TextReturnReader.Read%2A> método para analizar el texto contenido en la respuesta HTTP. El <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> método se invoca en el momento en que se procesa una solicitud. El parámetro de entrada `o`, se obtiene mediante una llamada a la <xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A> método en otra instancia de la clase que se obtiene durante la inicialización del cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (response As WebResponse, responseStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Read(System::Net::WebResponse ^ response, System::IO::Stream ^ responseStream);" />
      <MemberSignature Language="F#" Value="override this.Read : System.Net.WebResponse * System.IO.Stream -&gt; obj" Usage="textReturnReader.Read (response, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">
          <see cref="T:System.Net.WebResponse" /> que contiene el mensaje de salida para una operación.</param>
        <param name="responseStream">
          <see cref="T:System.IO.Stream" /> cuyo contenido es el cuerpo de la respuesta HTTP representada por el parámetro <c>response</c>.</param>
        <summary>Analiza el texto contenido en la respuesta HTTP.</summary>
        <returns>Objeto que contiene el valor devuelto del método Web deserializado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para analizar el contenido de texto de la respuesta HTTP, el <xref:System.Web.Services.Protocols.TextReturnReader> la implementación de la clase de la <xref:System.Web.Services.Protocols.TextReturnReader.Read%2A> método usa la <xref:System.Web.Services.Protocols.PatternMatcher> objeto pasado como argumento a la <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> método. Cierra la secuencia de respuesta antes de devolver el valor devuelto del método Web deserializado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>