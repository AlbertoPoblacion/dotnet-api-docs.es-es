<Type Name="MimeParameterWriter" FullName="System.Web.Services.Protocols.MimeParameterWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8db58781aaf36e0cecfc420042e04ff5ed17fa5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30547399" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeParameterWriter : System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeParameterWriter extends System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeParameterWriter&#xA;Inherits MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeParameterWriter abstract : System::Web::Services::Protocols::MimeFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una implementación base común para los sistemas de escritura de los parámetros de solicitudes de salida de los clientes de servicios Web implementados mediante HTTP pero sin SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.MimeParameterWriter> y otras clases en el <xref:System.Web.Services.Protocols> espacio de nombres admiten implementaciones de .NET Framework de los servicios Web a través de las operaciones HTTP-GET y HTTP-POST. Los lectores y escritores de servicios web serializan y deserializan, respectivamente, entre los parámetros o los objetos devueltos de métodos Web y las secuencias de solicitud o respuesta HTTP. Los lectores y escritores de servicios web usan HTTP para el transporte pero no para intercambiar mensajes con la norma de SOAP.  
  
 La <xref:System.Web.Services.Protocols.MimeParameterWriter> clase establece un formato de escritura de la solicitud común para la escritura de cliente de los parámetros del método Web en secuencias de solicitud HTTP.  
  
 Normalmente no necesitará utilizar <xref:System.Web.Services.Protocols.MimeParameterWriter> o directamente en sus clases descendientes. En su lugar, cuando la herramienta Wsdl.exe genera código de proxy del cliente según las implementaciones HTTP-GET o HTTP-POST, aplica el <xref:System.Web.Services.Protocols.HttpMethodAttribute> a cada método Web y establece el atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> propiedad al tipo adecuado.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.MimeParameterWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestUrl">
      <MemberSignature Language="C#" Value="public virtual string GetRequestUrl (string url, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRequestUrl(string url, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.GetRequestUrl(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestUrl (url As String, parameters As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetRequestUrl(System::String ^ url, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="url">Dirección URL original de la solicitud HTTP.</param>
        <param name="parameters">Valores de parámetro del método Web que se van a agregar a la dirección URL, si es necesario.</param>
        <summary>Cuando se reemplaza en una clase derivada, modifica la dirección URL de la solicitud HTTP de salida.</summary>
        <returns>Objeto <see cref="T:System.String" /> que contiene la dirección URL de la solicitud HTTP modificada de salida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De las clases derivadas de <xref:System.Web.Services.Protocols.MimeParameterWriter>, solo <xref:System.Web.Services.Protocols.UrlParameterWriter> modifica la dirección URL de solicitud HTTP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public virtual void InitializeRequest (System.Net.WebRequest request, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Net.WebRequest request, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeRequest (request As WebRequest, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeRequest(System::Net::WebRequest ^ request, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="request">Solicitud de salida, donde la clase <see cref="T:System.Net.WebRequest" /> permite protocolos de transporte, además de HTTP.</param>
        <param name="values">Valores de parámetro del método Web.</param>
        <summary>Cuando se reemplaza en una clase derivada, inicializa la solicitud HTTP de salida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De las clases derivadas de <xref:System.Web.Services.Protocols.MimeParameterWriter>, solo <xref:System.Web.Services.Protocols.HtmlFormParameterWriter> implementa el <xref:System.Web.Services.Protocols.MimeParameterWriter> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.MimeParameterWriter.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la codificación utilizada para escribir parámetros en la solicitud HTTP.</summary>
        <value>La codificación utilizada para escribir parámetros en la solicitud HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una codificación, tal como está representado por la <xref:System.Text.Encoding> de clases, define cómo transformar los caracteres en una secuencia de bytes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesWriteRequest">
      <MemberSignature Language="C#" Value="public virtual bool UsesWriteRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesWriteRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UsesWriteRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UsesWriteRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se serializan los valores de parámetros de método Web en el cuerpo de la solicitud HTTP de salida.</summary>
        <value>
          Es <see langword="true" /> si se serializan los valores de parámetros de método Web en el cuerpo de la solicitud HTTP de salida; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest%2A> propiedad determina si el <xref:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest%2A> se invoca el método.  
  
 El <xref:System.Web.Services.Protocols.MimeParameterWriter> implementación de la clase de <xref:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest%2A> devuelve un valor de `false`. La única clase derivada que reemplaza <xref:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest%2A> es <xref:System.Web.Services.Protocols.HtmlFormParameterWriter>, cuya implementación devuelve un valor de `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRequest">
      <MemberSignature Language="C#" Value="public virtual void WriteRequest (System.IO.Stream requestStream, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRequest(class System.IO.Stream requestStream, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest(System.IO.Stream,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteRequest (requestStream As Stream, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteRequest(System::IO::Stream ^ requestStream, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="requestStream">Flujo de entrada para el cuerpo de la solicitud HTTP de salida.</param>
        <param name="values">Valores de parámetro del método Web.</param>
        <summary>Cuando se reemplaza en una clase derivada, serializa los valores de parámetros de método Web en un flujo que representa el cuerpo de la solicitud HTTP de salida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De las clases derivadas de <xref:System.Web.Services.Protocols.MimeParameterWriter>, solo <xref:System.Web.Services.Protocols.HtmlFormParameterWriter> implementa el <xref:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>