<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10728b784a0edaa8a8227fda4746cc60b561c241" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36395776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="94b22-101">Representa la clase base para la establecer comunicación con un servicio Web XML mediante los sencillos enlaces de protocolo HTTP-GET y HTTP-POST.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94b22-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b22-102">Esta clase especifica la mayor parte de la implementación para comunicarse con un servicio Web XML a través de HTTP utilizando codificadores que codifican los parámetros y valores devueltos en formatos MIME comunes.</span><span class="sxs-lookup"><span data-stu-id="94b22-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="94b22-103">Estos codificadores se derivan de la <xref:System.Web.Services.Protocols.MimeFormatter> clase.</span><span class="sxs-lookup"><span data-stu-id="94b22-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="94b22-104">De forma predeterminada, una clase de proxy que se derive de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> codifica los parámetros utilizando el tipo MIME application/x--www-form-urlencoded y la respuesta en XML sin formato.</span><span class="sxs-lookup"><span data-stu-id="94b22-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="94b22-105">Formateadores de mime personalizado pueden especificarse mediante la <xref:System.Web.Services.Protocols.HttpMethodAttribute> de atributo, sin embargo, no hay ninguna compatibilidad para su integración en una generación de proxy y la descripción de servicio.</span><span class="sxs-lookup"><span data-stu-id="94b22-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="94b22-106">`Notes to Inheritors:` Al invalidar esta clase, se pueden introducir métodos en la clase derivada que son específicas de un tipo concreto de un servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="94b22-107">Los métodos simplemente capturan los parámetros y llamar a la clase base para realizar el trabajo de la comunicación con el sitio.</span><span class="sxs-lookup"><span data-stu-id="94b22-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="94b22-108">Si los métodos introducidos son asincrónicos, llame a la <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> y <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="94b22-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="94b22-109">Si los métodos introducidos son sincrónicos, llame a la <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94b22-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="94b22-110">El constructor reemplazado normalmente establece el <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> propiedad al URI del método de servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="94b22-111">La herramienta de lenguaje de descripción de servicios Web (Wsdl.exe) genera clases derivadas de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> para obtener una descripción de servicio determinado.</span><span class="sxs-lookup"><span data-stu-id="94b22-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94b22-112">El siguiente ejemplo de código es una clase de proxy generada por Wsdl.exe para el `Math` servicio Web XML siguiente.</span><span class="sxs-lookup"><span data-stu-id="94b22-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="94b22-113">La clase de proxy se deriva de <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, que deriva de la clase abstracta <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> clase.</span><span class="sxs-lookup"><span data-stu-id="94b22-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="94b22-114">El ejemplo de código siguiente es el `Math` servicio Web XML, desde el que se creó la clase de proxy anterior.</span><span class="sxs-lookup"><span data-stu-id="94b22-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="94b22-115">Este tipo es seguro para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94b22-115">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94b22-116">Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="94b22-117">Nombre del método de servicios Web XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-117">The name of the XML Web service method.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="94b22-118">Dirección URL que se utilizará al crear <see cref="T:System.Net.WebRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="94b22-119">Matriz de objetos que contiene los parámetros que se pasan al método de servicios Web XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-119">An array of objects containing the parameters to pass to the XML Web service method.</span>
          </span>
          <span data-ttu-id="94b22-120">El orden de los valores de la matriz se corresponde con el orden de los parámetros del método de llamada de la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="94b22-121">Delegado al que se va a llamar cuando finalice la llamada de método asincrónico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-121">The delegate to call when the asynchronous method call is complete.</span>
          </span>
          <span data-ttu-id="94b22-122">Si <c>callback</c> es <see langword="null" />, no se llama al delegado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-122">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="94b22-123">Información adicional proporcionada por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-123">The additional information supplied by a client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b22-124">Inicia una invocación asincrónica de un método de un servicio Web XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-124">Starts an asynchronous invocation of a method of an XML Web service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b22-125">
            <see cref="T:System.IAsyncResult" /> que puede pasarse al método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> con el fin de obtener los valores devueltos del método de servicios Web XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b22-126">El `methodName` parámetro se usa para buscar los tipos de los parámetros y devolver valores del método que invoca el <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94b22-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="94b22-127">También sirve para encontrar los atributos personalizados que se han agregado al método.</span><span class="sxs-lookup"><span data-stu-id="94b22-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="94b22-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, y <xref:System.Xml.Serialization.XmlElementAttribute> proporcionan información adicional sobre el método derivado necesario para el protocolo HTTP.</span><span class="sxs-lookup"><span data-stu-id="94b22-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="94b22-129">`asyncState` se pasa a `callback` y se incluye en el <xref:System.IAsyncResult> que se devuelve desde el <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94b22-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="94b22-130">Es útil para pasar información desde el contexto de la llamada asincrónica para el control del resultado asincrónico en `callback`.</span><span class="sxs-lookup"><span data-stu-id="94b22-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94b22-131">El siguiente ejemplo de código es un formulario Web Forms de ASP.NET, que llama a un servicio Web XML denominado `Math`.</span><span class="sxs-lookup"><span data-stu-id="94b22-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="94b22-132">En el `EnterBtn_Click` función, el formulario Web Forms inicia y finaliza una llamada asincrónica de la `Add` método de servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="94b22-133">El siguiente ejemplo de código es una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para el `Math` servicio Web XML siguiente.</span><span class="sxs-lookup"><span data-stu-id="94b22-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="94b22-134">En el `BeginAdd` método de la clase de proxy, el <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> método inicia una llamada asincrónica de la `Add` método de servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="94b22-135">El ejemplo de código siguiente es el `Math` servicio Web XML, desde el que se creó la clase de proxy anterior.</span><span class="sxs-lookup"><span data-stu-id="94b22-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="94b22-136">La solicitud llegó al servidor, pero no se procesó correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-136">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="94b22-137">
            <see cref="T:System.IAsyncResult" /> devuelto a partir del método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b22-138">Finaliza la invocación asincrónica de un método de servicios Web XML utilizando HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b22-139">Matriz de objetos que contiene el valor devuelto, así como cualquier parámetro <paramref name="out" /> o por referencia para el método de servicios Web XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94b22-140">El siguiente ejemplo de código es un formulario Web Forms de ASP.NET, que llama a un servicio Web XML denominado `Math`.</span><span class="sxs-lookup"><span data-stu-id="94b22-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="94b22-141">En el `EnterBtn_Click` función, el formulario Web Forms inicia y finaliza una llamada asincrónica de la `Add` método de servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="94b22-142">El siguiente ejemplo de código es una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para el `Math` servicio Web XML siguiente.</span><span class="sxs-lookup"><span data-stu-id="94b22-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="94b22-143">En el `EndAdd` método de la clase de proxy, el <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> método inicia una llamada asincrónica de la `Add` método de servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="94b22-144">El ejemplo de código siguiente es el `Math` servicio Web XML, desde el que se creó la clase proxy anterior.</span><span class="sxs-lookup"><span data-stu-id="94b22-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="94b22-145">
            <paramref name="asyncResult" /> no es un valor devuelto a partir del método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-145">
              <paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="94b22-146">Nombre del método de servicios Web XML de la clase derivada que llama al método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="94b22-147">Dirección URL del método de servicios Web XML que solicita el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-147">The URL of the XML Web service method that the client is requesting.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="94b22-148">Matriz de objetos que contiene los parámetros que se pasan al servicio Web XML remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-148">An array of objects containing the parameters to pass to the remote XML Web service.</span>
          </span>
          <span data-ttu-id="94b22-149">El orden de los valores de la matriz se corresponde con el orden de los parámetros del método de llamada de la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b22-150">Llama al método de servicio Web XML utilizando HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-150">Invokes an XML Web service method using HTTP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94b22-151">Matriz de objetos que contiene el valor devuelto, así como cualquiera de los parámetros <paramref name="out" /> o por referencia del método de la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94b22-152">El `methodName` parámetro se usa para buscar los tipos de los parámetros y devolver valores del método que invoca el <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94b22-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="94b22-153">También sirve para encontrar los atributos personalizados que se han agregado al método.</span><span class="sxs-lookup"><span data-stu-id="94b22-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="94b22-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> y <xref:System.Xml.Serialization.XmlElementAttribute> proporcionan información adicional sobre el método derivado necesario para el protocolo SOAP.</span><span class="sxs-lookup"><span data-stu-id="94b22-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94b22-155">El siguiente ejemplo de código es un formulario Web Forms de ASP.NET, que llama a un servicio Web XML denominado `Math`.</span><span class="sxs-lookup"><span data-stu-id="94b22-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="94b22-156">En el `EnterBtn_Click` función, el formulario Web Forms invoca de forma sincrónica el `Add` método de servicio Web XML.</span><span class="sxs-lookup"><span data-stu-id="94b22-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="94b22-157">El siguiente ejemplo de código es una clase de proxy generada por la herramienta Lenguaje de descripción de servicios Web (Wsdl.exe) para el `Math` servicio Web XML siguiente.</span><span class="sxs-lookup"><span data-stu-id="94b22-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="94b22-158">En el `Add` método de la clase de proxy, el <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> método invoca de forma sincrónica el `Add` método de servicio Web.</span><span class="sxs-lookup"><span data-stu-id="94b22-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="94b22-159">El ejemplo de código siguiente es el `Math` servicio Web XML, desde el que se creó la clase proxy anterior.</span><span class="sxs-lookup"><span data-stu-id="94b22-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="94b22-160">La solicitud llegó al servidor, pero no se procesó correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-160">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94b22-161">Invoca al método especificado de forma asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-161">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="94b22-162">Nombre del método que se va a invocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-162">The name of the method to invoke.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="94b22-163">Dirección URL solicitada del servicio Web invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-163">The request URL of the invoked web service.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="94b22-164">Parámetros que se van a pasar al método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-164">The parameters to pass to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="94b22-165">Delegado al que se llama cuando termina la invocación del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-165">The delegate called when the method invocation has completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b22-166">Invoca al método especificado de forma asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-166">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="94b22-167">Nombre del método que se va a invocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-167">The name of the method to invoke.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="94b22-168">Dirección URL solicitada del servicio Web invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-168">The request URL of the invoked web service.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="94b22-169">Parámetros que se van a pasar al método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-169">The parameters to pass to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="94b22-170">Delegado al que se llama cuando termina la invocación del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-170">The delegate called when the method invocation has completed.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="94b22-171">Objeto que contiene información de estado asociada que se pasa al delegado <c>callback</c> cuando el método ha finalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-171">An object containing associated state information that is passed to the <c>callback</c> delegate when the method has completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94b22-172">Invoca de forma asincrónica al método especificado mientras mantiene un estado asociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94b22-172">Invokes the specified method asynchronously while maintaining an associated state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>