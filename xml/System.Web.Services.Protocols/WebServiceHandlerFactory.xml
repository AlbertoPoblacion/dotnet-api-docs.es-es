<Type Name="WebServiceHandlerFactory" FullName="System.Web.Services.Protocols.WebServiceHandlerFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b8744a5bc878804d9dd64a71a381b9930ae7048" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394937" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebServiceHandlerFactory : System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHandlerFactory extends System.Object implements class System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebServiceHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHandlerFactory&#xA;Implements IHttpHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHandlerFactory : System::Web::IHttpHandlerFactory" />
  <TypeSignature Language="F#" Value="type WebServiceHandlerFactory = class&#xA;    interface IHttpHandlerFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandlerFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fabrica dinámicamente instancias de controlador de servicio Web, cuyo tipo o tipos implementan la interfaz <see cref="T:System.Web.IHttpHandler" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.IHttpHandler> interfaz establece el contrato que ASP.NET utiliza para procesar las solicitudes HTTP Web con controladores HTTP personalizados de entrada. El <xref:System.Web.Services.Protocols.WebServiceHandlerFactory> clase genera una instancia de un <xref:System.Web.IHttpHandler> implementación para controlar las solicitudes de servicio Web.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHandlerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHandlerFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.WebServiceHandlerFactory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string verb, string url, string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string verb, string url, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHandler (context As HttpContext, verb As String, url As String, filePath As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ verb, System::String ^ url, System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler&#xA;override this.GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler" Usage="webServiceHandlerFactory.GetHandler (context, verb, url, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="verb" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> que proporciona referencias a los objetos de servidor intrínsecos (por ejemplo, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" /> y <see cref="P:System.Web.HttpContext.Server" />) utilizados para atender las solicitudes HTTP.</param>
        <param name="verb">Método de transferencia de datos HTTP (GET o POST) que utiliza el cliente.</param>
        <param name="url">Dirección URL original del recurso solicitado.</param>
        <param name="filePath">Ruta de acceso al sistema de archivos del recurso solicitado.</param>
        <summary>Devuelve una instancia <see cref="T:System.Web.IHttpHandler" />.</summary>
        <returns>Instancia de <see cref="T:System.Web.IHttpHandler" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandler : System.Web.IHttpHandler -&gt; unit&#xA;override this.ReleaseHandler : System.Web.IHttpHandler -&gt; unit" Usage="webServiceHandlerFactory.ReleaseHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">Instancia <see cref="T:System.Web.IHttpHandler" /> que se va a liberar.</param>
        <summary>Libera la instancia <see cref="T:System.Web.IHttpHandler" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No hay ningún recurso asociado a un controlador de la instancia que la <xref:System.Web.Services.Protocols.WebServiceHandlerFactory> necesario de la versión de la clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>