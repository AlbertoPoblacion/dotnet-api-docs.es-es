<Type Name="SoapMessageStage" FullName="System.Web.Services.Protocols.SoapMessageStage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3024f8e7faebae36388cd58a33455ae9cbbced7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SoapMessageStage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SoapMessageStage extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessageStage" />
  <TypeSignature Language="VB.NET" Value="Public Enum SoapMessageStage" />
  <TypeSignature Language="C++ CLI" Value="public enum class SoapMessageStage" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Especifica la fase de procesamiento de un mensaje SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET proporciona un mecanismo de extensibilidad para llamar a servicios Web utilizando SOAP. El mecanismo de extensibilidad que gira en torno a un <xref:System.Web.Services.Protocols.SoapExtension> que puede inspeccionar o modificar un mensaje en fases específicas del procesamiento de mensajes en el cliente o el servidor. Esta enumeración especifica la fase de procesamiento de la <xref:System.Web.Services.Protocols.SoapMessage>.  
  
   
  
## Examples  
 El ejemplo de código siguiente es un fragmento de una extensión SOAP, que implementa el <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método. En el <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método, el procesamiento de un <xref:System.Web.Services.Protocols.SoapMessage> se controla de forma específica el <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 [!code-cpp[SoapMessageState#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessageState/CPP/SoapMessageState.cpp#1)]
 [!code-csharp[SoapMessageState#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessageState/CS/soapmessagestate.cs#1)]
 [!code-vb[SoapMessageState#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessageState/VB/soapmessagestate.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
  </Docs>
  <Members>
    <Member MemberName="AfterDeserialize">
      <MemberSignature Language="C#" Value="AfterDeserialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage AfterDeserialize = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />
      <MemberSignature Language="VB.NET" Value="AfterDeserialize" />
      <MemberSignature Language="C++ CLI" Value="AfterDeserialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Fase inmediatamente posterior a la deserialización de <see cref="T:System.Web.Services.Protocols.SoapMessage" /> de un mensaje SOAP en un objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Web.Services.Protocols.SoapClientMessage> de procesamiento, la fase AfterDeserialize se produce después de que el mensaje SOAP que contiene la respuesta de una invocación de método de servicio Web XML se ha deserializado en un objeto, pero antes de que el cliente reciba los resultados deserializados.  
  
 Durante la <xref:System.Web.Services.Protocols.SoapServerMessage> de procesamiento, la fase AfterDeserialize se produce después de una solicitud de red que contiene un mensaje SOAP que representa una invocación de método de servicio Web XML se deserializa en un objeto, pero antes del método en ese objeto que representa la Web de XML se denomina método de servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterSerialize">
      <MemberSignature Language="C#" Value="AfterSerialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage AfterSerialize = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />
      <MemberSignature Language="VB.NET" Value="AfterSerialize" />
      <MemberSignature Language="C++ CLI" Value="AfterSerialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Fase inmediatamente posterior a la deserialización de <see cref="T:System.Web.Services.Protocols.SoapMessage" />, pero anterior al envío del mensaje SOAP durante la conexión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Web.Services.Protocols.SoapClientMessage> de procesamiento, la etapa AfterSerialize se produce después de que un cliente invoca un método de servicio Web XML y los parámetros se serializan en XML, pero antes de SOAP que contiene ese código XML del mensaje se envía a través de la red.  
  
 Durante la <xref:System.Web.Services.Protocols.SoapServerMessage> de procesamiento, la etapa AfterSerialize se produce después de que devuelve un método de servicio Web XML y los valores devueltos se serializan en XML, pero antes de SOAP que contiene ese código XML del mensaje se envía a través de la red.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDeserialize">
      <MemberSignature Language="C#" Value="BeforeDeserialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage BeforeDeserialize = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize" />
      <MemberSignature Language="VB.NET" Value="BeforeDeserialize" />
      <MemberSignature Language="C++ CLI" Value="BeforeDeserialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Fase inmediatamente anterior a la deserialización de <see cref="T:System.Web.Services.Protocols.SoapMessage" /> del mensaje SOAP enviado a través de la red en un objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Web.Services.Protocols.SoapClientMessage> el procesamiento, la etapa BeforeDeserialize se produce una vez que se ha recibido la respuesta de red desde una invocación de método de servicio Web XML, pero justo antes de la respuesta que contiene el mensaje SOAP que se deserializa el mensaje en un objeto.  
  
 Durante la <xref:System.Web.Services.Protocols.SoapServerMessage> de procesamiento, la etapa BeforeDeserialize se produce después de que se recibió una solicitud de red que contiene el mensaje SOAP de una invocación de método de servicio Web XML en el servidor Web, pero antes el mensaje SOAP que se deserializa en un objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSerialize">
      <MemberSignature Language="C#" Value="BeforeSerialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage BeforeSerialize = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />
      <MemberSignature Language="VB.NET" Value="BeforeSerialize" />
      <MemberSignature Language="C++ CLI" Value="BeforeSerialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Fase inmediatamente anterior a la serialización de <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Web.Services.Protocols.SoapClientMessage> de procesamiento, la fase BeforeSerialize se produce después de que un cliente invoca un método de servicio Web XML, pero antes de la invocación se serialice.  
  
 Durante la <xref:System.Web.Services.Protocols.SoapServerMessage> devuelve del método de servicio de procesamiento, la fase BeforeSerialize se produce después de la invocación a la Web de XML, pero antes de los valores devueltos se serialicen y se envían a través de la conexión se devuelva al cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>