<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ControlAdapter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac531e3a9db18b7cba85d5901fe816b3124d2f065ba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31e3a9db18b7cba85d5901fe816b3124d2f065ba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Customizes rendering for the derived control to which the adapter is attached, to modify the default markup or behavior for specific browsers, and is the base class from which all control adapters inherit.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Control adapters are components that override certain <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> class methods and events in its execution lifecycle to allow browser or markup-specific handling.</source>
          <target state="translated">Adaptadores de control son componentes que reemplazan ciertos <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> clase métodos y eventos de su ciclo de vida de ejecución para permitir el explorador o un control específico del marcado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The .NET Framework maps a single derived control adapter to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object for each client request.</source>
          <target state="translated">.NET Framework asigna un adaptador de control derivado solo un <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto para cada solicitud de cliente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>An adapter modifies a control for a specific browser or class of browsers or acts as an arbitrary filter on some capability.</source>
          <target state="translated">Un adaptador modifica un control para un explorador específico o una clase de exploradores o actúa como filtro arbitrario en alguna función.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Typically the adapter is defined by the markup language that the browser uses (for example, XHTML or HTML 3.2).</source>
          <target state="translated">Normalmente, el adaptador se define mediante el lenguaje de marcado que utiliza el explorador (por ejemplo, XHTML o HTML 3.2).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Much of the adaptability in rendering behavior can be encapsulated in the specialized classes that derive from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Gran parte de la adaptabilidad del comportamiento de representación se puede encapsular en las clases especializadas que se derivan de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Therefore, it is likely that a single adapter can be used for a number of browser class behaviors or that inclusion of the adaptability in the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classes could make the use of a control adapter unnecessary.</source>
          <target state="translated">Por lo tanto, es probable que un único adaptador puede utilizarse para un número de comportamientos de clase de explorador o que inclusión de la adaptabilidad en el <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> clases podrían hacer que el uso de un adaptador de control innecesario.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>An adapter for a control class applies to all controls that inherit from that class, unless more specialized adapters are present.</source>
          <target state="translated">Un adaptador para una clase de control se aplica a todos los controles que heredan de esa clase, a menos que estén presentes adaptadores más especializados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>For example, an adapter for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator&gt;</ph> class can be used for all <ph id="ph2">`Validator`</ph> objects.</source>
          <target state="translated">Por ejemplo, un adaptador para la <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator&gt;</ph> clase puede usarse en todas las <ph id="ph2">`Validator`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Adapters typically do not inherit directly from the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> class, but from one of the target-specific adapter base classes that provide additional functionality specific to the control type and target browser or the particular rendering required.</source>
          <target state="translated">Adaptadores normalmente no heredan directamente de la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> (clase), pero desde uno de los adaptadores específicas del destino basar las clases que proporcionan funcionalidad adicional específica para el Explorador de control de tipo y de destino o la representación particular necesarias.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Controls themselves do not necessarily require an adapter.</source>
          <target state="translated">Controles por sí mismos no requieren necesariamente un adaptador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>If controls are extended through composition, generally the child control adapters are sufficient.</source>
          <target state="translated">Si los controles se extienden a través de composición, generalmente son suficientes los adaptadores de control secundario.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Each control has explicit mappings to adapters through the .browser definition files.</source>
          <target state="translated">Cada control tiene asignaciones explícitas a adaptadores a través de los archivos de definición de Browser.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Thus, any access to the <ph id="ph1">&lt;xref:System.Web.UI.Control.Adapter%2A?displayProperty=nameWithType&gt;</ph> property uses the <ph id="ph2">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> object extracted from the browser definition files to perform the lookup for the mapping of the adapter to control.</source>
          <target state="translated">Por lo tanto, cualquier acceso a la <ph id="ph1">&lt;xref:System.Web.UI.Control.Adapter%2A?displayProperty=nameWithType&gt;</ph> propiedad utiliza la <ph id="ph2">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> objeto extraído de los archivos de definición de explorador para realizar la búsqueda para la asignación del adaptador al control.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>During processing, the .NET Framework intercepts calls to the overridable methods of a control that could be target-specific.</source>
          <target state="translated">Durante el procesamiento, .NET Framework intercepta las llamadas a los métodos reemplazables de un control que podría ser específico del destino.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>If a control adapter is attached, the .NET Framework calls the associated adapter methods.</source>
          <target state="translated">Si se adjunta un adaptador de control, .NET Framework llama a los métodos de adaptador asociado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The adapter performs rendering for the control through the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method.</source>
          <target state="translated">El adaptador realiza la representación del control a través de la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>If overridden, <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> potentially should not call the base class implementation because that performs a call back on the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si se reemplaza, <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> potencialmente no debe llamar a la implementación de la clase base ya que realiza una llamada a la <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>This might cause the rendering to occur twice, once by the adapter and once by the control.</source>
          <target state="translated">Esto puede provocar la representación se repitiera dos veces, una vez por el adaptador y una vez por el control.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> base method calls back on the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> method of the control.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> base llamadas a métodos en el <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> al método del control.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Thus, if you override <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph>, you should not call the base class implementation unless the rendering you implement is in addition to that provided by <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> of the control.</source>
          <target state="translated">Por lo tanto, si invalida <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph>, no debería llamar a la implementación de la clase base a menos que la representación que implemente a la que se proporciona por <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> del control.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>You must ensure that the .NET Framework performs interception for adapters of the child controls.</source>
          <target state="translated">Debe asegurarse de que .NET Framework realice la interceptación para los adaptadores de los controles secundarios.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>You can do this by calling the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A&gt;</ph> base method, which calls the <ph id="ph2">&lt;xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType&gt;</ph> method of the control, from your <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> override.</source>
          <target state="translated">Puede hacerlo mediante una llamada a la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A&gt;</ph> base método, que llama a la <ph id="ph2">&lt;xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType&gt;</ph> método del control, desde su <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> invalidar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> methods are called by the control immediately before and after (respectively) the control calls the <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> el control llama a métodos inmediatamente antes y después (respectivamente) en las llamadas de control el <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>If pre- and post-rendering are the only browser-specific processing tasks required, using <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> might make it unnecessary to override <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph>.</source>
          <target state="translated">Si previas y posteriores a la representación se solo explorador específico del procesamiento de las tareas necesarias, mediante <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> pueden hacer necesario invalidar <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The default behavior of the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> methods is to call the corresponding methods of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
          <target state="translated">El comportamiento predeterminado de la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> métodos consiste en llamar a los métodos correspondientes de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>To maintain its own state information, a control adapter can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> methods.</source>
          <target state="translated">Para mantener su propia información de estado, un adaptador de control puede invalidar la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source><ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> are called when the private control and view states are saved and loaded, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> se llama cuando los Estados de vista y control privados se guardan y se cargan, respectivamente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> base methods call back on the corresponding <ph id="ph5">&lt;xref:System.Web.UI.Control&gt;</ph> class methods.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> base llamada de métodos en la correspondiente <ph id="ph5">&lt;xref:System.Web.UI.Control&gt;</ph> métodos de la clase.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Thus, any of these <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> methods that are overridden must call their base methods; otherwise, the event associated with the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class method will not be raised.</source>
          <target state="translated">Por lo tanto, cualquiera de estas <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> métodos que son reemplazados deben llamar a sus métodos base; en caso contrario, el evento asociado con el <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> no se generará el método de clase.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Controls and adapters optionally implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interfaces.</source>
          <target state="translated">Controles y adaptadores, opcionalmente, implementan el <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interfaces.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The .NET Framework determines whether an adapter exists and whether the adapter implements these interfaces.</source>
          <target state="translated">.NET Framework determina si existe un adaptador y si el adaptador implementa estas interfaces.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>If it does, the adapter should override the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> methods, as necessary.</source>
          <target state="translated">Si lo hace, el adaptador debe reemplazar el <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> métodos, según sea necesario.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>If the postback data is not recognized in the adapter, it must call back on the control to process it.</source>
          <target state="translated">Si los datos de devolución no se reconocen en el adaptador, debe volver a llamar el control para que lo procese.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Subsequent event handlers also must call back on the control.</source>
          <target state="translated">Controladores de eventos subsiguientes también deben volver a llamar el control.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class, a control that requires general adapter functionality should have a corresponding adapter base class, named in the pattern <ph id="ph2">&lt;paramref name="ControlType" /&gt;</ph><ph id="ph3">&lt;see langword="Adapter" /&gt;</ph> (for example, <ph id="ph4">&lt;see langword="TextBoxAdapter" /&gt;</ph>).</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> (clase), un control que requiere la funcionalidad del adaptador general debe tener un adaptador correspondiente de la clase con el nombre en el modelo de base <ph id="ph2">&lt;paramref name="ControlType" /&gt;</ph> <ph id="ph3">&lt;see langword="Adapter" /&gt;</ph> (por ejemplo, <ph id="ph4">&lt;see langword="TextBoxAdapter" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The adapter should at a minimum return a strongly-typed instance of the control through its <ph id="ph1">&lt;see cref="P:System.Web.UI.Adapters.ControlAdapter.Control" /&gt;</ph> property.</source>
          <target state="translated">Como mínimo, el adaptador debería devolver una instancia fuertemente tipado del control a través de su <ph id="ph1">&lt;see cref="P:System.Web.UI.Adapters.ControlAdapter.Control" /&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Control adapters for a given control type and markup language should be named in the pattern <ph id="ph1">&lt;paramref name="MarkupControlType" /&gt;</ph><ph id="ph2">&lt;see langword="Adapter" /&gt;</ph> (for example, <ph id="ph3">&lt;see langword="XhtmlTextBoxAdapter" /&gt;</ph>).</source>
          <target state="translated">Adaptadores de control para un lenguaje de marcado y el tipo de control determinado debe tener un nombre en el patrón de <ph id="ph1">&lt;paramref name="MarkupControlType" /&gt;</ph> <ph id="ph2">&lt;see langword="Adapter" /&gt;</ph> (por ejemplo, <ph id="ph3">&lt;see langword="XhtmlTextBoxAdapter" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Adapters for a control should be implemented in an <ph id="ph1">&lt;see langword="Adapters" /&gt;</ph> subnamespace.</source>
          <target state="translated">Los adaptadores de control deben implementarse en un <ph id="ph1">&lt;see langword="Adapters" /&gt;</ph> subespacio.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Control adapters should inherit from the appropriate base class and follow the same inheritance model as the control.</source>
          <target state="translated">Adaptadores de control deben heredar de la clase base adecuada y siga el mismo modelo de herencia que el control.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>For example, an adapter for a control inheriting from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> base class should inherit from either the <ph id="ph2">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class or the relevant <ph id="ph3">&lt;paramref name="ControlType" /&gt;</ph><ph id="ph4">&lt;see langword="Adapter" /&gt;</ph> class.</source>
          <target state="translated">Por ejemplo, un adaptador para un control heredando de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> debe heredar la clase base desde la <ph id="ph2">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> clase o la correspondiente <ph id="ph3">&lt;paramref name="ControlType" /&gt;</ph> <ph id="ph4">&lt;see langword="Adapter" /&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Any specialized adapters should be defined for the specialized control under all of the device nodes in configuration .browser files.</source>
          <target state="translated">Los adaptadores especializados deben definirse para el control especializado bajo todos los nodos de dispositivo Browser en archivos de configuración.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>A properly implemented control should not assume that an adapter is attached, or that the attached adapter implements a specific interface.</source>
          <target state="translated">Un control correctamente implementado no debe suponer que un adaptador está conectado o que el adaptador asociado implementa una interfaz específica.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Instead, it should check for these before calling.</source>
          <target state="translated">En su lugar, debe comprobar estas ediciones antes de que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>It is possible to simulate overriding protected event methods in the control, such as the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinkButton" /&gt;</ph>.</source>
          <target state="translated">Es posible simular el reemplazo de métodos de evento protegidos en el control, como el <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /&gt;</ph> método de la <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinkButton" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>First, create an adapter class with an <bpt id="p1">&lt;c&gt;</bpt>OnClick<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">En primer lugar, cree una clase de adaptador con un <bpt id="p1">&lt;c&gt;</bpt>OnClick<ept id="p1">&lt;/c&gt;</ept> método.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>Then create a new control derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinkButton" /&gt;</ph> and override the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">A continuación, cree un nuevo control derivado de <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinkButton" /&gt;</ph> e invalide el <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The overriden <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /&gt;</ph> method calls the <bpt id="p1">&lt;c&gt;</bpt>OnClick<ept id="p1">&lt;/c&gt;</ept> method of the adapter.</source>
          <target state="translated">La reemplazada <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /&gt;</ph> llamadas al método el <bpt id="p1">&lt;c&gt;</bpt>OnClick<ept id="p1">&lt;/c&gt;</ept> método del adaptador.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The adapter object is available through the protected <ph id="ph1">&lt;see cref="P:System.Web.UI.Control.Adapter" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> class.</source>
          <target state="translated">El objeto adaptador está disponible a través de la protegido <ph id="ph1">&lt;see cref="P:System.Web.UI.Control.Adapter" /&gt;</ph> propiedad de la <ph id="ph2">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Adapters.ControlAdapter">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.Control.Adapter" /&gt;</ph> property of the control is <ph id="ph2">&lt;see langword="null" /&gt;</ph> when there is no associated adapter, so any code should check for that condition before calling methods of the adapter.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="P:System.Web.UI.Control.Adapter" /&gt;</ph> es propiedad del control <ph id="ph2">&lt;see langword="null" /&gt;</ph> cuando no hay ningún adaptador asociado, por lo que cualquier código debe comprobar para esa condición antes de llamar a métodos del adaptador.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.#ctor">
          <source>The .NET Framework internally constructs this adapter when it creates the corresponding <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object.</source>
          <target state="translated">.NET Framework construye internamente este adaptador cuando se crea el correspondiente <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> containing methods to render the target-specific output.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>Called prior to the rendering of a control.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>In a derived adapter class, generates opening tags that are required by a specific target but not needed by HTML browsers.</source>
          
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method, and is used to perform target-specific preprocessing before the rendering of the control.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> método se llama justo antes del <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> método y se usa para realizar el preprocesamiento específico del destino antes de la representación del control.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> method in combination with the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> method to ensure opening and closing tag consistency.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> método en combinación con la <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> método para asegurarse de apertura y cierre la coherencia entre las etiquetas.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class, the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base method calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> (clase), el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base llamadas al método el <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)">
          <source>Thus, overrides of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method should call the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base method only if its processing is in addition to, rather than instead of, the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">Por lo tanto, se invalida de la <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método debe llamar a la <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base método únicamente si su procesamiento es además, en lugar de en lugar de la <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Adapters.ControlAdapter.Browser">
          <source>Gets a reference to the browser capabilities of the client making the current HTTP request.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Browser">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpBrowserCapabilities" /&gt;</ph> specifying client browser and markup capabilities.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Web.HttpBrowserCapabilities" /&gt;</ph> especificar funciones de explorador y el marcado de cliente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Browser">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object determines the client browser capabilities from the <ph id="ph2">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> object that is returned by the <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> objeto determina las funciones del explorador de cliente desde el <ph id="ph2">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> objeto devuelto por la <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Browser">
          <source>This enables the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object to render browser-specific markup or otherwise modify the behavior of the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
          <target state="translated">Esto permite la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> objeto para representar el marcado específico del explorador o bien modificar el comportamiento de la <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Browser">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A&gt;</ph> property to access the details of the requesting browser.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A&gt;</ph> propiedad para tener acceso a los detalles del explorador que lo solicitado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Browser">
          <source>In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.</source>
          <target state="translated">En este ejemplo, el código se comprueba para determinar si el explorador es compatible con JavaScript y, a continuación, permite al desarrollador representar el resultado personalizado en ese caso.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Adapters.ControlAdapter.Control">
          <source>Gets a reference to the control to which this control adapter is attached.</source>
          
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Control">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> to which this <ph id="ph2">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> is attached.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> a la que se <ph id="ph2">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> se adjunta.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Control">
          <source>When a derived control adapter is attached to a control, the .NET Framework calls certain adapter members instead of the control members.</source>
          <target state="translated">Cuando un adaptador de control derivado se adjunta a un control, .NET Framework llama a ciertos miembros del adaptador en lugar de los miembros del control.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Control">
          <source>The following code example shows how to derive a custom control from the <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> class, and then create a corresponding adapter that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo derivar un control personalizado de la <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> clase y, a continuación, crear un adaptador correspondiente que hereda de la <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Control">
          <source>The adapter overrides the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Control%2A&gt;</ph> property and returns a strongly-typed reference to the control.</source>
          <target state="translated">El adaptador reemplaza el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Control%2A&gt;</ph> propiedad y devuelve una referencia fuertemente tipada al control.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Control">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class, at a minimum, you should implement a <ph id="ph2">&lt;see langword="Control" /&gt;</ph> property to return a strongly-typed instance of the control, as shown in the Example section.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> (clase), como mínimo, debe implementar un <ph id="ph2">&lt;see langword="Control" /&gt;</ph> propiedad para devolver una instancia fuertemente tipado del control, tal como se muestra en la sección ejemplo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
          <source>Creates the target-specific child controls for a composite control.</source>
          
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
          <source>If there is a derived control adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A&gt;</ph> method is overridden, the override is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si no hay un adaptador de control derivado conectado a un <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto y el <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A&gt;</ph> se invalida el método, se llama a la invalidación en lugar de la <ph id="ph3">&lt;xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
          <source>Thus, <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A&gt;</ph> can be used to create a target-specific child control set.</source>
          <target state="translated">Por lo tanto, <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A&gt;</ph> puede utilizarse para crear un conjunto de controles secundarios específico del destino.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
          <source>For more information about combining controls to create a new control, see <bpt id="p1">[</bpt>Composite Controls<ept id="p1">](http://msdn.microsoft.com/library/fb174677-d845-467c-8bf3-cc096b2490b0)</ept>.</source>
          <target state="translated">Para obtener más información sobre la combinación de controles para crear un nuevo control, vea <bpt id="p1">[</bpt>controles compuestos<ept id="p1">](http://msdn.microsoft.com/library/fb174677-d845-467c-8bf3-cc096b2490b0)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
          <source>If you create an inheriting class and override the <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" /&gt;</ph> method, do not call the base method unless you want to add controls to those created by the base method.</source>
          <target state="translated">Si crea una clase heredera y reemplaza el <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" /&gt;</ph> método, realice no llamada al método base a menos que desee agregar controles a los creados por el método base.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls">
          <source>Otherwise you could create two sets of child controls.</source>
          <target state="translated">En caso contrario, puede crear dos conjuntos de secundarios controles.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> containing methods to render the target-specific output.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>Called after the rendering of a control.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>In a derived adapter class, generates closing tags that are required by a specific target but not needed by HTML browsers.</source>
          
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> method is called just after the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method, and is used to perform target-specific postprocessing after the rendering of the control.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> método se llama justo después de la <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> (método) y se usa para realizar secuencias específico del destino posterior a la representación del control.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> method in combination with the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> method to ensure opening and closing tag consistency.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> método en combinación con la <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> método para asegurarse de apertura y cierre la coherencia entre las etiquetas.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class, the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base method calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> (clase), el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base llamadas al método el <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)">
          <source>Thus, overrides of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method should call the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base method only if its processing is in addition to, rather than instead of, the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /&gt;</ph> method.</source>
          <target state="translated">Por lo tanto, se invalida de la <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método debe llamar a la <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base método únicamente si su procesamiento es además, en lugar de en lugar de la <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the adapter's control state information as a <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>Loads adapter control state information that was saved by <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" /&gt;</ph> during a previous request to the page where the control associated with this control adapter resides.</source>
          
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>Control state is the essential state information needed even if view state is disabled.</source>
          <target state="translated">Estado del control es la información de estado esencial necesaria incluso si se deshabilita el estado de vista.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>When an adapter needs to maintain its own control state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> methods.</source>
          <target state="translated">Cuando un adaptador necesita mantener su propia información de estado de control, puede invalidar la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>An adapter might need to maintain control state information when there are features that need to have state maintained across requests, independent from the state of the associated control.</source>
          <target state="translated">Un adaptador podría necesitar mantener información de estado de control cuando hay características que necesitan tener mantener el estado entre las solicitudes, independientemente del estado del control asociado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>For example, a composite control consisting of a large textual display and a group of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RadioButton&gt;</ph> controls might render as a single view on desktop computer browsers.</source>
          <target state="translated">Por ejemplo, un control compuesto que consta de una presentación textual grande y un grupo de <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RadioButton&gt;</ph> controles podrían representarse como una vista única en exploradores de equipos de escritorio.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>On other browsers, it might split its rendering—one view for the textual display and the other for the radio button group.</source>
          <target state="translated">En otros exploradores, su representación podría dividirse: una vista para la presentación textual y otra para el grupo de botones de radio.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>The adapter would need to maintain its own target-specific information about the currently active view.</source>
          <target state="translated">El adaptador tendría que mantener su propia información específica de destino acerca de la vista activa.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=nameWithType&gt;</ph> method, in the <ph id="ph3">`LoadState`</ph> lifecycle stage.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> método se llama inmediatamente después de la <ph id="ph2">&lt;xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=nameWithType&gt;</ph> método, en la <ph id="ph3">`LoadState`</ph> fase del ciclo de vida.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)">
          <source>The adapter control state is separate and in addition to the control state of the control.</source>
          <target state="translated">El estado del control de adaptador es independiente y además el estado del control del control.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the adapter view state information as a <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>Loads adapter view state information that was saved by <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" /&gt;</ph> during a previous request to the page where the control associated with this control adapter resides.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>When an adapter needs to maintain its own view state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> methods.</source>
          <target state="translated">Cuando un adaptador necesita mantener su propia información de estado de vista, puede invalidar la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>An adapter needs to maintain view state information when there is data that must be maintained across requests, independent from the view state of the associated control.</source>
          <target state="translated">Un adaptador necesita mantener información de estado de vista cuando hay datos que deben mantenerse entre las solicitudes, independientemente del estado de vista del control asociado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>For example, a grid control on desktop computer browsers might render as a single view of rows and columns of values.</source>
          <target state="translated">Por ejemplo, un control de cuadrícula en exploradores de equipos de escritorio podría representarse como una vista única de filas y columnas de valores.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>On other browsers, it might split its rendering into multiple separate views, such as a list of rows and details of a single row.</source>
          <target state="translated">En otros exploradores, su representación en varias vistas distintas, como una lista de filas y los detalles de una sola fila podría dividirse.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>The adapter would need to maintain the data for the views that are not currently active in view state.</source>
          <target state="translated">El adaptador tendría que mantener los datos de las vistas que no están activas actualmente en estado de vista.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> method is called immediately before the <ph id="ph2">&lt;xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=nameWithType&gt;</ph> method in the <ph id="ph3">`LoadState`</ph> lifecycle stage.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> método se llama inmediatamente antes del <ph id="ph2">&lt;xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=nameWithType&gt;</ph> método en el <ph id="ph3">`LoadState`</ph> fase del ciclo de vida.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)">
          <source>The adapter view state is separate and in addition to the view state of the control.</source>
          <target state="translated">El estado de vista de adaptador es independiente y además el estado de vista del control.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> method for the associated control.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnInit%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si no hay un adaptador conectado a un <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto y el <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> se invalida el método, se llama al método de invalidación en lugar de la <ph id="ph3">&lt;xref:System.Web.UI.Control.OnInit%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>Override <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> to perform target-specific processing in the <ph id="ph2">`Initialize`</ph> stage of the control lifecycle.</source>
          <target state="translated">Invalidar <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> para realizar el procesamiento específico del destino en la <ph id="ph2">`Initialize`</ph> fase del ciclo de vida de control.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>Typically, these are functions that are performed when a control is created.</source>
          <target state="translated">Normalmente, estas son funciones que se llevan a cabo cuando se crea un control.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>The following code sample derives a custom control adapter from the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> class.</source>
          <target state="translated">El ejemplo de código siguiente deriva un adaptador de control personalizado de la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>It then overrides the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> method to set a property on the associated control and call the base method to complete the control initialization.</source>
          <target state="translated">A continuación, reemplaza el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> método para establecer una propiedad en el control asociado y llamar al método base para completar la inicialización del control.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class and the adapter overrides the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" /&gt;</ph> method, the adapter must call the corresponding base class method, which in turn calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> clase y las invalidaciones de adaptador el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" /&gt;</ph> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama el <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> method is not called, the <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.Init" /&gt;</ph> event will not be raised.</source>
          <target state="translated">Si el <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> no se llama el método, el <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.Init" /&gt;</ph> no se producen eventos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /&gt;</ph> method for the associated control.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnLoad%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si no hay un adaptador conectado a un <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto y el <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph> se invalida el método, se llama al método de invalidación en lugar de la <ph id="ph3">&lt;xref:System.Web.UI.Control.OnLoad%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph> method to perform target-specific processing in the <ph id="ph2">`Load`</ph> stage of the control lifecycle.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph> método para realizar el procesamiento específico del destino en la <ph id="ph2">`Load`</ph> fase del ciclo de vida de control.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>Typically, these are functions that should be performed for each client request.</source>
          <target state="translated">Normalmente, estas son funciones que se deben realizar para cada solicitud de cliente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class and the adapter overrides the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" /&gt;</ph> method, the adapter must call the corresponding base class method, which in turn calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> clase y las invalidaciones de adaptador el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" /&gt;</ph> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama el <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)">
          <source>If <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /&gt;</ph> is not called, the <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.Load" /&gt;</ph> event will not be raised.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /&gt;</ph> no se llama, el <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.Load" /&gt;</ph> no se producen eventos.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /&gt;</ph> method for the associated control.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si no hay un adaptador conectado a un <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto y el <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph> se invalida el método, se llama al método de invalidación en lugar de la <ph id="ph3">&lt;xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph> method to perform target-specific processing in the <ph id="ph2">`PreRender`</ph> stage of the control lifecycle.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph> método para realizar el procesamiento específico del destino en la <ph id="ph2">`PreRender`</ph> fase del ciclo de vida de control.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>Typically, these are functions that immediately precede rendering of the control output.</source>
          <target state="translated">Normalmente, estas son funciones que precedan inmediatamente a la representación de los resultados del control.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class and the adapter overrides the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" /&gt;</ph> method, the adapter must call the corresponding base class method, which in turn calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> clase y las invalidaciones de adaptador el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" /&gt;</ph> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama el <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /&gt;</ph> method is not called, the <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.PreRender" /&gt;</ph> event will not be raised.</source>
          <target state="translated">Si el <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /&gt;</ph> no se llama el método, el <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.PreRender" /&gt;</ph> no se producen eventos.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /&gt;</ph> method for the associated control.</source>
          
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnUnload%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si no hay un adaptador conectado a un <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> objeto y el <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> se invalida el método, se llama al método de invalidación en lugar de la <ph id="ph3">&lt;xref:System.Web.UI.Control.OnUnload%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> method to do target-specific processing in the <ph id="ph2">`Unload`</ph> stage of the control lifecycle.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> método para realizar el procesamiento específico del destino la <ph id="ph2">`Unload`</ph> fase del ciclo de vida de control.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>Typically, these are cleanup functions that precede disposition of the control.</source>
          <target state="translated">Normalmente, estas son las funciones de limpieza que preceden a la eliminación del control.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class and the adapter overrides the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" /&gt;</ph> method, the adapter must call the corresponding base class method, which in turn calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> clase y las invalidaciones de adaptador el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" /&gt;</ph> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama el <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)">
          <source>If <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /&gt;</ph> is not called, the <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> event will not be raised.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /&gt;</ph> no se llama, el <ph id="ph2">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> no se producen eventos.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Adapters.ControlAdapter.Page">
          <source>Gets a reference to the page where the control associated with this adapter resides.</source>
          
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Page">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> that provides access to the page instance where the associated control is situated.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> que proporciona acceso a la instancia de la página donde se encuentra el control asociado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.Page">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Page%2A&gt;</ph> property provides access to the <ph id="ph2">&lt;xref:System.Web.UI.Page?displayProperty=nameWithType&gt;</ph> object where the control is situated.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Page%2A&gt;</ph> propiedad proporciona acceso a la <ph id="ph2">&lt;xref:System.Web.UI.Page?displayProperty=nameWithType&gt;</ph> objeto donde se encuentra el control.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter">
          <source>Gets a reference to the page adapter for the page where the associated control resides.</source>
          
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.PageAdapter" /&gt;</ph> for the page where the control associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> is situated.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.PageAdapter" /&gt;</ph> para la página donde el control asociado con el actual <ph id="ph2">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> se encuentre.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A&gt;</ph> property provides access to the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.PageAdapter?displayProperty=nameWithType&gt;</ph> object for the <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> object where the <ph id="ph4">&lt;xref:System.Web.UI.Control&gt;</ph> object associated with the current <ph id="ph5">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object is situated.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A&gt;</ph> propiedad proporciona acceso a la <ph id="ph2">&lt;xref:System.Web.UI.Adapters.PageAdapter?displayProperty=nameWithType&gt;</ph> de objeto para el <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> objeto donde el <ph id="ph4">&lt;xref:System.Web.UI.Control&gt;</ph> objeto asociado con el actual <ph id="ph5">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> se encuentra el objeto.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A&gt;</ph> property can be used to access other items at the page adapter level, such as common target-specific functions that could apply to several control types on the page.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A&gt;</ph> propiedad puede utilizarse para tener acceso a otros elementos en el nivel de adaptador de página, como funciones específicas del destino comunes que pueden aplicarse a varios tipos de control en la página.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to use to render the target-specific output.</source>
          
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>Generates the target-specific markup for the control to which the control adapter is attached.</source>
          
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method to generate target-specific markup to send to the client browser.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> método para generar el marcado específico del destino que se envía al explorador del cliente.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method is called in place of the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> method if a <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object is attached to a <ph id="ph4">&lt;xref:System.Web.UI.Control&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> método se llama en lugar de la <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType&gt;</ph> método si un <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> objeto está asociado a un <ph id="ph4">&lt;xref:System.Web.UI.Control&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class, the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base method calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> (clase), el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base llamadas al método el <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>Thus, overrides of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method should call the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base method only if its processing is in addition to, rather than instead of, the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">Por lo tanto, se invalida de la <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método debe llamar a la <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> base método únicamente si su procesamiento es además, en lugar de en lugar de la <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>For a composite control, the adapter developer must ensure that the child controls are rendered.</source>
          <target state="translated">Para un control compuesto, el desarrollador de adaptadores debe garantizar que se representan los controles secundarios.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method causes the child controls to be rendered but does not generate markup, it might be appropriate for the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method to call its base method.</source>
          <target state="translated">Si el <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> causas de método controla para representar el elemento secundario, pero no genera el marcado, puede que sea adecuado para el <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método para llamar a su método base.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
          <source>If target-specific rendering of the child controls is necessary, the adapter should implement the <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method and call the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method from the <ph id="ph3">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">Si es necesaria específico del destino de representación de los controles secundarios, el adaptador debe implementar la <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método y llamar a la <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método desde el <ph id="ph3">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to use to render the target-specific output.</source>
          
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
          <source>Generates the target-specific markup for the child controls in a composite control to which the control adapter is attached.</source>
          
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A&gt;</ph> method when it is necessary to generate target-specific markup for the child control set of a composite control, in addition to the markup for the individual child controls.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A&gt;</ph> método cuando es necesario generar el marcado específico del destino para el conjunto de controles secundarios de un control compuesto, además en el marcado de los controles secundarios individuales.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> class, for a composite control, the adapter developer must ensure that the child controls are rendered.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Web.UI.Adapters.ControlAdapter" /&gt;</ph> (clase), para un control compuesto, el desarrollador de adaptadores debe garantizar que se representan los controles secundarios.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
          <source>If the adapter overrides the <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method, it should call the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method from an override of the <ph id="ph3">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">Si el adaptador reemplaza el <ph id="ph1">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método, debe llamar a la <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método desde un reemplazo de la <ph id="ph3">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method causes the child controls to be rendered but itself does not generate markup, it might be appropriate for the <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method to call its base method, which calls the <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method, instead of implementing an override for the <ph id="ph4">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">Si el <ph id="ph1">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> causas de método controla para representar el elemento secundario, pero sí no genera marcado, puede que sea adecuado para la <ph id="ph2">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método para llamar a su método base, que llama el <ph id="ph3">&lt;see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método, en lugar de implementar una invalidación para el <ph id="ph4">&lt;see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>Saves control state information for the control adapter.</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the adapter's control state information as a <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>Control state is the essential state information needed even if view state is disabled.</source>
          <target state="translated">Estado del control es la información de estado esencial necesaria incluso si se deshabilita el estado de vista.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>When an adapter needs to maintain its own control state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> methods.</source>
          <target state="translated">Cuando un adaptador necesita mantener su propia información de estado de control, puede invalidar la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>An adapter might need to maintain control state information when there are features that need to have state maintained across requests, independent from the state of the associated control.</source>
          <target state="translated">Un adaptador podría necesitar mantener información de estado de control cuando hay características que necesitan tener mantener el estado entre las solicitudes, independientemente del estado del control asociado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>For example, a composite control consisting of a large textual display and a group of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RadioButton&gt;</ph> controls might render as a single view on desktop computer browsers.</source>
          <target state="translated">Por ejemplo, un control compuesto que consta de una presentación textual grande y un grupo de <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RadioButton&gt;</ph> controles podrían representarse como una vista única en exploradores de equipos de escritorio.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>On other browsers, it might split its rendering—one view for the textual display and the other for the radio button group.</source>
          <target state="translated">En otros exploradores, su representación podría dividirse: una vista para la presentación textual y otra para el grupo de botones de radio.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>The adapter would need to maintain its own target-specific information about the currently active view.</source>
          <target state="translated">El adaptador tendría que mantener su propia información específica de destino acerca de la vista activa.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=nameWithType&gt;</ph> method in the <ph id="ph3">`SaveState`</ph> lifecycle stage.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> método se llama inmediatamente después de la <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=nameWithType&gt;</ph> método en el <ph id="ph3">`SaveState`</ph> fase del ciclo de vida.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState">
          <source>The adapter control state is separate and in addition to the control state of the control.</source>
          <target state="translated">El estado del control de adaptador es independiente y además el estado del control del control.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>Saves view state information for the control adapter.</source>
          
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the adapter view state information as a <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>When an adapter needs to maintain its own view state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> methods.</source>
          <target state="translated">Cuando un adaptador necesita mantener su propia información de estado de vista, puede invalidar la <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>An adapter needs to maintain view state information when there is data that must be maintained across requests, independent from the associated view state of the control.</source>
          <target state="translated">Un adaptador necesita mantener información de estado de vista cuando hay datos que deben mantenerse entre las solicitudes, independientemente del estado de vista asociada del control.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>For example, a grid control on desktop computer browsers might render as a single view of rows and columns of values.</source>
          <target state="translated">Por ejemplo, un control de cuadrícula en exploradores de equipos de escritorio podría representarse como una vista única de filas y columnas de valores.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>On other browsers, it might split its rendering into multiple separate views, such as a list of rows and details of a single row.</source>
          <target state="translated">En otros exploradores, su representación en varias vistas distintas, como una lista de filas y los detalles de una sola fila podría dividirse.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>The adapter would need to maintain the data for the views that are not currently active in view state.</source>
          <target state="translated">El adaptador tendría que mantener los datos de las vistas que no están activas actualmente en estado de vista.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> method is called immediately before the <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType&gt;</ph> method in the <ph id="ph3">`SaveState`</ph> lifecycle stage.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> método se llama inmediatamente antes del <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType&gt;</ph> método en el <ph id="ph3">`SaveState`</ph> fase del ciclo de vida.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState">
          <source>The adapter view state is separate and in addition to the view state of the control.</source>
          <target state="translated">El estado de vista de adaptador es independiente y además el estado de vista del control.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>