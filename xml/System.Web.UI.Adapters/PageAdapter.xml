<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ed6d6f1617aee1fb32e775ee41037489b2274cb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37542574" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Adapta una página Web para un explorador concreto y proporciona la clase base de la que heredan todos los adaptadores de página, directa o indirectamente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter> es una clase abstracta que se adapta una página Web para una clase específica de exploradores, definido por el lenguaje de marcado que utiliza el explorador (por ejemplo, HTML o XHTML). Gran parte de la adaptabilidad del comportamiento de representación se puede encapsular en las clases de escritor de texto especializada que se derivan de la <xref:System.Web.UI.HtmlTextWriter> clase, por lo que no siempre es necesario proporcionar un adaptador de página.  
  
 La mayoría de los miembros de los adaptadores de página derivada se llaman desde el <xref:System.Web.UI.Page> clase o de los adaptadores de control. En primer lugar, el <xref:System.Web.UI.Page> adaptadores de control o la clase detectar la presencia del adaptador de página derivado y, a continuación, llamar al miembro o proporcionan la funcionalidad si el adaptador de página no está presente.  
  
 Los miembros de la <xref:System.Web.UI.Adapters.PageAdapter> clase proporcionan la funcionalidad siguiente:  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> y <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> propiedades definen otros encabezados HTTP y HTTP `GET` y `POST` parámetros que se pueden usar para variar el almacenamiento en caché. Se llaman durante la inicialización de la caché desde el <xref:System.Web.UI.Page> clase.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> método devuelve un objeto que puede usarse para conservar los Estados de vista y control combinado de la página. Se hace referencia desde el <xref:System.Web.UI.Page.PageStatePersister%2A> propiedad si un adaptador de página derivado está presente.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> método proporciona un fragmento de código DHTML que puede usarse para hacer referencia a formularios en secuencias de comandos.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> método devuelve una colección de las variables de postback, si la página está en postback. Se llamó a .NET Framework en lugar de la <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> método si un adaptador de página derivado está presente.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> y <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> métodos se usan adaptadores de control para representar los hipervínculos si un adaptador de página derivado está presente.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método representa un hipervínculo o una etiqueta de postback de cliente que puede enviar el formulario.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> y <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> métodos se usan adaptadores de control de botón de radio para hacer referencia a la otra <xref:System.Web.UI.WebControls.RadioButton> controles en un grupo de botones de radio.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> propiedad proporciona acceso a los Estados de vista y control combinados de la <xref:System.Web.UI.Page> objeto a través de interno `ClientState` propiedad de la <xref:System.Web.UI.Page> clase.  
  
-   El <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> método se utiliza adaptadores de control para realizar la transformación de texto específico del dispositivo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar una clase denominada `CustomPageAdapter` desde el <xref:System.Web.UI.Adapters.PageAdapter> clase e invalidar el <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método. El <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método agrega un atributo denominado `src` a un hipervínculo, que contiene una referencia a la página actual. Todos los hipervínculos que se representen en páginas a las que `CustomPageAdapter` se adjunta tendrá el `src` atributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Adapters.PageAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework crea internamente este adaptador al crear la correspondiente <xref:System.Web.UI.Page> clase o clase derivada.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de encabezados HTTP adicionales por los que se varía el almacenamiento en caché en la página Web a la que este adaptador de página derivado está asociado.</summary>
        <value>Un <see cref="T:System.Collections.IList" /> que contiene una lista de encabezados HTTP; de lo contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las entidades en la Web que almacene en caché las páginas Web almacenar en caché varias versiones, según los encabezados HTTP y otros factores. Por ejemplo, una versión para cada idioma en el que se genera una página normalmente se almacena en caché, según la `Accept-Language` encabezado HTTP.  
  
 Para exploradores específicos, podría ser necesario variar el almacenamiento en caché por encabezados HTTP, además de los encabezados que independiente del destino de control en el almacenamiento en caché. Por ejemplo, podría ser necesario almacenar en caché diferentes versiones de una página para distintos tamaños de pantalla.  
  
 Los nombres de encabezado devueltos por la <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> propiedad se agregan a la lista de encabezados en el `Vary` encabezado HTTP enviado al explorador del cliente.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> propiedad para devolver una lista de los encabezados adicionales para controlar el almacenamiento en caché específico del destino. El <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> base devuelve propiedad <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de parámetros adicionales de solicitudes GET y POST HTTP mediante los que se varía el almacenamiento en memoria caché de la página Web a la que está asociado este adaptador de página derivado.</summary>
        <value>
          <see cref="T:System.Collections.IList" /> que contiene una lista de parámetros GET y POST; de lo contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las entidades en la Web que caché de páginas Web en varias versiones de la caché según, entre otros factores, los parámetros de solicitud. Por ejemplo, una versión para cada ubicación del almacén dentro de una cadena de venta directa para el que se podría generar una página normalmente almacenaría en caché según el nombre del parámetro (por ejemplo, `StoreID`).  
  
 Para exploradores específicos, podría ser necesario variar el almacenamiento en caché de GET o POST parámetros además de los parámetros que independiente del destino de control en el almacenamiento en caché. Por ejemplo, podría ser necesario almacenar en caché diferentes versiones de una página para proveedores de servicios de teléfonos móviles diferentes.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> propiedad para devolver una lista de los parámetros GET o POST adicionales para controlar el almacenamiento en caché específico del destino. El <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> base devuelve del método <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena codificada que contiene los datos de la vista y de los estados de control de la página Web a la que está asociado este adaptador de página derivado.</summary>
        <value>
          <see cref="T:System.String" /> codificado que contiene la vista combinada y los estados de control de los controles en el <see cref="T:System.Web.UI.Page" /> asociado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> propiedad proporciona acceso a interno `ClientState` propiedad de la <xref:System.Web.UI.Page> clase.  
  
 Ver los datos de estado almacenados por la <xref:System.Web.UI.PageStatePersister> objeto interno `ClientState` propiedad de <xref:System.Web.UI.Page> siempre se guardará en el campo oculto en la página Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), no se puede invalidar el <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propiedad porque no es <see langword="virtual" />. Para modificar el comportamiento de <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> en una clase derivada, implementa una nueva <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propiedad que hace referencia el <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propiedad de la clase base.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si la página web está en postback y devuelve una colección de nombres/valores de las variables de postback.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> de las variables de postback, si las hay; de lo contrario <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> método devuelve una de las siguientes colecciones:  
  
-   Variables de formulario si el método de transferencia de datos HTTP es `POST`.  
  
-   Variables de cadena de consulta si el método HTTP es `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> método para proporcionar un control específico del destino de la colección de variables de postback.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de datos de nombre-valor que se envió a la página con un comando POST o GET, sin realizar la validación de solicitudes de ASP.NET en la solicitud.</summary>
        <returns>Los datos de formulario no validados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información, vea la clase <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">
          <see cref="T:System.String" /> que contiene el Identificador de cliente del formulario que se envió.</param>
        <summary>Devuelve un fragmento de código DHTML que el explorador cliente puede utilizar para hacer referencia al formulario de la página que se envió.</summary>
        <returns>
          <see cref="T:System.String" /> con una referencia al formulario de la página que se envió.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> método proporciona una referencia DHTML al formulario postback. El fragmento de código tiene el formato siguiente:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> método si el marcado para el explorador admitido el adaptador requiere un formato diferente para la referencia de devolución de datos de formulario. Por ejemplo, el estándar HTML 3.2 utilizado por los exploradores de Pocket PC requiere el siguiente formato: <c>documento.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">
          <see cref="T:System.String" />, que representa el nombre del grupo <see cref="T:System.Web.UI.WebControls.RadioButton" /> que se va a recuperar.</param>
        <summary>Recupera una colección de controles de botón de radio especificada por <paramref name="groupName" />.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> de controles <see cref="T:System.Web.UI.WebControls.RadioButton" /> que constituyen <paramref name="groupName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uso de adaptadores de control de botón de radio del <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> y <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> métodos para hacer referencia a la otra <xref:System.Web.UI.WebControls.RadioButton> los controles del grupo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un objeto utilizado por la página Web para mantener los estados de control y vista.</summary>
        <returns>Objeto derivado de <see cref="T:System.Web.UI.PageStatePersister" /> que admite la creación y extracción de los estados de vista y control combinado para <see cref="T:System.Web.UI.Page" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Page.PageStatePersister%2A> propiedad usa el <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> método para devolver el objeto, se deriva el <xref:System.Web.UI.PageStatePersister> (clase), que forma y extrae los Estados de vista y control combinado para la página. Si no hay ningún adaptador de página derivado asociada a la página, un <xref:System.Web.UI.HiddenFieldPageStatePersister> objeto se usa para mantener el estado en un campo oculto en la página.  
  
|Tipo de vínculo|Vínculo resultante|  
|---------------|--------------------|  
|Referencia de entidad de código, cer|<xref:System.Char.ToString%2A>|  
|Código de entidad de referencia calificada, cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Referencia de código entidad específica, las CER|<xref:System.Char.ToString%28System.Char%29>|  
|Código de entidad de referencia calificada específica, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ver los datos de estado almacenados por la <see cref="T:System.Web.UI.PageStatePersister" /> objeto interno <see langword="ClientState" /> propiedad de la <see cref="T:System.Web.UI.Page" /> siempre se guardará en el campo oculto en la página Web.</para>
        </block>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> método devuelva otra derivada almacenador de estado de página si no es factible para mantener el estado combinado en un campo oculto (por ejemplo, debido a los recursos limitados).  El <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> base clase devuelve un <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> objeto. Puede usar el <see cref="T:System.Web.UI.SessionPageStatePersister" /> clase para mantener el estado de la página de estado de sesión.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">
          <see cref="T:System.Web.UI.WebControls.RadioButton" /> que se agrega a la colección.</param>
        <summary>Agrega un control de botón de radio a la colección para un grupo de botones de radio especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter> clase utiliza un <xref:System.Collections.Specialized.ListDictionary> objeto para mantener una lista de grupos de botones de radio. Cada elemento de <xref:System.Collections.Specialized.ListDictionary> es una colección de los <xref:System.Web.UI.WebControls.RadioButton> controles en un grupo de botones de radio. El <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> método agrega un <xref:System.Web.UI.WebControls.RadioButton> control a la colección adecuada, creando la colección, si aún no existe y la creación de <xref:System.Collections.Specialized.ListDictionary> si existe previamente no están registrados <xref:System.Web.UI.WebControls.RadioButton> controles.  
  
 Uso de adaptadores de control de botón de radio del <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> y <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> métodos para hacer referencia a la otra <xref:System.Web.UI.WebControls.RadioButton> controles en un grupo de botones de radio.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Representa una etiqueta de hipervínculo de apertura para la secuencia de respuesta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</param>
        <param name="targetUrl">Valor <see cref="T:System.String" /> que contiene la Dirección URL de destino del vínculo.</param>
        <param name="encodeUrl">
          <see langword="true" /> para utilizar <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> para codificar la secuencia de salida; de lo contrario, <see langword="false" />.</param>
        <param name="softkeyLabel">Valor de <see cref="T:System.String" /> que va a utilizarse como etiqueta de una tecla programable.</param>
        <summary>Representa una etiqueta de hipervínculo de apertura que incluye la dirección URL de destino para la secuencia de respuesta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método escribe una apertura etiqueta de hipervínculo. Cuando `writer` es <xref:System.Web.UI.HtmlTextWriter>, esta etiqueta tiene el formato siguiente:  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar una clase denominada `CustomPageAdapter` desde el <xref:System.Web.UI.Adapters.PageAdapter> clase e invalidar el <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método. El <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método agrega un atributo denominado `src` a un hipervínculo, que contiene una referencia a la página actual. Todos los hipervínculos que se representen en páginas a las que `CustomPageAdapter` se adjunta tendrá el `src` atributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> método para escribir un formato diferente para un hipervínculo de apertura de etiquetas o para escribir la etiqueta adicional atributos. Por ejemplo, el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> método base no escribe un atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</param>
        <param name="targetUrl">Valor <see cref="T:System.String" /> que contiene la Dirección URL de destino del vínculo.</param>
        <param name="encodeUrl">
          <see langword="true" /> para utilizar <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> para codificar la secuencia de salida; de lo contrario, <see langword="false" />.</param>
        <param name="softkeyLabel">Valor de <see cref="T:System.String" /> que va a utilizarse como etiqueta de una tecla programable.</param>
        <param name="accessKey">Valor <see cref="T:System.String" /> para asignar al atributo <see langword="accessKey" /> del vínculo que se va a crear.</param>
        <summary>Representa una etiqueta de apertura de hipervínculo que incluye la dirección URL de destino y una clave de acceso a la secuencia de respuesta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método escribe una apertura etiqueta de hipervínculo. Cuando `writer` es un <xref:System.Web.UI.HtmlTextWriter> de objeto, esta etiqueta tiene el formato siguiente:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar una clase denominada `CustomPageAdapter` desde el <xref:System.Web.UI.Adapters.PageAdapter> clase e invalidar el <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> método. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Agrega un atributo denominado `src` a un hipervínculo, que contiene una referencia a la página actual. Todos los hipervínculos que se representen en páginas a las que `CustomPageAdapter` se adjunta tendrá el `src` atributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> tiene más de un carácter.</exception>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> método para escribir un formato diferente para un hipervínculo de apertura de etiquetas o para escribir la etiqueta adicional atributos. Por ejemplo, el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> método base no escribe un atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</param>
        <summary>Representa una etiqueta de cierre de hipervínculo a la secuencia de respuesta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> método escribe el cierre de un etiqueta de hipervínculo. Cuando el escritor de texto es un <xref:System.Web.UI.HtmlTextWriter> de objeto, esta etiqueta tiene el formato siguiente:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> y <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> se deben representar los métodos cuando otro formato de hipervínculo.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Representa un evento de postback en la secuencia de respuesta como un vínculo, incluidos todos los argumentos requeridos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</param>
        <param name="target">Valor de <see cref="T:System.String" /> que contiene el nombre de destino del evento de postback.</param>
        <param name="argument">Valor de <see cref="T:System.String" /> que contiene el argumento que se va a pasar al evento de postback de destino.</param>
        <param name="softkeyLabel">Valor de <see cref="T:System.String" /> que va a utilizarse como etiqueta de una tecla programable.</param>
        <param name="text">Valor de <see cref="T:System.String" /> del texto que se va a mostrar como vínculo.</param>
        <summary>Representa un evento de postback en la secuencia de respuesta como un hipervínculo, incluidos el estado de vista codificado y posiblemente cifrado, así como el destino del evento y el argumento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método escribe un evento de devolución de datos como un hipervínculo sin secuencia de comandos.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> método si es necesario para el hipervínculo del evento de postback un formato diferente o el explorador tiene otros requisitos únicos. Por ejemplo, algunos exploradores requieren no esté vacío si el vínculo es representar el texto del hipervínculo. También puede invalidar <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> si los recursos limitados impiden incluido el estado de vista como un parámetro de dirección URL. El <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> método base no escribe un atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</param>
        <param name="target">Valor de <see cref="T:System.String" /> que contiene el nombre de destino del evento de postback.</param>
        <param name="argument">Valor de <see cref="T:System.String" /> que contiene el argumento que se va a pasar al evento de postback de destino.</param>
        <param name="softkeyLabel">Valor de <see cref="T:System.String" /> que va a utilizarse como etiqueta de una tecla programable.</param>
        <param name="text">Valor de <see cref="T:System.String" /> del texto que se va a mostrar como vínculo.</param>
        <param name="postUrl">Valor de <see cref="T:System.String" /> que contiene la dirección URL de la página de destino del postback.</param>
        <param name="accessKey">Valor <see cref="T:System.String" /> utilizado para asignárselo al atributo <see langword="accessKey" /> del vínculo creado.</param>
        <summary>Representa un evento de postback en la secuencia de respuesta como un hipervínculo, incluidos el estado de vista codificado y posiblemente cifrado, así como un destino del evento, un argumento, un parámetro de página anterior y una clave de acceso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método escribe un evento de devolución de datos como un hipervínculo sin secuencia de comandos, incluidos el posiblemente fragmentado <xref:System.Web.HttpUtility.UrlEncode%2A> estado de vista, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` parámetros y un `accessKey="accessKey"` atributo.  
  
 Estado de vista está cifrado si el `enableViewStateMac` atributo de la [páginas Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) elemento de configuración se establece en `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método si es necesario para el hipervínculo del evento de postback un formato diferente o el explorador tiene otros requisitos únicos. Por ejemplo, algunos exploradores requieren no esté vacío si el vínculo es representar el texto del hipervínculo. También puede invalidar <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> si los recursos limitados impiden incluido el estado de vista como un parámetro de dirección URL. El <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método base no escribe un atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</param>
        <param name="target">Valor de <see cref="T:System.String" /> que contiene el nombre de destino del evento de postback.</param>
        <param name="argument">Valor de <see cref="T:System.String" /> que contiene el argumento que se va a pasar al evento de postback de destino.</param>
        <param name="softkeyLabel">Valor de <see cref="T:System.String" /> que va a utilizarse como etiqueta de una tecla programable.</param>
        <param name="text">Valor de <see cref="T:System.String" /> del texto que se va a mostrar como vínculo.</param>
        <param name="postUrl">Valor de <see cref="T:System.String" /> que contiene la dirección URL de la página de destino del postback.</param>
        <param name="accessKey">Valor <see cref="T:System.String" /> para asignárselo al atributo <see langword="accessKey" /> del vínculo creado.</param>
        <param name="encode">
          <see langword="true" /> para usar <c>&amp;amp;</c> como separador de parámetro de dirección URL; <see langword="false" /> para usar <c>&amp;</c>.</param>
        <summary>Representa un evento de postback en la secuencia de respuesta como un hipervínculo, incluidos el estado de vista codificado, así como un destino del evento, un argumento, un parámetro de página anterior y una clave de acceso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> método escribe un evento de devolución de datos como un hipervínculo sin secuencia de comandos, incluidos el posiblemente fragmentado <xref:System.Web.HttpUtility.UrlEncode%2A> estado de vista, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` parámetros y un `accessKey="accessKey"` atributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método si es necesario para el hipervínculo del evento de postback un formato diferente o el explorador tiene otros requisitos únicos. Por ejemplo, algunos exploradores requieren no esté vacío si el vínculo es representar el texto del hipervínculo. También puede invalidar <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> si los recursos limitados evitan la inclusión del estado de vista como un parámetro de dirección URL. El <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> método base no escribe un atributo para <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <see cref="T:System.String" /> que es el texto para transformar.</param>
        <summary>Transforma el texto para el explorador de destino.</summary>
        <returns>
          <see cref="T:System.String" /> que contiene el texto transformado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> método puede usarse, por ejemplo, para transformar los caracteres de tabulación (`\t`) en los saltos de línea (`\n`).  
  
 El <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> base devuelve del método `text` sin cambios.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (clase), puede invalidar <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> si un marcado concreto tiene una construcción con un formato diferente de HTML estándar. Por ejemplo, si un explorador requiere un identificador diferente para una etiqueta que lo que se usaría en HTML, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> se puede invalidar el método para encontrar esa etiqueta y cambiarla.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>