<Type Name="VisualStyleRenderer" FullName="System.Windows.Forms.VisualStyles.VisualStyleRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c65d1ec9365416f0d27e568a107a0efcbd020ee" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39933082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualStyleRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualStyleRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualStyleRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStyleRenderer sealed" />
  <TypeSignature Language="F#" Value="type VisualStyleRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos para dibujar y obtener información sobre <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> expone el espacio de nombres <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> elementos (UI) que son compatibles con los estilos visuales de la interfaz de objetos que representan todos los controles y el usuario. Para dibujar u obtener información sobre un elemento determinado, debe establecer un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> al elemento que está interesado. Un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> es establece automáticamente en un determinado <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> en el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> constructor, pero también puede establecer una existente <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> a un elemento distinto mediante una llamada a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%2A> método.  
  
 Para dibujar un elemento, use el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> método. El <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> clase también incluye métodos, como <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor%2A> y <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A>, que proporcionan información sobre cómo se define un elemento de estilo visual actual.  
  
 El <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> constructor y muchos de los <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> métodos inician excepciones a menos que los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican al área cliente de windows de la aplicación. Para comprobar si estas condiciones, utilice el `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propiedad.  
  
 La <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> clase ajusta la funcionalidad de los estilos visuales (UxTheme) API desde la parte del Shell de Windows de Windows Platform SDK. Para obtener más información sobre los estilos visuales, vea "Using Windows XP Visual Styles" en la parte de Platform SDK de MSDN Library en [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library/).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> clase para implementar un control personalizado que simula la parte de la interfaz de usuario básica de una ventana, incluido arrastrar con la barra de título, el cambio de tamaño con el controlador de tamaño y cerrar. En este ejemplo se utiliza varios <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> objetos que representan partes estándar de una ventana, incluidos los elementos expuestos por la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption>, <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton>, y <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Gripper> clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleInformation" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer element" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">Un <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> que representará este <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> usando el objeto <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor utiliza el <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Part%2A?displayProperty=nameWithType>, y <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.State%2A?displayProperty=nameWithType> propiedades de la `element` parámetro para inicializar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, y <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propiedades.  
  
 Antes de usar este constructor, debe llamar a la `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> método para comprobar si el estilo visual actual proporciona una definición para el elemento especificado por el `element` parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> constructor para crear un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>. Este ejemplo de código forma parte de un ejemplo de código más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El sistema operativo no admite estilos visuales.  
  
O bien 
El usuario ha deshabilitado los estilos visuales en el sistema operativo.  
  
O bien 
Los estilos visuales no se aplican al área de cliente de las ventanas de aplicación.</exception>
        <exception cref="T:System.ArgumentException">El estilo visual actual no define <paramref name="element" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : string * int * int -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer (className, part, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">El nombre de clase del elemento que <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> representará.</param>
        <param name="part">La parte del elemento que <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> representará.</param>
        <param name="state">El estado del elemento que <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> representará.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> utilizando los valores de clase, parte y estado dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor utiliza el `className`, `part`, y `state` parámetros para inicializar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, y <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propiedades.  
  
 Antes de usar este constructor, debe llamar a la `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> método para comprobar si el estilo visual actual proporciona una definición para el elemento especificado por el `className`, `part`, y `state` parámetros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El sistema operativo no admite estilos visuales.  
  
O bien 
El usuario ha deshabilitado los estilos visuales en el sistema operativo.  
  
O bien 
Los estilos visuales no se aplican al área de cliente de las ventanas de aplicación.</exception>
        <exception cref="T:System.ArgumentException">La combinación de <paramref name="className" />, <paramref name="part" /> y <paramref name="state" /> no está definida por el estilo visual actual.</exception>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public string Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Class" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Class { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Class : string" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de clase del elemento de estilo visual actual.</summary>
        <value>Una cadena que identifica la clase del elemento de estilo visual actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad identifica un grupo de controles relacionados o elementos de interfaz de usuario. Para obtener más información acerca de la clase, parte y estado de un elemento de estilo visual, consulte el <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja la imagen de fondo del elemento de estilo visual actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">
          <see cref="T:System.Drawing.IDeviceContext" /> que se utiliza para dibujar la imagen de fondo.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se dibuja la imagen de fondo.</param>
        <summary>Dibuja la imagen de fondo del elemento de estilo visual actual dentro del rectángulo delimitador especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método dibuja el fondo del elemento de estilo visual actual especificado por el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, y <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propiedades.  
  
 Si el <xref:System.Drawing.Rectangle.Width%2A> o <xref:System.Drawing.Rectangle.Height%2A> del rectángulo especificado por el `bounds` parámetro es menor que 0, el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> método devolverá sin dibujar el fondo.  
  
 El fondo de un elemento de estilo visual puede ser un archivo de mapa de bits o un borde relleno. Para determinar el tipo en segundo plano, llame a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> método con un valor de argumento de <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType>. Para determinar si el fondo del elemento se escalará para ajustarse a los límites especificados, llame a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> método con un valor de argumento de <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%28System.Drawing.IDeviceContext%2CSystem.Drawing.Rectangle%29> método para dibujar un un <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> dentro de un control personalizado <xref:System.Windows.Forms.Control.OnPaint%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Drawing.Rectangle clipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Rectangle clipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle, clipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Drawing::Rectangle clipRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds, clipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="clipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">
          <see cref="T:System.Drawing.IDeviceContext" /> que se utiliza para dibujar la imagen de fondo.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se dibuja la imagen de fondo.</param>
        <param name="clipRectangle">
          <see cref="T:System.Drawing.Rectangle" /> que define un rectángulo de recorte para la operación de dibujo.</param>
        <summary>Dibuja la imagen de fondo del elemento de estilo visual actual dentro del rectángulo delimitador especificado y recortada según el rectángulo de recorte especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método dibuja el fondo del elemento de estilo visual actual especificado por el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, y <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propiedades. El fondo se recortará en el área especificada por el `clipRectangle` parámetro.  
  
 Si el <xref:System.Drawing.Rectangle.Width%2A> o <xref:System.Drawing.Rectangle.Height%2A> del rectángulo especificado por el `bounds` o `clipRectangle` parámetros es menor que 0, el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> método devolverá sin dibujar el fondo.  
  
 El fondo de un elemento de estilo visual puede ser un archivo de mapa de bits o un borde relleno. Para determinar el tipo en segundo plano, llame a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> método con un valor de argumento de <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType>. Para determinar si el fondo del elemento se escalará para ajustarse a los límites especificados, llame a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> método con un valor de argumento de <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEdge">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DrawEdge (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.Edges edges, System.Windows.Forms.VisualStyles.EdgeStyle style, System.Windows.Forms.VisualStyles.EdgeEffects effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle DrawEdge(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.Edges edges, valuetype System.Windows.Forms.VisualStyles.EdgeStyle style, valuetype System.Windows.Forms.VisualStyles.EdgeEffects effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawEdge(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.Edges,System.Windows.Forms.VisualStyles.EdgeStyle,System.Windows.Forms.VisualStyles.EdgeEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle DrawEdge(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::Edges edges, System::Windows::Forms::VisualStyles::EdgeStyle style, System::Windows::Forms::VisualStyles::EdgeEffects effects);" />
      <MemberSignature Language="F#" Value="member this.DrawEdge : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.Edges * System.Windows.Forms.VisualStyles.EdgeStyle * System.Windows.Forms.VisualStyles.EdgeEffects -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.DrawEdge (dc, bounds, edges, style, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="edges" Type="System.Windows.Forms.VisualStyles.Edges" />
        <Parameter Name="style" Type="System.Windows.Forms.VisualStyles.EdgeStyle" />
        <Parameter Name="effects" Type="System.Windows.Forms.VisualStyles.EdgeEffects" />
      </Parameters>
      <Docs>
        <param name="dc">
          <see cref="T:System.Drawing.IDeviceContext" /> que se utiliza para dibujar los bordes.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> cuyos límites definen los bordes que hay que dibujar.</param>
        <param name="edges">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.VisualStyles.Edges" />.</param>
        <param name="style">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.VisualStyles.EdgeStyle" />.</param>
        <param name="effects">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.VisualStyles.EdgeEffects" />.</param>
        <summary>Dibuja uno o más bordes del rectángulo delimitador especificado.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> que representa el interior del parámetro <paramref name="bounds" />, menos los bordes que se dibujaron.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja la imagen especificada dentro del rectángulo delimitador especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Image -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar la imagen.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se dibuja la imagen.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> que se va a dibujar.</param>
        <summary>Dibuja la imagen especificada dentro de los límites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aplica el estilo visual de uno de los efectos especificados por el <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> los valores en el elemento actual, este método se aplicarán el efecto a la imagen dibujada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="g" /> o <paramref name="image" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.ImageList imageList, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.ImageList imageList, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::ImageList ^ imageList, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ImageList * int -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, imageList, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="imageList" Type="System.Windows.Forms.ImageList" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar la imagen.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se dibuja la imagen.</param>
        <param name="imageList">Un objeto <see cref="T:System.Windows.Forms.ImageList" /> que contiene el <see cref="T:System.Drawing.Image" /> que se va a dibujar.</param>
        <param name="imageIndex">Índice de <see cref="T:System.Drawing.Image" /> dentro de <c>imageList</c> que se va a dibujar.</param>
        <summary>Dibuja la imagen de la <see cref="T:System.Windows.Forms.ImageList" /> especificada dentro de los límites especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aplica el estilo visual de uno de los efectos especificados por el <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> los valores en el elemento actual, este método se aplicarán el efecto a la imagen dibujada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="g" /> o <paramref name="image" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="imageIndex" /> es menor que 0 o mayor o igual que el número de imágenes de <paramref name="imageList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public void DrawParentBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawParentBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawParentBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawParentBackground (dc As IDeviceContext, bounds As Rectangle, childControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawParentBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::Control ^ childControl);" />
      <MemberSignature Language="F#" Value="member this.DrawParentBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.Control -&gt; unit" Usage="visualStyleRenderer.DrawParentBackground (dc, bounds, childControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="dc">
          <see cref="T:System.Drawing.IDeviceContext" /> que se usa para dibujar el fondo del elemento primario de <c>childControl</c>. Este objeto pertenece normalmente al control secundario.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> donde se va a dibujar el fondo del control primario. Este rectángulo debe encontrarse dentro de los límites del control secundario.</param>
        <param name="childControl">Control a cuyo control principal se va a dibujar el fondo.</param>
        <summary>Dibuja el fondo del elemento primario de un control en el área especificada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja el texto en los límites especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que se utiliza para dibujar el texto.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se va a dibujar el texto.</param>
        <param name="textToDraw">Texto que se va a trazar.</param>
        <summary>Dibuja el texto en los límites especificados utilizando el formato predeterminado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que se utiliza para dibujar el texto.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se va a dibujar el texto.</param>
        <param name="textToDraw">Texto que se va a trazar.</param>
        <param name="drawDisabled">
          <see langword="true" /> para dibujar el texto atenuado; de lo contrario, <see langword="false" />.</param>
        <summary>Dibuja el texto en los límites especificados con la opción de mostrar el texto deshabilitado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que se utiliza para dibujar el texto.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> en el que se va a dibujar el texto.</param>
        <param name="textToDraw">Texto que se va a trazar.</param>
        <param name="drawDisabled">
          <see langword="true" /> para dibujar el texto atenuado; de lo contrario, <see langword="false" />.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Dibuja el texto en el rectángulo delimitador especificado con la opción de mostrar texto deshabilitado y aplicar otro formato de texto.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundContentRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundContentRectangle (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundContentRectangle(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundContentRectangle(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundContentRectangle (dc As IDeviceContext, bounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundContentRectangle(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundContentRectangle : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundContentRectangle (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que contiene toda el área del fondo del elemento de estilo visual actual.</param>
        <summary>Devuelve el área de contenido para el fondo del elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> que contiene el área de contenido para el fondo del elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un estilo visual puede definir un área de contenido dentro de cada imagen de fondo. Este es el área donde el contenido como texto y se pueden colocar los iconos sin sobrescribir los bordes de fondo. Este método utiliza el área de fondo especificado para calcular el área de contenido para el elemento de estilo visual actual.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundExtent (dc As IDeviceContext, contentBounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle contentBounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundExtent (dc, contentBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="contentBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="contentBounds">
          <see cref="T:System.Drawing.Rectangle" /> que contiene el área de contenido del elemento de estilo visual actual.</param>
        <summary>Devuelve el área de fondo completa para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> que contiene toda el área del fondo del elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un estilo visual puede definir un área de contenido dentro de cada imagen de fondo. Este es el área donde el contenido como texto y se pueden colocar los iconos sin sobrescribir los bordes de fondo. Este método usa el área de contenido determinado para calcular el área de fondo completa para el elemento de estilo visual actual.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundRegion">
      <MemberSignature Language="C#" Value="public System.Drawing.Region GetBackgroundRegion (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region GetBackgroundRegion(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundRegion (dc As IDeviceContext, bounds As Rectangle) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ GetBackgroundRegion(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundRegion : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Region" Usage="visualStyleRenderer.GetBackgroundRegion (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que contiene toda el área del fondo del elemento de estilo visual actual.</param>
        <summary>Devuelve la región para el fondo del elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Region" /> que contiene el fondo del elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método puede usarse para obtener el <xref:System.Drawing.Region> de un elemento de estilo visual que tiene partes parcialmente transparentes o con mezcla alfa en el fondo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> método en un control personalizado. Este ejemplo se utiliza <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> para obtener el <xref:System.Drawing.Region> del elemento de barra de título de ventana devuelto por la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Active%2A?displayProperty=nameWithType> propiedad. Esto <xref:System.Drawing.Region> se usa para establecer el <xref:System.Windows.Forms.Control.Region%2A?displayProperty=nameWithType> propiedad del control, para que aparezca la barra de título de ventana con las esquinas redondeadas definidas por el estilo visual de Windows XP estándar. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#30)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (System.Windows.Forms.VisualStyles.BooleanProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(valuetype System.Windows.Forms.VisualStyles.BooleanProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBoolean(System.Windows.Forms.VisualStyles.BooleanProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (prop As BooleanProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(System::Windows::Forms::VisualStyles::BooleanProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : System.Windows.Forms.VisualStyles.BooleanProperty -&gt; bool" Usage="visualStyleRenderer.GetBoolean prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.BooleanProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad booleana especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see langword="true" /> si la propiedad especificada por el parámetro <paramref name="prop" /> es <see langword="true" /> para el elemento de estilo visual actual; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores booleanos para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.BooleanProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetColor (System.Windows.Forms.VisualStyles.ColorProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetColor(valuetype System.Windows.Forms.VisualStyles.ColorProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor(System.Windows.Forms.VisualStyles.ColorProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColor (prop As ColorProperty) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetColor(System::Windows::Forms::VisualStyles::ColorProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetColor : System.Windows.Forms.VisualStyles.ColorProperty -&gt; System.Drawing.Color" Usage="visualStyleRenderer.GetColor prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.ColorProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de color especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Color" /> que contiene el valor de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores de color para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.ColorProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumValue">
      <MemberSignature Language="C#" Value="public int GetEnumValue (System.Windows.Forms.VisualStyles.EnumProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEnumValue(valuetype System.Windows.Forms.VisualStyles.EnumProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue(System.Windows.Forms.VisualStyles.EnumProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumValue (prop As EnumProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEnumValue(System::Windows::Forms::VisualStyles::EnumProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetEnumValue : System.Windows.Forms.VisualStyles.EnumProperty -&gt; int" Usage="visualStyleRenderer.GetEnumValue prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.EnumProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de tipo enumerado especificada para el elemento de estilo visual actual.</summary>
        <returns>Valor entero de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de tipos enumerados para describir algunas propiedades de los elementos definidos por un estilo. Estos tipos enumerados están encapsulados por los <xref:System.Windows.Forms.VisualStyles.EnumProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilename">
      <MemberSignature Language="C#" Value="public string GetFilename (System.Windows.Forms.VisualStyles.FilenameProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetFilename(valuetype System.Windows.Forms.VisualStyles.FilenameProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFilename(System.Windows.Forms.VisualStyles.FilenameProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFilename (prop As FilenameProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetFilename(System::Windows::Forms::VisualStyles::FilenameProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFilename : System.Windows.Forms.VisualStyles.FilenameProperty -&gt; string" Usage="visualStyleRenderer.GetFilename prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FilenameProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de nombre de archivo especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.String" /> que contiene el valor de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales pueden especificar los nombres de archivos de imagen que se usan para dibujar un elemento determinado de diferentes tamaños y resoluciones. Estos nombres de archivo están encapsulados por los <xref:System.Windows.Forms.VisualStyles.FilenameProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font GetFont (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.FontProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Font GetFont(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.FontProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFont(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.FontProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFont (dc As IDeviceContext, prop As FontProperty) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Font ^ GetFont(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::FontProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFont : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.FontProperty -&gt; System.Drawing.Font" Usage="visualStyleRenderer.GetFont (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FontProperty" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de fuente especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Font" /> que contiene el valor de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores de fuente para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.FontProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public int GetInteger (System.Windows.Forms.VisualStyles.IntegerProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInteger(valuetype System.Windows.Forms.VisualStyles.IntegerProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetInteger(System.Windows.Forms.VisualStyles.IntegerProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInteger (prop As IntegerProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInteger(System::Windows::Forms::VisualStyles::IntegerProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetInteger : System.Windows.Forms.VisualStyles.IntegerProperty -&gt; int" Usage="visualStyleRenderer.GetInteger prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.IntegerProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de entero especificada para el elemento de estilo visual actual.</summary>
        <returns>Valor entero de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores enteros para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.IntegerProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMargins">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding GetMargins (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.MarginProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.Padding GetMargins(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.MarginProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetMargins(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.MarginProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMargins (dc As IDeviceContext, prop As MarginProperty) As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Padding GetMargins(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::MarginProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetMargins : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.MarginProperty -&gt; System.Windows.Forms.Padding" Usage="visualStyleRenderer.GetMargins (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.MarginProperty" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de márgenes especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.Padding" /> que contiene el valor de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores de margen para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.MarginProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPartSize">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve el valor de la propiedad de tamaño especificada de la parte del estilo visual actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="type">Uno de los valores <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> que especifica el valor de tamaño que hay que recuperar para la parte.</param>
        <summary>Devuelve el valor de la propiedad de tamaño especificada de la parte del estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" /> que contiene el tamaño especificado por el parámetro <paramref name="type" /> para la parte del estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, sólo el <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.True> y <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.Minimum> los valores se deben usar para el `type` parámetro de este método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize%28System.Drawing.IDeviceContext%2CSystem.Windows.Forms.VisualStyles.ThemeSizeType%29> método en un control personalizado para obtener los tamaños de una barra de título de ventana **cerrar** button, bordes y controlador de tamaño especificado por el estilo visual. Estos tamaños se utilizan para calcular el tamaño de la <xref:System.Drawing.Rectangle> objetos utilizados para dibujar el <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> objetos que representan estas partes de la ventana. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, bounds As Rectangle, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, bounds, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que contiene el área donde se dibujará la parte.</param>
        <param name="type">Uno de los valores <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> que especifica el valor de tamaño que hay que recuperar para la parte.</param>
        <summary>Devuelve el valor de la propiedad de tamaño especificada de la parte del estilo visual actual utilizando los límites de dibujo especificados.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" /> que contiene el tamaño especificado por el parámetro <paramref name="type" /> para la parte del estilo visual actual.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPoint (System.Windows.Forms.VisualStyles.PointProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPoint(valuetype System.Windows.Forms.VisualStyles.PointProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint(System.Windows.Forms.VisualStyles.PointProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPoint (prop As PointProperty) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetPoint(System::Windows::Forms::VisualStyles::PointProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetPoint : System.Windows.Forms.VisualStyles.PointProperty -&gt; System.Drawing.Point" Usage="visualStyleRenderer.GetPoint prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.PointProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de punto especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Point" /> que contiene el valor de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores de punto para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.PointProperty> valores.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint%2A> método en un control personalizado para obtener el desplazamiento de la ventana **cerrar** botón en relación con la esquina superior derecha de la barra de título. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (System.Windows.Forms.VisualStyles.StringProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.Windows.Forms.VisualStyles.StringProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetString(System.Windows.Forms.VisualStyles.StringProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (prop As StringProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Windows::Forms::VisualStyles::StringProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetString : System.Windows.Forms.VisualStyles.StringProperty -&gt; string" Usage="visualStyleRenderer.GetString prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.StringProperty" />
      </Parameters>
      <Docs>
        <param name="prop">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> que especifica qué valor de propiedad se va a recuperar para el elemento de estilo visual actual.</param>
        <summary>Devuelve el valor de la propiedad de cadena especificada para el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.String" /> que contiene el valor de la propiedad especificada por el parámetro <paramref name="prop" /> para el elemento de estilo visual actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos visuales utilizan un conjunto de valores de cadena para describir algunas propiedades de los elementos definidos por un estilo. Estas propiedades están encapsuladas por los <xref:System.Windows.Forms.VisualStyles.StringProperty> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="prop" /> no es uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextExtent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve el tamaño y la ubicación de la cadena especificada cuando se dibuja con la fuente del elemento de estilo visual actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="textToDraw">Cadena que se va a medir.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Devuelve el tamaño y la ubicación de la cadena especificada cuando se dibuja con la fuente del elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> que contiene el área requerida para ajustar el texto representado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, bounds, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> utilizado para controlar el flujo y ajustar el texto.</param>
        <param name="textToDraw">Cadena que se va a medir.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Devuelve el tamaño y la ubicación de la cadena especificada cuando se dibuja con la fuente del elemento de estilo visual actual dentro del rectángulo delimitador inicial especificado.</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> que contiene el área requerida para ajustar el texto representado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextMetrics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics (System.Drawing.IDeviceContext dc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics(class System.Drawing.IDeviceContext dc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextMetrics(System.Drawing.IDeviceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextMetrics (dc As IDeviceContext) As TextMetrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::TextMetrics GetTextMetrics(System::Drawing::IDeviceContext ^ dc);" />
      <MemberSignature Language="F#" Value="member this.GetTextMetrics : System.Drawing.IDeviceContext -&gt; System.Windows.Forms.VisualStyles.TextMetrics" Usage="visualStyleRenderer.GetTextMetrics dc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.TextMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <summary>Recupera información sobre la fuente especificada por el elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.VisualStyles.TextMetrics" /> que proporciona información sobre la fuente especificada por el elemento de estilo visual actual.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un identificador único para la clase actual de elementos de estilo visual.</summary>
        <value>
          <see cref="T:System.IntPtr" /> que identifica un conjunto de datos que define la clase de elementos especificada por <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se usa internamente el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> métodos. Si la clase de elementos especificada por el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> propiedad no está definida por el estilo visual actual y, después, esta propiedad devuelve <xref:System.IntPtr.Zero?displayProperty=nameWithType>.  
  
 Este valor de propiedad se invalida cuando cambia el estilo visual del sistema operativo, o cuando el usuario deshabilita los estilos visuales. Si tiene acceso a esta propiedad directamente, su código debería consultar esta propiedad para obtener una nueva controlar cuándo el <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged?displayProperty=nameWithType> se provoca el evento con el <xref:Microsoft.Win32.UserPreferenceChangedEventArgs.Category%2A?displayProperty=nameWithType> el valor de propiedad <xref:Microsoft.Win32.UserPreferenceCategory.VisualStyle?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El sistema operativo no admite estilos visuales.  
  
O bien 
El usuario ha deshabilitado los estilos visuales en el sistema operativo.  
  
O bien 
Los estilos visuales no se aplican al área de cliente de las ventanas de aplicación.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si un punto se encuentra en el fondo del elemento de estilo visual actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="backgroundRectangle">
          <see cref="T:System.Drawing.Rectangle" /> que contiene el fondo del elemento de estilo visual actual.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que se va a probar.</param>
        <param name="options">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" />.</param>
        <summary>Devuelve un código de prueba de comprobación que indica si un punto está incluido en el fondo del elemento de estilo visual actual.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> que describe donde se encuentra <paramref name="pt" /> en el fondo del elemento de estilo visual actual.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.Graphics g, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Region region, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle backgroundRectangle, class System.Drawing.Region region, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Region,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::Graphics ^ g, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Region ^ region, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Region * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (g, backgroundRectangle, region, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="g">Objeto <see cref="T:System.Drawing.Graphics" /> que va a utilizar esta operación.</param>
        <param name="backgroundRectangle">
          <see cref="T:System.Drawing.Rectangle" /> que contiene el fondo del elemento de estilo visual actual.</param>
        <param name="region">
          <see cref="T:System.Drawing.Region" /> que especifica los límites del área de prueba de comprobación dentro del fondo.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que se va a probar.</param>
        <param name="options">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" />.</param>
        <summary>Devuelve un código de prueba de comprobación indicando si el punto se encuentra en el fondo del elemento de estilo visual actual y dentro de los límites especificados.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> que describe donde se encuentra <paramref name="pt" /> en el fondo del elemento de estilo visual actual, si se encuentra allí.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, IntPtr hRgn, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, native int hRgn, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.IntPtr,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, hRgn As IntPtr, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, IntPtr hRgn, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * nativeint * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, hRgn, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="hRgn" Type="System.IntPtr" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc">Objeto <see cref="T:System.Drawing.IDeviceContext" /> que va a utilizar esta operación.</param>
        <param name="backgroundRectangle">
          <see cref="T:System.Drawing.Rectangle" /> que contiene el fondo del elemento de estilo visual actual.</param>
        <param name="hRgn">Un identificador de Windows para un <see cref="T:System.Drawing.Region" /> que especifica los límites del área de prueba de comprobación dentro del fondo.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que se va a probar.</param>
        <param name="options">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" />.</param>
        <summary>Devuelve un código de prueba de comprobación indicando si el punto se encuentra en el fondo del elemento de estilo visual actual y dentro de la región especificada.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> que describe donde se encuentra <paramref name="pt" /> en el fondo del elemento de estilo visual actual.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public bool IsBackgroundPartiallyTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBackgroundPartiallyTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsBackgroundPartiallyTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBackgroundPartiallyTransparent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBackgroundPartiallyTransparent();" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundPartiallyTransparent : unit -&gt; bool" Usage="visualStyleRenderer.IsBackgroundPartiallyTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si el fondo del elemento de estilo visual actual tiene partes semitransparentes o con mezcla alfa.</summary>
        <returns>Es <see langword="true" /> si el fondo del elemento de estilo visual actual tiene partes semitransparentes o con mezcla alfa; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementDefined">
      <MemberSignature Language="C#" Value="public static bool IsElementDefined (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsElementDefined(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsElementDefined (element As VisualStyleElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsElementDefined(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="static member IsElementDefined : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> cuya combinación de clase y parte se comprobará.</param>
        <summary>Determina si el estilo visual actual define al elemento de estilo visual especificado.</summary>
        <returns>Es <see langword="true" /> si se define la combinación de las propiedades <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName" /> y <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part" /> de <paramref name="element" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba el valor de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propiedad internamente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> método para determinar si se debe inicializar un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> para un determinado <xref:System.Windows.Forms.VisualStyles.VisualStyleElement>. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El sistema operativo no admite estilos visuales.  
  
O bien 
El usuario ha deshabilitado los estilos visuales en el sistema operativo.  
  
O bien 
Los estilos visuales no se aplican al área de cliente de las ventanas de aplicación.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el sistema operativo está utilizando estilos visuales para dibujar los controles.</summary>
        <value>Es <see langword="true" /> si el sistema operativo admite los estilos visuales, el usuario los ha habilitado en el sistema operativo y se aplican al área cliente de las ventanas de aplicación; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se describe cómo comprobar individualmente para cada una de las tres condiciones que deben cumplirse para la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propiedad para devolver `true`.  
  
|Condición|Cómo determinar por separado|  
|---------------|---------------------------------|  
|El sistema operativo es compatible con los estilos visuales.|Compruebe que la <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> propiedad de la <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> clase es `true`.|  
|El usuario ha habilitado los estilos visuales en el sistema operativo.|Compruebe que la <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> propiedad de la <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> clase es `true`.|  
|Los estilos visuales se usan para dibujar el área de cliente de las ventanas de la aplicación.|Compruebe que la <xref:System.Windows.Forms.Application.VisualStyleState%2A> propiedad de la <xref:System.Windows.Forms.Application> clase tiene el valor <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType> o <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastHResult">
      <MemberSignature Language="C#" Value="public int LastHResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastHResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastHResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastHResult { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastHResult : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el último código de error devuelto por los métodos API de los estilos visuales nativos (UxTheme) encapsulados por la clase <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</summary>
        <value>Un valor que especifica el último código de error devuelto por los métodos API de los estilos visuales nativos que encapsula esta clase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad obtiene el valor HRESULT que devolvió el último método de API de los estilos visuales nativos llamado por un miembro de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> clase. Para obtener más información acerca de la API de los estilos visuales nativos, vea "Using Windows XP Visual Styles" en la parte de Platform SDK de MSDN Library en [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Part">
      <MemberSignature Language="C#" Value="public int Part { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Part" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Part As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Part { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Part : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la parte del elemento de estilo visual actual.</summary>
        <value>Un valor que especifica la parte del elemento de estilo visual actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad identifica una especialización de una clase determinada. Para obtener más información acerca de la clase, parte y estado de un elemento de estilo visual, consulte el <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParameters">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el elemento de estilo visual actual de este <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; unit" Usage="visualStyleRenderer.SetParameters element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> que especifica los nuevos valores de las propiedades <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />, <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" /> y <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />.</param>
        <summary>Establece este <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> en el elemento de estilo visual representado por el <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba el valor de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propiedad internamente. Antes de llamar a este método, debe llamar a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> método para comprobar que el estilo visual actual proporciona una definición para el elemento especificado por el `element` parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> método para establecer un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> a un nuevo <xref:System.Windows.Forms.VisualStyles.VisualStyleElement>. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> información general de clases.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El estilo visual actual no define <paramref name="element" />.</exception>
        <exception cref="T:System.InvalidOperationException">El sistema operativo no admite estilos visuales.  
  
O bien 
El usuario ha deshabilitado los estilos visuales en el sistema operativo.  
  
O bien 
Los estilos visuales no se aplican al área de cliente de las ventanas de aplicación.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : string * int * int -&gt; unit" Usage="visualStyleRenderer.SetParameters (className, part, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />.</param>
        <param name="part">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />.</param>
        <param name="state">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />.</param>
        <summary>Establece este <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> en el elemento de estilo visual representado por los valores de clase, parte y estado especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba el valor de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propiedad internamente. Antes de llamar a este método, debe llamar a la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> método para comprobar que el estilo visual actual proporciona una definición para el elemento especificado por el `className`, `part`, y `state` parámetros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La combinación de <paramref name="className" />, <paramref name="part" /> y <paramref name="state" /> no está definida por el estilo visual actual.</exception>
        <exception cref="T:System.InvalidOperationException">El sistema operativo no admite estilos visuales.  
  
O bien 
El usuario ha deshabilitado los estilos visuales en el sistema operativo.  
  
O bien 
Los estilos visuales no se aplican al área de cliente de las ventanas de aplicación.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public int State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int State { int get(); };" />
      <MemberSignature Language="F#" Value="member this.State : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado del elemento de estilo visual actual.</summary>
        <value>Un valor que identifica el estado del elemento de estilo visual actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad identifica el estado visual actual del elemento identificado por el actual <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> y <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> los valores de propiedad. Para obtener más información acerca de la clase, parte y estado de un elemento de estilo visual, consulte el <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>