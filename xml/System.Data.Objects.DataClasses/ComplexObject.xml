<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="137b63a11fbbbf11f70f55140e0f36d44f9a6be6" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51931496" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <TypeSignature Language="F#" Value="type ComplexObject = class&#xA;    inherit StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Clase base para los tipos complejos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject> implementa la funcionalidad básica para los tipos complejos. Para obtener más información, consulte [objetos de tipo complejo](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
 Si implementa clases de datos personalizadas con un modelo conceptual, se recomienda que las clases de datos que representan tipos complejos hereden de <xref:System.Data.Objects.DataClasses.ComplexObject>. Para obtener más información, consulte [personalizar objetos](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).  
  
 Un tipo complejo puede ser una propiedad de un tipo de entidad o de otro tipo complejo.  
  
 Las propiedades no escalares de los tipos de entidades devuelven tipos complejos. Esto habilita la organización de las propiedades escalares dentro de las entidades. Al igual que las entidades, los tipos complejos están compuestos de propiedades escalares u otras propiedades de tipo complejo. Un tipo complejo no se puede usar sin un tipo de entidad asociado. Dado que los tipos complejos no tienen claves, no puede administrar los objetos de tipo complejo sin un tipo de entidad asociado. Para obtener más información, consulte [objetos de tipo complejo](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
   
  
## Examples  
 En el ejemplo siguiente, la clase de datos personalizada `OrderInfo` hereda <xref:System.Data.Objects.DataClasses.ComplexObject> y se asigna a la `OrderInfo` tipo complejo definido en el modelo conceptual.  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/how-to-execute-a-query-that-retur.mdns-complex-types">Cómo: ejecutar una consulta que devuelve tipos complejos (EntityClient)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6(v=vs.90)">Cómo: definir un modelo con tipos complejos (Entity Framework)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525ffa1c-524e-40bd-bb80-2929aec8c8d8(v=vs.90)">Cómo: Agregar y modificar objetos con tipos complejos (Entity Framework)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanged : string -&gt; unit" Usage="complexObject.ReportPropertyChanged property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nombre de la propiedad modificada.</param>
        <summary>Notifica a la herramienta de seguimiento de cambios que una propiedad de un objeto complejo ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando las herramientas de Entity Data Model generan un tipo complejo, se llama al método <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> después de un cambio en la propiedad para confirmar el valor almacenado en caché de <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> como valor original de la propiedad.  
  
 Este método llama al método <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> en la herramienta de seguimiento de cambios.  
  
 Si realiza un seguimiento de los cambios llevados a cabo en la propiedad de un objeto complejo personalizado, deberá llamar al método <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>. Haga esto si el objeto complejo hereda de <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="property" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanging : string -&gt; unit" Usage="complexObject.ReportPropertyChanging property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nombre de la propiedad modificada.</param>
        <summary>Notifica a la herramienta de seguimiento de cambios que hay un cambio de propiedad pendiente en un objeto complejo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando las herramientas de Entity Data Model generan un tipo complejo, se llama al método <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> antes de un cambio en la propiedad para almacenar en caché el valor actual de la propiedad en <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> de modo que este valor se pueda usar como valor original de dicha propiedad.  
  
 Este método llama al método <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> en la herramienta de seguimiento de cambios.  
  
 Si realiza un seguimiento de los cambios llevados a cabo en la propiedad de un objeto complejo personalizado, deberá llamar al método <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>. Haga esto si el objeto complejo hereda de <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="property" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>