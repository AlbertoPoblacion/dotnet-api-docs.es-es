<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54a9066878a26df89df266b9827258a9edc73324" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52370488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityReference(Of TEntity)&#xA;Inherits EntityReference" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityReference" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity">Tipo de entidad de la referencia.</typeparam>
    <summary>Representa un extremo relacionado de una asociación con una multiplicidad de cero o uno.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una propiedad de navegación devuelve un objeto <xref:System.Data.Objects.DataClasses.EntityReference%601> cuando el extremo relacionado tiene una multiplicidad de cero o uno. Para obtener más información, consulte [elemento NavigationProperty (CSDL)](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e).  
  
 Un objeto <xref:System.Data.Objects.DataClasses.EntityReference%601> puede tener su correspondiente <xref:System.Data.Objects.DataClasses.EntityCollection%601> (relación de uno a varios) o <xref:System.Data.Objects.DataClasses.EntityReference%601> (relación de uno a uno) en el otro extremo de la relación. Cuando un modelo <xref:System.Data.Objects.DataClasses.EntityReference%601> y un modelo <xref:System.Data.Objects.DataClasses.EntityCollection%601> son extremos opuestos de la misma relación, la integridad de la relación se mantiene en el nivel de objeto.  
  
 Esta clase no puede heredarse.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar el objeto <xref:System.Data.Objects.DataClasses.EntityReference%601> para cambiar una relación entre un objeto `SalesOrderHeader` y un objeto `Address` relacionado que representa la dirección de envío del pedido.  
  
 [!code-csharp[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityReference.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Objeto que se va a asociar.</param>
        <summary>Crea una relación de varios a uno o de uno a uno entre dos objetos en el contexto del objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> se usa para definir una relación entre un objeto y un objeto relacionado cuando ambos están asociados a un contexto del objeto. Establezca el objeto relacionado en la propiedad <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> si dicho objeto no está asociado al contexto del objeto. Si ambos objetos están desasociados, también puede definir la relación estableciendo el objeto relacionado en la propiedad <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> y, a continuación, asociando el objeto raíz en el gráfico de objetos. Para obtener más información, consulte [adjuntar y desasociar objetos](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).  
  
 Tanto el objeto asociado a esta <xref:System.Data.Objects.DataClasses.EntityReference%601> como todos los objetos que se van a asociar a él deben estar en un estado <xref:System.Data.EntityState.Unchanged> o <xref:System.Data.EntityState.Modified>.  
  
 Un objeto en el estado <xref:System.Data.EntityState.Deleted> solo puede asociarse si el <xref:System.Data.Objects.ObjectStateManager> ya está realizando el seguimiento de la instancia de la relación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Cuando <paramref name="entity" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cuando <paramref name="entity" /> no se puede relacionar con el extremo relacionado actual. Esto puede ocurrir cuando la asociación del esquema conceptual no admite una relación entre los dos tipos.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityReference.CreateSourceQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una consulta de objeto equivalente que devuelve el objeto relacionado.</summary>
        <returns>
          <see cref="T:System.Data.Objects.ObjectQuery`1" /> que devuelve el objeto relacionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para obtener una nueva instancia de <xref:System.Data.Objects.ObjectQuery%601> que, al ejecutarse, devuelve el objeto relacionado. Esto resulta útil como punto de inicio de una combinación, unión o consulta filtrada más compleja, o para devolver el objeto al que se hace referencia en un estado desasociado mediante la opción <xref:System.Data.Objects.MergeOption.NoTracking>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cuando el objeto se encuentra en un estado <see cref="F:System.Data.EntityState.Added" />.  
  
O bien 
Cuando el objeto se encuentra en un estado <see cref="F:System.Data.EntityState.Detached" /> con una <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> distinta de <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityReference.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Especifica cómo se debe devolver el objeto si ya existe en el <see cref="T:System.Data.Objects.ObjectContext" />.</param>
        <summary>Carga el objeto relacionado para esta <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> con la opción de fusión mediante combinación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para cargar el objeto relacionado.  
  
 Cuando se carga el objeto relacionado, se tiene acceso a él desde la propiedad <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>.  
  
 Para cargar explícitamente los objetos relacionados, se debe llamar al método `Load` en el extremo relacionado devuelto por la propiedad de navegación. En una relación de uno a varios, llame al método <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> en <xref:System.Data.Objects.DataClasses.EntityCollection%601>, y para una relación uno a uno, llame al método <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> en <xref:System.Data.Objects.DataClasses.EntityReference%601>. Esto carga los datos de objetos relacionados en el contexto del objeto. Cuando una consulta devuelve resultados, puede enumerar la colección de objetos mediante un `foreach` bucle (`For Each...Next` en Visual Basic) y llamar condicionalmente el `Load` método <xref:System.Data.Objects.DataClasses.EntityReference%601> y <xref:System.Data.Objects.DataClasses.EntityCollection%601> propiedades para cada entidad en los resultados.  
  
 El <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> método carga los objetos relacionados del origen de datos o no <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> es `true`.  
  
> [!NOTE]
>  Cuando se llama al método <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> durante una enumeración `foreach` (C#) o `For Each` (Visual Basic), Servicios de objeto intenta abrir un nuevo lector de datos. Si no ha especificado `multipleactiveresultsets=true` en la cadena de conexión para habilitar varios conjuntos de resultados activos, se producirá un error durante esta operación. También puede cargar el resultado de la consulta en una colección <xref:System.Collections.Generic.List%601>. Esto cierra el lector de datos y permite llevar a cabo la enumeración en la colección para cargar los objetos a los que se hace referencia.  
 
Este método llama a interno `RelatedEnd.ValidateLoad` método antes de cargar el objeto relacionado, que valida que una llamada a <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> tiene las condiciones correctas. El `RelatedEnd.ValidateLoad` método comprueba que:

* Válido <xref:System.Data.Objects.ObjectContext> existe.
* No se encuentra la entidad en un <xref:System.Data.EntityState.Deleted> estado.
* <xref:System.Data.Objects.MergeOption> para <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> debe ser <xref:System.Data.Objects.MergeOption.NoTracking> solo si la entidad de origen era <xref:System.Data.Objects.MergeOption.NoTracking>. Si la entidad de origen se ha recuperado con cualquier otro <xref:System.Data.Objects.MergeOption>, el <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> puede ser cualquier cosa menos <xref:System.Data.Objects.MergeOption.NoTracking> (por ejemplo, la entidad podría se han cargado con <xref:System.Data.Objects.MergeOption.OverwriteChanges> y <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> opción puede ser <xref:System.Data.Objects.MergeOption.AppendOnly>).
* Si `mergeOption` es <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> no se llama en una entidad ya cargada y <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> no se llama en un vacío, no se hace un seguimiento <xref:System.Data.Objects.DataClasses.RelatedEnd>.

 Cuando el objeto relacionado ya está cargado en el <xref:System.Data.Objects.ObjectContext>, el <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> método impone la <xref:System.Data.Objects.MergeOption> especificado por el `mergeOption` parámetro. Para obtener más información, consulte [resolución de identidades, administración de Estados y seguimiento de cambios](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El origen de <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> es <see langword="null" />.  
  
O bien 
Una consulta ha devuelto más de un extremo relacionado.  
  
O bien 
Una consulta ha devuelto cero extremos relacionados, pero se esperaba uno.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Consultar datos como objetos (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRefDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRefDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnRefDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnRefDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Secuencia serializada.</param>
        <summary>Este método se usa internamente para serializar los objetos entidad relacionados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Secuencia serializada.</param>
        <summary>Este método se usa internamente para serializar los objetos entidad relacionados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Value { TEntity get(); void set(TEntity value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto relacionado devuelto por esta <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <value>Objeto devuelto por esta <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se asignará ningún valor si el valor que se va a establecer es el mismo que el valor actual.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>