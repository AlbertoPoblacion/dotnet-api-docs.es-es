<Type Name="RelatedEnd" FullName="System.Data.Objects.DataClasses.RelatedEnd">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c0280040d886345c6b5596e2b0e09932481cd17" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55388013" /></Metadata><TypeSignature Language="C#" Value="public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit RelatedEnd extends System.Object implements class System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelatedEnd" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelatedEnd&#xA;Implements IRelatedEnd" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelatedEnd abstract : System::Data::Objects::DataClasses::IRelatedEnd" />
  <TypeSignature Language="F#" Value="type RelatedEnd = class&#xA;    interface IRelatedEnd" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IRelatedEnd</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una clase base que implementa la funcionalidad común para un extremo relacionado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> es la clase base para las clases <xref:System.Data.Objects.DataClasses.EntityCollection%601> y <xref:System.Data.Objects.DataClasses.EntityReference%601>.  
  
 La clase <xref:System.Data.Objects.DataClasses.RelatedEnd> implementa funcionalidad que comparten las clases <xref:System.Data.Objects.DataClasses.EntityCollection%601> y <xref:System.Data.Objects.DataClasses.EntityReference%601>.  
  
 Esta clase no está pensada para usarse directamente en el código.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociationChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler AssociationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AssociationChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ AssociationChanged;" />
      <MemberSignature Language="F#" Value="member this.AssociationChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.AssociationChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se realiza un cambio en un extremo relacionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El evento <xref:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged> se genera con los métodos siguientes:  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=nameWithType>  
  
 Los eventos se pueden suprimir durante las operaciones masivas, como `Load`, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> y <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="protected internal void Attach&lt;TEntity&gt; (System.Collections.Generic.IEnumerable&lt;TEntity&gt; entities, bool allowCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Attach&lt;TEntity&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TEntity&gt; entities, bool allowCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Attach``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Attach(Of TEntity) (entities As IEnumerable(Of TEntity), allowCollection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TEntity&gt;&#xA; void Attach(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ entities, bool allowCollection);" />
      <MemberSignature Language="F#" Value="member this.Attach : seq&lt;'Entity&gt; * bool -&gt; unit" Usage="relatedEnd.Attach (entities, allowCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
        <Parameter Name="allowCollection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Tipo de la colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos entidad que se van a asociar.</typeparam>
        <param name="entities">Colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos entidad.</param>
        <param name="allowCollection">Especifica si el objeto que se va a asociar forma parte de una colección.</param>
        <summary>Define una relación entre dos objetos asociados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
El método `Attach<TEntity>(IEnumerable<TEntity>, Boolean)` se usa para definir una relación entre un objeto y un objeto relacionado cuando ambos están asociados a un contexto del objeto. Establezca el objeto relacionado en la propiedad <xref:System.Data.Objects.DataClasses.EntityReference%601.Value> de la <xref:System.Data.Objects.DataClasses.EntityReference%601> o llame al método <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> de la <xref:System.Data.Objects.DataClasses.EntityCollection%601> si el objeto relacionado no está asociado al contexto del objeto. Si ambos objetos están desasociados, también puede definir la relación estableciendo el objeto relacionado en la propiedad <xref:System.Data.Objects.DataClasses.EntityReference%601.Value> de la <xref:System.Data.Objects.DataClasses.EntityReference%601> o llamando al método <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> de la <xref:System.Data.Objects.DataClasses.EntityCollection%601> y, a continuación, asociando el objeto raíz en el gráfico de objetos. Para obtener más información, consulte [adjuntar y desasociar objetos](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896271(v=vs.100)).

Servicios de objeto llama al método `Attach<TEntity>(IEnumerable<TEntity>, Boolean)` durante las operaciones de asociación llevadas a cabo en un extremo relacionado.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="relatedEnd.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un <see cref="T:System.Collections.IEnumerator" /> que recorre en iteración la colección de objetos relacionados.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> que itera por la colección de objetos relacionados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se han cargado todos los objetos relacionados.</summary>
        <value><see langword="true" /> si el extremo relacionado contiene todos los objetos relacionados de la base de datos; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una llamada a la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> método establece el <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> marca `true`.  
  
 Una llamada a la <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> método en un <xref:System.Data.Objects.DataClasses.EntityCollection%601> establece <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> a `false`.  
  
 También se puede cargar una <xref:System.Data.Objects.DataClasses.EntityCollection%601> o una <xref:System.Data.Objects.DataClasses.EntityReference%601> si el extremo relacionado está incluido en la ruta de la consulta. Para obtener más información acerca de los intervalos, vea [cargar objetos relacionados](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).  
  
 El `Load` método <xref:System.Data.Objects.DataClasses.EntityCollection%601> y <xref:System.Data.Objects.DataClasses.EntityReference%601> carga los objetos relacionados del origen de datos o no <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> es `true`.  
  
 Cuando se desasocia un objeto, el <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> se cambia la marca de `false` a `true`.  
  
 Para garantizar que un extremo relacionado se cargue totalmente antes de realizar el procesamiento, debe comprobar si <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> es `false`. Si <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> es `false`, debe llamar a la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, carga el objeto o los objetos relacionados en la colección o la referencia local.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit&#xA;override this.Load : unit -&gt; unit" Usage="relatedEnd.Load " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se invalida en una clase derivada, carga el objeto u objetos relacionados en el extremo relacionado con la opción de fusión mediante combinación predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La opción de fusión mediante fusión mediante combinación predeterminada es <xref:System.Data.Objects.MergeOption.AppendOnly> para los objetos de los que se hace un seguimiento, o <xref:System.Data.Objects.MergeOption.NoTracking> cuando no se realiza el seguimiento del objeto en el <xref:System.Data.Objects.ObjectStateManager>. Para especificar una opción de combinación distintos de <xref:System.Data.Objects.MergeOption.AppendOnly>, llame a la `Load` método en el <xref:System.Data.Objects.DataClasses.EntityCollection%601> o <xref:System.Data.Objects.DataClasses.EntityReference%601> que toma un determinado <xref:System.Data.Objects.MergeOption> parámetro.  
  
 Una llamada a la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> método establece el <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> marca `true`.  
  
 El <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> método carga los objetos relacionados del origen de datos o no <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> es `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cuando el objeto de origen se ha recuperado mediante una consulta <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> y la <see cref="T:System.Data.Objects.MergeOption" /> no es <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, o cuando los objetos relacionados ya están cargados.  
  
O bien 
Cuando el objeto de origen no está asociado al <see cref="T:System.Data.Objects.ObjectContext" />.  
  
O bien 
Cuando se realiza un seguimiento del objeto de origen, pero éste se encuentra en el estado <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Deleted" />, o cuando la <see cref="T:System.Data.Objects.MergeOption" /> usada para <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" /> es <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.Objects.MergeOption -&gt; unit" Usage="relatedEnd.Load mergeOption" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><see cref="T:System.Data.Objects.MergeOption" /> que se usará para combinar objetos en una <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> existente.</param>
        <summary>Cuando se invalida en una clase derivada, carga un objeto u objetos del extremo relacionado con la opción de fusión mediante combinación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tanto <xref:System.Data.Objects.DataClasses.EntityCollection%601> como <xref:System.Data.Objects.DataClasses.EntityReference%601> invalidan este método para cargar objetos relacionados. `Load` se llama para cargar explícitamente objetos relacionados de un extremo relacionado expuesto por una propiedad de navegación. Para obtener más información, consulte [cargar objetos relacionados](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).  
  
 Una llamada a la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> método establece el <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> marca `true`.  
  
 El <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> método carga los objetos relacionados del origen de datos o no <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> es `true`.  
  
 La opción de fusión mediante fusión mediante combinación predeterminada es <xref:System.Data.Objects.MergeOption.AppendOnly> para los objetos de los que se hace un seguimiento, o <xref:System.Data.Objects.MergeOption.NoTracking> cuando no se realiza el seguimiento del objeto en el <xref:System.Data.Objects.ObjectStateManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cuando el objeto de origen se ha recuperado mediante una consulta <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> y la <see cref="T:System.Data.Objects.MergeOption" /> no es <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, o cuando los objetos relacionados ya están cargados.  
  
O bien 
Cuando el objeto de origen no está asociado al <see cref="T:System.Data.Objects.ObjectContext" />.  
  
O bien 
Cuando se realiza un seguimiento del objeto de origen, pero éste se encuentra en el estado <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Deleted" />, o cuando la <see cref="T:System.Data.Objects.MergeOption" /> usada para <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" /> es <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Merge&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="protected void Merge&lt;TEntity&gt; (System.Collections.Generic.IEnumerable&lt;TEntity&gt; collection, System.Data.Objects.MergeOption mergeOption, bool setIsLoaded);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Merge&lt;TEntity&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TEntity&gt; collection, valuetype System.Data.Objects.MergeOption mergeOption, bool setIsLoaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Merge``1(System.Collections.Generic.IEnumerable{``0},System.Data.Objects.MergeOption,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TEntity&gt;&#xA; void Merge(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ collection, System::Data::Objects::MergeOption mergeOption, bool setIsLoaded);" />
      <MemberSignature Language="F#" Value="member this.Merge : seq&lt;'Entity&gt; * System.Data.Objects.MergeOption * bool -&gt; unit" Usage="relatedEnd.Merge (collection, mergeOption, setIsLoaded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
        <Parameter Name="setIsLoaded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Tipo de la colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos entidad que se van a combinar.</typeparam>
        <param name="collection">Colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos entidad que se agregarán a este extremo relacionado.</param>
        <param name="mergeOption"><see cref="T:System.Data.Objects.MergeOption" /> que se usará para combinar objetos en una <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> existente.</param>
        <param name="setIsLoaded">Indica si el conjunto de objetos relacionados está completo y coincide con el del servidor. Las operaciones como <see cref="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" /> establecen setIsLoaded en <see langword="true" />, pero <see cref="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Attach" /> lo establece en <see langword="false" />.</param>
        <summary>Combina entidades relacionadas en la <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Servicios de objeto llama al método `Merge<TEntity>` durante las operaciones de relación.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="relatedEnd.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Secuencia serializada.</param>
        <summary>Se usa internamente para deserializar los objetos entidad junto con las instancias de <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipName : string" Usage="System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la relación en la que participa este punto de conexión relacionado.</summary>
        <value>Nombre de la relación en la que participa este <see cref="T:System.Data.Objects.DataClasses.RelatedEnd" />. El nombre de la relación no está calificado con el espacio de nombres.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipSet RelationshipSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSet As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipSet ^ RelationshipSet { System::Data::Metadata::Edm::RelationshipSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipSet : System.Data.Metadata.Edm.RelationshipSet" Usage="System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia a los metadatos para el extremo relacionado.</summary>
        <value>Un objeto <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> que contiene los metadatos para el extremo de una relación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceRoleName">
      <MemberSignature Language="C#" Value="public string SourceRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceRoleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceRoleName : string" Usage="System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la función en el punto de conexión de origen de la relación.</summary>
        <value><see cref="T:System.String" /> que representa el nombre de la función.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre del rol especificado por el `Role` atributo de la `End` elemento de la asociación que define esta relación en el modelo conceptual. Para más información, vea [Association (Elemento) (CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), que fue generado por el [Asistente para Entity Data Model](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  
  
 El ejemplo siguiente se agrega nuevas `SalesOrderHeader` entidades para el `Contact` entidad. A continuación, obtiene todos los extremos relacionados de la `Contact` nombre de entidad y muestra la relación, el nombre del rol de origen y nombre de rol de destino para cada extremo relacionado.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un objeto al extremo relacionado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As IEntityWithRelationships) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Objeto que se va a agregar a la colección. Este objeto debe implementar la interfaz <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</param>
        <summary>Agrega un objeto al extremo relacionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.Objects.DataClasses.RelatedEnd> se convierte en una interfaz <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 El <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Add%2A> método solo se mantiene por compatibilidad con versiones anteriores de .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As Object) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Una instancia de entidad que se va a agregar al extremo relacionado.</param>
        <summary>Agrega un objeto al extremo relacionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el objeto de entidad de origen se adjunta a una memoria caché, entonces todos los extremos conectados se agregan a la caché de objetos y sus relaciones correspondientes también se agregan a la <xref:System.Data.Objects.ObjectStateManager>. El <xref:System.Data.Objects.DataClasses.RelatedEnd> de la relación también se ha corregido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asocia un objeto en el extremo relacionado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As IEntityWithRelationships) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Objeto que se va a asociar.</param>
        <summary>Asocia un objeto en el extremo relacionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.Objects.DataClasses.RelatedEnd> se convierte en una interfaz <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 El <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Attach%2A> método solo se mantiene por compatibilidad con versiones anteriores de .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As Object) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Una instancia de entidad que se va a adjuntar al extremo relacionado.</param>
        <summary>Adjunta un objeto al extremo relacionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el extremo relacionado ya tiene algunas entidades asociadas a ella, las entidades existentes se combinarán con la nueva entidad. La nueva entidad se supone que no sea el conjunto completo de objetos entidad relacionados.  
  
 El objeto de entidad de origen y pasados todos los objetos de entidad deben estar en un <xref:System.Data.EntityState.Unchanged> o <xref:System.Data.EntityState.Modified> estado. Elementos eliminados se permiten solo cuando el Administrador de Estados ya está realizando el seguimiento de la instancia de relación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerable System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Function CreateSourceQuery () As IEnumerable Implements IRelatedEnd.CreateSourceQuery" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerable ^ System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() = System::Data::Objects::DataClasses::IRelatedEnd::CreateSourceQuery;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una <see cref="T:System.Collections.IEnumerable" /> que representa los objetos que pertenecen al extremo relacionado.</summary>
        <returns><see cref="T:System.Collections.IEnumerable" /> que representa los objetos que pertenecen al extremo relacionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.Objects.DataClasses.RelatedEnd> se convierte en una interfaz <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 Tanto <xref:System.Data.Objects.DataClasses.EntityCollection%601> como <xref:System.Data.Objects.DataClasses.EntityReference%601> invalidan <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> para devolver una <xref:System.Data.Objects.ObjectQuery%601>. Cuando se ejecuta esta consulta, devuelve el mismo conjunto de objetos que pertenecen al extremo relacionado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quita un objeto del extremo relacionado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As IEntityWithRelationships) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Instancia de entidad que se va a quitar de la colección.</param>
        <summary>Quita un objeto de la colección en el extremo relacionado.</summary>
        <returns>Un valor que indica si se quitó el objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.Objects.DataClasses.RelatedEnd> se convierte en una interfaz <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 El <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Remove%2A> método solo se mantiene por compatibilidad con versiones anteriores de .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As Object) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Una instancia de entidad que se va a quitar del extremo relacionado.</param>
        <summary>Quita un objeto del extremo relacionado si el objeto forma parte del extremo relacionado.</summary>
        <returns><see langword="true" /> si la entidad se ha quitado correctamente; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el objeto de entidad de origen está conectado a una memoria caché, la relación está marcada para su eliminación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRoleName">
      <MemberSignature Language="C#" Value="public string TargetRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetRoleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRoleName : string" Usage="System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la función en el punto de conexión de destino de la relación.</summary>
        <value><see cref="T:System.String" /> que representa el nombre de la función.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre del rol especificado por el `Role` atributo de la `End` elemento de la asociación que define esta relación en el modelo conceptual. Para más información, vea [Association (Elemento) (CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). El ejemplo agrega las nuevas `SalesOrderHeader` entidades para el `Contact` entidad. A continuación, obtiene todos los extremos relacionados de la `Contact` nombre de entidad y muestra la relación, el nombre del rol de origen y nombre de rol de destino para cada extremo relacionado.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEntityForAttach&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="protected internal void ValidateEntityForAttach&lt;TEntity&gt; (TEntity entity, int index, bool allowCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ValidateEntityForAttach&lt;TEntity&gt;(!!TEntity entity, int32 index, bool allowCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateEntityForAttach``1(``0,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ValidateEntityForAttach(Of TEntity) (entity As TEntity, index As Integer, allowCollection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TEntity&gt;&#xA; void ValidateEntityForAttach(TEntity entity, int index, bool allowCollection);" />
      <MemberSignature Language="F#" Value="member this.ValidateEntityForAttach : 'Entity * int * bool -&gt; unit" Usage="relatedEnd.ValidateEntityForAttach (entity, index, allowCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="allowCollection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Tipo del objeto que se va a validar.</typeparam>
        <param name="entity">Objeto que se va a validar.</param>
        <param name="index">Posición del objeto que se va a validar en la colección.</param>
        <param name="allowCollection">Indica si el objeto es un miembro de una colección.</param>
        <summary>Determina si se puede asociar un objeto a la colección o la referencia local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Servicios de objeto llama al método `ValidateEntityForAttach<TEntity>` durante una operación de asociación.

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cuando el objeto que se va a asociar es <see langword="null" />.

O bien

El objeto que se va a asociar al extremo relacionado no existe en el mismo <see cref="T:System.Data.Objects.ObjectContext" /> que el objeto de origen.

O bien

El objeto que se va a asociar está en el estado <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Deleted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateLoad&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="protected System.Data.Objects.ObjectQuery&lt;TEntity&gt; ValidateLoad&lt;TEntity&gt; (System.Data.Objects.MergeOption mergeOption, string relatedEndName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TEntity&gt; ValidateLoad&lt;TEntity&gt;(valuetype System.Data.Objects.MergeOption mergeOption, string relatedEndName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateLoad``1(System.Data.Objects.MergeOption,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TEntity&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ ValidateLoad(System::Data::Objects::MergeOption mergeOption, System::String ^ relatedEndName);" />
      <MemberSignature Language="F#" Value="member this.ValidateLoad : System.Data.Objects.MergeOption * string -&gt; System.Data.Objects.ObjectQuery&lt;'Entity&gt;" Usage="relatedEnd.ValidateLoad (mergeOption, relatedEndName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
        <Parameter Name="relatedEndName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Tipo del objeto que se va a validar.</typeparam>
        <param name="mergeOption"><see cref="T:System.Data.Objects.MergeOption" /> que se usará para combinar objetos en una <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> existente.</param>
        <param name="relatedEndName">Nombre del extremo relacionado.</param>
        <summary>Garantiza que el objeto u objetos relacionados se puedan cargar correctamente en la colección o la referencia local.</summary>
        <returns><see cref="T:System.Data.Objects.ObjectQuery`1" /> que se usa para cargar el objeto o los objetos en el extremo relacionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Servicios de objeto obtiene la <xref:System.Data.Objects.ObjectQuery%601> mediante una llamada a la [IRelatedEnd.CreateSourceQuery](xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery) método.

Servicios de objeto llama al método `ValidateLoad<TEntity>` antes de ejecutar una operación de carga para asegurarse de que la operación se realizará correctamente.

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cuando el objeto de origen se ha recuperado mediante una consulta <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> y la <see cref="T:System.Data.Objects.MergeOption" /> no es <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, o cuando los objetos relacionados ya están cargados.

O bien

Cuando el objeto de origen no está asociado al <see cref="T:System.Data.Objects.ObjectContext" />.

O bien

Cuando se realiza un seguimiento del objeto de origen, pero éste se encuentra en el estado <see cref="F:System.Data.EntityState.Added" /> o <see cref="F:System.Data.EntityState.Deleted" />, o cuando la <see cref="T:System.Data.Objects.MergeOption" /> usada para <see cref="Overload:System.Data.Objects.DataClasses.RelatedEnd.Load" /> es <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateOwnerForAttach">
      <MemberSignature Language="C#" Value="protected internal void ValidateOwnerForAttach ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ValidateOwnerForAttach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateOwnerForAttach" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ValidateOwnerForAttach ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ValidateOwnerForAttach();" />
      <MemberSignature Language="F#" Value="member this.ValidateOwnerForAttach : unit -&gt; unit" Usage="relatedEnd.ValidateOwnerForAttach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantiza que el objeto al que pertenece el extremo relacionado admita una operación de asociación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Servicios de objeto llama al método de ValidateOwnerForAttach antes de ejecutar una operación de asociación para asegurarse de que la operación se realizará correctamente.

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cuando el objeto de origen no está asociado al <see cref="T:System.Data.Objects.ObjectContext" />, se ha devuelto desde una consulta <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> o no está en un estado <see cref="F:System.Data.EntityState.Modified" /> o <see cref="F:System.Data.EntityState.Unchanged" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>