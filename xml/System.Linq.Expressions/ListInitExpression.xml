<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ListInitExpression.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f63f1fb9a99af5b5e10f0fda10d6d4ff06992039.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f63f1fb9a99af5b5e10f0fda10d6d4ff06992039</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>Represents a constructor call that has a collection initializer.</source>
          <target state="translated">Representa una llamada de constructor que tiene un inicializador de colección.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.ListInit%2A&gt;</ph> factory methods to create a <ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.ListInit%2A&gt;</ph> métodos de generador para crear un <ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph> is <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.ListInit&gt;</ph>.</source>
          <target state="translated">El valor de la <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph> es <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.ListInit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph> that represents the initialization of a new dictionary instance that has two key-value pairs.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph> que representa la inicialización de una nueva instancia de diccionario que tiene dos pares de clave-valor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.CanReduce">
          <source>Gets a value that indicates whether the expression tree node can be reduced.</source>
          <target state="translated">Obtiene un valor que indica si el nodo del árbol de expresión se puede reducir.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.CanReduce">
          <source>True if the node can be reduced, otherwise false.</source>
          <target state="translated">Es true si se puede reducir el nodo; de lo contrario, es false.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.Initializers">
          <source>Gets the element initializers that are used to initialize a collection.</source>
          <target state="translated">Obtiene los inicializadores de elementos que se utilizan para inicializar una colección.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.Initializers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.ElementInit" /&gt;</ph> objects which represent the elements that are used to initialize the collection.</source>
          <target state="translated">Uno de los objetos <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.ElementInit" /&gt;</ph> que representan los elementos que se utilizan para inicializar la colección.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.NewExpression">
          <source>Gets the expression that contains a call to the constructor of a collection type.</source>
          <target state="translated">Obtiene la expresión que contiene una llamada al constructor de un tipo de colección.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.NewExpression">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.NewExpression" /&gt;</ph> that represents the call to the constructor of a collection type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.NewExpression" /&gt;</ph> que representa la llamada al constructor de un tipo de colección.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.NodeType">
          <source>Returns the node type of this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">Devuelve el tipo de nodo de <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> that represents this expression.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> que representa esta expresión.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>Reduces the binary expression node to a simpler expression.</source>
          <target state="translated">Reduce el nodo de expresión binario a una expresión más sencilla.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>The reduced expression.</source>
          <target state="translated">Expresión reducida.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>If the <ph id="ph1">`CanReduce`</ph> method returns true, this method should return a valid expression.</source>
          <target state="translated">Si el <ph id="ph1">`CanReduce`</ph> método devuelve true, este método debe devolver una expresión válida.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>This method is allowed to return another node which itself must be reduced.</source>
          <target state="translated">Este método puede devolver otro nodo que a su vez debe reducirse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">Obtiene el tipo estático de la expresión que <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Type" /&gt;</ph> que representa el tipo estático de la expresión.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /&gt;</ph> property of the result.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /&gt;</ph> del resultado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /&gt;</ph> property of the result.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /&gt;</ph> del resultado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">Crea una nueva expresión que es como esta, pero usa el elemento secundario proporcionado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">Si todos los elementos secundarios son iguales, devolverá esta expresión.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">Esta expresión si no se cambió ningún elemento secundario o una expresión con los elementos secundarios actualizados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>