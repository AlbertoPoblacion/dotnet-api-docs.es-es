<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DocumentPaginator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5048a68363397559370c5e3ed6a38e3c61f08936d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">048a68363397559370c5e3ed6a38e3c61f08936d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>Provides an abstract base class that supports creation of multiple-page elements from a single document.</source>
          <target state="translated">Proporciona una clase base abstracta que admite la creación de elementos de varias páginas de un documento único.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>If you need automatic background repagination in response to events such as changing the page size of a <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>, then use <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt;</ph> as your base class.</source>
          <target state="translated">Si necesita repaginación automática en segundo plano en respuesta a eventos como cambiar el tamaño de página de un <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>, a continuación, use <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt;</ph> como su clase base.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPaginator" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPaginator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)">
          <source>The original <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> passed to <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph>, <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph>, or <ph id="ph3">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph> that identifies the asynchronous task to cancel.</source>
          <target state="translated">Elemento <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> original pasado a <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph>, <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph> u <ph id="ph3">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph> que identifica la tarea asincrónica que se va a cancelar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)">
          <source>Cancels a previous <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph> operation.</source>
          <target state="translated">Cancela un <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph> anterior u operación <ph id="ph2">&lt;see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)">
          <source>If <ph id="ph1">`userState`</ph> is <ph id="ph2">`null`</ph>, then all asynchronous tasks are cancelled.</source>
          <target state="translated">Si <ph id="ph1">`userState`</ph> es <ph id="ph2">`null`</ph>, a continuación, se cancelan todas las tareas asincrónicas.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCount">
          <source>Forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, and sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Fuerza una paginación del contenido, actualiza <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> con el nuevo total y establece <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCount">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> will be <ph id="ph2">`true`</ph> immediately after this is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> será <ph id="ph2">`true`</ph> inmediatamente después de que esto se denomina.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCount">
          <source>If content is modified or <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> is changed after this method is called, <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> will likely revert to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si se modifica el contenido o <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> cambia una vez que se llama a este método, <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> , probablemente se restablecerá <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>Asynchronously, forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, and sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">De forma asincrónica, fuerza una paginación del contenido, actualiza <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> con el nuevo total y establece <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync">
          <source>Asynchronously, forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, and sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">De forma asincrónica, fuerza una paginación del contenido, actualiza <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> con el nuevo total y establece <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
          <target state="translated">La única manera de cancelar la operación asincrónica de este método es cancelar todas las operaciones asincrónicas.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync">
          <source>Contrast this with the other overload of this method: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29&gt;</ph>.</source>
          <target state="translated">Compare esto con la otra sobrecarga de este método: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>A unique identifier for the asynchronous task.</source>
          <target state="translated">Identificador único de la tarea asincrónica.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>Asynchronously, forces a pagination of the content, updates <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> with the new total, sets <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">De forma asincrónica, fuerza una paginación del contenido, actualiza <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> con el nuevo total y establece <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>The specified ID is assigned to the asynchronous task.</source>
          <target state="translated">El identificador especificado se asigna a la tarea asincrónica.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
          <target state="translated">Esta sobrecarga del método permite cancelar esta operación asincrónica sin cancelar todas las operaciones asincrónicas.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted">
          <source>Occurs when a <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph> operation has finished.</source>
          <target state="translated">Se produce al finalizar una operación <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>The zero-based page number of the document page that is needed.</source>
          <target state="translated">Número de página de base cero de la página del documento que se necesita.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number.</source>
          <target state="translated">Cuando se invalida en una clase derivada, se obtiene <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> para el número de página especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="pageNumber" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Documents.DocumentPage.Missing" /&gt;</ph> if the page does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> para el <ph id="ph2">&lt;paramref name="pageNumber" /&gt;</ph> especificado o <ph id="ph3">&lt;see cref="F:System.Windows.Documents.DocumentPage.Missing" /&gt;</ph> si la página no existe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source>If pages prior to <ph id="ph1">`pageNumber`</ph> have not been formatted, they will be paginated synchronously prior to returning the requested page.</source>
          <target state="translated">Si las páginas anteriores a <ph id="ph1">`pageNumber`</ph> no han sido formateado, se paginarán de forma sincrónica antes de devolver la página solicitada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt;</ph> provides similar functionality as <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph>, but for asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt;</ph> Proporciona una funcionalidad similar como <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph>, pero la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> es negativo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.DocumentPaginator">
          <source>Asynchronously returns the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number.</source>
          <target state="translated">De forma asincrónica, devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> para el número de página especificado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>The zero-based page number of the document page that is needed.</source>
          <target state="translated">Número de página de base cero de la página del documento que se necesita.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>Asynchronously returns (through the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> event) the <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number.</source>
          <target state="translated">De forma asincrónica, devuelve (mediante el evento <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph>) <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> para el número de página especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
          <target state="translated">La única manera de cancelar la operación asincrónica de este método es cancelar todas las operaciones asincrónicas.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>Contrast this with the other overload of this method: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph>.</source>
          <target state="translated">Compare esto con la otra sobrecarga de este método: <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> event.</source>
          <target state="translated">Este método provoca el <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> is passed to the event as one of the event arguments.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> se pasa al evento como uno de los argumentos del evento.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> for how to use this method to get the page.</source>
          <target state="translated">Vea <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> sobre cómo usar este método para obtener la página.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> es negativo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>The zero-based page number of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> to get.</source>
          <target state="translated">Número de página de base cero de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> que se debe obtener.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>A unique identifier for the asynchronous task.</source>
          <target state="translated">Identificador único de la tarea asincrónica.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Asynchronously returns (through the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> event) the <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> for the specified page number and assigns the specified ID to the asynchronous task.</source>
          <target state="translated">De forma asincrónica, devuelve (mediante el evento <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph>) <ph id="ph2">&lt;see cref="T:System.Windows.Documents.DocumentPage" /&gt;</ph> para el número de página especificado y asigna el Id. especificado a la tarea asincrónica.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
          <target state="translated">Esta sobrecarga del método permite cancelar esta operación asincrónica sin cancelar todas las operaciones asincrónicas.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> event.</source>
          <target state="translated">Este método provoca el <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> is passed to the event as one of the event arguments.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> se pasa al evento como uno de los argumentos del evento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>The following steps illustrate how to retrieve a <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> asynchronously:</source>
          <target state="translated">Los siguientes pasos muestran cómo recuperar un <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph> asincrónica:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventHandler&gt;</ph> delegate and add it to be notified of <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> events.</source>
          <target state="translated">Crear un <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventHandler&gt;</ph> delegar y agregarlo al recibir una notificación de <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> specifying the <ph id="ph2">`pageNumber`</ph> desired and a unique <ph id="ph3">`userState`</ph>, which will be used to identify the completion of the asynchronous event.</source>
          <target state="translated">Llame a <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> especificando la <ph id="ph2">`pageNumber`</ph> deseado y un único <ph id="ph3">`userState`</ph>, que se usará para identificar la finalización del evento asincrónico.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>When the event occurs and the delegate is called, compare the event's <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></source>
          <target state="translated">Cuando se produce el evento y se llama al delegado, compare el evento <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>property with the original <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph> parameter.</source>
          <target state="translated">propiedad con el original <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>(The <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A&gt;</ph></source>
          <target state="translated">(El <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>property will also match the <ph id="ph1">`pageNumber`</ph> specified in the <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> call.)</source>
          <target state="translated">También encontrarán coincidencias de propiedad el <ph id="ph1">`pageNumber`</ph> especificado en el <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> llamar a.)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>property matches the original <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph>, the operation is complete and the page is ready.</source>
          <target state="translated">propiedad coincide con el original <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;</ph> <ph id="ph2">`userState`</ph>, la operación se completa y la página está lista.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> to retrieve the formatted <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph>.</source>
          <target state="translated">Llame a <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> para recuperar el formato <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPage&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pageNumber" /&gt;</ph> es negativo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted">
          <source>Occurs when <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph> has completed.</source>
          <target state="translated">Se produce al finalizar <ph id="ph1">&lt;see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid">
          <source>When overridden in a derived class, gets a value indicating whether <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> is the total number of pages.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene un valor que indica si <ph id="ph1">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> es el número de páginas total.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if pagination is complete and <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> is the total number of pages; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>, if pagination is in process and <ph id="ph4">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> is the number of pages currently formatted (not the total).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la paginación ha finalizado y <ph id="ph2">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> es el número total de páginas; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>, si la paginación está en proceso y <ph id="ph4">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /&gt;</ph> es el número de páginas a las que se ha dado actualmente formato (no el total).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid">
          <source>This value may revert to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, after being <ph id="ph2">&lt;see langword="true" /&gt;</ph>, if <ph id="ph3">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /&gt;</ph> or content changes; because those events would force a repagination.</source>
          <target state="translated">Este valor puede revertir a <ph id="ph1">&lt;see langword="false" /&gt;</ph>, después de ser <ph id="ph2">&lt;see langword="true" /&gt;</ph>, si <ph id="ph3">&lt;see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /&gt;</ph> o el contenido cambia, porque esos eventos forzarían la repaginación.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.PagesChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Documents.PagesChangedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>When overridden in a derived class, gets a count of the number of pages currently formatted</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene un recuento del número de páginas a las que se ha dado actualmente formato.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>A count of the number of pages that have been formatted.</source>
          <target state="translated">Recuento del número de páginas a las que se ha dado formato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> is <ph id="ph2">`true`</ph>, pagination is complete and <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> is the total number of pages in the document.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> es <ph id="ph2">`true`</ph>, la paginación está completa y <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> es el número total de páginas del documento.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> is <ph id="ph2">`false`</ph>, pagination is in process and <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> is the number of pages currently formatted (not the total).</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> es <ph id="ph2">`false`</ph>, la paginación está en proceso y <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageCount%2A&gt;</ph> es el número de páginas actualmente con el formato (no el total).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageCount">
          <source>This value may change if <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> or content changes, because those events would force a repagination.</source>
          <target state="translated">Este valor puede cambiar si <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> o cambie el contenido, porque esos eventos forzarían la repaginación.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="E:System.Windows.Documents.DocumentPaginator.PagesChanged">
          <source>Occurs when the document content is changed.</source>
          <target state="translated">Se produce cuando se cambia el contenido del documento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>When overridden in a derived class, gets or sets the suggested width and height of each page.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene o establece el ancho y el alto sugeridos de cada página.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> representing the width and height of each page.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> que representa el ancho y el alto de cada página.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> may override the value of this property.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> puede invalidar el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>Users should check <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Los usuarios deben comprobar <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.PageSize">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo establecer <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>When overridden in a derived class, returns the element being paginated.</source>
          <target state="translated">Cuando se invalida en una clase derivada, devuelve el elemento que se está paginando.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /&gt;</ph> representing the element being paginated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /&gt;</ph> que representa el elemento que se está paginando.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>The object returned has this <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> as the value of its <ph id="ph2">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A&gt;</ph> property.</source>
          <target state="translated">El objeto devuelto tiene este <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator&gt;</ph> como el valor de su <ph id="ph2">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.DocumentPaginator.Source">
          <source>It is guaranteed to have such a property because it implements <ph id="ph1">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;</ph>.</source>
          <target state="translated">Se garantiza que tiene una propiedad de este tipo porque implementa <ph id="ph1">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>