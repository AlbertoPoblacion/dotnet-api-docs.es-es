<Type Name="ListItem" FullName="System.Windows.Documents.ListItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63ce7f414054090ca0455091f3f612484cfbc42d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListItem : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListItem extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.ListItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListItem&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListItem : System::Windows::Documents::TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Un elemento de contenido de flujo que representa un elemento de contenido determinado en una <see cref="T:System.Windows.Documents.List" /> ordenada o desordenada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem> aplica un modelo de contenido seguro para el contenido secundario. Vea [TextElement Content Model Overview](~/docs/framework/wpf/advanced/textelement-content-model-overview.md) para obtener más información acerca de la <xref:System.Windows.Documents.ListItem> el modelo de contenido.  
  
 <xref:System.Windows.Documents.ListItem> los elementos deben incluirse en un <xref:System.Windows.Documents.List> elemento.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo definir un <xref:System.Windows.Documents.List> con [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].  
  
 [!code-xaml[ListSnippets#_ListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_listxaml)]  
  
 En el ejemplo siguiente se muestra cómo crear y rellenar un <xref:System.Windows.Documents.List> mediante programación.  
  
 [!code-csharp[ListSnippets#_List_Props](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_props)]
 [!code-vb[ListSnippets#_List_Props](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_props)]  
  
 En la ilustración siguiente, se muestra cómo se representa este ejemplo.  
  
 ![Captura de pantalla: Lista ordenada](~/add/media/ordered-list.png "captura de pantalla: lista ordenada")  
  
 En el ejemplo siguiente se muestra cómo definir un anidada <xref:System.Windows.Documents.List> (que se enumeran en las listas) mediante [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].  
  
 [!code-xaml[ListSnippets#_NestedListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_nestedlistxaml)]  
  
 En la ilustración siguiente, se muestra cómo se representa este ejemplo.  
  
 ![Lista anidada](~/add/media/flow-nested-list-example.png "lista anidada")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Documents.ListItem" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia vacía de la clase <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem (System.Windows.Documents.Paragraph paragraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Paragraph paragraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem(System::Windows::Documents::Paragraph ^ paragraph);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paragraph" Type="System.Windows.Documents.Paragraph" />
      </Parameters>
      <Docs>
        <param name="paragraph">Un objeto <see cref="T:System.Windows.Documents.Paragraph" /> que especifica el contenido inicial del nuevo <see cref="T:System.Windows.Documents.ListItem" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Documents.ListItem" />, tomando un objeto <see cref="T:System.Windows.Documents.Paragraph" /> especificado como el contenido inicial del nuevo <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra el uso de este constructor.  
  
 [!code-csharp[ListSnippets#_List_Const](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_const)]
 [!code-vb[ListSnippets#_List_Const](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_const)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de bloques que contiene los elementos <see cref="T:System.Windows.Documents.Block" /> de nivel superior de <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Colección de bloques que contiene los elementos <see cref="T:System.Windows.Documents.Block" /> de <see cref="T:System.Windows.Documents.ListItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la colección de bloques devuelta por esta propiedad para enumerar o manipular el contenido de un <xref:System.Windows.Documents.Section> elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Media.Brush" /> que se va a usar para dibujar el borde del elemento.</summary>
        <value>Pincel que se usa para dibujar el borde del elemento. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para una tabla de muestras que muestran los colores de pincel predefinidos disponibles, vea <xref:System.Windows.Media.Brushes>.  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.BorderBrushProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.BorderBrush%2A> atributo de un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 En la ilustración siguiente, se muestra cómo se representa este ejemplo.  
  
 ![Captura de pantalla: Azul, 1&#47;4 pulgadas borde alrededor de bloque](~/add/media/block-borders.png "captura de pantalla: borde azul, de 1/4 de pulgada alrededor de bloque")  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.BorderBrush%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.BorderBrush" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grosor del borde para el elemento.</summary>
        <value>Estructura <see cref="T:System.Windows.Thickness" /> que especifica la cantidad de borde que se aplicará, en píxeles independientes de dispositivo. El valor predeterminado es un grosor uniforme de cero (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *uniformThickness*  
 Representación de cadena de un único <xref:System.Double> valor que debe aplicarse uniformemente en todas las dimensiones de grosor cuatro.  Por ejemplo, un valor de `"10"` es equivalente a un valor de `"10,10,10,10"`.  Un valor sin calificar se mide en píxeles independientes del dispositivo. Las cadenas no necesitan incluir explícitamente separadores decimales.  
  
 *independentThickness*  
 Representación de cadena de cuatro ordenados <xref:System.Double> valores correspondientes a las dimensiones de grosor independiente para izquierda, superior, derecho e inferior, en este orden.  Los cuatro valores deben aparecer separados con comas; no se permiten espacios.  Por ejemplo, "5,10,15,20 da como" resultado 5 píxeles de borde a la izquierda del contenido, 10 píxeles del borde sobre el contenido, 15 píxeles de borde a la derecha del contenido y 20 píxeles del borde debajo del contenido.  
  
 *qualifiedUniformThickness*  
 Un valor descrito por *uniformThickness* seguido de uno de estos especificadores de unidades: `px`, `in`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 Por ejemplo, `"1in"` proporciona un borde uniforme de 1 pulgada en todas las direcciones.  
  
 *qualifiedIndependentThickness*  
 Un valor descrito por *independentThickness*, con cada valor independiente seguido de uno de estos especificadores de unidades: `px`, `in`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 Por ejemplo: `"1.5in,0.8in,1.5in,0.8in"`.  Especificadores de unidades podrán estar mixto o se omite de uno o más valores.  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.BorderThicknessProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.BorderThickness%2A> atributo de un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 En la ilustración siguiente, se muestra cómo se representa este ejemplo.  
  
 ![Captura de pantalla: Azul, 1&#47;4 pulgadas borde alrededor de bloque](~/add/media/block-borders.png "captura de pantalla: borde azul, de 1/4 de pulgada alrededor de bloque")  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.BorderThickness%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.BorderThickness" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección relativa del flujo de contenido en un elemento <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.FlowDirection" /> que especifica la dirección relativa del flujo.  El valor predeterminado es <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La obtención de esta propiedad devuelve la dirección de flujo efectiva actual.  El establecimiento de esta propiedad hace que el flujo del contenido del elemento <xref:System.Windows.Documents.ListItem> vaya en la dirección indicada.  
  
 La dirección del flujo de contenido corresponde normalmente a la dirección de flujo natural del idioma que se representa.  Hebreo y árabe son ejemplos de idiomas que fluyen de derecha a izquierda.  Inglés, alemán y ruso son ejemplos de idiomas que fluyen de forma natural de izquierda a derecha.  
  
> [!NOTE]
>  El valor de esta propiedad no se cambia automáticamente para que coincida con el idioma usado por el sistema operativo. Si necesita utilizar un valor diferente que el valor predeterminado de <xref:System.Windows.FlowDirection.LeftToRight>, debe especificarlo manualmente.  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.FlowDirectionProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.FlowDirection%2A> atributo de un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.FlowDirection%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.FlowDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el alto de cada línea de contenido.</summary>
        <value>Alto de línea en píxeles independientes del dispositivo con un intervalo de valores de 0.0034 a 160 000.  Un valor de <see cref="F:System.Double.NaN" /> (equivalente a un valor de atributo de "<c>automática</c>") hace que el alto de línea se determine automáticamente a partir de las características de la fuente actual.  El valor predeterminado es <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cambiar el <xref:System.Windows.Documents.ListItem.LineHeight%2A> valor no cambia el alto del texto asociado; en su lugar, cambia el alto de la línea que contiene el texto.  
  
 Además de esta propiedad, el diseño de las líneas en un <xref:System.Windows.Documents.ListItem> se ve afectado por su <xref:System.Windows.Documents.ListItem.LineStackingStrategy%2A> propiedad.  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *double*  
 Representación de cadena de un <xref:System.Double> valor en el intervalo `0.0034` a `160000`. Un valor sin calificar se mide en píxeles independientes del dispositivo. Las cadenas no necesitan incluir explícitamente separadores decimales.  
  
 *qualifiedDouble*  
 A *doble* valor tal como se describió anteriormente, (excepto `Auto`) seguido de uno de estos especificadores de unidades: `px`, `in`, `cm`, `pt`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 `cm` es centímetros; 1cm==(96/2.54) px  
  
 `pt` es puntos; 1pt==(96/72) px  
  
 Automático  
 Hace que el alto de línea se determine automáticamente a partir de las características de la fuente actual.  Equivalente a un valor de propiedad <xref:System.Double.NaN?displayProperty=nameWithType>.  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.LineHeightProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.LineHeight%2A> atributo de un <xref:System.Windows.Documents.Block> elemento.  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 En la siguiente ilustración se muestra cómo se representa el ejemplo anterior.  
  
 ![Captura de pantalla: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "captura de pantalla: FlowDocument LineHeight")  
  
 En la siguiente ilustración se muestra cómo se representa el mismo ejemplo con la configuración predeterminada de <xref:System.Windows.Documents.ListItem.LineHeight%2A> = <xref:System.Double.NaN?displayProperty=nameWithType>.  
  
 ![Captura de pantalla: LineHeight predeterminado de FlowDocument](~/add/media/flowdocument-lineheightdefault.png "captura de pantalla: LineHeight predeterminado de FlowDocument")  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.LineHeight%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.LineHeight" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el mecanismo por el que se determina un cuadro de línea para cada línea de texto dentro de <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>Uno de los valores <see cref="T:System.Windows.LineStackingStrategy" /> que especifica el mecanismo por el que se define un cuadro de línea para cada línea de texto dentro de <see cref="T:System.Windows.Documents.ListItem" />. El valor predeterminado es <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.LineStackingStrategyProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> propiedad para determinar cómo se crean los cuadros de línea para las líneas de texto de un <xref:System.Windows.Controls.TextBlock>. La primera <xref:System.Windows.Controls.TextBlock> tiene un <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> valo <xref:System.Windows.LineStackingStrategy.MaxHeight> y el segundo <xref:System.Windows.Controls.TextBlock> tiene un valor de <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 En la siguiente ilustración muestra el resultado del código anterior.  
  
 ![Captura de pantalla: Comparar valores de LineStackingStrategy](~/add/media/flow-linestackingstrategy.gif "captura de pantalla: comparar LineStackingStrategy valores")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.List List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.List List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As List" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::List ^ List { System::Windows::Documents::List ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.Windows.Documents.List" /> que contiene <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <value>La lista que contiene <see cref="T:System.Windows.Documents.ListItem" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grosor del margen para el elemento.</summary>
        <value>Un <see cref="T:System.Windows.Thickness" /> estructura que especifica la cantidad de margen que se aplicará, en píxeles independientes del dispositivo. El valor predeterminado es un grosor uniforme de cero (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem.Margin%2A> es el espacio en búfer que se encuentra fuera del área de contenido de un elemento, entre los bordes del área de contenido del elemento y los bordes del elemento primario.  Por otra parte <xref:System.Windows.Documents.ListItem.Padding%2A>, que es espacio en búfer que se encuentra dentro del área de contenido de un elemento, entre el contenido del elemento y el borde interior del elemento.  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *uniformThickness*  
 Representación de cadena de un único <xref:System.Double> valor que debe aplicarse uniformemente en todas las dimensiones de grosor cuatro.  Por ejemplo, un valor de `"10"` es equivalente a un valor de `"10,10,10,10"`.  Un valor sin calificar se mide en píxeles independientes del dispositivo. Las cadenas no necesitan incluir explícitamente separadores decimales.  
  
 *independentThickness*  
 Representación de cadena de cuatro ordenados <xref:System.Double> valores correspondientes a las dimensiones de grosor independiente para izquierda, superior, derecho e inferior, en este orden.  Los cuatro valores deben aparecer separados con comas; no se permiten espacios.  Por ejemplo, "5,10,15,20 da como" resultado 5 píxeles de margen a la izquierda del contenido, 10 píxeles de margen sobre el contenido, 15 píxeles de margen situado a la derecha del contenido y 20 píxeles de margen debajo del contenido.  
  
 *qualifiedUniformThickness*  
 Un valor descrito por *uniformThickness* seguido de uno de estos especificadores de unidades: `px`, `in`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 Por ejemplo, `"1in"` proporciona un margen uniforme de 1 pulgada en todas las direcciones.  
  
 *qualifiedIndependentThickness*  
 Un valor descrito por *independentThickness*, con cada valor independiente seguido de uno de estos especificadores de unidades: `px`, `in`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 Por ejemplo: `"1.5in,0.8in,1.5in,0.8in"`.  Especificadores de unidades podrán estar mixto o se omite de uno o más valores.  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.MarginProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.Margin%2A> atributo de un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 En la ilustración siguiente, se muestra cómo se representa este ejemplo.  Grosores y colores exagerados se utilizan para ilustración.  
  
 ![Captura de pantalla: Párrafos con relleno y márgenes](~/add/media/block-marginpadding.png "captura de pantalla: párrafos con relleno y márgenes")  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.Margin%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.Margin" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem NextListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem NextListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.NextListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ NextListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la <see cref="T:System.Windows.Documents.ListItem" /> siguiente en la <see cref="T:System.Windows.Documents.List" /> contenedora.</summary>
        <value>La siguiente <see cref="T:System.Windows.Documents.ListItem" /> en <see cref="T:System.Windows.Documents.List" /> o <see langword="null" /> si no hay <see cref="T:System.Windows.Documents.ListItem" /> siguiente.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grosor del relleno para el elemento.</summary>
        <value>Un <see cref="T:System.Windows.Thickness" /> estructura que especifica la cantidad de relleno que se aplicará, en píxeles independientes del dispositivo. El valor predeterminado es un grosor uniforme de cero (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.ListItem.Padding%2A> es el espacio en búfer que se encuentra dentro del área de contenido de un elemento, entre el contenido del elemento y el borde interior del elemento.  Por otra parte <xref:System.Windows.Documents.ListItem.Margin%2A>, que es espacio en búfer que se encuentra fuera del área de contenido de un elemento, entre los bordes del área de contenido del elemento y los bordes del elemento primario.  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *uniformThickness*  
 Representación de cadena de un único <xref:System.Double> valor que debe aplicarse uniformemente en todas las dimensiones de grosor cuatro.  Por ejemplo, un valor de `"10"` es equivalente a un valor de `"10,10,10,10"`.  Un valor sin calificar se mide en píxeles independientes del dispositivo. Las cadenas no necesitan incluir explícitamente separadores decimales.  
  
 *independentThickness*  
 Representación de cadena de cuatro ordenados <xref:System.Double> valores correspondientes a las dimensiones de grosor independiente para izquierda, superior, derecho e inferior, en este orden.  Los cuatro valores deben aparecer separados con comas; no se permiten espacios.  Por ejemplo, "5,10,15,20 da como" resultado 5 píxeles de relleno a la izquierda del contenido, 10 píxeles de relleno encima de contenido, 15 píxeles de relleno a la derecha del contenido y 20 píxeles de relleno debajo del contenido.  
  
 *qualifiedUniformThickness*  
 Un valor descrito por *uniformThickness* seguido de uno de estos especificadores de unidades: `px`, `in`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 Por ejemplo, `"1in"` proporciona relleno uniforme de 1 pulgada en todas las direcciones.  
  
 *qualifiedIndependentThickness*  
 Un valor descrito por *independentThickness*, con cada valor independiente seguido de uno de estos especificadores de unidades: `px`, `in`.  
  
 `px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pulgadas; 1 in == 96 px  
  
 Por ejemplo: `"1.5in,0.8in,1.5in,0.8in"`.  Especificadores de unidades podrán estar mixto o se omite de uno o más valores.  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.PaddingProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.Padding%2A> atributo de un <xref:System.Windows.Documents.Block> elemento (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 En la ilustración siguiente, se muestra cómo se representa este ejemplo.  Grosores y colores exagerados se utilizan para ilustración.  
  
 ![Captura de pantalla: Párrafos con relleno y márgenes](~/add/media/block-marginpadding.png "captura de pantalla: párrafos con relleno y márgenes")  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.Padding%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.Padding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem PreviousListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem PreviousListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.PreviousListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ PreviousListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Windows.Documents.ListItem" /> anterior en la <see cref="T:System.Windows.Documents.List" />contenedora.</summary>
        <value>El <see cref="T:System.Windows.Documents.ListItem" /> anterior de la <see cref="T:System.Windows.Documents.List" /> o <see langword="null" /> si no hay <see cref="T:System.Windows.Documents.ListItem" /> anterior.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBlocks">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBlocks(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBlocks (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBlocks(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Objeto de administrador de serialización para el objeto.</param>
        <summary>Devuelve un valor que indica si se debería serializar el valor efectivo de la propiedad <see cref="P:System.Windows.Documents.ListItem.Blocks" /> durante la serialización del objeto <see cref="T:System.Windows.Documents.ListItem" />.</summary>
        <returns>
          <see langword="true" /> si la propiedad <see cref="P:System.Windows.Documents.ListItem.Blocks" /> debe serializarse; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="manager" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingListItems">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItemCollection SiblingListItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItemCollection SiblingListItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.SiblingListItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingListItems As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItemCollection ^ SiblingListItems { System::Windows::Documents::ListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una <see cref="T:System.Windows.Documents.ListItemCollection" /> que contiene los elementos <see cref="T:System.Windows.Documents.ListItem" /> que están relacionados con el elemento <see cref="T:System.Windows.Documents.ListItem" /> actual.</summary>
        <value>Una <see cref="T:System.Windows.Documents.ListItemCollection" /> que contiene los elementos <see cref="T:System.Windows.Documents.ListItem" /> secundarios hospedados directamente por el elemento primario del elemento <see cref="T:System.Windows.Documents.ListItem" /> actual, o <see langword="null" /> si el elemento <see cref="T:System.Windows.Documents.ListItem" /> actual no tiene ningún elemento primario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Documents.ListItemCollection> devuelto por esta propiedad incluye la <xref:System.Windows.Documents.ListItem> elemento a través del cual se accede a la colección; es decir, el elemento al que pertenece esta propiedad se considera su propio elemento relacionado para el propósito de generar la colección de elementos del mismo nivel.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica la alineación horizontal del contenido del texto.</summary>
        <value>Uno de los valores <see cref="T:System.Windows.TextAlignment" /> que especifica la alineación deseada. El valor predeterminado es <see cref="F:System.Windows.TextAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Documents.ListItem.TextAlignmentProperty>|  
|Propiedades de metadatos establecidos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.Block.TextAlignment%2A> atributo de un <xref:System.Windows.Documents.Block> elemento.  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 En la siguiente ilustración se muestra cómo se representa el ejemplo anterior con <xref:System.Windows.TextAlignment.Left> alineación del texto (el valor predeterminado).  
  
 ![Captura de pantalla: Valor de propiedad TextAlign de izquierda](~/add/media/flowdoc-textalign-left.png "captura de pantalla: valor de propiedad TextAlign de izquierda")  
  
 En la siguiente ilustración se muestra cómo se representa el mismo ejemplo con <xref:System.Windows.TextAlignment.Right> alineación del texto.  
  
 ![Captura de pantalla: Valor de propiedad TextAlign de derecha](~/add/media/flowdoc-textalign-right.png "captura de pantalla: TextAlign con el valor de la derecha")  
  
 En la siguiente ilustración se muestra cómo se representa el mismo ejemplo con <xref:System.Windows.TextAlignment.Center> alineación del texto.  
  
 ![Captura de pantalla: Valor de propiedad TextAlign de Center](~/add/media/flowdoc-textalign-center.png "captura de pantalla: valor de propiedad TextAlign de Center")  
  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Documents.ListItem.TextAlignment%2A> propiedad mediante programación.  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Documents.ListItem.TextAlignment" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>