<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextPointer.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d374acbfa59bece9a23ff4841ba74263d0c6fa42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d374acbfa59bece9a23ff4841ba74263d0c6fa42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Represents a position within a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.FlowDocument" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Controls.TextBlock" /&gt;</ph>.</source>
          <target state="translated">Representa una posición dentro de un <ph id="ph1">&lt;see cref="T:System.Windows.Documents.FlowDocument" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Windows.Controls.TextBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> class introduces the following terminology:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> clase presenta la siguiente terminología:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Position - Inherently, a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> always points to a <bpt id="p1">*</bpt>position<ept id="p1">*</ept> in content.</source>
          <target state="translated">Colocar - intrínsecamente, un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> siempre apunta a un <bpt id="p1">*</bpt>posición<ept id="p1">*</ept> en contenido.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</source>
          <target state="translated">Estas posiciones se encuentran entre caracteres en el contenido, o entre el flujo de contenido de etiquetas de los elementos que definen la estructura del contenido.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Current Position - Because a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> always indicates a position, and because many of the operations that can be performed through a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> are relative to the position currently pointed to by the <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>, it makes sense to simply refer to the position indicated by a <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> as the <bpt id="p1">*</bpt>current position<ept id="p1">*</ept>.</source>
          <target state="translated">Posición actual - porque un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> siempre indica una posición y dado que muchas de las operaciones que pueden realizarse a través de un <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> son relativas a la posición actualmente señalada por el <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>, tiene sentido simplemente hacen referencia a la posición indicada por un <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> como el <bpt id="p1">*</bpt>posición actual<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Insertion Position - An <bpt id="p1">*</bpt>insertion position<ept id="p1">*</ept> is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">Posición de inserción: una <bpt id="p1">*</bpt>posición de inserción<ept id="p1">*</ept> es una posición donde se puede agregar nuevo contenido sin romper ninguna regla semántica para el contenido asociado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">Un ejemplo de válido <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posición que no es una posición de inserción es la posición entre dos adyacentes <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Symbol - For the purposes of <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> operations that involve symbols, any of the following is considered to be a <bpt id="p1">*</bpt>symbol<ept id="p1">*</ept>:</source>
          <target state="translated">Símbolo - para los fines de <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> las operaciones que implican símbolos, ninguno de los siguientes se considera un <bpt id="p1">*</bpt>símbolo<ept id="p1">*</ept>:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>An opening or closing tag for a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">Una etiqueta inicial o final de un <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained within an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> elemento dentro de un <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">Tenga en cuenta que este tipo una <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que contienen el <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> no se cuentan como símbolos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Each 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">Cada uno de ellos de 16 bits <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> caracteres dentro de un texto <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Text Container - A <bpt id="p1">*</bpt>text container<ept id="p1">*</ept> is the element that forms the ultimate border for the flow content at hand; the position indicated by a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> always falls within a text container.</source>
          <target state="translated">Contenedor de texto - A <bpt id="p1">*</bpt>contenedor de texto<ept id="p1">*</ept> es el elemento que forma el verdadero límite del contenido dinámico en cuestión; la posición indicada por una <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> siempre se encuentra dentro de un contenedor de texto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Currently, a text container must be either a <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">Actualmente, un contenedor de texto debe ser un <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Generally speaking, operations between <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances in different text containers are not supported.</source>
          <target state="translated">En general, las operaciones entre <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> no se admiten instancias en contenedores de texto diferente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Document - The content in a text container is referred to as a <bpt id="p1">*</bpt>document<ept id="p1">*</ept>, as in the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph> properties.</source>
          <target state="translated">Documento: el contenido de un contenedor de texto se conoce como un <bpt id="p1">*</bpt>documento<ept id="p1">*</ept>, como en el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> class is intended to facilitate traversal and manipulation of content that is represented by <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> flow content elements; in general, such elements derive from <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> clase está diseñada para facilitar la exploración transversal y la manipulación de contenido que se representa mediante <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> elementos de contenido dinámico; por lo general, estos elementos se derivan de <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Some of the operations that <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> facilitates include the following:</source>
          <target state="translated">Algunas de las operaciones que <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> facilita incluyen lo siguiente:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Perform an ordinal comparison of the current position with a second specified position.</source>
          <target state="translated">Realizar una comparación ordinal de la posición actual con una segunda posición especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Determine the type of content adjacent to the current position in a specified direction.</source>
          <target state="translated">Determinar el tipo de contenido adyacente a la posición actual en una dirección especificada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph> enumeration.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Get the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> that scopes or is adjacent to the current position.</source>
          <target state="translated">Obtener el <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> que establece el ámbito o es adyacente a la posición actual.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A&gt;</ph> method.</source>
          <target state="translated">Vea <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Get the text container that scopes the current document.</source>
          <target state="translated">Obtener el contenedor de texto que abarca el documento actual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> property.</source>
          <target state="translated">Vea la propiedad <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Get a specified number of characters preceding or following the current position.</source>
          <target state="translated">Obtener un número especificado de caracteres antes o después de la posición actual.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph> method.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Insert a string of characters at the current position.</source>
          <target state="translated">Inserte una cadena de caracteres en la posición actual.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A&gt;</ph> method.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Find line boundaries in content.</source>
          <target state="translated">Buscar los límites de la línea de contenido.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph> property.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Translate between <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> positions and symbol offsets into content.</source>
          <target state="translated">Traducir entre <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posiciones y símbolos se desplaza en contenido.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> methods.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Perform visual hit testing by translating between a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position and a <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> representing relative coordinates.</source>
          <target state="translated">Realizar pruebas de posicionamiento visual mediante la traducción entre un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posición y un <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> que representan coordenadas relativas.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>Find a nearby insertion position, or check whether the current position is an insertion position.</source>
          <target state="translated">Buscar una posición de inserción cercana o comprobar si la posición actual es una posición de inserción.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph> methods and the <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A&gt;</ph> property.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph> métodos y <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The position and <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> indicated by a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> object are immutable.</source>
          <target state="translated">La posición y <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> indicado por un <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> objeto son inmutables.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>When content is edited or modified, the position indicated by a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</source>
          <target state="translated">Cuando el contenido está editado o modificado, la posición indicada por una <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> no cambia en relación con el texto que lo rodea; en su lugar el desplazamiento de esa posición desde el principio del contenido se ajusta según corresponda para reflejar la nueva posición relativa en el contenido.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</source>
          <target state="translated">Por ejemplo, un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> que indica una posición al principio de un párrafo determinado continúa señalando al principio de ese párrafo incluso cuando el contenido se inserta o elimina antes o después del párrafo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> class does not provide any public constructors.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> clase no proporciona ningún constructor público.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>An instance of <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is created by using properties or methods of other objects (including other <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> objects).</source>
          <target state="translated">Una instancia de <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> se crea mediante el uso de propiedades o métodos de otros objetos (los incluidos <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> objetos).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The following list provides a few examples of methods and properties that create and return a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">La siguiente lista proporciona algunos ejemplos de métodos y propiedades que crear y devuelven un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>This list is not exhaustive:</source>
          <target state="translated">Esta lista no es exhaustiva:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextRange.Start%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.TextRange.End%2A&gt;</ph>.</source>
          <target state="translated">Desde un <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextRange.Start%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Documents.TextRange.End%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>:  <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement.ContentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement.ContentEnd%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Documents.TextElement.ElementStart%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement.ElementEnd%2A&gt;</ph>.</source>
          <target state="translated">Desde un <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement.ContentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement.ContentEnd%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Documents.TextElement.ElementStart%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement.ElementEnd%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> (text container): <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock.ContentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.ContentEnd%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A&gt;</ph>.</source>
          <target state="translated">Desde un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> (contenedor de texto): <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock.ContentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.ContentEnd%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From a <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> (text container): <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument.ContentStart%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument.ContentEnd%2A&gt;</ph></source>
          <target state="translated">Desde un <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> (contenedor de texto): <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument.ContentStart%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument.ContentEnd%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>From an existing <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>.</source>
          <target state="translated">Desde una existente <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>: <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.DocumentStart%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.DocumentEnd%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to find a position just inside of the first <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element in a specified text container.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> para buscar una posición justo dentro de la primera <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento de un contenedor de texto especificado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Documents.TextPointer">
          <source>The following example implements a simplistic find algorithm using <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> facilities.</source>
          <target state="translated">En el ejemplo siguiente se implementa un algoritmo de búsqueda sencillo utilizando <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instalaciones.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that specifies a position to compare to the current position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> que especifica una posición para comparar a la posición actual.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>Performs an ordinal comparison between the positions specified by the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and a second specified <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Realiza una comparación de ordinales entre las posiciones especificadas por el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual y un segundo <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>–1 if the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> precedes <ph id="ph2">&lt;paramref name="position" /&gt;</ph>; 0 if the locations are the same; +1 if the current <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> follows <ph id="ph4">&lt;paramref name="position" /&gt;</ph>.</source>
          <target state="translated">–1 si el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual precede a <ph id="ph2">&lt;paramref name="position" /&gt;</ph>; 0 si las ubicaciones son las mismas; +1 si el <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual sigue a <ph id="ph4">&lt;paramref name="position" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A value of –1 indicates that the position specified by the current <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> precedes the position specified by <ph id="ph2">`position`</ph>.</source>
          <target state="translated">Un valor de – 1 indica que la posición especificada por el actual <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> precede a la posición especificada por <ph id="ph2">`position`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A value of 0 indicates that the indicated positions are equal.</source>
          <target state="translated">Un valor de 0 indica que las posiciones indicadas son iguales.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>A value of positive +1 indicates that the position specified by the current <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> follows the position specified by <ph id="ph2">`position`</ph>.</source>
          <target state="translated">Un valor de + 1 positivo indica que la posición especificada por el actual <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> sigue a la posición especificada por <ph id="ph2">`position`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source>In the example, the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> method is used in conjunction with the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> method to test whether a specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> is empty.</source>
          <target state="translated">En el ejemplo, el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> método se utiliza junto con la <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> método para comprobar si un determinado <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> está vacía.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> specifies a position outside of the text container associated with the current position.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> especifica una posición fuera del contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The number of characters to delete, starting at the current position.</source>
          <target state="translated">El número de caracteres para eliminar, a partir de la posición actual.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</source>
          <target state="translated">Especifique un valor positivo para eliminar caracteres que siguen a la posición actual y un valor negativo para eliminar caracteres que preceden a la posición actual.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>Deletes the specified number of characters from the position indicated by the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Elimina el número de caracteres especificado de la posición indicada por el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The number of characters actually deleted.</source>
          <target state="translated">El número de caracteres eliminado realmente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>Specify a positive value to delete characters that follow the current position (as in <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>); specify a negative value to delete characters that precede the current position (as in <ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Especifique un valor positivo para eliminar caracteres que siguen a la posición actual (como en <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>); Especifique un valor negativo para eliminar caracteres que preceden a la posición actual (como en <ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The number of characters actually deleted may be less than the number specified by <ph id="ph1">`count`</ph>.</source>
          <target state="translated">El número de caracteres eliminado realmente puede ser menor que el número especificado por <ph id="ph1">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>This happens in cases where <ph id="ph1">`count`</ph> specifies more characters than exist to be deleted.</source>
          <target state="translated">Esto sucede en casos donde <ph id="ph1">`count`</ph> especifica más caracteres de los que existen para ser eliminados.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
          <source>The method is called at a position where text is not allowed.</source>
          <target state="translated">Se ha llamado al método en una posición en la que el texto no está permitido.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.DocumentEnd">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the end of content in the text container associated with the current position.</source>
          <target state="translated">Obtiene <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al final del contenido en el contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentEnd">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the end of content in the text container associated with the current position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al final del contenido en el contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> for the returned <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is always a text container (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>), rather than a <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> para el valor devuelto <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> siempre es un contenedor de texto (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>), en lugar de un <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the beginning of content in the text container associated with the current position.</source>
          <target state="translated">Obtiene <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al principio del contenido en el contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> at the beginning of content in the text container associated with the current position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al principio del contenido en el contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</source>
          <target state="translated">Utilice la posición devuelta por esta propiedad como una posición de línea base desde la que se va a trabajar con desplazamientos relativos a otras posiciones.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> methods provide a way to translate between positions and position offsets.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> métodos proporcionan un medio para traducir entre las posiciones y posición desplazamientos.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.DocumentStart">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> for the returned <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is always a text container (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>), rather than a <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.Parent%2A&gt;</ph> para el valor devuelto <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> siempre es un contenedor de texto (<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> o <ph id="ph4">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>), en lugar de un <ph id="ph5">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for an adjacent element.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar un elemento adyacente.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>Returns the element, if any, that borders the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">Devuelve el elemento, en caso de que exista, que limita al <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>The adjacent element in the specified <ph id="ph1">&lt;paramref name="direction" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no adjacent element exists.</source>
          <target state="translated">El elemento adyacente en la <ph id="ph1">&lt;paramref name="direction" /&gt;</ph> especificada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no existe ningún elemento adyacente.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>The returned element is typically a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">El elemento devuelto es normalmente un <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> can be returned when the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> indicates a position inside a <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph> element or an <ph id="ph4">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> element.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> puede devolver cuando la <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> indica una posición dentro de un <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph> elemento o un <ph id="ph4">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to find a content bounding box.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar un rectángulo de selección del contenido.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>Returns a bounding box (<ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>) for content that borders the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">Devuelve un rectángulo de selección (<ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>) para el contenido que limita el <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>A bounding box for content that borders the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified direction, or <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> if current, valid layout information is unavailable.</source>
          <target state="translated">Un rectángulo de selección para el contenido que limita el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual en la dirección especificada o <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> si no hay disponible información de presentación actual válida.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> edges are not considered content for the purposes of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> bordes no se consideran contenido para los fines de este método.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is positioned before a <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> edge, the return value is a bounding box for the next non-<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> content in the specified direction.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> se coloca antes un <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> borde, el valor devuelto es un cuadro de límite para los siguientes no son<ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> contenido en la dirección especificada.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>If there is no content in the specified direction, a zero-width <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is returned with a height matching the height of any preceding content.</source>
          <target state="translated">Si no hay ningún contenido en la dirección especificada, un ancho de cero <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> se devuelve con un alto que coincide con el alto de los anteriores contenido.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>The operation performed by this method depends on a valid layout.</source>
          <target state="translated">La operación realizada por este método depende de un diseño válido.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">Cuando sea necesario, este método intenta regenerar automáticamente un diseño válido antes de continuar con la operación.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">Volver a generar un diseño puede ser una operación relativamente costosa.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> property to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> propiedad para comprobar un diseño válido antes de realizar operaciones que pueden regenerar el diseño.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>diseño<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for the closest insertion position.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar la posición de inserción más cercana.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the closest insertion position in the specified logical direction.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición de inserción más cercana en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the closest insertion position in the specified direction.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición de inserción más cercana en la dirección especificada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">Una posición de inserción es una posición donde se puede agregar nuevo contenido sin romper ninguna regla semántica para el contenido asociado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">Un ejemplo de válido <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posición que no es una posición de inserción es la posición entre dos adyacentes <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> ya apunta a una posición de inserción válida, pero la etiqueta de cierre de una secuencia de formato no vacía sigue directamente a esa posición en la dirección dada, la <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> devuelta por este método se ajusta para que apunte a la posición de inserción justo después del cierre de la secuencia de formato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>For example, consider the markup sequence <ph id="ph1">`&lt;Bold&gt;a&lt;/Bold&gt;b`</ph>.</source>
          <target state="translated">Por ejemplo, considere la posibilidad de la secuencia de marcado <ph id="ph1">`&lt;Bold&gt;a&lt;/Bold&gt;b`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>Note that there are two insertion positions between the letters <ph id="ph1">`a`</ph> and <ph id="ph2">`b`</ph> — one that precedes the closing <ph id="ph3">`Bold`</ph> tag, and one directly following the closing <ph id="ph4">`Bold`</ph> tag.</source>
          <target state="translated">Tenga en cuenta que hay dos posiciones de inserción entre las letras <ph id="ph1">`a`</ph> y <ph id="ph2">`b`</ph> : uno que precede al punto final <ph id="ph3">`Bold`</ph> etiqueta y uno justo después del cierre <ph id="ph4">`Bold`</ph> etiqueta.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> is called on a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to the position directly after the letter <ph id="ph3">`a`</ph> and before of the closing <ph id="ph4">`Bold`</ph> tag, and with a <ph id="ph5">`direction`</ph> of <ph id="ph6">&lt;xref:System.Windows.Documents.LogicalDirection.Forward&gt;</ph>, the returned <ph id="ph7">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is adjusted to point to the position just before the letter <ph id="ph8">`b`</ph>, after the closing <ph id="ph9">`Bold`</ph> tag.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> se llama en un <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> a la posición directamente después de la letra <ph id="ph3">`a`</ph> y antes del cierre <ph id="ph4">`Bold`</ph> etiqueta y con un <ph id="ph5">`direction`</ph> de <ph id="ph6">&lt;xref:System.Windows.Documents.LogicalDirection.Forward&gt;</ph>, el valor devuelto <ph id="ph7">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> se ajusta para que señale a la posición justo antes de la letra <ph id="ph8">`b`</ph>, tras el cierre <ph id="ph9">`Bold`</ph> etiqueta.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</source>
          <target state="translated">Se realiza un ajuste similar para formato de etiquetas de apertura cuando se trabaja en la dirección lógica opuesta.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This method is intended to provide a means of disambiguation between insertion positions in similar cases.</source>
          <target state="translated">Este método está pensado para proporcionar un medio de la anulación de ambigüedades entre posiciones de inserción en casos similares.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</source>
          <target state="translated">Este método se puede utilizar también para ser selectivo acerca de los puntos de inserción cuando está implicada una secuencia de etiquetas estructurales.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>) or at the end of the preceding paragraph (by specifying <ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Por ejemplo, cuando en una posición entre etiquetas de párrafo de apertura y cierre, el parámetro de dirección se puede usar para seleccionar el punto de inserción más cercano al principio del párrafo siguiente (especificando <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType&gt;</ph>) o al final del párrafo anterior (especificando <ph id="ph2">&lt;xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified <ph id="ph1">`direction`</ph>, the returned <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to the same position as the calling <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">Si el puntero ya está en la posición de inserción, y no hay ninguna etiqueta de formato adyacente de la manera especificada <ph id="ph1">`direction`</ph>, el valor devuelto <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> apunta a la misma posición que la llamada a <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>It is possible that no valid insertion position exists relative to the position pointed to by a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">Es posible que no exista ninguna posición de inserción válida con respecto a la posición que señala una <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This can happen if the referenced content is structurally incomplete, as in an empty table or list.</source>
          <target state="translated">Esto puede ocurrir si el contenido que se hace referencia está estructuralmente incompleto, como en una tabla vacía o una lista.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>In such cases, this method simply returns a <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to the same position as the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> from which this method was called.</source>
          <target state="translated">En tales casos, este método simplemente devuelve un <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> a la misma posición que la <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> desde que se llama a este método.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This method always returns a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</source>
          <target state="translated">Este método devuelve siempre válido <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> method to check whether a specified <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> is empty of printable content.</source>
          <target state="translated">Este ejemplo muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A&gt;</ph> método para comprobar si un determinado <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> está vacío de contenido imprimible.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning of a line that is specified relative to the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al principio de una línea que se especifica con respecto al <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>The number of start-of-line markers to skip when determining the line for which to return the starting position.</source>
          <target state="translated">El número de marcadores de inicio de línea que se omiten al determinar la línea para la que se devuelve la posición inicial.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</source>
          <target state="translated">Los valores negativos especifican las líneas que preceden, 0 especifica la línea actual y los valores positivos, las líneas que siguen.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning of a line that is specified relative to the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al principio de una línea que se especifica con respecto al <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> pointing to the beginning of the specified line (with the <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> set to <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>), or <ph id="ph4">&lt;see langword="null" /&gt;</ph> if the specified line is out of range or otherwise cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> que señala al principio de la línea especificada (con <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> establecido en <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>), o <ph id="ph4">&lt;see langword="null" /&gt;</ph> si la línea especificada está fuera del intervalo o no se puede localizar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to an ambiguous position, for example, between two lines, the line in the direction specified by <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> is selected as the relative starting line.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> señala a una posición ambigua, por ejemplo, entre dos líneas, la línea en la dirección especificada por <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> se selecciona como línea inicial relativa.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>The operation performed by this method depends on a valid layout.</source>
          <target state="translated">La operación realizada por este método depende de un diseño válido.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">Cuando sea necesario, este método intenta regenerar automáticamente un diseño válido antes de continuar con la operación.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">Volver a generar un diseño puede ser una operación relativamente costosa.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> para comprobar un diseño válido antes de realizar operaciones que pueden regenerar el diseño.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>diseño<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>The number of start-of-line markers to skip when determining the line for which to return the starting position.</source>
          <target state="translated">El número de marcadores de inicio de línea que se omiten al determinar la línea para la que se devuelve la posición inicial.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</source>
          <target state="translated">Los valores negativos especifican las líneas que preceden, 0 especifica la línea actual y los valores positivos, las líneas que siguen.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</source>
          <target state="translated">Cuando se devuelve este método, contiene el número real de marcadores de inicio de línea omitidos al determinar la línea para la que se devuelve la posición inicial.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>This value may be less than <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> if the beginning or end of content is encountered before the specified number of lines are skipped.</source>
          <target state="translated">Este valor puede ser menor que <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> si se llega al principio o al final del contenido antes de omitir el número de líneas especificado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parámetro se pasa sin inicializar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning of a line that is specified relative to the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>, and reports how many lines were skipped.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al principio de una línea que se especifica con respecto al <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual e informa sobre el número de líneas omitidas.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> pointing to the beginning of the specified line (with the <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> set to <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>), or to the beginning of the line closest to the specified line if the specified line is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> que señala al principio de la línea especificada (con <ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> establecido en <ph id="ph3">&lt;see cref="F:System.Windows.Documents.LogicalDirection.Forward" /&gt;</ph>) o al principio de la línea más cercana a la línea especificada si ésta está fuera del intervalo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> property is selected as the relative starting line.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> señala a una posición ambigua, por ejemplo, entre dos líneas, la línea en la dirección especificada por el <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> propiedad está seleccionada como la línea inicial relativa.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for the next symbol.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar el símbolo siguiente.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>Returns a pointer to the next symbol in the specified logical direction.</source>
          <target state="translated">Devuelve un puntero al símbolo siguiente en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the next symbol in the requested direction, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the current <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> borders the start or end of content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al símbolo siguiente en la dirección solicitada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si el <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual limita el inicio o el fin del contenido.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">Cualquiera de las siguientes se considera un símbolo:</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>An opening or closing tag for a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">Una etiqueta inicial o final de un <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> los elementos en una <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">Tenga en cuenta que este tipo una <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que contienen el <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> no se cuentan como símbolos.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 bits <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> caracteres dentro de un texto <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the next symbol is categorized as <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.EmbeddedElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext.ElementStart&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext.ElementEnd&gt;</ph> (as identified by the <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method), then the <ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by this method is advanced by exactly one symbol from the current position.</source>
          <target state="translated">Si el símbolo siguiente se clasifica por categorías como <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.EmbeddedElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointerContext.ElementStart&gt;</ph>, o <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext.ElementEnd&gt;</ph> (identificada por el <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> método), la <ph id="ph5">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> devuelta por este método avanza por exactamente un símbolo desde la posición actual.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>If the next symbol is categorized as <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph> is not <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>).</source>
          <target state="translated">Si el símbolo siguiente se clasifica por categorías como <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>, la <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> devuelta por este método avanza más allá del texto para el siguiente símbolo no son de texto (es decir, la siguiente posición donde la <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointerContext&gt;</ph> no es <ph id="ph4">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>The exact symbol count crossed can be calculated in advance by calling the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A&gt;</ph> method.</source>
          <target state="translated">Se puede calcular el recuento exacto de símbolos cruzado de antemano mediante una llamada a la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method to traverse and extract the symbols in a specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A&gt;</ph> método junto con el <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> método para recorrer y extraer los símbolos en un determinado <ph id="ph3">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>While the example can be used to extract a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> structure for the contents of a given <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>, it is intended for illustrative purposes only, and should not be used in production code.</source>
          <target state="translated">Aunque el ejemplo se puede utilizar para extraer una <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]</ph> estructura para el contenido de una determinada <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>, que está pensado únicamente con fines ilustrativos y no debe usarse en código de producción.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
          <source>See the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace for a rich set of types designed for working with and processing XML.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Xml&gt;</ph> espacio de nombres para un amplio conjunto de tipos diseñados para trabajar con y procesar XML.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to search for the next insertion position.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar la posición de inserción siguiente.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the next insertion position in the specified logical direction.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición de inserción siguiente en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that identifies the next insertion position in the requested direction, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no next insertion position can be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> que identifica la posición de inserción siguiente en la dirección solicitada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se puede buscar ninguna posición de inserción siguiente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An <bpt id="p1">*</bpt>insertion position<ept id="p1">*</ept> is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">Un <bpt id="p1">*</bpt>posición de inserción<ept id="p1">*</ept> es una posición donde se puede agregar nuevo contenido sin romper ninguna regla semántica para el contenido asociado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">Un ejemplo de válido <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posición que no es una posición de inserción es la posición entre dos adyacentes <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph> method to traverse content element boundaries in order to count the number of <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> elements present between two specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A&gt;</ph> método atraviesen los límites del elemento de contenido con el fin de contar el número de <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> elementos presentes entre dos especificados <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instancias.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that specifies a position to find the distance (in symbols) to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> que especifica una posición para buscar la distancia hasta ella (en símbolos).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>Returns the count of symbols between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and a second specified <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Devuelve el recuento de símbolos entre el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual y un segundo <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The relative number of symbols between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and <ph id="ph2">&lt;paramref name="position" /&gt;</ph>.</source>
          <target state="translated">El número relativo de símbolos entre el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual y <ph id="ph2">&lt;paramref name="position" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A negative value indicates that the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> follows the position specified by <ph id="ph2">&lt;paramref name="position" /&gt;</ph>, 0 indicates that the positions are equal, and a positive value indicates that the current <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> precedes the position specified by <ph id="ph4">&lt;paramref name="position" /&gt;</ph>.</source>
          <target state="translated">Un valor negativo indica que el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual sigue a la posición especificada por <ph id="ph2">&lt;paramref name="position" /&gt;</ph>, 0 indica que las posiciones son iguales y un valor positivo, que el <ph id="ph3">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual precede a la posición especificada por <ph id="ph4">&lt;paramref name="position" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">Cualquiera de las siguientes se considera un símbolo:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>An opening or closing tag for a <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">Una etiqueta inicial o final de un <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> los elementos en una <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">Tenga en cuenta que este tipo una <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que contienen el <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> no se cuentan como símbolos.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 bits <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> caracteres dentro de un texto <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> method to find the offsets for two <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances, and then uses this information to save and restore the selection in a <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> método para buscar los desplazamientos para dos <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instancias y, a continuación, utiliza esta información para guardar y restaurar la selección de un <ph id="ph3">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source>The example assumes that the contents of the <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> have not changed between a selection save and a selection restore.</source>
          <target state="translated">En el ejemplo se da por supuesto que el contenido de la <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> no han cambiado entre una guardado de la selección y una restauración de la selección.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> specifies a position outside of the text container associated with the current position.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> especifica una posición fuera del contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to determine the category for adjacent content.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que determinar la categoría para el contenido adyacente.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>Returns a category indicator for the content adjacent to the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">Devuelve un indicador de categoría para el contenido adyacente al <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointerContext" /&gt;</ph> values that indicates the category for adjacent content in the specified logical direction.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointerContext" /&gt;</ph> que indica la categoría para el contenido adyacente en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> positions.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPointerContext%2A&gt;</ph> método para implementar un algoritmo para calcular el saldo de apertura y cierre de las etiquetas de elemento entre dos especificados <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posiciones.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
          <source>Each opening element tag is counted as +1, and each closing element tag is counted as –1.</source>
          <target state="translated">Cada etiqueta de elemento de apertura se cuenta como + 1 y cada etiqueta de elemento de cierre se cuenta como -1.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, in symbols, from the beginning of content.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición indicada por el desplazamiento especificado, en símbolos, a partir del principio del contenido.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>An offset, in symbols, for which to calculate and return the position.</source>
          <target state="translated">Un desplazamiento, en símbolos, para el que calcular y devolver la posición.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <ph id="ph1">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph> property.</source>
          <target state="translated">Si el desplazamiento es negativo, la posición se calcula en la dirección lógica contraria a la indicada por la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, in symbols, from the beginning of the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición indicada por el desplazamiento especificado, en símbolos, a partir del principio del <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no corresponding position can be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición indicada por el desplazamiento especificado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se encuentra ninguna posición correspondiente.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">Cualquiera de las siguientes se considera un símbolo:</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>An opening or closing tag for the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">Una etiqueta inicial o final de la <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> los elementos en una <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">Tenga en cuenta que este tipo una <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que contienen el <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> no se cuentan como símbolos.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 bits <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> caracteres dentro de un texto <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to a specified offset in a specified paragraph.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A&gt;</ph> método para implementar un par de métodos, uno para calcular el desplazamiento a una posición especificada con respecto a cualquier párrafo de hospedaje y el otro para devolver un <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> a un desplazamiento especificado en un párrafo especificado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>An offset, in symbols, for which to calculate and return the position.</source>
          <target state="translated">Un desplazamiento, en símbolos, para el que calcular y devolver la posición.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>If the offset is negative, the returned <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> precedes the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>; otherwise, it follows.</source>
          <target state="translated">Si el desplazamiento es negativo, el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> devuelto precede al <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual; de lo contrario, le sigue.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction of the returned <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica del <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> devuelto.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, in symbols, from the beginning of the current <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and in the specified direction.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición indicada por el desplazamiento especificado, en símbolos, a partir del principio del <ph id="ph2">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual y en la dirección especificada.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the position indicated by the specified offset, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the offset extends past the end of the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> a la posición indicada por el desplazamiento especificado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si el desplazamiento se extiende más allá del final del contenido.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">Cualquiera de las siguientes se considera un símbolo:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>An opening or closing tag for the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">Una etiqueta inicial o final de la <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> los elementos en una <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">Tenga en cuenta que este tipo una <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que contienen el <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> no se cuentan como símbolos.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 bits <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> caracteres dentro de un texto <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Windows.Documents.TextPointer">
          <source>Returns text adjacent to the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph>.</source>
          <target state="translated">Devuelve el texto adyacente al <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to find and return any adjacent text.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar y devolver cualquier texto adyacente.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Returns a string containing any text adjacent to the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> in the specified logical direction.</source>
          <target state="translated">Devuelve una cadena que contiene cualquier texto adyacente al <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>A string containing any adjacent text in the specified logical direction, or <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> if no adjacent text can be found.</source>
          <target state="translated">Una cadena que contiene cualquier texto adyacente en la dirección lógica especificada o <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> si no se puede buscar ningún texto adyacente.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>This method returns only uninterrupted runs of text.</source>
          <target state="translated">Este método sólo devuelve ejecuciones ininterrumpidas de texto.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Nothing is returned if any symbol type other than <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph> is adjacent to the current <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> in the specified direction.</source>
          <target state="translated">No se devuelve nada si cualquier tipo de símbolos distinto de <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph> es contiguo a actual <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> en la dirección especificada.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Similarly, text is returned only up to the next non-text symbol.</source>
          <target state="translated">De igual forma, se devuelve texto solo hasta el siguiente símbolo no son de texto.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph> method to implement a simple text extractor.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetTextInRun%2A&gt;</ph> método para implementar un extractor de texto simple.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>The method returns a string concatenation of all text between two specified <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances.</source>
          <target state="translated">El método devuelve una concatenación de cadenas de todo el texto entre dos especificados <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instancias.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>While the example can be used to extract any text between two <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances, it is intended for illustrative purposes only, and should not be used in production code.</source>
          <target state="translated">Aunque el ejemplo se puede utilizar para extraer cualquier texto comprendido entre dos <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instancias, está pensado únicamente con fines ilustrativos y no debe usarse en código de producción.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType&gt;</ph> en su lugar.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to find and copy any adjacent text.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que buscar y copiar cualquier texto adyacente.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>A buffer into which any text is copied.</source>
          <target state="translated">Un búfer en el que se copia texto.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>An index into <bpt id="p1">&lt;c&gt;</bpt>textBuffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing copied text.</source>
          <target state="translated">Índice de <bpt id="p1">&lt;c&gt;</bpt>textBuffer<ept id="p1">&lt;/c&gt;</ept> donde se va a empezar a escribir texto copiado.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to copy.</source>
          <target state="translated">Número máximo de caracteres que se pueden copiar.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</source>
          <target state="translated">Copia el número de caracteres máximo especificado desde cualquier texto adyacente en la dirección especificada en una matriz de caracteres proporcionada por un llamador.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters actually copied into <ph id="ph1">&lt;paramref name="textBuffer" /&gt;</ph>.</source>
          <target state="translated">Número de caracteres copiados realmente en <ph id="ph1">&lt;paramref name="textBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>This method returns only uninterrupted runs of text.</source>
          <target state="translated">Este método sólo devuelve ejecuciones ininterrumpidas de texto.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>Nothing is returned if any symbol type other than <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph> is adjacent to the current <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> in the specified direction.</source>
          <target state="translated">No se devuelve nada si cualquier tipo de símbolos distinto de <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointerContext.Text&gt;</ph> es contiguo a actual <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> en la dirección especificada.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>Similarly, text is returned only up to the next non-text symbol.</source>
          <target state="translated">De igual forma, se devuelve texto solo hasta el siguiente símbolo no son de texto.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than 0 or greater than the <ph id="ph2">&lt;see cref="P:System.Array.Length" /&gt;</ph> property of <ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> es menor que 0 o mayor que la propiedad <ph id="ph2">&lt;see cref="P:System.Array.Length" /&gt;</ph> de <ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0 or greater than the remaining space in <ph id="ph2">&lt;paramref name="textBuffer" /&gt;</ph> (<ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.<ph id="ph4">&lt;see cref="P:System.Array.Length" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> es menor que 0 o mayor que el espacio restante en <ph id="ph2">&lt;paramref name="textBuffer" /&gt;</ph> (<ph id="ph3">&lt;paramref name="textBuffer" /&gt;</ph>.<ph id="ph4">&lt;see cref="P:System.Array.Length" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
          <source>minus <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>).</source>
          <target state="translated">menus <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> values that specifies the logical direction in which to count the number of characters.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que especifica la dirección lógica en la que contar el número de caracteres.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>Returns the number of Unicode characters between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and the next non-text symbol, in the specified logical direction.</source>
          <target state="translated">Devuelve el número de caracteres Unicode entre el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual y el símbolo de no texto siguiente, en la dirección lógica especificada.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>The number of Unicode characters between the current <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> and the next non-text symbol.</source>
          <target state="translated">El número de caracteres Unicode entre el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> actual y el símbolo de no texto siguiente.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>This number may be 0 if there is no adjacent text.</source>
          <target state="translated">Este número puede ser 0 si no hay texto adyacente.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>Any of the following is considered to be a symbol:</source>
          <target state="translated">Cualquiera de las siguientes se considera un símbolo:</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>An opening or closing tag for the <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> element.</source>
          <target state="translated">Una etiqueta inicial o final de la <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> element contained in an <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> los elementos en una <ph id="ph2">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>Note that such a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> is always counted as exactly one symbol; any additional content or elements contained by the <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> are not counted as symbols.</source>
          <target state="translated">Tenga en cuenta que este tipo una <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que contienen el <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> no se cuentan como símbolos.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
          <source>A 16-bit <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> character inside of a text <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
          <target state="translated">16 bits <ph id="ph1">[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]</ph> caracteres dentro de un texto <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</source>
          <target state="translated">Obtiene un valor que indica si el contenedor de texto asociado a la posición actual tiene un diseño válido (actualizado).</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the layout is current and valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el diseño es actual y válido; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>When necessary, operations that depend on a valid layout (such as the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A&gt;</ph> method, and <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">Cuando sea necesario, las operaciones que dependen de un diseño válido (como el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A&gt;</ph> método, <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A&gt;</ph> (método), y <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A&gt;</ph> propiedad) intenta regenerar automáticamente un diseño válido antes de continuar con la operación.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">Volver a generar un diseño puede ser una operación relativamente costosa.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>Use this property to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">Utilice esta propiedad para comprobar un diseño válido antes de realizar operaciones que pueden regenerar el diseño.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.HasValidLayout">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>diseño<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertLineBreak">
          <source>Inserts a line break at the current position.</source>
          <target state="translated">Inserta un salto de línea en la posición actual.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertLineBreak">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> positioned immediately after the <ph id="ph2">&lt;see cref="T:System.Windows.Documents.LineBreak" /&gt;</ph> element inserted by this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> colocado inmediatamente después del elemento <ph id="ph2">&lt;see cref="T:System.Windows.Documents.LineBreak" /&gt;</ph> insertado por este método.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>Inserts a paragraph break at the current position.</source>
          <target state="translated">Inserta un salto de párrafo en la posición actual.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> to the beginning (<ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextElement.ContentStart" /&gt;</ph>) of the new paragraph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> al principio (<ph id="ph2">&lt;see cref="P:System.Windows.Documents.TextElement.ContentStart" /&gt;</ph>) del nuevo párrafo.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>If this method is called when the current position is inside of an existing <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</source>
          <target state="translated">Si se llama a este método cuando la posición actual está dentro de una existente <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> elemento, el párrafo existente y cualquier contenido contiene se dividen en dos párrafos en la posición actual.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</source>
          <target state="translated">Si se llama a este método cuando la posición actual no está dentro de un párrafo existente, se inserta un párrafo nuevo y vacío.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph> element), an exception is thrown.</source>
          <target state="translated">Si se llama a este método en una posición no es adecuado para dividir o insertar un párrafo (por ejemplo, si la posición actual está dentro de un <ph id="ph1">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph> elemento), se produce una excepción.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
          <source>This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Hyperlink" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Documents.InlineUIContainer" /&gt;</ph>.</source>
          <target state="translated">Se llama a este método en una posición que no se puede dividir para alojar un nuevo párrafo, como en el ámbito de <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Hyperlink" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Windows.Documents.InlineUIContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>The text to insert.</source>
          <target state="translated">Texto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>Inserts the specified text into the text <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> at the current position.</source>
          <target state="translated">Inserta el texto especificado en el <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> del texto en la posición actual.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is not scoped by a <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element, a <ph id="ph3">&lt;xref:System.Windows.Documents.Run&gt;</ph> is inserted along with the <ph id="ph4">`textData`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> no tiene un ámbito por un <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> elemento, un <ph id="ph3">&lt;xref:System.Windows.Documents.Run&gt;</ph> se inserta junto con la <ph id="ph4">`textData`</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source>The current position is not within a <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph> element.</source>
          <target state="translated">La posición actual no está dentro de un elemento <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Run" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
          <source><ph id="ph1">&lt;paramref name="textData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textData" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>Gets a value that indicates whether the current position is an insertion position.</source>
          <target state="translated">Obtiene un valor que indica si la posición actual es una posición de inserción.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current position is an insertion position; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la posición actual es una posición de inserción; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</source>
          <target state="translated">Una posición de inserción es una posición donde se puede agregar nuevo contenido sin romper ninguna regla semántica para el contenido asociado.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>In practice, an insertion position is anywhere in content where a caret may be positioned.</source>
          <target state="translated">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
          <source>An example of a valid <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> position that is not an insertion position is the position between two adjacent <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</source>
          <target state="translated">Un ejemplo de válido <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> posición que no es una posición de inserción es la posición entre dos adyacentes <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>Gets a value that indicates whether the current position is at the beginning of a line.</source>
          <target state="translated">Obtiene un valor que indica si la posición actual está al principio de una línea.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current position is at the beginning of a line; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la posición actual está al principio de una línea; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> property is selected as the relative starting line.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> señala a una posición ambigua, por ejemplo, entre dos líneas, la línea en la dirección especificada por el <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt;</ph> propiedad está seleccionada como la línea inicial relativa.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>The operation performed by this property depends on a valid layout.</source>
          <target state="translated">La operación realizada por esta propiedad depende de un diseño válido.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</source>
          <target state="translated">Cuando sea necesario, este método intenta regenerar automáticamente un diseño válido antes de continuar con la operación.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>Regenerating a layout can be a relatively expensive operation.</source>
          <target state="translated">Volver a generar un diseño puede ser una operación relativamente costosa.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> property to check for a valid layout before performing operations that may regenerate the layout.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.HasValidLayout%2A&gt;</ph> propiedad para comprobar un diseño válido antes de realizar operaciones que pueden regenerar el diseño.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>diseño<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> that specifies a position to compare to the current position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Documents.TextPointer" /&gt;</ph> que especifica una posición para comparar a la posición actual.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>Indicates whether the specified position is in the same text container as the current position.</source>
          <target state="translated">Indica si la posición especificada está en el mismo contenedor de texto que la posición actual.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="textPosition" /&gt;</ph> indicates a position that is in the same text container as the current position; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="textPosition" /&gt;</ph> indica una posición que está en el mismo contenedor de texto que la posición actual; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>Most operations that involve multiple <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances are only valid if the instances in question indicate positions that are in the same text container scope.</source>
          <target state="translated">La mayoría de las operaciones que implican varios <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instancias solo son válidas si las instancias en cuestión indican posiciones que están en el mismo ámbito de contenedor de texto.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>For example the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> methods cannot be used with a <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> to a position outside of the text container associated with the current position.</source>
          <target state="translated">Por ejemplo la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.CompareTo%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A&gt;</ph> métodos no se puede usar con un <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> a una posición fuera del contenedor de texto asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>Use this method to verify that a specified <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is compatible with the current position for such operations.</source>
          <target state="translated">Utilice este método para comprobar que un determinado <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> es compatible con la posición actual para estas operaciones.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>The following example demonstrates a use for this method.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de este método.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph> method to check whether a specified <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> is positioned between two other specified <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instances in a situation when there is no guarantee that all three positions belong to the same text container.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A&gt;</ph> método para comprobar si un determinado <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> se coloca entre dos otros especificado <ph id="ph3">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> instancias en una situación cuando no hay ninguna garantía de que las tres posiciones pertenezcan al mismo contenedor de texto.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
          <source><ph id="ph1">&lt;paramref name="textPosition" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textPosition" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</source>
          <target state="translated">Obtiene la dirección lógica asociada a la posición actual que se utiliza para eliminar la ambigüedad del contenido asociado a la posición actual.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> value that is associated with the current position.</source>
          <target state="translated">El valor <ph id="ph1">&lt;see cref="T:System.Windows.Documents.LogicalDirection" /&gt;</ph> que se asocia a la posición actual.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>As an example of how this property is used, the <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> returned by a hit test method gives a hit that is between two characters of text.</source>
          <target state="translated">Como ejemplo de cómo se utiliza esta propiedad, el <ph id="ph1">&lt;xref:System.Windows.Documents.LogicalDirection&gt;</ph> de la <ph id="ph2">&lt;xref:System.Windows.Documents.TextPointer&gt;</ph> devuelto por una prueba de posicionamiento método ofrece un impacto en el que se encuentra entre dos caracteres de texto.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.LogicalDirection">
          <source>The logical direction specifies which of the two characters was actually hit—the left or the right.</source>
          <target state="translated">La dirección lógica especifica cuál de los dos caracteres fue realmente, la izquierda o a la derecha.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.Paragraph">
          <source>Gets the paragraph that scopes the current position, if any.</source>
          <target state="translated">Obtiene el párrafo que establece el ámbito de la posición actual, si lo hay.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.Paragraph">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Paragraph" /&gt;</ph> that scopes the current position, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no such paragraph exists.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Windows.Documents.Paragraph" /&gt;</ph> que establece el ámbito de la posición actual, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no hay ningún párrafo este tipo no existe.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Windows.Documents.TextPointer.Parent">
          <source>Gets the logical parent that scopes the current position.</source>
          <target state="translated">Obtiene el elemento primario lógico que establece el ámbito de la posición actual.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Documents.TextPointer.Parent">
          <source>The logical parent that scopes the current position.</source>
          <target state="translated">El elemento primario lógico que establece el ámbito de la posición actual.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.ToString">
          <source>This type or member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Este tipo o miembro es compatible con la infraestructura <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> y no está pensado para ser usado directamente desde su código.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Documents.TextPointer.ToString">
          <source>The string that represents the object.</source>
          <target state="translated">Cadena que representa el objeto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>