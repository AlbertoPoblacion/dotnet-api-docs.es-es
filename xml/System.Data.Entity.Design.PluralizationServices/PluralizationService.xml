<Type Name="PluralizationService" FullName="System.Data.Entity.Design.PluralizationServices.PluralizationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fdaf236490ee907a70c5a36fa183628b65caa8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PluralizationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PluralizationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PluralizationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class PluralizationService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona los métodos para construir las formas plural y singular de las palabras.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluralizationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PluralizationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateService">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateService (culture As CultureInfo) As PluralizationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Entity::Design::PluralizationServices::PluralizationService ^ CreateService(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PluralizationServices.PluralizationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Clase <see cref="T:System.Globalization.CultureInfo" /> que corresponde a las reglas del idioma aplicadas para las formas singular y plural de las palabras.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> que aplica las reglas del idioma que corresponden a la clase <see cref="T:System.Globalization.CultureInfo" /> especificada.</summary>
        <returns>Objeto <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> recién creado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Globalization::CultureInfo ^ Culture {  public:&#xA;System::Globalization::CultureInfo ^ get(); protected:&#xA; void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la referencia cultural de <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />.</summary>
        <value>Un objeto que especifica las reglas de idioma que se aplican a singulares y plurales.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlural">
      <MemberSignature Language="C#" Value="public abstract bool IsPlural (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPlural(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsPlural (word As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsPlural(System::String ^ word);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Valor que se va a analizar.</param>
        <summary>Determina si la palabra especificada es plural.</summary>
        <returns>
          <see langword="true" /> si la palabra es plural; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 Tanto el <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> y <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> métodos pueden devolver `true` para la misma palabra. Por ejemplo, ambos métodos devolverán `true` para la palabra "fish".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingular">
      <MemberSignature Language="C#" Value="public abstract bool IsSingular (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSingular(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSingular (word As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSingular(System::String ^ word);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Valor que se va a analizar.</param>
        <summary>Determina si la palabra especificada es singular.</summary>
        <returns>
          <see langword="true" /> si la palabra es singular; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 Tanto el <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> y <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> métodos pueden devolver `true` para la misma palabra. Por ejemplo, ambos métodos devolverán `true` para la palabra "fish".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pluralize">
      <MemberSignature Language="C#" Value="public abstract string Pluralize (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Pluralize(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Pluralize (word As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Pluralize(System::String ^ word);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Palabra que se va a escribir en plural.</param>
        <summary>Devuelve la forma plural de la palabra especificada.</summary>
        <returns>Forma en plural del parámetro de entrada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singularize">
      <MemberSignature Language="C#" Value="public abstract string Singularize (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Singularize(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Singularize (word As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Singularize(System::String ^ word);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Palabra que se va a escribir en singular.</param>
        <summary>Devuelve la forma singular de la palabra especificada.</summary>
        <returns>Forma singular del parámetro de entrada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> clase aplica reglas inglesas para construir las formas singulares y plurales de palabras. Para extender el servicio a otros idiomas, utilice la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> en la <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>