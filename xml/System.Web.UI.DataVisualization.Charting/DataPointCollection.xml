<Type Name="DataPointCollection" FullName="System.Web.UI.DataVisualization.Charting.DataPointCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f8c5ce57c68ff16bb1e195c2c515a9d2540a3f02" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550219" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataPointCollection : System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointCollection extends System.Web.UI.DataVisualization.Charting.ChartElementCollection`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointCollection&#xA;Inherits ChartElementCollection(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointCollection : System::Web::UI::DataVisualization::Charting::ChartElementCollection&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Web.UI.DataVisualization.Charting.DataPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una colección de objetos <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> clase representa una colección de <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos, que a su vez representan los puntos de datos que forman parte de un <xref:System.Web.UI.DataVisualization.Charting.Series> objeto.  
  
 Esta clase de colección se implementa como el <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propiedad de un <xref:System.Web.UI.DataVisualization.Charting.Series> objeto.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> los objetos se pueden anexar o insertar en la colección con sus valores X e Y-valores ya especificados como parámetros. Tenga en cuenta que también se agregan automáticamente cuando una serie se enlaza a un origen de datos mediante la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> método.  
  
 Puntos de datos se trazan en el orden en que aparecen en esta colección solo si la serie a la que pertenece la colección tiene su <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> propiedad establecida en `true` (el valor predeterminado es `false`), o si todos los valores X de todos los puntos de datos son cero. En caso contrario, los puntos de datos se trazan utilizando sus valores X.  
  
 Puntos de datos pueden ser ubicados y manipular, basados en X máximo, mínimo o especificado o los valores mediante el sobrecargado `FindMaxValue`, `FindMinValue` o `FindValue` métodos, respectivamente.  
  
 El [DataPointCollection.Count](<xref:System.Collections.ObjectModel.Collection%601.Count%2A>) propiedad indica el número total de elementos de la colección y se usa habitualmente para encontrar el límite superior de la colección.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Add (params double[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Add(float64[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.Add(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray y As Double()) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Add(... cli::array &lt;double&gt; ^ y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="y">Valor Y.</param>
        <summary>Agrega un nuevo objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> a la colección y establece su valor Y.</summary>
        <returns>El nuevo objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores X e Y especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Double, yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(double xValue, double yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Valor X del punto de datos.</param>
        <param name="yValue">Valor Y del punto de datos.</param>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores X e Y especificados.</summary>
        <returns>Valor <see langword="integer" /> que representa el índice de base cero donde se insertó el elemento en la colección de puntos de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega <xref:System.Web.UI.DataVisualization.Charting.DataPoint> el objeto a la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; el objeto siempre se agrega al final de la colección.  
  
 Use la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY%2A> sobrecarga del método si los puntos de datos requieren más de un valor de Y.  
  
 Si los puntos de datos no es necesario un valor de X, es decir, si va a crear gráficos de dispersión no: usar el <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> método en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Object, ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Valor X del punto de datos.</param>
        <param name="yValue">Uno o más valores separados por comas que representan los valores Y del punto de datos.</param>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores X e Y especificados.</summary>
        <returns>Valor <see langword="integer" /> que representa el índice de base cero donde se insertó el elemento en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega una <xref:System.Web.UI.DataVisualization.Charting.DataPoint> el objeto a la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; el punto de datos siempre se agrega al final de la colección.  
  
 Debe proporcionar al menos uno (1) valor Y, en caso contrario, se producirá una excepción. Este método también comprueba la <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> propiedad de la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> objeto de que estos datos pertenecen a; si hay demasiados valores de Y se especifica, se producirá una excepción.  
  
 En orden para <xref:System.DateTime> formato para tener un efecto, debe ser un valor de un <xref:System.DateTime> objeto.  
  
 Si los puntos de datos no es necesario un valor de X, es decir, si va a crear gráficos de dispersión no: usar el <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> método en su lugar  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores Y especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(double yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="yValue">Valor Y del punto de datos.</param>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> al final de la colección, con el valor Y especificado.</summary>
        <returns>Valor <see langword="integer" /> que representa el índice de base cero donde se insertó el elemento en la colección de puntos de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega una <xref:System.Web.UI.DataVisualization.Charting.DataPoint> el objeto a la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; el punto de datos siempre se agrega al final de la colección.  
  
 Usar la definición de método que permite una matriz de valores Y si los puntos de datos requieren más de un valor de Y.  
  
 Si los puntos de datos necesitan un valor de X: es decir, si va a crear gráficos de dispersión, use uno de los `AddXY` métodos en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Una lista separada por comas de los valores Y del objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> agregado a la colección.</param>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores Y especificados.</summary>
        <returns>Valor <see langword="integer" /> que representa la ubicación en el índice de base cero donde se insertó el elemento en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega una <xref:System.Web.UI.DataVisualization.Charting.DataPoint> el objeto a la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; el punto de datos siempre se agrega al final de la colección.  
  
 Debe proporcionar al menos uno (1) valor Y, en caso contrario, se producirá una excepción. Este método también comprueba la <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> propiedad de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objeto estos datos pertenecen a; si hay demasiados valores de Y se especifica, se producirá una excepción.  
  
 El valor X siempre establecerá en cero (0), lo que en los gráficos de dispersión no. Si desea que los puntos de datos para utilizar un valor de X, llame a uno de los `AddXY` métodos en su lugar.  
  
 En orden para <xref:System.DateTime> formato para tener un efecto, debe ser un valor de un <xref:System.DateTime> objeto.  
  
 Consulte lo siguiente para obtener una lista completa de los tipos válidos de .NET Framework que se puede usar para los parámetros de tipo de objeto:  
  
||||  
|-|-|-|  
|String|DateTime|Doble|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind (System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind(class System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind (dataSource As IEnumerable, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind(System::Collections::IEnumerable ^ dataSource, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Origen de datos.</param>
        <param name="xField">Nombre del campo para los valores X.</param>
        <param name="yFields">Nombres separados por comas de los campos para los valores Y.</param>
        <param name="otherFields">Otras propiedades de punto de datos con reglas de enlace, con el formato: PropiedadPunto=Campo[{Formato}] [,PropiedadPunto=Campo[{Formato}]].  
  
 Por ejemplo: "Tooltip=Precio{C1},Url=NombreSitioWeb".</param>
        <summary>Enlaza los valores X, Y y los valores de propiedades de los puntos de datos, como Tooltip o LabelStyle, al origen de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El origen de datos puede ser el DataReader Ole (SQL), DataView, DataSet, DataTable o DataRow.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Enlaza los valores X e Y de los puntos de datos de la colección a los datos de las primeras columnas del origen de datos especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, params System.Collections.IEnumerable[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, class System.Collections.IEnumerable[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, ParamArray yValues As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, ... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Origen de datos que suministrará los valores X para los puntos de datos.</param>
        <param name="yValues">Una lista separada por comas de los valores Y del objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> agregado a la colección.</param>
        <summary>Enlaza los valores X e Y de los puntos de datos de la colección a los datos de las primeras columnas del origen de datos especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método enlaza todos <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos en un <xref:System.Web.UI.DataVisualization.Charting.Series>, y utiliza los orígenes de datos independientes para X e Y-valores.  
  
 Tenga en cuenta que se utilizará la primera columna disponible en el origen de datos si el enlace de datos a una tabla. Para enlazar a una columna que no sea la primera columna, use la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> método.  
  
 Puede enlazar a varios valores Y proporcionando una lista separada por comas de <xref:System.Collections.Generic.IEnumerable%601> de objetos para el `yValues` parámetro.  
  
 Si los valores no se proporcionan con el origen de datos, o si se proporciona el número incorrecto de valores, se producirá una excepción.  
  
 Si no desea mostrar los gráficos de dispersión-type, en el que se usan los valores X e Y, utilice uno de los `DataBindY` métodos en su lugar.  
  
 La siguiente es una lista de objetos que pueden utilizar como el parámetro de origen de datos:  
  
-   DataView  
  
-   Lectores de datos (SQL, OleDB)  
  
-   Matrices  
  
-   Listas  
  
-   Todos los demás objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, string xField, System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, xField As String, yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, System::String ^ xField, System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">Origen de datos que suministrará los valores X para los puntos de datos.</param>
        <param name="xField">Nombre de la columna que suministrará los valores X para los puntos de datos.</param>
        <param name="yValue">Una lista separada por comas de los valores Y del objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> agregado a la colección.</param>
        <param name="yFields">Lista separada por comas de los nombres de columna que suministrarán los valores Y para los puntos de datos. Tenga en cuenta que se puede incrustar una coma como parte de un nombre de columna si se usa doble coma.</param>
        <summary>Enlaza los valores X e Y de los puntos de datos de la colección a los datos de las columnas especificadas de los orígenes de datos indicados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enlaza el valor de X y los valores de los puntos de datos que las primeras columnas del origen de datos especificado en la colección.  
  
 Puede enlazar a varios valores Y estableciendo el `yFields` parámetro de varios nombres de columna. Separe los nombres de columna mediante comas.  
  
 Si los valores no se proporcionan con el origen de datos, o si se proporciona el número incorrecto de valores, se producirá una excepción.  
  
 Si no desea mostrar los gráficos de dispersión-type, en el que se usan los valores X e Y, utilice uno de los `DataBindY` métodos en su lugar.  
  
 La siguiente es una lista de objetos que pueden utilizar como el parámetro de origen de datos:  
  
-   DataView  
  
-   Lectores de datos (SQL, OleDB)  
  
-   Matrices  
  
-   Listas  
  
-   Todos los demás objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Enlaza los valores Y de los puntos de datos de la colección a los datos de la primera columna de los orígenes de datos especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (params System.Collections.IEnumerable[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (ParamArray yValue As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Uno o más orígenes de datos <see cref="T:System.Collections.Generic.IEnumerable`1" /> separados por comas.</param>
        <summary>Enlaza los valores Y de los puntos de datos de la colección a los datos de la primera columna de los orígenes de datos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método enlaza la Y-valores de los puntos de datos de la colección a la primera columna de los orígenes de datos especificado.  
  
 Para enlazar los valores a una columna de origen de datos que no sea la primera columna disponible, use la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> método.  
  
 Puede enlazar varios valores Y especificando varios orígenes de datos mediante el `yValue` parámetro. Tenga en cuenta que se utilizará la primera columna disponible en cada origen de datos para sucesivas los valores cada punto de datos del. Por ejemplo, la primera columna de la primera <xref:System.Collections.Generic.IEnumerable%601> origen de datos se enlazará al primer valor Y de puntos de datos, la primera columna de la segunda <xref:System.Collections.Generic.IEnumerable%601> enlazarse al segundo valor Y de puntos de datos de origen de datos y así sucesivamente.  
  
 Si los valores no se proporcionan con el origen de datos, o si se proporciona el número incorrecto de valores, se producirá una excepción.  
  
 La siguiente es una lista de objetos que pueden utilizar como el parámetro de origen de datos:  
  
 La siguiente es una lista de objetos que pueden usar como origen de datos:  
  
-   DataView  
  
-   Lectores de datos (SQL, OleDB)  
  
-   Matrices  
  
-   Listas  
  
-   Todos los demás objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="yValue">Un objeto de origen de datos <see cref="T:System.Collections.Generic.IEnumerable`1" /> que proporciona los valores Y.</param>
        <param name="yFields">Campos de origen de datos a los que se van a enlazar puntos de datos. Tenga en cuenta que se puede incrustar una coma como parte de un nombre de columna si se usa doble coma.</param>
        <summary>Enlaza los valores Y de los puntos de datos a los datos de las columnas especificadas del origen de datos indicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método enlaza los valores Y de los puntos de datos de la colección a los campos especificados (s) del origen de datos.  
  
 Para enlazar solo al primer campo de un origen de datos, use la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> método.  
  
 Puede enlazar a varios campos estableciendo el `yFields` parámetro de varios nombres de campo que están separados por comas. Tenga en cuenta que se usará el primer campo para primer valor el punto de datos del Y, el segundo campo con nombre se usará para segundo valor el punto de datos del Y y así sucesivamente.  
  
 Si los valores no se proporcionan con el origen de datos o proceden de un número incorrecto de valores, se producirá una excepción.  
  
 La siguiente es una lista de objetos que pueden usar como origen de datos:  
  
-   DataView  
  
-   Lectores de datos (SQL, OleDB)  
  
-   Matrices  
  
-   Listas  
  
-   Todos los demás objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Buscar todos los puntos de datos que son iguales al valor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllByValue (valueToFind As Double) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valor de punto de datos que se va a buscar.</param>
        <summary>Buscar todos los puntos de datos que son iguales al valor especificado.</summary>
        <returns>Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa el enumerador de los puntos de datos coincidentes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valor de punto de datos que se va a buscar.</param>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <summary>Busca todos los puntos de datos que son iguales al valor especificado.</summary>
        <returns>Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa el enumerador de los puntos de datos coincidentes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String, startIndex As Integer) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valor de punto de datos que se va a buscar.</param>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <param name="startIndex">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</param>
        <summary>Busca todos los puntos de datos que son iguales que el valor especificado, empezando en la ubicación de índice especificada.</summary>
        <returns>Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa el enumerador de los puntos de datos coincidentes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Busca el primer punto de datos que es igual al valor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valor de punto de datos que se va a buscar.</param>
        <summary>Busca el primer punto de datos que es igual al valor especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que coincide con el valor especificado, o <see langword="null" /> si no hay coincidencias.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valor de punto de datos que se va a buscar.</param>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <summary>Busca el primer punto de datos que es igual al valor especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que coincide con el valor especificado, o <see langword="null" /> si no hay coincidencias.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valor de punto de datos que se va a buscar.</param>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <param name="startIndex">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</param>
        <summary>Busca el primer punto de datos que es igual que el valor especificado, empezando en la ubicación de índice especificada.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que coincide con el valor especificado, o <see langword="null" /> si no hay coincidencias.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMaxByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Busca el punto de datos que tiene el valor máximo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Busca el punto de datos que tiene el valor máximo.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que tiene el valor máximo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <summary>Busca el valor de punto de datos que tiene el valor máximo.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que tiene el valor máximo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <param name="startIndex">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</param>
        <summary>Busca el punto de datos que tiene el valor máximo, empezando en la ubicación de índice especificada.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que tiene el valor máximo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMinByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Busca el punto de datos que tiene el valor mínimo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Busca el punto de datos que tiene el valor mínimo.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que tiene el valor mínimo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <summary>Busca el punto de datos que tiene el valor mínimo.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que tiene el valor mínimo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">Valor de punto de datos que se va a usar (X, Y1, Y2...).</param>
        <param name="startIndex">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</param>
        <summary>Busca el punto de datos que tiene el valor mínimo, empezando en la ubicación de índice especificada.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que tiene el valor mínimo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXY">
      <MemberSignature Language="C#" Value="public void InsertXY (int index, object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertXY(int32 index, object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXY (index As Integer, xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertXY(int index, System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">Índice después del que se insertará el punto de datos.</param>
        <param name="xValue">Valor X del punto de datos.</param>
        <param name="yValue">Lista separada por comas de valores Y del punto de datos.</param>
        <summary>Inserta un punto de datos con el valor X especificado y uno o más valores Y indicados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertY">
      <MemberSignature Language="C#" Value="public void InsertY (int index, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertY(int32 index, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertY (index As Integer, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertY(int index, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">Índice después del que se insertará el punto de datos.</param>
        <param name="yValue">Lista separada por comas de valores Y del punto de datos.</param>
        <summary>Inserta un punto de datos con uno o más valores Y especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>