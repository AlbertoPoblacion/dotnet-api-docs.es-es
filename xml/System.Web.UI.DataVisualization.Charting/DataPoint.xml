<Type Name="DataPoint" FullName="System.Web.UI.DataVisualization.Charting.DataPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d48bb307a692db839a0a8185c3af0a6c637aec9c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37748198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataPoint : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPoint extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPoint&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPoint : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type DataPoint = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("YValues")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.DataPointConverter, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un punto de datos almacenado en la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.DataVisualization.Charting.DataPoint> clase almacena propiedades asociadas con los datos, así como datos de valores de punto. Por ejemplo, un punto de datos tiene un valor, pero también tiene una propiedad de color, propiedad de imagen de fondo, propiedad de degradado de fondo y así sucesivamente. Propiedades de punto para obtener más información acerca de los datos, vea el <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties> tema de información general sobre la clase.  
  
 Cada punto de datos consta de un valor X y uno o más valores Y. El valor X puede ser cero, o puede configurar esto explícitamente.  
  
 Un solo valor Y por punto se requiere para todos los tipos de gráfico excepto los gráficos de burbujas, vela japonesa y las existencias. Estos tipos de gráficos requieren más de un valor Y porque un punto de datos consta de varios valores. Por ejemplo, para representar una columna de gráfico de cotizaciones, son necesarios cuatro valores: valores alta, baja, apertura y cierre.  
  
 Datos que se pueden agregar en tiempo de diseño o tiempo; de ejecución También puede usar el enlace de datos en tiempo de ejecución.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor puede utilizarse para crear e inicializar una nueva instancia de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> clase.  
  
 Sin embargo, se recomienda encarecidamente que en su lugar, agregue puntos de datos en ejecución tiempo, usar el <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propiedad de colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(System::Web::UI::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : System.Web.UI.DataVisualization.Charting.Series -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint series" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> al que pertenece el punto de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> y establece la clase <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> a la que pertenece el punto de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor puede utilizarse para crear e inicializar una nueva instancia de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> clase.  
  
 Sin embargo, se recomienda encarecidamente que en su lugar, agregue puntos de datos en ejecución tiempo, usar el <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propiedad de colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * double -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Valor X del punto de datos.</param>
        <param name="yValue">Valor Y del punto de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> con los valores X e Y especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor puede utilizarse para crear e inicializar una nueva instancia de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> clase.  
  
 Sin embargo, se recomienda encarecidamente que en su lugar, agregue puntos de datos en ejecución tiempo, usar el <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propiedad de colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, cli::array &lt;double&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * double[] -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="xValue">Valor X.</param>
        <param name="yValues">Matriz de valores Y.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> con el valor X especificado y una matriz de valores Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor puede utilizarse para crear e inicializar una nueva instancia de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> clase.  
  
 Sin embargo, se recomienda encarecidamente que en su lugar, agregue puntos de datos en ejecución tiempo, usar el <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propiedad de colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, string yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, string yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, System::String ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">Valor X del punto de datos.</param>
        <param name="yValues">Un valor de tipo <see langword="string" /> de valores Y separados por comas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> con los valores X e Y especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor puede utilizarse para crear e inicializar una nueva instancia de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> clase.  
  
 Sin embargo, se recomienda encarecidamente que en su lugar, agregue puntos de datos en ejecución tiempo, usar el <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propiedad de colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPoint.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una copia exacta del punto de datos.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> clonado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.DataVisualization.Charting.DataPoint.Clone%2A> método para obtener una copia exacta del punto de datos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueByName">
      <MemberSignature Language="C#" Value="public double GetValueByName (string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetValueByName(string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueByName (valueName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetValueByName(System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="member this.GetValueByName : string -&gt; double" Usage="dataPoint.GetValueByName valueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueName">Nombres de valor del punto. X, Y, Y2...</param>
        <summary>Devuelve un punto de datos especificado por su nombre. Se trata de una función auxiliar.</summary>
        <returns>Valor <see langword="string" /> que representa un punto de datos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una marca que indica si un punto de datos está marcado como vacío.</summary>
        <value>Es <see langword="true" /> si el punto está marcado como vacío; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en `true` para marcar un punto de datos como un punto vacío.  
  
 Como alternativa, uno de los `InsertEmptyPoints` métodos en el <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> clase puede usarse para marcar los datos que faltan como puntos vacíos.  
  
 El <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> propiedad determina los puntos vacíos en cómo se muestran.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del punto de datos.</summary>
        <value>Valor de tipo <see langword="string" /> que representa el nombre del punto de datos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueXY">
      <MemberSignature Language="C#" Value="public void SetValueXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueXY (xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueXY : obj * obj[] -&gt; unit" Usage="dataPoint.SetValueXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Valor X del punto de datos.</param>
        <param name="yValue">Lista de valores Y del punto de datos.</param>
        <summary>Establece el valor X y uno o más valores Y del punto de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY%2A> método para establecer los valores de un punto de datos en tiempo de ejecución.  
  
 Tenga en cuenta que si establece el valor X en un valor distinto de cero (0), se generará un gráfico de dispersión. Para obtener más información, vea la sección Comentarios de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> propiedad.  
  
 Consulte la tabla siguiente para obtener una lista completa de los tipos de .NET Framework válidos que puede usarse para el parámetro de tipo de objeto.  
  
||||  
|-|-|-|  
|String|DateTime|Doble|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueY">
      <MemberSignature Language="C#" Value="public void SetValueY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueY (ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueY : obj[] -&gt; unit" Usage="dataPoint.SetValueY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Valores Y de un objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> de la colección. Tiene formato de uno o más valores separados por comas.</param>
        <summary>Establece los valores Y de un único punto de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY%2A> propiedad se usa para establecer la Y-elija valores de los datos en tiempo de ejecución.  
  
 Falta un solo valor Y por punto para todos los tipos de gráfico excepto los gráficos de cotizaciones, de vela japonesa y de burbujas. Estos tipos de gráficos requieren más de un valor Y porque un punto de datos consta de varios valores. Por ejemplo, para representar una columna de gráfico de cotizaciones, son necesarios cuatro valores: valores alta, baja, apertura y cierre.  
  
 Esta propiedad devuelve una matriz de `double` valores cuando se usa para recuperar varios valores Y.  
  
> [!IMPORTANT]
>  El <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> propiedad determina el número máximo de valores Y puntos de todos los datos de un <xref:System.Web.UI.DataVisualization.Charting.Series> puede tener. Si especifica el número permitido de valores Y más, se producirá una excepción.  
>   
>  Consulte la tabla siguiente para obtener una lista completa de los tipos de .NET Framework válidos que puede usarse para el parámetro de tipo de objeto:  
  
||||  
|-|-|-|  
|String|DateTime|Doble|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValue">
      <MemberSignature Language="C#" Value="public double XValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.XValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double XValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.XValue : double with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.XValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Double), "0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.DataPointValueConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor X de un punto de datos.</summary>
        <value>Valor <see langword="double" /> que representa el valor X de un punto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos los tipos de gráficos pueden mostrarse como gráficos de dispersión o como trazados no de dispersión, porque se pueden establecer los valores X e Y valores. Establecer un valor X se producirá un gráfico de dispersión, mientras que si no establece esta propiedad, que es equivalente a establecerlo en cero: dará como resultado una dispersión. Por ejemplo, para dibujar un tipo de gráfico de punto, puede agregar puntos de datos que tienen valores X de cero. Para mostrar un gráfico de dispersión tradicional, agregue puntos de datos que tienen valores X distinto de cero.  
  
 Los valores X de los puntos de datos no tienen que establecerse. Si no están establecidos, los puntos de datos se trazan secuencialmente, utilizando sus valores de índice desde el <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValues">
      <MemberSignature Language="C#" Value="public double[] YValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] YValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.YValues" />
      <MemberSignature Language="VB.NET" Value="Public Property YValues As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;double&gt; ^ YValues { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValues : double[] with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.YValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Drawing.Design.UITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.DoubleArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los valores Y de un punto de datos.</summary>
        <value>Matriz de valores <see langword="double" /> que representan los valores Y de un punto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataVisualization.Charting.DataPoint.YValues%2A> propiedad se usa para establecer los valores Y de puntos de datos.  
  
 Un solo valor Y por punto se requiere para todos los tipos de gráfico excepto los gráficos de burbujas, vela japonesa y las existencias. Estos tipos de gráficos requieren más de un valor Y porque un punto de datos consta de varios valores. Por ejemplo, para representar una columna de gráfico de cotizaciones, son necesarios cuatro valores: valores alta, baja, apertura y cierre.  
  
 El <xref:System.Web.UI.DataVisualization.Charting.DataPoint.YValues%2A> propiedad devuelve una matriz de `double` valores cuando se usa para recuperar los valores Y.  
  
 **Importante** el <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> propiedad determina el número máximo de valores Y puntos de todos los datos de un <xref:System.Web.UI.DataVisualization.Charting.Series> puede tener. Si especifica el número permitido de valores Y más, se producirá una excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>