<Namespace Name="System.ComponentModel.Design.Serialization">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a00e1219743debba9734b13b4ea4797337e29dbe" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30725949" />
  </Metadata>
  <Docs>
    <summary>El espacio de nombres <see cref="N:System.ComponentModel.Design.Serialization" /> proporciona los tipos que admiten personalización y control de la serialización en tiempo de diseño.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases en este espacio de nombres pueden dividirse en las siguientes categorías:  
  
-   Atributos de serialización que puede utilizarse para indicar el serializador que se usará para un tipo específico: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>, para indicar el serializador que se usará para un tipo determinado; y <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>, para indicar el serializador base que se usará para el diseñador raíz.  
  
-   Las clases que puede implementar un diseñador para personalizar la serialización: <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>, para cargar un documento del diseñador desde un estado serializado; y <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, para cargar un documento del diseñador cuando intervienen componentes externos y carga asincrónica.  
  
-   Interfaces que puede utilizar un diseñador para administrar el proceso de serialización: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>para registrar o recuperar serializadores personalizados; <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>, para disponer de un serializador para un <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>; y <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>, que proporciona métodos para invocar la serialización y deserialización.  
  
-   Una interfaz que se puede implementar para personalizar el proceso de carga de un diseñador: <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.  
  
-   Una interfaz que puede usarse para optimizar la recarga de un diseñador: <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>.  
  
-   Otras clases auxiliares: <xref:System.ComponentModel.Design.Serialization.INameCreationService>, una interfaz para generar nombres únicos para objetos; <xref:System.ComponentModel.Design.Serialization.ContextStack>, una estructura de datos útil para compartir información de contexto de serialización con los serializadores; y <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>, un objeto que se puede describir un objeto serializable.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>