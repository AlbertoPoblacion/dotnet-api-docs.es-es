<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DispatcherTimer.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53bc5bd6e538ac42e034d4b00fcacb3cd0db5d822.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bc5bd6e538ac42e034d4b00fcacb3cd0db5d822</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>A timer that is integrated into the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> queue which is processed at a specified interval of time and at a specified priority.</source>
          <target state="translated">Temporizador integrado en la cola de <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> que se procesa en un intervalo de tiempo especificado con una prioridad especificada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> is reevaluated at the top of every <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> loop.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> se vuelve a evaluar en la parte superior de cada <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> bucle.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
          <target state="translated">No se garantiza que los temporizadores ejecutar exactamente cuándo se produce el intervalo de tiempo, pero se garantiza que no se ejecuten antes de que se produce el intervalo de tiempo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>This is because <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.</source>
          <target state="translated">Esto es porque <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operaciones se colocan en la <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> cola como otras operaciones.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operación se ejecuta depende de los otros trabajos en la cola y sus prioridades.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>If a <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> is used in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application, it is worth noting that the <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> runs on a different thread then the <ph id="ph4">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> se utiliza en una <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> aplicación, merece la pena mencionar que los <ph id="ph3">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> se ejecuta en un subproceso diferente la <ph id="ph4">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> subproceso.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>In order to access objects on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread, it is necessary to post the operation onto the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread using <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.</source>
          <target state="translated">Para tener acceso a objetos en el <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> subprocesos, es necesario exponer la operación en el <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> de la <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> subprocesos mediante <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> o <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>Reasons for using a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> opposed to a <ph id="ph2">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> are that the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the same thread as the <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> and a <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherPriority&gt;</ph> can be set on the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">Motivos para utilizar un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> frente a un <ph id="ph2">&lt;xref:System.Timers.Timer?displayProperty=nameWithType&gt;</ph> son que el <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> se ejecuta en el mismo subproceso que el <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> y un <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherPriority&gt;</ph> puede establecerse en el <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> will keep an object alive whenever the object's methods are bound to the timer.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> mantendrá un objeto activo cada vez que los métodos del objeto se enlazan al temporizador.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> that updates the contents of a <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> and calls the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> method on the <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> que actualiza el contenido de un <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> y llama a la <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> método en el <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> objeto denominado <ph id="ph2">`dispatcherTimer`</ph> se crea.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event of <ph id="ph3">`dispatcherTimer`</ph>.</source>
          <target state="translated">El controlador de eventos <ph id="ph1">`dispatcherTimer_Tick`</ph> se agrega a la <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> eventos de <ph id="ph3">`dispatcherTimer`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> object, and the timer is started.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> está establecido en 1 segundo mediante una <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> objeto y el temporizador se inició.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event handler updates a <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> that displays the current second, and it calls <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> actualizaciones del controlador de eventos un <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> que muestra actual en segundo lugar, y llama <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> en el <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherTimer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread at <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherPriority.Background&gt;</ph> priority.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> se ejecuta en el <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> del subproceso actual en <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherPriority.Background&gt;</ph> prioridad.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor">
          <source>To specify a different <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para especificar otro <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use el constructor siguiente: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">Prioridad con la que se invoca el temporizador.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class which processes timer events at the specified priority.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> que procesa los eventos del temporizador con la prioridad especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> se ejecuta en el <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> del subproceso actual.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
          <source>To specify a different <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;</ph>.</source>
          <target state="translated">Para especificar otro <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use el constructor siguiente: <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">Prioridad con la que se invoca el temporizador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source>The dispatcher the timer is associated with.</source>
          <target state="translated">Distribuidor al que está asociado el temporizador.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class which runs on the specified <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> at the specified priority.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> que se ejecuta en el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificado con la prioridad especificada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
          <source><ph id="ph1">&lt;paramref name="dispatcher" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dispatcher" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The period of time between ticks.</source>
          <target state="translated">Período de tiempo entre los pasos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">Prioridad con la que se invoca el temporizador.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The event handler to call when the <ph id="ph1">&lt;see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /&gt;</ph> event occurs.</source>
          <target state="translated">Controlador de eventos al que se llama cuando se produce el evento <ph id="ph1">&lt;see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>The dispatcher the timer is associated with.</source>
          <target state="translated">Distribuidor al que está asociado el temporizador.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> class which uses the specified time interval, priority, event handler, and <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph> que usa el intervalo de tiempo, prioridad, controlador de eventos y <ph id="ph2">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
          <source><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> es menor que 0 o mayor que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> asociado a <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>The dispatcher.</source>
          <target state="translated">El distribuidor.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A&gt;</ph> property is determined at the creation of the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A&gt;</ph> propiedad se determina en la creación de la <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> property is set to the current <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> at the time of creation unless a different <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> is specified.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> propiedad está establecida en actual <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> en el momento de creación a menos que otro <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>Gets or sets the period of time between timer ticks.</source>
          <target state="translated">Obtiene o establece el período de tiempo entre los pasos del temporizador.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The period of time between ticks.</source>
          <target state="translated">Período de tiempo entre los pasos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The default is 00:00:00.</source>
          <target state="translated">El valor predeterminado es 00:00:00.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
          <target state="translated">No se garantiza que los temporizadores ejecutar exactamente cuándo se produce el intervalo de tiempo, pero se garantiza que no se ejecuten antes de que se produce el intervalo de tiempo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>This is because <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.</source>
          <target state="translated">Esto es porque <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operaciones se colocan en la <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> cola como otras operaciones.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operación se ejecuta depende de los otros trabajos en la cola y sus prioridades.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>A new <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">Un nuevo <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> objeto denominado <ph id="ph2">`dispatcherTimer`</ph> se crea.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event.</source>
          <target state="translated">El controlador de eventos <ph id="ph1">`dispatcherTimer_Tick`</ph> se agrega a la <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> está establecido en 1 segundo mediante una <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Interval">
          <source><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> milliseconds.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="interval" /&gt;</ph> es menor que 0 o mayor que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> milisegundos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>Gets or sets a value that indicates whether the timer is running.</source>
          <target state="translated">Obtiene o establece un valor que indica si el temporizador está en ejecución.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the timer is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el temporizador está habilitado; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event to be raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> debe establecerse en <ph id="ph2">`true`</ph> para el <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>A new <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">Un nuevo <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> objeto denominado <ph id="ph2">`dispatcherTimer`</ph> se crea.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event.</source>
          <target state="translated">El controlador de eventos <ph id="ph1">`dispatcherTimer_Tick`</ph> se agrega a la <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> está establecido en 1 segundo mediante una <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>Starts the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</source>
          <target state="translated">Inicia <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> when the timer is started stops the timer.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph2">`false`</ph> cuando se inicia el temporizador detiene el temporizador.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the timer is stopped starts the timer.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph2">`true`</ph> cuando se detiene el temporizador inicia el temporizador.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> resets the timer <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> Restablece el temporizador de <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>A new <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object named <ph id="ph2">`dispatcherTimer`</ph> is created.</source>
          <target state="translated">Un nuevo <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> objeto denominado <ph id="ph2">`dispatcherTimer`</ph> se crea.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>The event handler <ph id="ph1">`dispatcherTimer_Tick`</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event.</source>
          <target state="translated">El controlador de eventos <ph id="ph1">`dispatcherTimer_Tick`</ph> se agrega a la <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Start">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> is set to 1 second using a <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph> está establecido en 1 segundo mediante una <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Stops the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</source>
          <target state="translated">Detiene <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherTimer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> when the timer is started stops the timer.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph2">`false`</ph> cuando se inicia el temporizador detiene el temporizador.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the timer is stopped starts the timer.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph2">`true`</ph> cuando se detiene el temporizador inicia el temporizador.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherTimer.Stop">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> a <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherTimer.Tag">
          <source>Gets or sets a user-defined data object.</source>
          <target state="translated">Obtiene o establece un objeto de datos definido por el usuario.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Tag">
          <source>The user-defined data.</source>
          <target state="translated">Los datos definidos por el usuario.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherTimer.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="E:System.Windows.Threading.DispatcherTimer.Tick">
          <source>Occurs when the timer interval has elapsed.</source>
          <target state="translated">Se produce cuando ha transcurrido el intervalo del temporizador.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Threading.DispatcherTimer.Tick">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event handler.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> controlador de eventos.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Threading.DispatcherTimer.Tick">
          <source>The event handler updates a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> that displays the current second, and it calls <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">Las actualizaciones de controlador de eventos un <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> que muestra actual en segundo lugar, y llama <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> en el <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>