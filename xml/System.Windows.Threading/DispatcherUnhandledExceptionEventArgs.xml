<Type Name="DispatcherUnhandledExceptionEventArgs" FullName="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e3731e2b85a3e96fe4b194f67c4f1125acf6e22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30666659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DispatcherUnhandledExceptionEventArgs : System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherUnhandledExceptionEventArgs extends System.Windows.Threading.DispatcherEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherUnhandledExceptionEventArgs&#xA;Inherits DispatcherEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherUnhandledExceptionEventArgs sealed : System::Windows::Threading::DispatcherEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Threading.Dispatcher.UnhandledException> evento tiene lugar al código que se ejecuta por medio de la <xref:System.Windows.Threading.Dispatcher> produce una excepción que no se controla.  
  
 El <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> eventos proporcionan un medio para que no genere la <xref:System.Windows.Threading.Dispatcher.UnhandledException> eventos.  El <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> evento se desencadena en primer lugar y si <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> en el <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> está establecido en `false`, el <xref:System.Windows.Threading.Dispatcher.UnhandledException> no se producen eventos.  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la excepción que se provocó al ejecutar el código por medio del distribuidor.</summary>
        <value>Excepción.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si se ha controlado el evento de la excepción.</summary>
        <value>
          <see langword="true" /> si se controló la excepción; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>