<Type Name="ClaimsIdentity" FullName="System.Security.Claims.ClaimsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf02cac3c718c16f8e4789b7d72b3f150b5bccc0" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67247247" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsIdentity&#xA;Implements IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsIdentity : System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClaimsIdentity = class&#xA;    interface IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una identidad basada en notificaciones.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
 La <xref:System.Security.Claims.ClaimsIdentity> clase es una implementación concreta de una identidad basada en notificaciones; es decir, una identidad se describe mediante un conjunto de notificaciones. Una notificación es una instrucción de una entidad realizada por un emisor que describe una propiedad, derecha, o algunos otros de calidad de la entidad. Dicha entidad se dice que el sujeto de la notificación. Una notificación se representa mediante el <xref:System.Security.Claims.Claim> clase. Las notificaciones contenidas en un <xref:System.Security.Claims.ClaimsIdentity> describir la entidad que representa la identidad correspondiente y puede usarse para tomar decisiones de autorización y autenticación. Un modelo de acceso basado en notificaciones tiene muchas ventajas respecto a los modelos de acceso más tradicionales que se basan exclusivamente en funciones. Por ejemplo, notificaciones pueden proporcionar toda la información más completa acerca de la identidad que representan y se pueden evaluar para la autenticación o autorización de una forma mucho más específica.  
  
 A partir de .NET Framework 4.5, Windows Identity Foundation (WIF) y la identidad basada en notificaciones se han totalmente integrados en .NET Framework. Esto significa que muchas clases que representan una identidad en .NET Framework ahora se derivan de <xref:System.Security.Claims.ClaimsIdentity> y describir sus propiedades a través de una colección de notificaciones. Esto es diferente de las versiones anteriores de .NET Framework, en el que estas clases implementan la <xref:System.Security.Principal.IIdentity> interfaz directamente. La colección de notificaciones que describen la identidad puede obtenerse a través del <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> propiedad. La <xref:System.Security.Claims.ClaimsIdentity> clase proporciona varios métodos para buscar y modificar las notificaciones y es totalmente compatible con las consultas de language-integrada (LINQ). En el código de aplicación, <xref:System.Security.Claims.ClaimsIdentity> objetos normalmente se accede mediante <xref:System.Security.Claims.ClaimsPrincipal> objetos; por ejemplo, la entidad de seguridad devuelto por <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  El <xref:System.Security.Claims.ClaimsPrincipal> clase tiene un <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> también la propiedad. En la mayoría de los casos debe tener acceso a las notificaciones de usuario a través de la <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> colección en lugar de a través del <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección. Necesita tener acceso a las notificaciones de un individuo <xref:System.Security.Claims.ClaimsIdentity> sólo en los casos donde la entidad de seguridad contiene más de un <xref:System.Security.Claims.ClaimsIdentity> y deberá evaluar o modificar una identidad específica.  
  
> [!IMPORTANT]
>  Para agregar o quitar notificaciones desde el <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección, un autor de llamada debe tener plena confianza.  
  
 En el modelo basado en notificaciones, la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad y el <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> método se implementa mediante la evaluación de las notificaciones contenidas por una identidad. Las implementaciones base en el modelo basado en notificaciones proporcionadas por el <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType> propiedad y el <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType> método. El <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> propiedades permiten especificar un tipo de notificación que se debe usar para evaluar las notificaciones contenidas por la identidad al realizar estas operaciones.  
  
 Escenarios de delegación se admiten a través de la <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> y <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propiedades.

          ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsPrincipal" />
    <altmember cref="T:System.Security.Principal.GenericIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Web.Security.FormsIdentity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> con una colección de reclamaciones vacía.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Una colección vacía.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity claims" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Notificaciones con las que se va a rellenar la identidad de notificación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> usando una colección enumerada de objetos <see cref="T:System.Security.Claims.Claim" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Inicializar desde el `claims` parámetro.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.IO.BinaryReader" /> que apunta a un <see cref="T:System.Security.Claims.ClaimsIdentity" />.</param>
        <summary>Inicializa una instancia de <see cref="T:System.Security.Claims.ClaimsIdentity" /> con <see cref="T:System.IO.BinaryReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Normalmente, el lector se construye a partir los bytes devueltos desde <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Runtime.Serialization.SerializationInfo -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity info" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Datos serializados.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> a partir de una secuencia serializada creada mediante <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
        <remarks></remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
        <exception cref="T:System.ArgumentNullException"><paramref name="info" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsIdentity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Security::Claims::ClaimsIdentity ^ other);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Claims.ClaimsIdentity -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Claims.ClaimsIdentity" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other">Colección <see cref="T:System.Security.Claims.ClaimsIdentity" /> que se va a copiar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> a partir de una instancia <see cref="T:System.Security.Claims.ClaimsIdentity" /> existente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la tabla siguiente se muestra las asignaciones de valor de propiedad para una instancia de la <xref:System.Security.Claims.ClaimsIdentity> clase desde el <xref:System.Security.Claims.ClaimsIdentity> proporcionadas al constructor.  
  
| Propiedad. | Valor |
| -------- | ----- |
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si el valor de la `other.Actor` propiedad no es `null`, `other.Actor` <xref:System.Security.Claims.ClaimsIdentity> es clonar y asignado; en caso contrario, `null`.|
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valor de propiedad `other.AuthenticationType`.|
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Valor de propiedad `other.BootstrapContext`.|
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|El `List<Claim>` de notificaciones, si los hay, en el `other.Claims` propiedad.|
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Valor de propiedad `other.Label`.|
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valor de propiedad `other.NameClaimType`.|
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valor de propiedad `other.RoleClaimType`.|
|<xref:System.Security.Claims.ClaimsIdentity.CustomSerializationData%2A>|Si `other.CustomSerializationData` no `null`, `other.CustomSerializationData` es clonar y asignado; en caso contrario, `null`.|

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="other" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Identidad en la que se basará la nueva identidad de notificaciones.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> usando el tipo de nombre y autenticación a partir del <see cref="T:System.Security.Principal.IIdentity" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.Actor` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|El valor de la `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) se utiliza la propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.BootStrapContext` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, las notificaciones de `identity` se agregan a la nueva instancia; en caso contrario, una colección vacía.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.Label` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Si `identity` no es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, no es `null`y tiene un <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad que no es `null`; una notificación de nombre se agrega a la nueva instancia utilizando el valor de la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad. **Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.NameClaimType` propiedad se utiliza; en caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> se utiliza.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.RoleClaimType` propiedad se utiliza; en caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> se utiliza.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity authenticationType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Tipo de autenticación usado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> con una colección de notificaciones vacía y el tipo de autenticación especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valor del parámetro `authenticationType`. Si el `authenticationType` parámetro es `null` o una cadena vacía, la propiedad está establecida en `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Colección vacía.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (claims, authenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">Notificaciones con las que se va a rellenar la identidad de notificación.</param>
        <param name="authenticationType">Tipo de autenticación usado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> con las reclamaciones y tipo de autenticación especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valor del parámetro `authenticationType`. Si el `authenticationType` parámetro es `null` o una cadena vacía, la propiedad está establecida en `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Inicializar desde el `claims` parámetro.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Datos serializados.</param>
        <param name="context">Contexto para la serialización.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> a partir de una secuencia serializada creada mediante <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="info" /> es **NULL**.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity * seq&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (identity, claims)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="identity">Identidad en la que se basará la nueva identidad de notificaciones.</param>
        <param name="claims">Notificaciones con las que se va a rellenar la identidad de notificación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> usando las reclamaciones especificadas y el <see cref="T:System.Security.Principal.IIdentity" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.Actor` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Parámetro `authenticationType`. Si el `authenticationType` parámetro es `null` o una cadena vacía, el valor de la `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) se utiliza la propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.BootStrapContext` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Inicializar desde el `claims` parámetro. Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, las notificaciones de `identity` se agregan a la nueva instancia antes de los especificados por el `claims` parámetro.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.Label` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Si `identity` no es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, no es `null`y tiene un <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad que no es `null`; una notificación de nombre se agrega a la nueva instancia utilizando el valor de la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad. **Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.NameClaimType` propiedad se utiliza; en caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> se utiliza.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.RoleClaimType` propiedad se utiliza; en caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> se utiliza.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Tipo de autenticación usado.</param>
        <param name="nameType">El tipo de notificación que se usa para las notificaciones de nombre.</param>
        <param name="roleType">El tipo de notificación que se usa para las notificaciones de rol.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> con el tipo de autenticación, tipo de reclamación de nombre y tipo de reclamación de rol especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valor del parámetro `authenticationType`. Si el `authenticationType` parámetro es `null` o una cadena vacía, la propiedad está establecida en `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Colección vacía.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valor del parámetro `nameType`. Si el `nameType` parámetro es null o una cadena vacía, la propiedad se establece en <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valor del parámetro `roleType`. Si el `roleType` parámetro es null o una cadena vacía, la propiedad se establece en <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; * string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (claims, authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">Notificaciones con las que se va a rellenar la identidad de notificación.</param>
        <param name="authenticationType">Tipo de autenticación usado.</param>
        <param name="nameType">El tipo de notificación que se usa para las notificaciones de nombre.</param>
        <param name="roleType">El tipo de notificación que se usa para las notificaciones de rol.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> donde se especifican las notificaciones, el tipo de autenticación, el tipo de notificación de nombre y el tipo de notificación de rol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valor del parámetro `authenticationType`. Si el `authenticationType` parámetro es `null` o una cadena vacía, la propiedad está establecida en `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Inicializar desde el `claims` parámetro.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valor del parámetro `nameType`. Sin embargo, si la `nameType` parámetro es `null` o una cadena vacía, la propiedad está establecida en <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valor del parámetro `roleClaimType`. Sin embargo, si la `roleClaimType` parámetro es `null` o una cadena vacía, la propiedad está establecida en <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity * seq&lt;System.Security.Claims.Claim&gt; * string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (identity, claims, authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Identidad en la que se basará la nueva identidad de notificaciones.</param>
        <param name="claims">Notificaciones con las que se va a rellenar la nueva identidad de notificación.</param>
        <param name="authenticationType">Tipo de autenticación usado.</param>
        <param name="nameType">El tipo de notificación que se usa para las notificaciones de nombre.</param>
        <param name="roleType">El tipo de notificación que se usa para las notificaciones de rol.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsIdentity" /> a partir de la <see cref="T:System.Security.Principal.IIdentity" /> especificada y usa las notificaciones, tipo de autenticación, tipo de notificación de nombre y tipo de notificación de rol especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.Actor` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Parámetro `authenticationType`. Si el `authenticationType` parámetro es `null` o una cadena vacía, el valor de la `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) se utiliza la propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.BootStrapContext` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Inicializar desde el `claims` parámetro. Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, las notificaciones de `identity` se agregan a la nueva instancia antes de los especificados por el `claims` parámetro.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propiedad se devuelve en función del valor de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Si `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.Label` propiedad; en caso contrario, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Si `identity` no es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, no es `null`y tiene un <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad que no es `null`; una notificación de nombre se agrega a la nueva instancia utilizando el valor de la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propiedad. **Nota:**  Cuando se tiene acceso, el valor de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad se devuelve en función de la <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> y <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valor del parámetro `nameType`. Sin embargo, si el valor de la `nameType` parámetro es `null` o una cadena vacía y `identity` es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.NameClaimType` propiedad se utiliza; en caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> se utiliza.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valor del parámetro `roleClaimType`. Sin embargo, si el valor de la `roleClaimType` parámetro es `null` o una cadena vacía y la identidad es asignable desde <xref:System.Security.Claims.ClaimsIdentity>, el valor de la `identity.RoleClaimType` propiedad se utiliza; en caso contrario, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> se utiliza.|

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="identity" /> es un elemento <see cref="T:System.Security.Claims.ClaimsIdentity" /> y <see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /> genera una referencia circular de vuelta a <see langword="this" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsIdentity Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity Actor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsIdentity ^ Actor { System::Security::Claims::ClaimsIdentity ^ get(); void set(System::Security::Claims::ClaimsIdentity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : System.Security.Claims.ClaimsIdentity with get, set" Usage="System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la identidad del usuario que llama al que se han concedido derechos de delegación.</summary>
        <value>La parte que llama a la que se le concedieron derechos de delegación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Una aplicación puede tener acceso a la cadena de delegación que dieron lugar a la llamada actual, mediante el examen de forma recursiva el <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> propiedad. El token en cuyo nombre se va a delegar la llamada puede obtenerse a través del <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propiedad.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se intenta establecer la propiedad en la instancia actual.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddClaim">
      <MemberSignature Language="C#" Value="public virtual void AddClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member AddClaim : System.Security.Claims.Claim -&gt; unit&#xA;override this.AddClaim : System.Security.Claims.Claim -&gt; unit" Usage="claimsIdentity.AddClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Reclamación que se va a agregar.</param>
        <summary>Agrega una sola reclamación a esta identidad de reclamaciones.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Se examina la notificación y si el asunto es distinto a esta identidad basada en notificaciones, la <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> método se invoca con esta identidad de notificaciones como parámetro para crear una nueva notificación con el asunto correcto.  
  
 Este método tiene el `SecurityCritical` atributo aplicado al control de las entidades que pueden agregar notificaciones a la identidad. Aún más abajo la canalización, las decisiones de autorización se realizan en función de las notificaciones que se encuentran en el <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claim" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddClaims">
      <MemberSignature Language="C#" Value="public virtual void AddClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddClaims (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaims(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="abstract member AddClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; unit&#xA;override this.AddClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; unit" Usage="claimsIdentity.AddClaims claims" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Reclamaciones que se van a agregar.</param>
        <summary>Agrega una lista de reclamaciones a esta identidad de reclamaciones.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Se examina cada notificación y si el asunto es distinto a esta identidad basada en notificaciones, la <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> método se invoca con esta identidad de notificaciones como parámetro para crear una nueva notificación con el asunto correcto.  
  
 Este método tiene el `SecurityCritical` atributo aplicado al control de las entidades que pueden agregar notificaciones a la identidad. Aún más abajo la canalización, las decisiones de autorización se realizan en función de las notificaciones que se encuentran en el <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claims" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de autenticación.</summary>
        <value>Tipo de autenticación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Normalmente, uno de los valores definidos por el <xref:System.Security.Claims.AuthenticationTypes> clase.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootstrapContext">
      <MemberSignature Language="C#" Value="public object BootstrapContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BootstrapContext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberSignature Language="VB.NET" Value="Public Property BootstrapContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BootstrapContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BootstrapContext : obj with get, set" Usage="System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token que se usó para crear estas notificaciones de identidad.</summary>
        <value>El contexto de arranque.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 El objeto subyacente es una instancia de la <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> clase.  
  
 Establecer el `saveBootstrapContext` atributo en uno el [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) o [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) elemento en un archivo de configuración para especificar si el token se usa para generar el <xref:System.Security.Claims.ClaimsIdentity> se deben conservar en el <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propiedad.  
  
 Si el <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propiedad no es `null`, las aplicaciones pueden acceder a través de las propiedades y métodos de token original y las notificaciones que se generaron los <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> clase.

          ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Operación de establecimiento requiere plena confianza para el llamador inmediato. Este miembro no se puede establecer código de confianza parcial o transparente.</permission>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Actor" />
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsIdentity/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsIdentity/&lt;get_Claims&gt;d__51))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las notificaciones asociadas con esta identidad de notificación.</summary>
        <value>La colección de notificaciones asociada a esta identidad de notificaciones.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 La colección puede contener entradas que son `null`.  
  
 Las notificaciones contenidas en el <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección básicamente describen la entidad representada por el <xref:System.Security.Claims.ClaimsIdentity>. Las notificaciones describen las propiedades y los derechos de propiedad de la entidad y se pueden examinar las aplicaciones para tomar decisiones sobre la autenticación y autorización.  
  
> [!NOTE]
>  El <xref:System.Security.Claims.ClaimsPrincipal> clase tiene un <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> también la propiedad. En la mayoría de los casos debe tener acceso a las notificaciones de usuario a través de la <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> colección en lugar de a través del <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección. Necesita tener acceso a las notificaciones de un individuo <xref:System.Security.Claims.ClaimsIdentity> sólo en los casos donde la entidad de seguridad contiene más de un <xref:System.Security.Claims.ClaimsIdentity> y deberá evaluar o modificar una identidad específica.

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsIdentity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un objeto <see cref="T:System.Security.Claims.ClaimsIdentity" /> nuevo copiado de esta identidad de reclamaciones.</summary>
        <returns>Copia de la instancia actual.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaim">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.Claim CreateClaim(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaim (reader As BinaryReader) As Claim" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::Claim ^ CreateClaim(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaim : System.IO.BinaryReader -&gt; System.Security.Claims.Claim&#xA;override this.CreateClaim : System.IO.BinaryReader -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.CreateClaim reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.IO.BinaryReader" /> que apunta a la notificación.</param>
        <summary>Proporciona un punto de extensibilidad para tipos derivados para crear un <see cref="T:System.Security.Claims.Claim" /> personalizado.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Security.Claims.Claim" />.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene datos adicionales proporcionados por un tipo derivado. Se establece normalmente cuando se llama a <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</summary>
        <value>Un <see cref="T:System.Byte" /> matriz que representa la adicional los datos serializados.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Emisor predeterminado; "LOCAL AUTHORITY".</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNameClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultNameClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNameClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNameClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNameClaimType;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNameClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tipo de notificación de nombre predeterminado; <see cref="F:System.Security.Claims.ClaimTypes.Name" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRoleClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultRoleClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultRoleClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultRoleClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultRoleClaimType;" />
      <MemberSignature Language="F#" Value="val mutable DefaultRoleClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tipo de notificación de rol predeterminado; <see cref="F:System.Security.Claims.ClaimTypes.Role" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera todas las notificaciones que coinciden con una condición especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsIdentity.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Función que ejecuta la lógica correspondiente.</param>
        <summary>Recupera todas las notificaciones que coinciden con el predicado especificado.</summary>
        <returns>Notificaciones coincidentes. Se trata de una lista de solo lectura.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="match" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsIdentity.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">El tipo de notificación con el que se hacen coincidir las notificaciones.</param>
        <summary>Recupera todas las notificaciones con el tipo de notificación especificado.</summary>
        <returns>Notificaciones coincidentes. Se trata de una lista de solo lectura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 La comparación se realiza utilizando caso Ordinal en minúsculas en `type`.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera la primera notificación que coincide con una condición especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Función que ejecuta la lógica correspondiente.</param>
        <summary>Recupera la primera reclamación con la que coincide el predicado especificado.</summary>
        <returns>Primera notificación coincidente o <see langword="null" /> si no se encuentra ninguna coincidencia.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="match" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Tipo reclamación con el que deben coincidir.</param>
        <summary>Recupera la primera reclamación con el tipo especificado.</summary>
        <returns>Primera notificación coincidente o <see langword="null" /> si no se encuentra ninguna coincidencia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

La comparación se realiza <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> modo.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsIdentity.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que se va a rellenar con datos.</param>
        <param name="context">Destino de esta serialización. Puede ser <see langword="null" />.</param>
        <summary>Rellena el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Security.Claims.ClaimsIdentity" /> actual.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="info" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si la identidad de notificaciones posee una notificación que coincide con las condiciones especificadas.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsIdentity.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Función que ejecuta la lógica correspondiente.</param>
        <summary>Determina si esta identidad de notificaciones tiene una notificación que coincide con el predicado especificado.</summary>
        <returns><see langword="true" /> si existe una notificación coincidente; de lo contrario, <see langword="false" />.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="match" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsIdentity.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Tipo de notificación para hacer coincidir.</param>
        <param name="value">Valor de la notificación para hacer coincidir.</param>
        <summary>Determina si esta identidad de notificaciones tiene una notificación con el tipo y el valor especificados.</summary>
        <returns><see langword="true" /> si se encuentra una coincidencia; si no, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 No comprueba la <xref:System.Security.Claims.Claim.Issuer%2A> o <xref:System.Security.Claims.Claim.OriginalIssuer%2A> propiedades. La comparación se realiza utilizando Ordinal, distingue mayúsculas de minúsculas en el valor; en minúsculas en el tipo de caso.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> es **NULL**.  
  
O bien 
 <paramref name="value" /> es **NULL**.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la identidad se ha autenticado.</summary>
        <value><see langword="true" /> Si se ha autenticado la identidad; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 `true` Si el <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propiedad no es `null` o una cadena vacía.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Security.Claims.ClaimsIdentity.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la etiqueta para esta identidad de notificaciones.</summary>
        <value>Etiqueta.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Claims.ClaimsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de esta identidad de notificación.</summary>
        <value>Nombre o <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Devuelve el valor de la primera notificación con un tipo que coincide con el nombre de notificación de tipo establecido en el <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> propiedad. Si no se encuentra ninguna notificación que coincide con el tipo de notificación de nombre, devuelve `null`.

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de notificación que se usa para determinar qué notificaciones proporcionan el valor de la propiedad <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> de esta identidad de notificación.</summary>
        <value>Tipo de reclamación del nombre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 El <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> propiedad especifica el tipo de notificación (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) que se usa para proporcionar el nombre para esta identidad. El nombre se accede a través del <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propiedad.  
  
 Esta propiedad se establece mediante el constructor.

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Name" />
      </Docs>
    </Member>
    <Member MemberName="RemoveClaim">
      <MemberSignature Language="C#" Value="public virtual void RemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member RemoveClaim : System.Security.Claims.Claim -&gt; unit&#xA;override this.RemoveClaim : System.Security.Claims.Claim -&gt; unit" Usage="claimsIdentity.RemoveClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Reclamación que se va a quitar.</param>
        <summary>Se intenta quitar una reclamación de la identidad de reclamaciones.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Es posible que la notificación no se puede quitar porque no es propiedad por la identidad. Por ejemplo, esto sería el caso de las notificaciones de rol que pertenecen a la entidad de seguridad. A diferencia de la <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A> método, que devuelve un valor booleano que indica si se ha quitado la notificación, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A> produce una excepción si no se pudo quitar la notificación  
  
 La notificación especificada coincide con la referencia de objeto (<xref:System.Object.ReferenceEquals%2A>).  
  
 Este método tiene el `SecurityCritical` atributo aplicado al control de las entidades que pueden quitar notificaciones de la identidad. Aún más abajo la canalización, las decisiones de autorización se realizan en función de las notificaciones que se encuentran en el <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se puede quitar la reclamación.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RoleClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de notificación que se interpreta como rol de .NET Framework entre las notificaciones en esta identidad de notificación.</summary>
        <value>Tipo de reclamación del rol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 El tipo de notificación de rol es el tipo de notificación (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) que se utiliza al evaluar esta identidad para el <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> método. El <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> método se llama para determinar si la entidad de seguridad actual está en un rol especificado. El modelo basado en notificaciones amplía esta comprobación para usar las notificaciones presentadas por la entidad de seguridad. Un <xref:System.Security.Claims.ClaimsPrincipal> objeto puede contener uno o varios <xref:System.Security.Claims.ClaimsIdentity> objetos y cada objeto de identidad pueden contener varios <xref:System.Security.Claims.Claim> objetos. El <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> propiedad especifica el tipo de notificación de la notificación que se debe usar para proporcionar el valor de la función al evaluar este <xref:System.Security.Claims.ClaimsIdentity> objeto. La propiedad se establece mediante el constructor. Un valor común es <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>.

          ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemoveClaim">
      <MemberSignature Language="C#" Value="public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member TryRemoveClaim : System.Security.Claims.Claim -&gt; bool&#xA;override this.TryRemoveClaim : System.Security.Claims.Claim -&gt; bool" Usage="claimsIdentity.TryRemoveClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Reclamación que se va a quitar.</param>
        <summary>Se intenta quitar una reclamación de la identidad de reclamaciones.</summary>
        <returns><see langword="true" /> si la reclamación se quitó correctamente; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 Es posible que la notificación no se puede quitar porque no es propiedad por la identidad. Por ejemplo, esto sería el caso de las notificaciones de rol que pertenecen a la entidad de seguridad.  
  
 La notificación especificada coincide con la referencia de objeto (<xref:System.Object.ReferenceEquals%2A>).  
  
 Este método tiene el `SecurityCritical` atributo aplicado al control de las entidades que pueden quitar notificaciones de la identidad. Aún más abajo la canalización, las decisiones de autorización se realizan en función de las notificaciones que se encuentran en el <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> colección.

          ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsIdentity.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">El sistema de escritura que se usará para el almacenamiento de datos.</param>
        <summary>Se serializa usando un <see cref="T:System.IO.BinaryWriter" />.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsIdentity.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">El sistema de escritura que se usará para el almacenamiento de datos.</param>
        <param name="userData">Datos adicionales proporcionados por el tipo derivado.</param>
        <summary>Se serializa usando un <see cref="T:System.IO.BinaryWriter" />.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>