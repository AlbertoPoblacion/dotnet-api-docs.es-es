<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42a1e9b2af0b0e21944401ffe335af36234324db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36627198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define la implementación base de un administrador de autenticación de notificaciones. El administrador de autenticación de notificaciones proporciona un lugar en la canalización del procesamiento de notificaciones para aplicar la lógica de procesamiento (filtrado, validación, extensión) a la colección de notificaciones en la entidad de seguridad de entrada antes de la ejecución del código de aplicación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las notificaciones que el Administrador de autenticación proporciona un punto de extensibilidad en la aplicación notificaciones de canalización de procesamiento que puede usar para validar, filtrar, modificar, notificaciones de entrada o insertar nuevas notificaciones en el conjunto de notificaciones presentadas por un <xref:System.Security.Claims.ClaimsPrincipal> antes de RP se ejecuta el código de la aplicación. Incluso puede devolver una implementación personalizada de <xref:System.Security.Claims.ClaimsPrincipal> si así lo requiere la aplicación de RP. La implementación predeterminada proporcionada por el <xref:System.Security.Claims.ClaimsAuthenticationManager> clase devuelve las notificaciones en el <xref:System.Security.Claims.ClaimsPrincipal> sin cambios; sin embargo, puede derivar de esta clase e invalidar el <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> método para modificar las notificaciones en la <xref:System.Security.Claims.ClaimsPrincipal> (o para devolver un personalizado <xref:System.Security.Claims.ClaimsPrincipal>).  
  
 Una razón común para la creación de una autenticación de notificaciones personalizadas manager consiste en Agregar, quitar o transformar las notificaciones basadas en información que solo se conoce por o, quizás, mejor mantenida por la aplicación de RP. Por ejemplo, se puede mantener un historial de compras del cliente en una aplicación de carro de la compra de una base de datos mantenidos por la aplicación de RP y, a continuación, se agrega a la entidad de seguridad de notificaciones devuelta por el Administrador de autenticación de notificaciones en función del valor de una notificación de nombre que se encuentra en el entidad de seguridad entrante.  
  
 Puede configurar su aplicación para que use un `ClaimsAuthenticationManager` mediante programación mediante el <xref:System.IdentityModel.Configuration.IdentityConfiguration> clase o en la configuración a través de la [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) (elemento que es un elemento secundario de la [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) elemento). Puede invalidar la <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> método para proporcionar el procesamiento de los elementos secundarios personalizado de la `<claimsAuthenticationManager>` elemento a través del cual se puede configurar el administrador personalizado. La implementación base de <xref:System.Security.Claims.ClaimsAuthenticationManager> no controla los elementos secundarios.  
  
 Configuración de la aplicación para utilizar un administrador de autenticación de notificaciones se asegura de que se invocará mediante Windows Identity Foundation (WIF) de la canalización de solicitud.  
  
   
  
## Examples  
 El código siguiente muestra una autenticación de notificaciones sencillas administrador que agrega una notificación de rol a la entidad de seguridad entrante sin realizar ninguna comprobación de las notificaciones entrantes...  
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 El siguiente XML muestra el `<claimsAuthenticationManager>` elemento.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">La dirección del recurso que se va a solicitar.</param>
        <param name="incomingPrincipal">La entidad de seguridad de notificaciones que representa al usuario autenticado que intenta tener acceso al recurso.</param>
        <summary>Cuando se reemplaza en una clase derivada, devuelve un objeto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> coherente con los requisitos de la aplicación de RP. La implementación predeterminada no modifica la <see cref="T:System.Security.Claims.ClaimsPrincipal" /> de entrada.</summary>
        <returns>Entidad de seguridad que contiene las modificaciones necesarias para la aplicación de RP. La implementación predeterminada devuelve la entidad de seguridad de notificaciones de entrada sin modificar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> se llama al método desde la canalización de procesamiento de solicitud que se puede invalidar este método en una clase derivada para filtrar, modificar o insertar notificaciones en la entidad de seguridad de notificaciones según la directiva de su aplicación de RP. Según los requisitos de la aplicación de RP, incluso puede devolver una implementación personalizada de <xref:System.Security.Claims.ClaimsPrincipal>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementos de configuración personalizados. Todos los nodos de la lista son de tipo <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Cuando se reemplaza en una clase derivada, carga la configuración personalizada de XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> método se llama por la infraestructura de configuración. Cuando se llama a este método, el `nodelist` contendrá los elementos secundarios de nivel superior de la [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) elemento desde el archivo de configuración. Cada uno de estos elementos a su vez, podría contener atributos o elementos secundarios según el esquema de configuración que se definen para la clase derivada. Si no hay elementos secundarios aparecen bajo la `<claimsAuthenticationManager>` elemento en el archivo de configuración, no se llama a este método.  
  
 La implementación predeterminada produce un <xref:System.NotImplementedException>. Invalide este método en una clase derivada para habilitar la inicialización de su administrador de autenticación de notificaciones desde un archivo de configuración. Por ejemplo, los elementos de configuración pueden describir una directiva que deben seguir al autenticar una entidad de seguridad de notificaciones; o bien se pueden usar para que señale a un almacén de atributos desde el que demandas adicionales se van a ser agregados a la entidad de seguridad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>