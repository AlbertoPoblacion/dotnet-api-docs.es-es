<Type Name="OleDbParameter" FullName="System.Data.OleDb.OleDbParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fee3e4468acdff0f6a8c1749dba2918dcf759b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un parámetro para un objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> y, opcionalmente, su asignación a una columna de <see cref="T:System.Data.DataSet" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El proveedor de datos OLE DB Framework utiliza parámetros de posición que se marcan con un signo de interrogación (?) en lugar de parámetros con nombre.  
  
 Al consultar una base de datos de Oracle mediante el proveedor Microsoft OLE DB para Oracle (MSDAORA) y el proveedor de datos OLE DB Framework, usando la `LIKE` cláusula para consultar los valores en campos de longitud fija puede no devolver coincidencias todas las esperadas. El motivo es que cuando Oracle compara los valores de campos de longitud fija en un `LIKE` cláusula, coincide con toda la longitud de la cadena, incluyendo los espacios finales de relleno. Por ejemplo, si una tabla en una base de datos de Oracle contiene un campo denominado "Field1" que se define como `char(3)`, y escriba el valor "a" en una fila de esa tabla, el código siguiente no devuelve la fila.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Esto es porque Oracle almacena el valor de columna como "a" (relleno "a", con espacios finales hasta la longitud de campo fijo de 3), que Oracle no tratar como una coincidencia para el valor del parámetro de "a" en el caso de un `LIKE` comparación de campos de longitud fija.  
  
 Para resolver este problema, anexe un carácter comodín de porcentaje ("%") al valor del parámetro (`"a%"`), o use una SQL `=` comparación en su lugar.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea varias instancias de <xref:System.Data.OleDb.OleDbParameter> a través de la <xref:System.Data.OleDb.OleDbParameterCollection> colección dentro de la <xref:System.Data.OleDb.OleDbDataAdapter>. Estos parámetros se utilizan para seleccionar datos del origen de datos y colocar los datos en el <xref:System.Data.DataSet>. En este ejemplo se da por supuesto que una <xref:System.Data.DataSet> y <xref:System.Data.OleDb.OleDbDataAdapter> ya se ha creado mediante la conexión, comandos y esquema adecuado.  
  
 [!code-csharp[Classic WebData OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro que se va a asignar.</param>
        <param name="dataType">Uno de los valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" /> con el nombre de parámetro y el tipo de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo de datos y si procede, <xref:System.Data.OleDb.OleDbParameter.Size%2A> y <xref:System.Data.OleDb.OleDbParameter.Precision%2A> se deduce del valor de la `dataType` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dataType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro que se va a asignar.</param>
        <param name="value">Valor del nuevo objeto <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" /> con el nombre del parámetro y el valor del nuevo objeto <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga cuidado cuando utilice esta sobrecarga de la <xref:System.Data.OleDb.OleDbParameter> constructor para especificar valores de parámetro de número entero. Dado que esta sobrecarga toma un parámetro `value` de tipo <xref:System.Object>, cuando el valor entero sea cero se debe convertir en un tipo <xref:System.Object>, tal como se muestra en el siguiente ejemplo de C#.  
  
```csharp  
Parameter = new OleDbParameter("@pname", Convert.ToInt32(0));  
```  
  
 Si no realiza esta conversión, el compilador supone que se está intentando llamar a la <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> sobrecarga del constructor.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro que se va a asignar.</param>
        <param name="dataType">Uno de los valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" /> con el nombre de parámetro, el tipo de datos y la longitud.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Size%2A> se deduce del valor de la `dataType` parámetro si no se establece explícitamente el `size` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dataType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType, size As Integer, srcColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType, int size, System::String ^ srcColumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro que se va a asignar.</param>
        <param name="dataType">Uno de los valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <param name="srcColumn">Nombre de la columna de origen.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" /> con el nombre de parámetro, el tipo de datos, la longitud y el nombre de la columna de origen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Size%2A> se deduce del valor de la `dataType` parámetro si no se establece explícitamente el `size` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dataType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As OleDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, srcColumn As String, srcVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ parameterName, System::Data::OleDb::OleDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <param name="direction">Uno de los valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="isNullable">
          <see langword="true" /> si el valor del campo puede ser null; de lo contrario, <see langword="false" />.</param>
        <param name="precision">Número total de dígitos situados a la izquierda y a la derecha del separador decimal con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
        <param name="scale">Número total de posiciones decimales con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
        <param name="srcColumn">Nombre de la columna de origen.</param>
        <param name="srcVersion">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="value">
          <see cref="T:System.Object" /> que es el valor de <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" /> que utiliza el nombre de parámetro, tipo de datos, longitud, nombre de columna de origen, dirección del parámetro, precisión numérica y otras propiedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Size%2A> y <xref:System.Data.OleDb.OleDbParameter.Precision%2A> se deduce del valor de la `dataType` parámetro si no se establece explícitamente el `size` y `precision` parámetros.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y muestra el <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dataType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As OleDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ parameterName, System::Data::OleDb::OleDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <param name="direction">Uno de los valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="precision">Número total de dígitos situados a la izquierda y a la derecha del separador decimal con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
        <param name="scale">Número total de posiciones decimales con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
        <param name="sourceColumn">Nombre de la columna de origen.</param>
        <param name="sourceVersion">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> si la columna de origen acepta valores null; <see langword="false" /> en caso contrario.</param>
        <param name="value">
          <see cref="T:System.Object" /> que es el valor de <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbParameter" /> que utiliza el nombre de parámetro, tipo de datos, longitud, nombre de columna de origen, dirección del parámetro, precisión numérica y otras propiedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Size%2A> y <xref:System.Data.OleDb.OleDbParameter.Precision%2A> se deduce del valor de la `dataType` parámetro si no se establece explícitamente el `size` y `precision` parámetros.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y muestra el <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dataType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Data.DbType" /> del parámetro.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.DbType" />. El valor predeterminado es <see cref="F:System.Data.DbType.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> y <xref:System.Data.OleDb.OleDbParameter.DbType%2A> están vinculadas. Por consiguiente, establecer el <xref:System.Data.OleDb.OleDbParameter.DbType%2A> cambios el <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> a un apoyo <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>.  
  
 Para obtener una lista de los tipos de datos admitidos, consulte la correspondiente <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> miembro. Para obtener más información, consulte [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad no se estableció a un <see cref="T:System.Data.DbType" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el parámetro es sólo de entrada, sólo de salida, bidireccional o un parámetro de un valor devuelto de procedimiento almacenado.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. El valor predeterminado es <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Data.ParameterDirection> es la salida y la ejecución del asociado <xref:System.Data.OleDb.OleDbCommand> no devuelve un valor, la <xref:System.Data.OleDb.OleDbParameter> contiene un valor null.  
  
 `Output`, `InputOut`, y `ReturnValue` parámetros devueltos por una llamada a <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> no son accesibles hasta que llame a <xref:System.Data.OleDb.OleDbDataReader.Close%2A> o **Dispose** en el <xref:System.Data.OleDb.OleDbDataReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propiedad no se ha establecido en uno de los valores de <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el parámetro acepta valores null.</summary>
        <value>
          <see langword="true" /> si se aceptan valores null; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores NULL se controlan mediante la <xref:System.DBNull> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.IsNullable = True  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.IsNullable = true;  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbType">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbType OleDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OleDb.OleDbType OleDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property OleDbType As OleDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbType OleDbType { System::Data::OleDb::OleDbType get(); void set(System::Data::OleDb::OleDbType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Data.OleDb.OleDbType" /> del parámetro.</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbType" /> del parámetro. El valor predeterminado es <see cref="F:System.Data.OleDb.OleDbType.VarWChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> y <xref:System.Data.OleDb.OleDbParameter.DbType%2A> están vinculadas. Por consiguiente, establecer el <xref:System.Data.OleDb.OleDbParameter.DbType%2A> cambios el <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> a un apoyo <xref:System.Data.OleDb.OleDbType>.  
  
 Para obtener una lista de los tipos de datos admitidos, consulte la correspondiente <xref:System.Data.OleDb.OleDbType> miembro. Para obtener más información, consulte [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <value>Nombre del objeto <see cref="T:System.Data.OleDb.OleDbParameter" />. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El proveedor OLE DB .NET utiliza parámetros de posición que se marcan con un signo de interrogación (?) en lugar de parámetros con nombre.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número máximo de dígitos que se usan para representar la propiedad <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>El número máximo de dígitos que se usan para representar la propiedad <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. El valor predeterminado es 0, que indica que el proveedor de datos establece la precisión de <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Precision%2A> propiedad solo se utiliza para los parámetros de entrada decimales y numeric.  
  
 El <xref:System.Data.OleDb.OleDbParameter.Precision%2A> propiedad se debe establecer únicamente para `Decimal` y `Numeric` parámetros antes de llamar a la <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> método de la <xref:System.Data.OleDb.OleDbCommand>.  
  
 Si se establece esta propiedad en un valor distinto del valor en la base de datos depende de la implementación del proveedor de datos y puede devolver un código de error truncamiento o redondeo datos.  
  
 El `Precision` propiedad solo afecta a los parámetros cuya <xref:System.Data.OleDb.OleDbType> es `Decimal`, `Numeric`, o `VarNumeric`. Para otros tipos de datos, `Precision` se omite.  
  
> [!NOTE]
>  No se admite el uso de esta propiedad para convertir datos pasados a la base de datos. Para redondear, truncar o convertir los datos antes de pasar a la base de datos de lo contrario, utilice la <xref:System.Math> clase que forma parte de la `System` espacio de nombres para asignar un valor para el parámetro `Value` propiedad.  
  
> [!NOTE]
>  Proveedores de datos de .NET framework que se incluyen con la versión 1.0 de .NET Framework no comprueban la <xref:System.Data.OleDb.OleDbParameter.Precision%2A> o <xref:System.Data.OleDb.OleDbParameter.Scale%2A> de <xref:System.Decimal> valores de parámetro. Esto puede producir datos truncados a insertar en el origen de datos. Si está utilizando la versión 1.0 de .NET Framework, es necesario validar la <xref:System.Data.OleDb.OleDbParameter.Precision%2A> y <xref:System.Data.OleDb.OleDbParameter.Scale%2A> de <xref:System.Decimal> valores antes de establecer el valor del parámetro. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> valores que superen el <xref:System.Decimal> se truncan la escala del parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece el tipo asociado a este <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se ejecuta un comando que incluye valores de parámetro, código puede establecer explícitamente el tipo de un parámetro o el parámetro puede deducir su tipo a partir de su valor. Llamar a este método restablece el parámetro para que pueda volver a deducir su tipo a partir del valor pasado en el parámetro. Llamar a este método afecta tanto a la <xref:System.Data.OleDb.OleDbParameter.DbType%2A> y <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> propiedades de la <xref:System.Data.OleDb.OleDbParameter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOleDbType">
      <MemberSignature Language="C#" Value="public void ResetOleDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOleDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOleDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOleDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece el tipo asociado a este <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se ejecuta un comando que incluye valores de parámetro, código puede establecer explícitamente el tipo de un parámetro o el parámetro puede deducir su tipo a partir de su valor. Llamar a este método restablece el parámetro para que pueda volver a deducir su tipo a partir del valor pasado en el parámetro. Llamar a este método afecta tanto a la <xref:System.Data.OleDb.OleDbParameter.DbType%2A> y <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> propiedades de la <xref:System.Data.OleDb.OleDbParameter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de posiciones decimales con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>El número de posiciones decimales con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Scale%2A> propiedad solo se utiliza para los parámetros de entrada numéricos y decimales antes de llamar a la <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> método de la <xref:System.Data.OleDb.OleDbCommand> y para especificar los parámetros de salida numérica.  
  
 Si se establece esta propiedad en un valor distinto del valor en la base de datos depende de la implementación del proveedor de datos y puede devolver un código de error truncamiento o redondeo datos.  
  
 Cuando se usa SQL Server Native Client 10 (o posterior), para enlazar un parámetro cuyo tipo sea `Decimal`, `Numeric`, `VarNumeric`, `DBDate`, o `DBTimeStamp`, debe especificar manualmente un valor de escala adecuado.  
  
> [!NOTE]
>  No se admite el uso de esta propiedad para convertir datos pasados a la base de datos. Para redondear, truncar o convertir los datos antes de pasar a la base de datos de lo contrario, utilice la <xref:System.Math> clase que forma parte de la `System` espacio de nombres para asignar un valor para el parámetro `Value` propiedad.  
  
> [!NOTE]
>  Proveedores de datos de .NET framework que se incluyen con la versión 1.0 de .NET Framework no comprueban la <xref:System.Data.OleDb.OleDbParameter.Precision%2A> o <xref:System.Data.OleDb.OleDbParameter.Scale%2A> de <xref:System.Decimal> valores de parámetro. Esto puede producir datos truncados a insertar en el origen de datos. Si está utilizando la versión 1.0 de .NET Framework, es necesario validar la <xref:System.Data.OleDb.OleDbParameter.Precision%2A> y <xref:System.Data.OleDb.OleDbParameter> de <xref:System.Decimal> valores antes de establecer el valor del parámetro. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> valores que superen el <xref:System.Decimal> se truncan la escala del parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño máximo, en bytes, de los datos de la columna.</summary>
        <value>Tamaño máximo, en bytes, de los datos de la columna. El valor predeterminado se deduce del valor del parámetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbParameter.Size%2A> propiedad se utiliza para tipos binarios y de cadena.  
  
 Para datos de cadena de los tipos de datos y ANSI el <xref:System.Data.OleDb.OleDbParameter.Size%2A> propiedad hace referencia al número de bytes. Para los datos de cadena Unicode, <xref:System.Data.OleDb.OleDbParameter.Size%2A> hace referencia al número de caracteres. El recuento de cadenas no incluye el carácter de terminación.  
  
 Para los tipos de datos de longitud variable, <xref:System.Data.OleDb.OleDbParameter.Size%2A> describe la cantidad máxima de datos que se va a transmitir al servidor. Por ejemplo, para un valor de cadena Unicode, <xref:System.Data.OleDb.OleDbParameter.Size%2A> podría utilizarse para limitar la cantidad de datos que se envían al servidor a los 100 primeros caracteres.  
  
 Para los parámetros bidireccionales y de salida y valores devueltos, debe establecer el valor de <xref:System.Data.OleDb.OleDbParameter.Size%2A>. Esto no es necesario para los parámetros de entrada, y si no se establece explícitamente, el valor de se deduce del tamaño real del parámetro especificado cuando se ejecuta una instrucción parametrizada.  
  
 El <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, y <xref:System.Data.OleDb.OleDbParameter.Size%2A> las propiedades de un parámetro se pueden inferir estableciendo <xref:System.Data.OleDb.OleDbParameter.Value%2A>. Por lo tanto, no se debe especificar estos recursos. Sin embargo, no se exponen en <xref:System.Data.OleDb.OleDbParameter> valores de las propiedades. Por ejemplo, si se ha inferido el tamaño del parámetro, <xref:System.Data.OleDb.OleDbParameter.Size%2A> no contiene el valor inferido después de ejecutar la instrucción.  
  
 Para los tipos de datos de longitud fija, el valor de <xref:System.Data.OleDb.OleDbParameter.Size%2A> se omite. Se puede recuperar con fines informativos y devuelve la cantidad máxima de bytes que el proveedor utiliza al transmitir el valor del parámetro al servidor.  
  
 Si el tamaño del valor proporcionado para una <xref:System.Data.OleDb.OleDbParameter> supera el <xref:System.Data.OleDb.OleDbParameter.Size%2A>, <xref:System.Data.OleDb.OleDbParameter.Value%2A> de la <xref:System.Data.OleDb.OleDbParameter> contiene el valor especificado, truncado al tamaño de la <xref:System.Data.OleDb.OleDbParameter>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la columna de origen asignada al objeto <see cref="T:System.Data.DataSet" /> y utilizada para cargar o devolver la propiedad <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>Nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" />. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> está establecido en algo distinto de una cadena vacía, el valor del parámetro se recupera de la columna con el <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> nombre. Si <xref:System.Data.OleDb.OleDbParameter.Direction%2A> está establecido en `Input`, el valor se toma de la <xref:System.Data.DataSet>. Si <xref:System.Data.OleDb.OleDbParameter.Direction%2A> se establece en `Output`, el valor se toma del origen de datos. A <xref:System.Data.OleDb.OleDbParameter.Direction%2A> de `InputOutput` es una combinación de ambos.  
  
 Para obtener más información sobre cómo usar el <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> propiedad, vea [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md) y [actualizar orígenes de datos con DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece u obtiene un valor que indica si la columna de origen acepta valores null. Esto permite a <see cref="T:System.Data.Common.DbCommandBuilder" /> generar correctamente instrucciones Update para las columnas que aceptan valores NULL.</summary>
        <value>
          <see langword="true" /> si la columna de origen acepta valores null; <see langword="false" /> en caso contrario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> utiliza el <xref:System.Data.Common.DbCommandBuilder> para generar correctamente los comandos de actualización cuando se trabaja con columnas que aceptan valores NULL. Por lo general, uso de <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> se limita a los desarrolladores que heredan de <xref:System.Data.Common.DbCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> Esta propiedad se utiliza para determinar si la columna de origen acepta valores NULL y establece esta propiedad en `true` si no acepta valores NULL, y `false` si no lo está. Cuando <xref:System.Data.Common.DbCommandBuilder> está generando su instrucción Update, examina la <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> para cada parámetro. Si la propiedad es `true`, <xref:System.Data.Common.DbCommandBuilder> genera una cláusula WHERE como la siguiente (en esta expresión de consulta, "FieldName" representa el nombre del campo):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Si <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> para el campo es false, <xref:System.Data.Common.DbCommandBuilder> genera la siguiente cláusula WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Además, @IsNull_FieldName contiene 1 si el campo de origen contiene null y 0 si no es así. Este mecanismo permite optimizar el rendimiento de SQL Server y proporciona código común que funciona en varios proveedores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la enumeración <see cref="T:System.Data.DataRowVersion" /> que se va a utilizar a la hora de cargar <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. El valor predeterminado es <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizado por <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> durante una operación de actualización para determinar si el valor del parámetro se establece en `Current` o `Original`. Esto permite que las claves principales se actualiza. Esta propiedad se establece en la versión de la <xref:System.Data.DataRow> utilizado por el <xref:System.Data.DataRow.Item%2A> propiedad, o la <xref:System.Data.DataRow.GetChildRows%2A> método de la <xref:System.Data.DataRow> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propiedad no se estableció en uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Object" /> que es una copia de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbParameter> se convierte en una interfaz <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una cadena que contiene la propiedad <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</summary>
        <returns>Una cadena que contiene la propiedad <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro.</summary>
        <value>
          <see cref="T:System.Object" /> que es el valor del parámetro. El valor predeterminado es null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los parámetros de entrada, el valor se enlaza a la <xref:System.Data.OleDb.OleDbCommand> que se envía al servidor. Para obtener resultados y parámetros de valor devuelto, el valor se establece en la realización de la <xref:System.Data.OleDb.OleDbCommand> y después la <xref:System.Data.OleDb.OleDbDataReader> está cerrado.  
  
 Cuando se envía un valor de parámetro null al servidor, debe especificar <xref:System.DBNull>, no es null. El valor nulo en el sistema es un objeto vacío que no tiene ningún valor. Para representar los valores nulos, se usa<xref:System.DBNull> .  
  
 Si la aplicación especifica el tipo de base de datos, el valor enlazado se convierte a ese tipo cuando el proveedor envía los datos al servidor. El proveedor intenta convertir cualquier tipo de valor si es compatible con la <xref:System.IConvertible> interfaz. Pueden producirse errores de conversión si el tipo especificado no es compatible con el valor.  
  
 Tanto el <xref:System.Data.OleDb.OleDbParameter.DbType%2A> y <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> las propiedades se pueden inferir estableciendo el valor.  
  
 El <xref:System.Data.OleDb.OleDbParameter.Value%2A> propiedad se sobrescribe con el método Update del <xref:System.Data.IDbDataAdapter>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbParameter> y establece algunas de sus propiedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>