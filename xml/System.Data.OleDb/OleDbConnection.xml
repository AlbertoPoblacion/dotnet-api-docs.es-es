<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c9ff8868e34084eb138bc28b4fddc01f7ccdb99" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51319483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type OleDbConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable&#xA;    interface IDbConnection&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una conexión abierta a un origen de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Data.OleDb.OleDbConnection> objeto representa una conexión única a un origen de datos. Con un sistema de base de datos cliente/servidor, es equivalente a una conexión de red al servidor. Dependiendo de la funcionalidad admitida por el proveedor OLE DB nativo, algunos métodos o propiedades de un <xref:System.Data.OleDb.OleDbConnection> objeto no esté disponible.  
  
 Cuando se crea una instancia de <xref:System.Data.OleDb.OleDbConnection>, todas las propiedades se establecen en sus valores iniciales. Para obtener una lista de estos valores, vea el <xref:System.Data.OleDb.OleDbConnection> constructor.  
  
 Puede abrir más de un objeto DataReader en una sola <xref:System.Data.OleDb.OleDbConnection>. Si el proveedor OLE DB que utiliza no es compatible con más de un objeto DataReader en una sola conexión, el proveedor abre implícitamente una conexión adicional para cada uno.  
  
 Si el <xref:System.Data.OleDb.OleDbConnection> queda fuera del ámbito, no se cierra. Por lo tanto, debe cerrar explícitamente la conexión mediante una llamada a <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose**, o mediante el <xref:System.Data.OleDb.OleDbConnection> objeto dentro de un `Using` instrucción.  
  
> [!NOTE]
>  Para implementar aplicaciones de alto rendimiento, debe usar la agrupación de conexiones. Cuando se usa el proveedor de datos de .NET Framework para OLE DB, no es necesario habilitar la agrupación de conexiones porque el proveedor la administra automáticamente. Para obtener más información sobre cómo usar la conexión de agrupación con el proveedor de datos de .NET Framework para OLE DB, consulte [agrupación de conexiones de Oracle, ODBC y OLE DB](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  
  
 Si un grave <xref:System.Data.OleDb.OleDbException> (por ejemplo, un SQL Server nivel de gravedad de 20 o superior) generado por el método que ejecuta un <xref:System.Data.OleDb.OleDbCommand>, el <xref:System.Data.OleDb.OleDbConnection> podría estar cerrado. Sin embargo, el usuario puede volver a abrir la conexión y continuar.  
  
 Una aplicación que crea una instancia de la <xref:System.Data.OleDb.OleDbConnection> objeto puede requerir que todos los llamadores directos e indirectos tengan permisos suficientes en el código mediante el establecimiento de las peticiones de seguridad declarativo o imperativo. <xref:System.Data.OleDb.OleDbConnection> demandas de seguridad mediante la <xref:System.Data.OleDb.OleDbPermission> objeto. Los usuarios pueden comprobar que su código tiene los permisos necesarios mediante el <xref:System.Data.OleDb.OleDbPermissionAttribute> objeto. Los usuarios y administradores también pueden utilizar el [Caspol.exe (herramienta de directiva de seguridad de acceso de código)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) para modificar la directiva de seguridad en los niveles de equipo, usuario y empresa. Para obtener más información, consulta [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Para obtener más información sobre el control de mensajes de advertencia e informativos desde el servidor de datos, vea [eventos de conexión](~/docs/framework/data/adonet/connection-events.md).  
  
> [!NOTE]
>  La <xref:System.Data.OleDb.OleDbConnection> objeto no admite establecer o recuperar propiedades dinámicas específicas de un proveedor OLE DB. Solo se admiten las propiedades que se pueden proporcionar en la cadena de conexión para el proveedor OLE DB.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbCommand> y un <xref:System.Data.OleDb.OleDbConnection>. El <xref:System.Data.OleDb.OleDbConnection> se abre y se establece como el <xref:System.Data.OleDb.OleDbCommand.Connection%2A> para el <xref:System.Data.OleDb.OleDbCommand>. El ejemplo llama a <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> y cierra la conexión. Para lograr esto, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> se pasa una cadena de conexión y una cadena de consulta que es una instrucción SQL INSERT.  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando una nueva instancia de <xref:System.Data.OleDb.OleDbConnection> se crea, la lectura y escritura se establecen propiedades en los siguientes valores iniciales a menos que se establezcan específicamente mediante las palabras clave asociadas en la <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|una cadena vacía ("")|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|una cadena vacía ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|una cadena vacía ("")|  
  
 Puede cambiar el valor de estas propiedades mediante el <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente se crea y abre un <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbConnection : string -&gt; System.Data.OleDb.OleDbConnection" Usage="new System.Data.OleDb.OleDbConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Conexión utilizada para abrir la base de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbConnection" /> con la cadena de conexión especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando una nueva instancia de <xref:System.Data.OleDb.OleDbConnection> se crea, la lectura y escritura se establecen propiedades en los siguientes valores iniciales a menos que se establezcan específicamente mediante las palabras clave asociadas en la <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|una cadena vacía ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|una cadena vacía ("")|  
  
 Puede cambiar el valor de estas propiedades mediante el <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente se crea y abre un <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="oleDbConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia una transacción de base de datos.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.OleDb.OleDbTransaction" Usage="oleDbConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia una transacción de base de datos con el valor actual de <see cref="T:System.Data.IsolationLevel" />.</summary>
        <returns>Objeto que representa la nueva transacción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Explícitamente debe confirmar o revertir la transacción mediante la <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> o <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> método. Para asegurarse de que el proveedor de datos de .NET Framework para el modelo de administración de transacciones de OLE DB se realiza correctamente, evite el uso de otros modelos de administración de transacciones, como los proporcionados por el origen de datos.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y un <xref:System.Data.OleDb.OleDbTransaction>. También se muestra cómo usar el <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, y <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> métodos.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se admiten transacciones paralelas.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.OleDb.OleDbTransaction" Usage="oleDbConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Nivel de aislamiento en el que tiene que ejecutarse la transacción.</param>
        <summary>Inicia una transacción de base de datos con el nivel de aislamiento especificado.</summary>
        <returns>Objeto que representa la nueva transacción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Explícitamente debe confirmar o revertir la transacción mediante la <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> o <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> método. Para asegurarse de que el proveedor de datos de .NET Framework para el modelo de administración de transacciones de OLE DB se realiza correctamente, evite el uso de otros modelos de administración de transacciones, como los proporcionados por el origen de datos.  
  
> [!NOTE]
>  Si no especifica un nivel de aislamiento, se utiliza el nivel de aislamiento predeterminado para el proveedor subyacente. Para especificar un nivel de aislamiento con el <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> método, utilice la sobrecarga que toma el `isolationLevel` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y un <xref:System.Data.OleDb.OleDbTransaction>. También se muestra cómo usar el <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, un <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, y <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> métodos.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se admiten transacciones paralelas.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="oleDbConnection.ChangeDatabase value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nombre de la base de datos.</param>
        <summary>Cambia la base de datos actual de una conexión <see cref="T:System.Data.OleDb.OleDbConnection" /> abierta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor proporcionado en el `database` parámetro debe ser un nombre de base de datos válido. El `database` parámetro no puede contener un valor null, una cadena vacía o una cadena con caracteres en blanco únicamente.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y muestra algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El nombre de la base de datos no es válido.</exception>
        <exception cref="T:System.InvalidOperationException">La conexión no está abierta.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">No se puede modificar la base de datos.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra la conexión al origen de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbConnection.Close%2A> método revierte todas las transacciones pendientes. A continuación, libera la conexión al grupo de conexiones o se cierra la conexión si la agrupación de conexiones está deshabilitada. Si <xref:System.Data.OleDb.OleDbConnection.Close%2A> se llama al control un <xref:System.Data.Common.DbConnection.StateChange> eventos, sin necesidad de adicionales <xref:System.Data.Common.DbConnection.StateChange> se activan los eventos.  
  
 Una aplicación puede llamar a <xref:System.Data.OleDb.OleDbConnection.Close%2A> más de una vez. No se genera ninguna excepción.  
  
> [!CAUTION]
>  No llame a <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose** en un <xref:System.Data.OleDb.OleDbConnection>, un <xref:System.Data.OleDb.OleDbDataReader>, o cualquier otro objeto administrado en el `Finalize` método de la clase. En un finalizador, debe liberar únicamente recursos no administrados que pertenezcan directamente a la clase. Si la clase no dispone de recursos no administrados, no incluya un método `Finalize` en la definición de clase. Para obtener más información, consulte [recolección](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena que se utiliza para abrir una base de datos.</summary>
        <value>Cadena de conexión del proveedor OLE DB que incluye el nombre del origen de datos y otros parámetros necesarios para establecer la conexión inicial. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> está diseñado para que coincida con el formato de cadena de conexión de OLE DB lo máximo posible con las siguientes excepciones:  
  
-   El "proveedor = `value` " se requiere una cláusula. Sin embargo, no puede usar "proveedor = MSDASQL" porque el proveedor de datos de .NET Framework para OLE DB no admite el proveedor OLE DB para ODBC (MSDASQL). Para obtener acceso a orígenes de datos ODBC, utilice el <xref:System.Data.Odbc.OdbcConnection> objeto que se encuentra en la <xref:System.Data.Odbc> espacio de nombres.  
  
-   A diferencia de ODBC o ADO, la cadena de conexión que se devuelve es el mismo que el establecido por el usuario <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, menos la información de seguridad si `Persist Security Info` está establecido en `false` (valor predeterminado). El proveedor de datos de .NET Framework para OLE DB no conservar o devolver la contraseña de una cadena de conexión a menos que establezca el `Persist Security Info` palabra clave para `true` (no recomendado). Para mantener un alto nivel de seguridad, se recomienda encarecidamente que utilice el `Integrated Security` palabra clave with `Persist Security Info` establecido en `false`.  
  
 Puede usar el <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad para conectarse a una variedad de orígenes de datos. El ejemplo siguiente muestra varias cadenas de conexión posible.  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 Si el `Data Source` palabra clave no se especifica en la cadena de conexión, el proveedor intentará conectarse al servidor local si está disponible.  
  
 Para obtener más información acerca de las cadenas de conexión, consulte [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  
  
 El <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad puede establecerse solo cuando se cierra la conexión. Muchos de los valores de cadena de conexión tienen propiedades correspondientes de solo lectura. Cuando se establece la cadena de conexión, se actualizan estas propiedades, excepto cuando se detecta un error. En este caso, ninguna de las propiedades se actualizan. <xref:System.Data.OleDb.OleDbConnection> las propiedades devuelven únicamente los valores que se encuentran en el <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  
  
 Restableciendo el <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> en una conexión cerrada, restablece todos los valores de cadena de conexión y las propiedades relacionadas. Esto incluye la contraseña. Por ejemplo, si se establece una cadena de conexión que incluye "Initial Catalog = AdventureWorks" y, a continuación, restablece la cadena de conexión en "proveedor = SQLOLEDB; origen de datos = MySQLServer; IntegratedSecurity = SSPI", la <xref:System.Data.OleDb.OleDbConnection.Database%2A> propiedad ya no está establecida en AdventureWorks. (El valor del catálogo inicial de la cadena de conexión corresponde a la `Database` propiedad.)  
  
 Cuando la propiedad está establecida, se realiza una validación preliminar de la cadena de conexión. Si los valores de la `Provider`, `Connect Timeout`, `Persist Security Info`, o `OLE DB Services` se incluyen en la cadena, se comprueban estos valores. Cuando una aplicación llama el <xref:System.Data.OleDb.OleDbConnection.Open%2A> método, la cadena de conexión está totalmente validada. Si la cadena de conexión contiene propiedades no válidas o no compatibles, una excepción en tiempo de ejecución, como <xref:System.ArgumentException>, se genera.  
  
> [!CAUTION]
>  Es posible proporcionar información de conexión para un <xref:System.Data.OleDb.OleDbConnection> en un archivo de vínculo de datos Universal (UDL); sin embargo debe evitar hacerlo. Archivos UDL no están cifrados y exponen la información de la cadena de conexión en texto no cifrado. Un archivo UDL no se puede proteger mediante .NET Framework, ya que se trata de un recurso basado en un archivo externo a la aplicación.  
  
 El formato básico de una cadena de conexión incluye una serie de pares palabra clave-valor separados por punto y coma. El signo igual (=) asocia cada palabra clave a su valor. Para incluir los valores que contienen un punto y coma, caracteres de comillas simples o carácter de comillas dobles, el valor debe incluirse entre comillas dobles. Si el valor contiene un punto y coma y un carácter de comillas dobles, el valor puede ir entre comillas simples. La comilla simple también es útil si el valor empieza por un carácter de comillas dobles. Por el contrario, se puede usar las comillas dobles si el valor empieza por una comilla simple. Si el valor contiene caracteres de comillas simples y comillas dobles, se debe duplicar el carácter de comillas utilizado para delimitar el valor cada vez que se produzca en el valor.  
  
 Para incluir espacios del principio o al finales del valor de cadena, el valor debe incluirse en comillas simples o dobles comillas. Se omiten los espacios iniciales o finales en torno a entero, booleano o valores enumerados, incluso si se incluyen entre comillas. Sin embargo, se conservan los espacios dentro de una palabra clave de literales de cadena o un valor. Las comillas simples o dobles puede utilizarse dentro de una cadena de conexión sin usar delimitadores (por ejemplo, `Data Source= my'Server` o `Data Source= my"Server`) a menos que un carácter de comilla es el primer o último carácter del valor.  
  
 Para incluir un signo igual (=) en una palabra clave o valor, debe ir precedida de otro signo igual. Por ejemplo, en la cadena de conexión hipotética  
  
```  
"key==word=value"  
```  
  
 la palabra clave es "key = word" y el valor es "value".  
  
 Si una palabra clave específica en una palabra clave = valor par aparece varias veces en una cadena de conexión, se usa la última aparición enumerada en el conjunto de valores.  
  
 Palabras clave no distinguen mayúsculas de minúsculas.  
  
> [!CAUTION]
>  Se debe tener cuidado al construir una cadena de conexión basada en la entrada de usuario, por ejemplo, al recuperar la información de identificador y la contraseña de usuario de un cuadro de diálogo y agregarla a la cadena de conexión. La aplicación debe asegurarse de que un usuario no puede incrustar parámetros de cadena de conexión adicionales en estos valores, por ejemplo, escribir una contraseña como "validpassword; database = somedb" en un intento para adjuntar una base de datos diferentes. Si usa el parámetro de cadena de conexión de las propiedades extendidas para conexiones OLE DB, evite pasar los identificadores de usuario y contraseñas, debe evitar almacenar identificadores de usuario y contraseñas en texto no cifrado si es posible y porque el valor predeterminado de `Persist Security Info= false` no afecta a la `Extended Properties` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y se establecen algunas de sus propiedades en la cadena de conexión.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Se ha suministrado un argumento de cadena de conexión no válido o no se ha suministrado un argumento de cadena de conexión requerido.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tiempo de espera para intentar establecer una conexión antes de detenerse y generar un error.</summary>
        <value>Tiempo que se debe esperar para que se abra la conexión, en segundos. El valor predeterminado es 15 segundos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de 0 no indica límite y debería evitarse en un <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> porque el intento de conexión esperará indefinidamente.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y se establecen algunas de sus propiedades en la cadena de conexión.  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor establecido es menor que 0.</exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea y devuelve un objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> asociado a <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>Un objeto <see cref="T:System.Data.OleDb.OleDbCommand" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
        <related type="Article" href="http://msdn.microsoft.com/library/b623f810-d871-49a5-b0f5-078cc3c34db6">Trabajar con comandos</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="oleDbConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.OleDb.OleDbConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la base de datos actual o de la que se va a utilizar una vez que se abre la conexión.</summary>
        <value>Nombre de la base de datos actual o de la que se va a utilizar tras abrir una conexión. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbConnection.Database%2A> propiedad actualiza dinámicamente. Si cambia la base de datos actual mediante una instrucción SQL o el <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> método, se envía un mensaje informativo y se actualiza automáticamente la propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y muestra algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de archivo o el nombre de servidor del origen de datos.</summary>
        <value>Nombre de archivo o nombre de servidor del origen de datos. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se cierra la conexión a la base de datos, el `DataSource` propiedad devuelve el contenido de `ConnectionString` para la palabra clave de origen de datos. Si la conexión está abierta y `ConnectionString` el valor de datos origen de la palabra clave empieza por "&#124;datadirectory&#124;", la propiedad devuelve lo que se encuentra en `ConnectionString` para solo la palabra de clave del origen de datos. Si la conexión a la base de datos está abierta, la propiedad devuelve lo que devuelve el proveedor nativo para la `DBPROP_INIT_DATASOURCE,` y si está vacía, que el proveedor nativo `DBPROP_DATASOURCENAME` se devuelve.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y muestra algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="oleDbConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="oleDbConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Referencia a una transacción <see cref="T:System.EnterpriseServices.ITransaction" /> existente en la que se va a dar de alta.</param>
        <summary>Se da de alta en la transacción especificada como una transacción distribuida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nuevas en ADO.NET 2.0 es la compatibilidad para usar el <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> método para dar de alta en una transacción distribuida. Dado que inscribe una conexión en un <xref:System.Transactions.Transaction> instancia, **EnlistTransaction** aprovecha la funcionalidad disponible en el <xref:System.Transactions> espacio de nombres para la administración de transacciones distribuidas, lo que preferible  **EnlistDistributedTransaction** para este propósito. Para obtener más información, consulte [transacciones distribuidas](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Aún puede dar de alta una transacción distribuida existente mediante el <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> método si la inscripción automática está deshabilitada. Dar de alta una transacción distribuida existente garantiza que, si se confirma o revierte la transacción, las modificaciones realizadas por el código en el origen de datos son también confirmadas o revertidas. Para obtener más información sobre las transacciones distribuidas, consulte [transacciones distribuidas](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> Devuelve una excepción si el <xref:System.Data.OleDb.OleDbConnection> ya se ha iniciado una transacción mediante <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. Sin embargo, si la transacción es una transacción local iniciada en el origen de datos (por ejemplo, al ejecutar de forma explícita la instrucción BEGIN TRANSACTION mediante un <xref:System.Data.OleDb.OleDbCommand> objeto), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> revierte la transacción local y se inscribe en las existentes transacción distribuida como solicitado. No recibirá aviso de que se ha revertido la transacción local y el responsable de administrar las transacciones locales no iniciada mediante <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="oleDbConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Referencia a una transacción <see cref="T:System.Transactions.Transaction" /> existente en la que se va a dar de alta.</param>
        <summary>Se da de alta en la transacción especificada como una transacción distribuida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nuevas en ADO.NET 2.0 es la compatibilidad para usar el <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> método para dar de alta en una transacción distribuida. Dado que inscribe una conexión en un <xref:System.Transactions.Transaction> instancia, **EnlistTransaction** aprovecha la funcionalidad disponible en el <xref:System.Transactions> espacio de nombres para la administración de transacciones distribuidas, lo que preferible  **EnlistDistributedTransaction**, que usa un <xref:System.EnterpriseServices.ITransaction> objeto. También tiene una semántica ligeramente diferente: una vez que una conexión se inscribe explícitamente en una transacción, no se puede dar de baja o dada de alta en otra transacción hasta que finaliza la primera transacción. Para obtener más información sobre las transacciones distribuidas, consulte [transacciones distribuidas](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberSignature Language="F#" Value="member this.GetOleDbSchemaTable : Guid * obj[] -&gt; System.Data.DataTable" Usage="oleDbConnection.GetOleDbSchemaTable (schema, restrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">Uno de los valores <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> que especifica la tabla de esquema que se va a devolver.</param>
        <param name="restrictions">Matriz de <see cref="T:System.Object" /> de valores de restricción. Se aplican en el orden de las columnas de restricción. Es decir, el primer valor de restricción se aplica a la primera columna de restricción, el segundo valor de restricción se aplica a la segunda columna de restricción y así sucesivamente.</param>
        <summary>Devuelve información de esquema desde un origen de datos tal y como indica un GUID, y después de aplicar las restricciones especificadas.</summary>
        <returns>Una <see cref="T:System.Data.DataTable" /> que contiene la información de esquema solicitada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabla de esquema se devuelve como un <xref:System.Data.DataTable> que tiene el mismo formato que el conjunto de filas de esquema OLE DB especificado por el `schema` parámetro. Use la `restrictions` parámetro para filtrar las filas que se devolverán en la <xref:System.Data.DataTable> (por ejemplo, mediante la especificación de restricciones de nombre de tabla, tipo, propietario o esquema). Al pasar los valores de la matriz, se incluyen las cadenas vacías o valores nulos para los elementos de matriz que no contengan valores. Si se pasa una matriz vacía para `restrictions`, se devuelven todas las filas (una por cada tabla) de forma predeterminada en orden. Valores de la matriz se corresponden con el orden de las columnas de la tabla de origen y <xref:System.Data.DataTable>. Cada elemento de la matriz de restricciones se compara con el contenido de la columna correspondiente en el conjunto de filas de esquema. Por ejemplo, el primer elemento de la matriz de restricciones se compara con la primera columna del conjunto de filas. Si un elemento de restricción no es null, solo las filas del conjunto de filas de esquema que coincide exactamente con el valor de la restricción se agregan a resultante <xref:System.Data.DataTable>.  
  
 El <xref:System.Data.OleDb.OleDbConnection> método llama a la instancia subyacente OLE DB **IDBSchemaRowset:: GetRowset** método mediante reglas de conversión estándar de common language runtime. Para obtener más información, consulte [tipos de datos COM](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).  
  
 Puede recuperar información sobre los literales con <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. Esto proporciona información equivalente a llamar a OLE DB **IDBInfo:: GetLiteralInfo** interfaz o ADO **Connection.OpenSchema** método con el `adSchemaDBInfoLiterals` constante.  
  
   
  
## Examples  
 El ejemplo siguiente devuelve una lista de tablas en una base de datos.  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">El conjunto de restricciones especificado no es válido.</exception>
        <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Data.OleDb.OleDbConnection" /> está cerrada.</exception>
        <exception cref="T:System.ArgumentException">El proveedor OLE DB no admite el conjunto de filas de esquema especificado.  
  
O bien 
El parámetro <paramref name="schema" /> contiene un valor de <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> y el parámetro <paramref name="restrictions" /> contiene una o varias restricciones.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtención de información de esquema de una base de datos</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtención de información de esquema de una base de datos</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OleDb.OleDbConnection" /> utilizando la cadena especificada para el nombre del esquema.</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando `collectionName` se especifica como null, el <xref:System.Data.DataTable> contendrá información sobre todos los metadatos que están disponibles y sus restricciones.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtención de información de esquema de una base de datos</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
        <param name="restrictionValues">Especifica un conjunto de valores de restricción para el esquema solicitado.</param>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OleDb.OleDbConnection" /> utilizando la cadena especificada para el nombre del esquema y la matriz de cadena determinada para los valores de restricción.</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando `collectionName` se especifica como null, el <xref:System.Data.DataTable> contendrá información sobre todos los metadatos que están disponibles y sus restricciones.  
  
 El `restrictionValues` puede proporcionar el parámetro *n* profundidad de valores que se especifican en la colección de restricciones para una recopilación específica. Para establecer valores en una restricción dada y no establece los valores de otras restricciones, deberá establecer las restricciones anteriores como null y, a continuación, coloque el valor apropiado para la restricción de que desea especificar un valor para.  
  
 Un ejemplo de esto es la colección "Tables". Si la colección "Tables" tiene tres restricciones (base de datos, propietario y nombre de tabla), y desea obtener solo las tablas asociadas al propietario "Carl", se debe pasar en los siguientes valores (como mínimo): "Carl" es null. Si no se pasa un valor de restricción, se usan los valores predeterminados para esa restricción. Esta es la misma asignación como pasar null, que es diferente de pasar una cadena vacía para el valor del parámetro. En ese caso, la cadena vacía ("") se considera que el valor del parámetro especificado.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtención de información de esquema de una base de datos</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.OleDb.OleDbInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.OleDb.OleDbInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el proveedor envía un mensaje de advertencia o de información.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los clientes que desean procesar las advertencias o mensajes informativos enviados por el servidor deben crear un <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegado para que escuche a este evento.  
  
 El <xref:System.Data.OleDb.OleDbConnection.InfoMessage> evento tiene lugar cuando se devuelve un mensaje con gravedad baja desde el origen de datos. Los mensajes de gravedad baja son aquellos que no producen una excepción. Para Microsoft SQL Server, se incluyen los mensajes de error que tienen una gravedad de 10 o menos  
  
 Para obtener más información y un ejemplo, vea [eventos de conexión](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="oleDbConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre una conexión de base de datos con los valores de propiedad que especifica <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbConnection> dibuja una conexión abierta del grupo de conexiones si está disponible. En caso contrario, Establece una nueva conexión al origen de datos. Puede abrir más de un objeto DataReader en una sola <xref:System.Data.OleDb.OleDbConnection>. Si el proveedor OLE DB que utiliza no es compatible con más de un objeto DataReader activo en una sola conexión, el proveedor OLEDB abre implícitamente una conexión adicional para cada uno.  
  
> [!NOTE]
>  Si el <xref:System.Data.OleDb.OleDbConnection> queda fuera del ámbito, no se cierra. Por lo tanto, debe cerrar explícitamente la conexión mediante una llamada a <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose**, o mediante la conexión dentro de un `Using` instrucción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La conexión ya está abierta.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Se produjo un error de nivel de conexión mientras se abría la conexión.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string" Usage="System.Data.OleDb.OleDbConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_Provider")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del proveedor OLE DB especificado en la cláusula "Provider= " de la cadena de conexión.</summary>
        <value>Nombre del proveedor como se especifica en la cláusula "Provider= " de la cadena de conexión. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y muestra algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberSignature Language="F#" Value="static member ReleaseObjectPool : unit -&gt; unit" Usage="System.Data.OleDb.OleDbConnection.ReleaseObjectPool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica que la agrupación de objetos <see cref="T:System.Data.OleDb.OleDbConnection" /> podrá liberarse cuando se libere la última conexión subyacente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` se puede llamar para liberar recursos que estaba reservados para agrupados <xref:System.Data.OleDb.OleDbConnection> objetos. Es posible que desee llamar a este método si, por ejemplo, no se usará el objeto de conexión nuevo durante el tiempo que los servicios OLE DB normalmente mantiene las conexiones agrupadas activo. Tenga en cuenta que llamar al método por sí solo no se liberan las conexiones activas que existen en el grupo.  
  
 Debe ocurrir lo siguiente antes de que finalmente se elimina el grupo:  
  
1.  Llame a <xref:System.Data.OleDb.OleDbConnection.Close%2A> para devolver el objeto de conexión al grupo.  
  
2.  Permitir que cada objeto de conexión en tiempo de espera del grupo.  
  
3.  Llame a <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  
  
4.  Invocar la recolección de elementos.  
  
 Por el contrario, si se llama a <xref:System.Data.OleDb.OleDbConnection.Close%2A> en todas las conexiones activas y se invoca la recolección de elementos, pero no llame a <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, los recursos reservados para los objetos agrupados seguirán estando disponibles.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection>, lo abre, muestra algunas de sus propiedades, la conexión se cierra y libera el grupo de objetos para ahorrar recursos.  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
        <related type="Article" href="http://msdn.microsoft.com/library/2bd83b1e-3ea9-43c4-bade-d9cdb9bbbb04">Descripción de la agrupación de conexiones</related>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="oleDbConnection.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actualiza la propiedad <see cref="P:System.Data.OleDb.OleDbConnection.State" /> del objeto <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algunos proveedores OLE DB pueden comprobar el estado actual de la conexión. Por ejemplo, si el servidor de base de datos ha reciclado desde que abrió la <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A> propiedad continuará devolviendo `Open`. Si está trabajando con un proveedor OLE DB que admite el sondeo para obtener esta información en una conexión dinámica, una llamada a la <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> método y, a continuación, comprobar la <xref:System.Data.OleDb.OleDbConnection.State%2A> propiedad le indicará que la conexión ya no está abierta. El <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> método se basa en la funcionalidad en el proveedor OLE DB para comprobar el estado actual de la conexión. Para determinar si el proveedor OLE DB admite esta funcionalidad, consulte la documentación del proveedor para obtener información sobre DBPROP_CONNECTIONSTATUS.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena que contiene la versión del servidor al que está conectado el cliente.</summary>
        <value>Versión del servidor conectado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> propiedad se asigna a la propiedad de OLE DB DBPROP_DBMSVER. Si <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> no se admite el proveedor OLE DB subyacentes, se devuelve una cadena vacía.  
  
 Es la versión del formulario *##. ##. ###*, donde los dos primeros dígitos son la versión principal, los dos dígitos son la versión secundaria y los cuatro últimos dígitos son la versión de lanzamiento. El proveedor debe presentar la versión del producto en este formulario, pero también puede agregar la versión específica del producto, por ejemplo, "04.01.0000 Rdb 4.1". La cadena tiene el formato *principal.secundaria.compilación*, donde principal y secundarias son exactamente dos dígitos y compilación es exactamente cuatro dígitos.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbConnection> y muestra algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La conexión está cerrada.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.OleDb.OleDbConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado actual de la conexión.</summary>
        <value>Combinación bit a bit de los valores de <see cref="T:System.Data.ConnectionState" />. El valor predeterminado es Closed.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se permite cambios de estado de la siguiente:  
  
-   Desde `Closed` a `Open`, usando la <xref:System.Data.OleDb.OleDbConnection.Open%2A> método de la <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
-   Desde `Open` a `Closed`, mediante el <xref:System.Data.OleDb.OleDbConnection.Close%2A> método o la **Dispose** método de la <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
> [!NOTE]
>  En la versión anterior de .NET Framework, una llamada a la <xref:System.Data.OleDb.OleDbConnection.State%2A> propiedad aumenta la sobrecarga de la aplicación porque cada llamada provoca una llamada a la propiedad DBPROP_CONNECTIONSTATUS de OLE DB para una conexión abierta. Con la versión de .NET Framework 2.0, ya no es un problema.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Conectarse a orígenes de datos</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel isolationLevel) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Object" /> que es una copia de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbConnection> se convierte en una interfaz <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>