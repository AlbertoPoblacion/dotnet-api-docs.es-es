<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="315a8b0686eee5431498d486a203f23343bdac36" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944459" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un conjunto de comandos de datos y una conexión de base de datos que se utilizan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar el origen de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbDataAdapter> actúa como puente entre un <xref:System.Data.DataSet> y origen de datos para recuperar y guardar datos. El <xref:System.Data.OleDb.OleDbDataAdapter> proporciona este puente mediante <xref:System.Data.Common.DbDataAdapter.Fill%2A> para cargar datos desde el origen de datos en el <xref:System.Data.DataSet>y el uso de <xref:System.Data.Common.DbDataAdapter.Update%2A> para enviar los cambios realizados en el <xref:System.Data.DataSet> en el origen de datos.  
  
 Cuando el <xref:System.Data.OleDb.OleDbDataAdapter> rellena un <xref:System.Data.DataSet>, crea las tablas y columnas adecuadas para los datos devueltos si aún no existen. Sin embargo, la información de clave principal no está incluida en el esquema creado implícitamente a menos que el <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad está establecida en <xref:System.Data.MissingSchemaAction.AddWithKey>. También puede tener la <xref:System.Data.OleDb.OleDbDataAdapter> cree el esquema de la <xref:System.Data.DataSet>, incluida la información de clave principal, antes de llenarlo con datos mediante <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. Para obtener más información, consulte [agregar restricciones existentes a un conjunto de datos](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
 Tenga en cuenta que algunos proveedores OLE DB, incluido el proveedor MSDataShape, no devuelven información de clave principal o la tabla base. Por lo tanto, el <xref:System.Data.OleDb.OleDbDataAdapter> no se puede establecer correctamente la <xref:System.Data.DataTable.PrimaryKey%2A> propiedad en cualquier creado <xref:System.Data.DataTable>. En estos casos debe especificar explícitamente las claves principales para las tablas en el <xref:System.Data.DataSet>.  
  
 El <xref:System.Data.OleDb.OleDbDataAdapter> también incluye el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, y <xref:System.Data.Common.DataAdapter.TableMappings%2A> propiedades para facilitar la carga y actualización de datos.  
  
 Cuando se crea una instancia de <xref:System.Data.OleDb.OleDbDataAdapter>, las propiedades se establecen en sus valores iniciales. Para obtener una lista de estos valores, vea el <xref:System.Data.OleDb.OleDbDataAdapter> constructor.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> y <xref:System.Data.OleDb.OleDbConnection>para seleccionar registros de un origen de datos de Access y rellenar un <xref:System.Data.DataSet> con las filas seleccionadas. El relleno <xref:System.Data.DataSet> , a continuación, se devuelve. Para lograr esto, se pasa al método inicializada <xref:System.Data.DataSet>, una cadena de conexión y una cadena de consulta que es una instrucción SELECT de SQL.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una instancia de <xref:System.Data.OleDb.OleDbDataAdapter>, las siguientes propiedades de lectura y escritura se establecen en los siguientes valores iniciales.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y se establecen algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><see cref="T:System.Data.OleDb.OleDbCommand" /> que es un procedimiento almacenado o una instrucción SELECT y que se establece como la propiedad <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> con el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> especificado como propiedad <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación de la <xref:System.Data.OleDb.OleDbDataAdapter> constructor establece el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad al valor especificado en el `selectCommand` parámetro.  
  
 Cuando se crea una instancia de <xref:System.Data.OleDb.OleDbDataAdapter>, las siguientes propiedades de lectura y escritura se establecen en los siguientes valores iniciales.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y se establecen algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Cadena que es una instrucción SQL SELECT o un procedimiento almacenado que debe utilizar la propiedad <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <param name="selectConnection"><see cref="T:System.Data.OleDb.OleDbConnection" /> que representa la conexión.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> con la propiedad <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación de la <xref:System.Data.OleDb.OleDbDataAdapter> abre y cierra un <xref:System.Data.OleDb.OleDbConnection> si aún no está abierto. Esto puede ser útil en una aplicación que debe llamar a la <xref:System.Data.Common.DbDataAdapter.Fill%2A> método para dos o más <xref:System.Data.OleDb.OleDbDataAdapter> objetos. Si el <xref:System.Data.OleDb.OleDbConnection> está ya abierto, debe llamar explícitamente a <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose** para cerrarlo.  
  
 Cuando se crea una instancia de <xref:System.Data.OleDb.OleDbDataAdapter>, las siguientes propiedades de lectura y escritura se establecen en los siguientes valores iniciales.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y se establecen algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Cadena que es una instrucción SQL SELECT o un procedimiento almacenado que debe utilizar la propiedad <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <param name="selectConnectionString">La cadena de conexión.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> con la propiedad <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga de la <xref:System.Data.OleDb.OleDbDataAdapter> constructor usa el `selectConnectionString` parámetro para establecer el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad. Sin embargo, no abre la conexión. Todavía explícitamente debe abrir la conexión.  
  
 Cuando se crea una instancia de <xref:System.Data.OleDb.OleDbDataAdapter>, las siguientes propiedades de lectura y escritura se establecen en los siguientes valores iniciales.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y se establecen algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_DeleteCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL o un procedimiento almacenado para eliminar registros del conjunto de datos.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" /> utilizado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos que se corresponden con las filas eliminadas de <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> puede generar automáticamente si se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad y use el <xref:System.Data.OleDb.OleDbCommandBuilder>. A continuación, se generan los comandos adicionales que no se establece mediante el <xref:System.Data.OleDb.OleDbCommandBuilder>. Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Cuando <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> se asigna a creada anteriormente <xref:System.Data.OleDb.OleDbCommand>, el <xref:System.Data.OleDb.OleDbCommand> no se clona. El <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OleDb.OleDbCommand> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y establece el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega filas a <see cref="T:System.Data.DataSet" /> o las actualiza para que coincidan con las de un objeto <see langword="Recordset" /> o <see langword="Record" /> ADO.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable"><see cref="T:System.Data.DataTable" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
        <param name="ADODBRecordSet">Objeto <see langword="Recordset" /> o <see langword="Record" /> de ADO.</param>
        <summary>Agrega filas a <see cref="T:System.Data.DataTable" /> o las actualiza para que coincidan con las de un objeto <see langword="Recordset" /> o <see langword="Record" /> ADO, utilizando el objeto <see cref="T:System.Data.DataTable" /> y los objetos ADO especificados.</summary>
        <returns>Número de filas actualizadas correctamente en <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El vínculo entre los objetos de datos ActiveX (ADO) y ADO.NET es una operación unidireccional en que se puede copiar datos de ADO para la <xref:System.Data.DataSet>, pero las actualizaciones de los datos deben controlarse mediante ADO.NET.  
  
 Esta sobrecarga de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método no cierra la entrada `Recordset` al finalizar la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación.  
  
 Al controlar instrucciones SQL por lotes que devuelven varios resultados, esta implementación de <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> y <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> para el proveedor de datos OLE DB Framework recupera información de esquema solo el primer resultado.  
  
 El <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación agrega las filas en el destino especificado <xref:System.Data.DataTable> objeto en el <xref:System.Data.DataSet>, creando el <xref:System.Data.DataTable> objeto si aún no existe. Cuando creas un <xref:System.Data.DataTable> objeto, el <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación normalmente crea únicamente los metadatos de nombre de columna. Sin embargo, si la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad está establecida en `AddWithKey`, también se crean claves principales adecuadas y restricciones.  
  
 Puede usar el <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método varias veces en el mismo <xref:System.Data.DataTable>. Si existe una clave principal, las filas entrantes se combinan con las filas coincidentes que ya existen. Si no existe ninguna clave principal, las filas entrantes se anexan a la <xref:System.Data.DataTable>. Si está presente la información de clave principal, las filas duplicadas se reconcilian y solo aparecen una vez en el <xref:System.Data.DataTable> que corresponde a la <xref:System.Data.DataSet>. Información de clave principal puede establecerse a través de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, especificando el <xref:System.Data.DataTable.PrimaryKey%2A> propiedad de la <xref:System.Data.DataTable>, o estableciendo la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad `AddWithKey`.  
  
 Si <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> devuelve los resultados de OUTER JOIN, `DataAdapter` no establece un valor <xref:System.Data.DataTable.PrimaryKey%2A> para el objeto <xref:System.Data.DataTable>resultante. Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente. Para obtener más información, consulte [definir claves principales](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Para que funcione correctamente con el proveedor de datos de .NET Framework para OLE DB, `AddWithKey` requiere que el proveedor OLE DB nativo obtenga la información de clave principal necesaria estableciendo la propiedad DBPROP_UNIQUEROWS y, a continuación, determina qué columnas son de clave principal las columnas mediante el examen de DBCOLUMN_KEYCOLUMN en el `IColumnsRowset`. O bien el usuario puede establecer explícitamente las restricciones de clave principales en cada <xref:System.Data.DataTable>. Esto garantiza que se actualizan los registros entrantes que coincidan con los registros existentes en lugar de anexar.  
  
 Si el <xref:System.Data.OleDb.OleDbDataAdapter> detecta columnas duplicadas al rellenar un <xref:System.Data.DataTable>, genera nombres para las columnas siguientes, con el patrón "*columnname*1", "*columnname*2", "*columnname*3" y así sucesivamente. Los nombres de columna vacía se agregan a la <xref:System.Data.DataTable>, mediante una cadena vacía para la primera columna, seguida de "1", "2", "3" y así sucesivamente para las siguientes columnas vacías.  
  
 Los valores de ADO `Recordset` o `Record` objetos están convertidos a common language tipos en tiempo de ejecución para el almacenamiento en la <xref:System.Data.DataSet>.  
  
> [!CAUTION]
>  Esta sobrecarga de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método implícitamente no llama a `Close` en el objeto ADO cuando se completa la operación de relleno. Por lo tanto, llame siempre a `Close` cuando haya terminado de utilizar ADO `Recordset` o `Record` objetos. Esto garantiza que la conexión subyacente a un origen de datos se libera de manera oportuna y también evita que las infracciones de acceso posible debido a los objetos ADO no administrados que se va a reclamado por la recolección de elementos cuando todavía hay referencias existentes.  
  
 Cuando se llama a la `TableMappings.Add` método en un `DataAdapter` y se asigna explícitamente el parámetro de la tabla de origen en una cadena vacía, el conjunto de datos se rellena correctamente mediante la tabla de origen, pero el conjunto de datos se rellenará con nada. Por ejemplo, en el ejemplo siguiente, `rDataSet` se rellenará con nada.  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 En este ejemplo se muestra cómo se puede omitir un resultado cuando se trabaja con varios resultados.  
  
 En el ejemplo siguiente se usa un <xref:System.Data.OleDb.OleDbDataAdapter> para rellenar un <xref:System.Data.DataTable> mediante ADO `Recordset`. En este ejemplo se da por supuesto que ha creado un ADO `Recordset`.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
        <param name="ADODBRecordSet">Objeto <see langword="Recordset" /> o <see langword="Record" /> de ADO.</param>
        <param name="srcTable">Tabla de origen utilizada para las asignaciones de tabla.</param>
        <summary>Agrega filas de <see cref="T:System.Data.DataSet" /> o las actualiza para que coincidan con las de un objeto <see langword="Recordset" /> ADO o <see langword="Record" /> mediante el objeto <see cref="T:System.Data.DataSet" />, el objeto ADO y el nombre de tabla de origen especificados.</summary>
        <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El vínculo entre los objetos de datos ActiveX (ADO) y ADO.NET es una operación unidireccional en que se puede copiar datos de ADO para la <xref:System.Data.DataSet>, pero las actualizaciones de los datos deben controlarse mediante ADO.NET.  
  
 El <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método itera a través de varios resultados mediante una llamada a la `NextRecordset` método en el `Recordset`, cierre la entrada `Recordset` en la realización de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación.  
  
 El <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación agrega las filas en el destino especificado <xref:System.Data.DataTable> objeto en el <xref:System.Data.DataSet>, creando el <xref:System.Data.DataTable> objeto si aún no existe. Cuando creas un <xref:System.Data.DataTable> objeto, el <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación normalmente crea únicamente los metadatos de nombre de columna. Sin embargo, si la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad está establecida en `AddWithKey`, también se crean claves principales adecuadas y restricciones.  
  
 Si está presente la información de clave principal, las filas duplicadas se reconcilian y solo aparecen una vez en el <xref:System.Data.DataTable> que corresponde a la <xref:System.Data.DataSet>. Información de clave principal puede establecerse a través de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, especificando el <xref:System.Data.DataTable.PrimaryKey%2A> propiedad de la <xref:System.Data.DataTable>, o estableciendo la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad `AddWithKey`.  
  
 Para que funcione correctamente con el proveedor de datos de .NET Framework para OLE DB, `AddWithKey` requiere que el proveedor OLE DB nativo obtener información de clave principal necesaria estableciendo la propiedad DBPROP_UNIQUEROWS y, a continuación, determine qué columnas son de clave principal las columnas mediante el examen de DBCOLUMN_KEYCOLUMN en el **IColumnsRowset**. O bien el usuario puede establecer explícitamente las restricciones de clave principales en cada <xref:System.Data.DataTable>. De este modo se garantiza que los registros entrantes que coincidan con los ya existentes se actualicen en lugar de agregarse.  
  
 Si <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> devuelve los resultados de OUTER JOIN, `DataAdapter` no establece un valor <xref:System.Data.DataTable.PrimaryKey%2A> para el objeto <xref:System.Data.DataTable>resultante. Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente. Para obtener más información, consulte [definir claves principales](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Si el `Recordset` está cerrado antes del comienzo de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operación, se produce ningún error. Esto es necesario para el control de varios resultados, porque las consultas que no devuelven filas se indican mediante un cerrado `Recordset`. El <xref:System.Data.OleDb.OleDbDataAdapter> simplemente llama a `NextRecordset` en cerrado `Recordset` y continúa el procesamiento.  
  
 Si se produce un error al rellenar el conjunto de datos, las filas agregadas antes de la aparición del error permanecen en el <xref:System.Data.DataSet>. El resto de la operación se ha anulado.  
  
 Si el <xref:System.Data.Common.DbDataAdapter> objeto detecta las columnas duplicadas al rellenar un <xref:System.Data.DataTable>, genera nombres para las columnas siguientes, con el patrón "*columnname*1","*columnname*2", " *columnname*3" y así sucesivamente. Si los datos entrantes contienen columnas sin nombre, se colocan en el <xref:System.Data.DataSet> según el modelo "Columna1", "Columna2" y así sucesivamente. Cuando se agregan varios conjuntos de resultados a la <xref:System.Data.DataSet> cada conjunto de resultados se coloca en una tabla independiente. Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" etc.). Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no se producen conflictos con estos modelos de nomenclatura.  
  
 Los valores de ADO `Recordset` o `Record` objetos están convertidos a common language tipos en tiempo de ejecución para el almacenamiento en la <xref:System.Data.DataSet>.  
  
> [!NOTE]
>  Esta sobrecarga de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método se llama implícitamente `Close` en el objeto ADO cuando se completa la operación de relleno.  
  
 En el ejemplo siguiente se usa un <xref:System.Data.OleDb.OleDbDataAdapter> para rellenar un <xref:System.Data.DataSet> mediante ADO `Recordset` decir ADO `Record` objeto. En este ejemplo se da por supuesto que ha creado un ADO `RecordSet` y `Record` objeto.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">La tabla de origen no es válida.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_InsertCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL o procedimiento almacenado utilizado para insertar nuevos registros en el origen de datos.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" /> utilizado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos que se corresponde con las filas nuevas de <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> puede generar automáticamente si se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad y use el <xref:System.Data.OleDb.OleDbCommandBuilder>. A continuación, se generan los comandos adicionales que no se establece mediante el <xref:System.Data.OleDb.OleDbCommandBuilder>. Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Cuando <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> se asigna a creada anteriormente <xref:System.Data.OleDb.OleDbCommand>, el <xref:System.Data.OleDb.OleDbCommand> no se clona. El <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OleDb.OleDbCommand> objeto.  
  
> [!NOTE]
>  Si la ejecución de este comando devuelve filas, estas filas se pueden agregar a la <xref:System.Data.DataSet> según cómo configure el <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> propiedad de la <xref:System.Data.OleDb.OleDbCommand> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y establece el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> después de que se ejecute un comando en el origen de datos. Se ha producido un intento de actualización. Por lo tanto, se produce el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando usas <xref:System.Data.Common.DbDataAdapter.Update%2A>, hay dos eventos que se producen por cada fila de datos actualizada. El orden de ejecución es como sigue:  
  
1.  Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.  
  
2.  Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  Ejecuta el comando.  
  
4.  Si el comando se establece en `FirstReturnedRecord`, el primer resultado devuelto se coloca en el <xref:System.Data.DataRow>.  
  
5.  Si hay parámetros de salida, se colocan en el <xref:System.Data.DataRow>.  
  
6.  Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  Se llama a <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
   
  
## Examples  
 El ejemplo siguiente se muestra el <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> y <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> eventos que se va a usar.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdating")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce durante el método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, antes de que se ejecute un comando en el origen de datos. Se ha producido un intento de actualización. Por lo tanto, se produce el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando usas <xref:System.Data.Common.DbDataAdapter.Update%2A>, hay dos eventos que se producen por cada fila de datos actualizada. El orden de ejecución es como sigue:  
  
1.  Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.  
  
2.  Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  Ejecuta el comando.  
  
4.  Si el comando se establece en `FirstReturnedRecord`, el primer resultado devuelto se coloca en el <xref:System.Data.DataRow>.  
  
5.  Si hay parámetros de salida, se colocan en el <xref:System.Data.DataRow>.  
  
6.  Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  Se llama a <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
   
  
## Examples  
 El ejemplo siguiente se muestra el <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> y <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> eventos que se va a usar.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_SelectCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la instrucción SQL o el procedimiento almacenado utilizado para seleccionar registros del origen de datos.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" /> que se utiliza durante <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> para seleccionar registros del origen de datos y colocarlos en <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> se asigna a creada anteriormente <xref:System.Data.OleDb.OleDbCommand>, el <xref:System.Data.OleDb.OleDbCommand> no se clona. El <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OleDb.OleDbCommand> objeto.  
  
 Si el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> no devuelve ninguna fila, no hay tablas se agregan a la <xref:System.Data.DataSet>, y no se genera ninguna excepción.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y establece el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Trabajar con objetos DataAdapter</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>Una interfaz <see cref="T:System.Data.IDbCommand" /> que se usa durante una actualización para eliminar los registros del origen de datos para las filas eliminadas en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>Una interfaz <see cref="T:System.Data.IDbCommand" /> que se usa durante una actualización para insertar los registros de un origen de datos para su colocación en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>Una interfaz <see cref="T:System.Data.IDbCommand" /> que se usa durante una actualización para seleccionar los registros de un origen de datos para su colocación en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>Una interfaz <see cref="T:System.Data.IDbCommand" /> que se usa durante una actualización para actualizar los registros del origen de datos para las filas modificadas del conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Object" /> que es una copia de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OleDb.OleDbDataAdapter> se convierte en una interfaz <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_UpdateCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL o procedimiento almacenado utilizado para actualizar registros en el origen de datos.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" /> utilizado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros en el origen de datos que corresponden a las filas modificadas en el <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> puede generar automáticamente si se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad y use el <xref:System.Data.OleDb.OleDbCommandBuilder>. A continuación, se generan los comandos adicionales que no se establece mediante el <xref:System.Data.OleDb.OleDbCommandBuilder>. Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Cuando <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> se asigna a creada anteriormente <xref:System.Data.OleDb.OleDbCommand>, el <xref:System.Data.OleDb.OleDbCommand> no se clona. El <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OleDb.OleDbCommand> objeto.  
  
> [!NOTE]
>  Si la ejecución de este comando devuelve filas, estas filas se pueden combinar con el <xref:System.Data.DataSet> según cómo configure el <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> propiedad de la <xref:System.Data.OleDb.OleDbCommand> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OleDb.OleDbDataAdapter> y establece el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>