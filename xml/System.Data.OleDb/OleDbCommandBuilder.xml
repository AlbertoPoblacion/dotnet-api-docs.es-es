<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OleDbCommandBuilder.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b115617c9192c502a2c1876e1d32eaa8ba84486.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b115617c9192c502a2c1876e1d32eaa8ba84486</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">Genera de manera automática comandos de tabla única utilizados para conciliar los cambios realizados en un objeto <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> con la base de datos asociada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated data source.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> no genera automáticamente las instrucciones SQL necesarias para reconciliar los cambios realizados en un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con el origen de datos asociado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>However, you can create an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Then, any additional SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos siempre que se establezca la <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">Sólo se puede asociar uno <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objetos entre sí al mismo tiempo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">Para generar instrucciones INSERT, UPDATE o DELETE, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> usa el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad que se va a recuperar automáticamente un conjunto de metadatos requerido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> after the metadata is retrieved, such as after the first update, you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">Si cambia la <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> una vez recuperados los metadatos, como tras la primera actualización, se debe llamar el <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> método para actualizar los metadatos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> también usa el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbCommand.Transaction%2A&gt;</ph> propiedades al que hace referencia el <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">El usuario debe llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se modifican una o varias de estas propiedades, o si el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</ph> propio se reemplaza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;</ph> propiedades conservan sus valores anteriores.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> se desasocie de la <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, y los comandos generados dejan de usarse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, along <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, to select rows from a data source.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, junto <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, para seleccionar filas de un origen de datos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The example is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</source>
          <target state="translated">En el ejemplo se pasa un inicializado <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, una cadena de conexión, una cadena de consulta que es una instrucción SELECT de SQL y una cadena que es el nombre de la tabla de origen de datos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</source>
          <target state="translated">El ejemplo crea un <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Una clase <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommandBuilder" /&gt;</ph> con el objeto <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> asociado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos generados por el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> especificado en esta propiedad.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
          <source>When you create a new instance <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Cuando se crea una nueva instancia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>, cualquier existente <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> asociada a esta <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> se libera.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> object for which SQL statements are automatically generated.</source>
          <target state="translated">Obtiene o establece un objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> para el que se generan instrucciones SQL automáticamente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos generados por el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> especificado en esta propiedad.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
          <source>When you create a new instance <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Cuando se crea una nueva instancia <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>, cualquier existente <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> asociada a esta <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> se libera.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> que hace referencia al procedimiento almacenado del que se va a derivar la información de parámetros.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>.</source>
          <target state="translated">Los parámetros derivados se agregan a la colección de <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /&gt;</ph> del objeto <ph id="ph2">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object.</source>
          <target state="translated">Recupera información de parámetro del procedimiento almacenado especificado en <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> y rellena la colección de <ph id="ph2">&lt;see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> overwrites any existing parameter information for the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> sobrescribe cualquier información de parámetros existente para la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> requires an additional call to the data source to obtain the information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> requiere una llamada adicional al origen de datos para obtener la información.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">Si la información de parámetros se conoce de antemano, resulta más eficaz para rellenar la colección de parámetros estableciendo la información de manera explícita.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>You can only use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> with stored procedures.</source>
          <target state="translated">Sólo se puede utilizar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> con los procedimientos almacenados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>You cannot use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> to populate the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">No se puede utilizar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A&gt;</ph> para rellenar la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbParameterCollection&gt;</ph> con instrucciones de Transact-SQL arbitrarias, como una instrucción SELECT parametrizada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>configurar parámetros y tipos de datos de parámetro<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
          <source>The underlying OLE DB provider does not support returning stored procedure parameter information, the command text is not a valid stored procedure name, or the <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /&gt;</ph> specified was not <ph id="ph2">&lt;see langword="StoredProcedure" /&gt;</ph>.</source>
          <target state="translated">El proveedor OLE DB subyacente no admite la devolución de información de parámetro del procedimiento almacenado, el texto del comando no es un nombre válido de procedimiento almacenado o el valor especificado de <ph id="ph1">&lt;see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /&gt;</ph> no era <ph id="ph2">&lt;see langword="StoredProcedure" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if it is possible.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, genere nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro le permite forzar la <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> método informativos o para solucionar problemas con fines porque devuelve el texto de la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> método informativos o para solucionar problemas con fines porque devuelve el texto de la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if it is possible.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, genere nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> método informativos o para solucionar problemas con fines porque devuelve el texto de la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro le permite forzar la <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if it is possible.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, genere nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform updates at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will be still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro le permite forzar la <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto del entrecomillado de ese identificador.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Incluye una secuencia de escape correcta de las comillas incrustadas que pueda haber en el identificador.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">Identificador original sin comillas.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto del entrecomillado de ese identificador.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Incluye una secuencia de escape correcta de las comillas incrustadas que pueda haber en el identificador.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">Versión entrecomillada del identificador.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">Se crea una secuencia de escape correcta de las comillas incrustadas en el identificador.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The unquoted identifier to be returned in quoted format.</source>
          <target state="translated">Identificador sin comillas que se va a devolver en formato entrecomillado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>When a connection is passed, causes the managed wrapper to get the quote character from the OLE DB provider.</source>
          <target state="translated">Cuando se pasa una conexión, el contenedor administrado obtiene el carácter de comilla del proveedor OLE DB.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>When no connection is passed, the string is quoted using values from <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" /&gt;</ph>.</source>
          <target state="translated">Cuando no se pasa ninguna conexión, la cadena se entrecomilla usando valores de <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /&gt;</ph> y de <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto del entrecomillado de ese identificador.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Incluye una secuencia de escape correcta de las comillas incrustadas que pueda haber en el identificador.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">Versión entrecomillada del identificador.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">Se crea una secuencia de escape correcta de las comillas incrustadas en el identificador.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">Dado in identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Data.OleDb.OleDbCommandBuilder">
          <source>This includes correctly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Incluye una secuencia sin escape correcta de las comillas incrustadas que pueda haber en el identificador.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">Identificador del que se van a quitar las comillas incrustadas.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">Dado in identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>This includes correctly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Incluye una secuencia sin escape correcta de las comillas incrustadas que pueda haber en el identificador.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes correctly un-escaped.</source>
          <target state="translated">Identificador sin comillas, del que también se han quitado correctamente las comillas incrustadas.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">Identificador del que se van a quitar las comillas incrustadas.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OleDb.OleDbConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">Dado in identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>This includes correctly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Incluye una secuencia sin escape correcta de las comillas incrustadas que pueda haber en el identificador.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
          <source>The unquoted identifier, with embedded quotes correctly un-escaped.</source>
          <target state="translated">Identificador sin comillas, del que también se han quitado correctamente las comillas incrustadas.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>