<Type Name="OleDbCommandBuilder" FullName="System.Data.OleDb.OleDbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b115617c9192c502a2c1876e1d32eaa8ba84486" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Genera de manera automática comandos de tabla única utilizados para conciliar los cambios realizados en un objeto <see cref="T:System.Data.DataSet" /> con la base de datos asociada. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbDataAdapter> no genera automáticamente las instrucciones SQL necesarias para reconciliar los cambios realizados en un <xref:System.Data.DataSet> con el origen de datos asociado. Sin embargo, puede crear un <xref:System.Data.OleDb.OleDbCommandBuilder> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad de la <xref:System.Data.OleDb.OleDbDataAdapter>. A continuación, se generan las instrucciones SQL que no se establecen mediante el <xref:System.Data.OleDb.OleDbCommandBuilder>.  
  
 El <xref:System.Data.OleDb.OleDbCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos siempre que se establezca la <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> propiedad. Sólo se puede asociar uno <xref:System.Data.OleDb.OleDbDataAdapter> o <xref:System.Data.OleDb.OleDbCommandBuilder> objetos entre sí al mismo tiempo.  
  
 Para generar instrucciones INSERT, UPDATE o DELETE, el <xref:System.Data.OleDb.OleDbCommandBuilder> usa el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propiedad que se va a recuperar automáticamente un conjunto de metadatos requerido. Si cambia la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> una vez recuperados los metadatos, como tras la primera actualización, se debe llamar el <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método para actualizar los metadatos.  
  
 El <xref:System.Data.OleDb.OleDbCommandBuilder> también usa el <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, y <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> propiedades al que hace referencia el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>. El usuario debe llamar a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se modifican una o varias de estas propiedades, o si el <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> propio se reemplaza. En caso contrario, el <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, y <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propiedades conservan sus valores anteriores.  
  
 Si se llama a <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.OleDb.OleDbCommandBuilder> se desasocie de la <xref:System.Data.OleDb.OleDbDataAdapter>, y los comandos generados dejan de usarse.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.OleDb.OleDbCommand>, junto <xref:System.Data.OleDb.OleDbDataAdapter> y <xref:System.Data.OleDb.OleDbConnection>, para seleccionar filas de un origen de datos. En el ejemplo se pasa un inicializado <xref:System.Data.DataSet>, una cadena de conexión, una cadena de consulta que es una instrucción SELECT de SQL y una cadena que es el nombre de la tabla de origen de datos. El ejemplo crea un <xref:System.Data.OleDb.OleDbCommandBuilder>.  
  
 [!code-csharp[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbCommandBuilder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbCommandBuilder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OleDbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder(System::Data::OleDb::OleDbDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OleDb.OleDbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">Una clase <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> con el objeto <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> asociado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos generados por el <xref:System.Data.OleDb.OleDbDataAdapter> especificado en esta propiedad.  
  
 Cuando se crea una nueva instancia <xref:System.Data.OleDb.OleDbCommandBuilder>, cualquier existente <xref:System.Data.OleDb.OleDbCommandBuilder> asociada a esta <xref:System.Data.OleDb.OleDbDataAdapter> se libera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OleDbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbDataAdapter ^ DataAdapter { System::Data::OleDb::OleDbDataAdapter ^ get(); void set(System::Data::OleDb::OleDbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> para el que se generan instrucciones SQL automáticamente.</summary>
        <value>Un objeto <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OleDb.OleDbCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos generados por el <xref:System.Data.OleDb.OleDbDataAdapter> especificado en esta propiedad.  
  
 Cuando se crea una nueva instancia <xref:System.Data.OleDb.OleDbCommandBuilder>, cualquier existente <xref:System.Data.OleDb.OleDbCommandBuilder> asociada a esta <xref:System.Data.OleDb.OleDbDataAdapter> se libera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OleDb.OleDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OleDb::OleDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.OleDb.OleDbCommand" /> que hace referencia al procedimiento almacenado del que se va a derivar la información de parámetros. Los parámetros derivados se agregan a la colección de <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> del objeto <see cref="T:System.Data.OleDb.OleDbCommand" />.</param>
        <summary>Recupera información de parámetro del procedimiento almacenado especificado en <see cref="T:System.Data.OleDb.OleDbCommand" /> y rellena la colección de <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> del objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> sobrescribe cualquier información de parámetros existente para la <xref:System.Data.OleDb.OleDbCommand>.  
  
 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> requiere una llamada adicional al origen de datos para obtener la información. Si la información de parámetros se conoce de antemano, resulta más eficaz para rellenar la colección de parámetros estableciendo la información de manera explícita.  
  
 Sólo se puede utilizar <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> con los procedimientos almacenados. No se puede utilizar <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> para rellenar la <xref:System.Data.OleDb.OleDbParameterCollection> con instrucciones de Transact-SQL arbitrarias, como una instrucción SELECT parametrizada.  
  
 Para obtener más información, consulte [configurar parámetros y tipos de datos de parámetro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El proveedor OLE DB subyacente no admite la devolución de información de parámetro del procedimiento almacenado, el texto del comando no es un nombre válido de procedimiento almacenado o el valor especificado de <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> no era <see langword="StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Si es <see langword="true" />, genere nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera @p1, @p2, etc.</param>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros. Pasar `true` para el `useColumnsForParameterNames` parámetro le permite forzar la <xref:System.Data.OleDb.OleDbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar. Esto se realiza correctamente solo si se cumplen las condiciones siguientes:  
  
-   El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.  
  
-   El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.  
  
-   Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> método informativos o para solucionar problemas con fines porque devuelve el texto de la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar inserciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> método informativos o para solucionar problemas con fines porque devuelve el texto de la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Si es <see langword="true" />, genere nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera @p1, @p2, etc.</param>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar inserciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> método informativos o para solucionar problemas con fines porque devuelve el texto de la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros. Pasar `true` para el `useColumnsForParameterNames` parámetro le permite forzar la <xref:System.Data.OleDb.OleDbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar. Esto se realiza correctamente solo si se cumplen las condiciones siguientes:  
  
-   El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.  
  
-   El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.  
  
-   Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Si es <see langword="true" />, genere nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera @p1, @p2, etc.</param>
        <summary>Obtiene el objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
        <returns>Objeto <see cref="T:System.Data.OleDb.OleDbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación puede utilizar el <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OleDb.OleDbCommand> objeto va a ejecutar.  
  
 También puede usar <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado. Por ejemplo, puede llamar a <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> y modificar el <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno. En caso contrario, el <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> será seguirá utilizando la información de la instrucción anterior, que puede no ser correcta. Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> o <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros. Pasar `true` para el `useColumnsForParameterNames` parámetro le permite forzar la <xref:System.Data.OleDb.OleDbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar. Esto se realiza correctamente solo si se cumplen las condiciones siguientes:  
  
-   El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.  
  
-   El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.  
  
-   Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto del entrecomillado de ese identificador. Incluye una secuencia de escape correcta de las comillas incrustadas que pueda haber en el identificador.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Identificador original sin comillas.</param>
        <summary>Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto del entrecomillado de ese identificador. Incluye una secuencia de escape correcta de las comillas incrustadas que pueda haber en el identificador.</summary>
        <returns>Versión entrecomillada del identificador. Se crea una secuencia de escape correcta de las comillas incrustadas en el identificador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Identificador sin comillas que se va a devolver en formato entrecomillado.</param>
        <param name="connection">Cuando se pasa una conexión, el contenedor administrado obtiene el carácter de comilla del proveedor OLE DB. Cuando no se pasa ninguna conexión, la cadena se entrecomilla usando valores de <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> y de <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</param>
        <summary>Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto del entrecomillado de ese identificador. Incluye una secuencia de escape correcta de las comillas incrustadas que pueda haber en el identificador.</summary>
        <returns>Versión entrecomillada del identificador. Se crea una secuencia de escape correcta de las comillas incrustadas en el identificador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dado in identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador. Incluye una secuencia sin escape correcta de las comillas incrustadas que pueda haber en el identificador.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identificador del que se van a quitar las comillas incrustadas.</param>
        <summary>Dado in identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador. Incluye una secuencia sin escape correcta de las comillas incrustadas que pueda haber en el identificador.</summary>
        <returns>Identificador sin comillas, del que también se han quitado correctamente las comillas incrustadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identificador del que se van a quitar las comillas incrustadas.</param>
        <param name="connection">
          <see cref="T:System.Data.OleDb.OleDbConnection" />.</param>
        <summary>Dado in identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador. Incluye una secuencia sin escape correcta de las comillas incrustadas que pueda haber en el identificador.</summary>
        <returns>Identificador sin comillas, del que también se han quitado correctamente las comillas incrustadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>