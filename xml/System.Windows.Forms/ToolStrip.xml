<Type Name="ToolStrip" FullName="System.Windows.Forms.ToolStrip">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="818c56c4edff9b7c8d5a51c5f4eb96ff2b69c61c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37564968" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolStrip : System.Windows.Forms.ScrollableControl, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStrip extends System.Windows.Forms.ScrollableControl implements class System.ComponentModel.IComponent, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStrip&#xA;Inherits ScrollableControl&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStrip : System::Windows::Forms::ScrollableControl, IDisposable" />
  <TypeSignature Language="F#" Value="type ToolStrip = class&#xA;    inherit ScrollableControl&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ScrollableControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ItemClicked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ToolStripCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolStripDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona un contenedor para los objetos de la barra de herramientas de Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> es la clase base de <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.StatusStrip> y <xref:System.Windows.Forms.ContextMenuStrip>.  
  
 Use <xref:System.Windows.Forms.ToolStrip> y sus clases asociadas en nuevas aplicaciones de Windows Forms para crear barras de herramientas que pueden tener un Windows XP, Office, Internet Explorer, o aspecto y comportamiento personalizado, todo ello con o sin temas y con soporte técnico para el elemento de desbordamiento y tiempo de ejecución reordenación. <xref:System.Windows.Forms.ToolStrip> los controles también ofrecen una experiencia de tiempo de diseño que incluye la edición y activación en contexto, el diseño personalizado y uso compartido del espacio horizontal o vertical dentro de un determinado <xref:System.Windows.Forms.ToolStripContainer>.  
  
 La <xref:System.Windows.Forms.ToolStrip> clase proporciona muchos miembros que administran la funcionalidad de arrastrar y colocar y entrada de teclado, mouse y dibujo. Use la <xref:System.Windows.Forms.ToolStripRenderer> clase con el <xref:System.Windows.Forms.ToolStripManager> clase Obtenga aún más control y personalización sobre el estilo de dibujo y el diseño de todos los <xref:System.Windows.Forms.ToolStrip> controles en un formulario de Windows.  
  
 Los siguientes elementos están específicamente diseñados para funcionar perfectamente con ambos <xref:System.Windows.Forms.ToolStripSystemRenderer> y <xref:System.Windows.Forms.ToolStripProfessionalRenderer> en todas las orientaciones. Están disponibles de forma predeterminada en tiempo de diseño para el <xref:System.Windows.Forms.ToolStrip> control:  
  
-   <xref:System.Windows.Forms.ToolStripButton>  
  
-   <xref:System.Windows.Forms.ToolStripSeparator>  
  
-   <xref:System.Windows.Forms.ToolStripLabel>  
  
-   <xref:System.Windows.Forms.ToolStripDropDownButton>  
  
-   <xref:System.Windows.Forms.ToolStripSplitButton>  
  
-   <xref:System.Windows.Forms.ToolStripTextBox>  
  
-   <xref:System.Windows.Forms.ToolStripComboBox>  
  
 Puede unir <xref:System.Windows.Forms.ToolStrip> controles dentro de un determinado <xref:System.Windows.Forms.ToolStripContainer> y mezcla <xref:System.Windows.Forms.ToolStrip> controles entre sí. Use <xref:System.Windows.Forms.ToolStripPanel> lugar <xref:System.Windows.Forms.ToolStripContainer> para las aplicaciones de interfaz de múltiples documentos (MDI). Normalmente, un <xref:System.Windows.Forms.ToolStrip> no participa en el orden de tabulación, a menos que se posición absoluta en lugar de que se acopla o en un <xref:System.Windows.Forms.ToolStripPanel>.  
  
 Use la <xref:System.Windows.Forms.ToolStripControlHost> clase para hospedar cualquier otro control de Windows Forms en un <xref:System.Windows.Forms.ToolStrip>.  
  
 De forma predeterminada, el <xref:System.Windows.Forms.ToolStrip> es double almacenados en búfer, que aprovecha la <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> configuración.  
  
 Aunque el control <xref:System.Windows.Forms.ToolStrip> reemplaza y agrega funcionalidad al control <xref:System.Windows.Forms.ToolBar> de las versiones anteriores, <xref:System.Windows.Forms.ToolBar> se conserva a efectos de compatibilidad con versiones anteriores y uso futuro, si se desea.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo agregar un <xref:System.Windows.Forms.ToolStripContainer> y un <xref:System.Windows.Forms.ToolStrip> a un formulario Windows Forms, agregar elementos a la <xref:System.Windows.Forms.ToolStrip>y agregando el <xref:System.Windows.Forms.ToolStrip> a la <xref:System.Windows.Forms.ToolStripContainer.TopToolStripPanel%2A> de la <xref:System.Windows.Forms.ToolStripContainer>.  
  
 [!code-csharp[System.Windows.Forms.ToolStripContainer2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.toolstripcontainer2/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripContainer2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.toolstripcontainer2/vb/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MenuStrip" />
    <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
    <altmember cref="T:System.Windows.Forms.StatusStrip" />
    <altmember cref="T:System.Windows.Forms.ToolStripItem" />
    <altmember cref="T:System.Windows.Forms.ToolStripDropDown" />
    <altmember cref="T:System.Windows.Forms.ToolStripContainer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStrip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStrip();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStrip (params System.Windows.Forms.ToolStripItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolStripItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.#ctor(System.Windows.Forms.ToolStripItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray items As ToolStripItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStrip(... cli::array &lt;System::Windows::Forms::ToolStripItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStrip : System.Windows.Forms.ToolStripItem[] -&gt; System.Windows.Forms.ToolStrip" Usage="new System.Windows.Forms.ToolStrip items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ToolStripItem[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">Matriz de objetos <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ToolStrip" /> con la matriz especificada de <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public override bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.ToolStrip.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si las operaciones de arrastrar y colocar y la reordenación de elementos se controlan mediante eventos que se implementan.</summary>
        <value>Es <see langword="true" /> para controlar las operaciones de arrastrar y colocar, y la reordenación de elementos mediante eventos que implementa; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> propiedad `true` y establezca el <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> propiedad a `false` para responder al comportamiento de arrastrar y colocar ha definido en el <xref:System.Windows.Forms.Control.DragEnter?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.DragLeave?displayProperty=nameWithType>, y <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> eventos.  
  
 Establecer <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> a `false` y establecer <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> a `true` para hacer que el <xref:System.Windows.Forms.ToolStrip> clase para controlar automáticamente la reordenación de elementos y de arrastrar y colocar. Establecer <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> a `true` para dos <xref:System.Windows.Forms.ToolStrip> objetos para permitir arrastrar elementos de una <xref:System.Windows.Forms.ToolStrip> a otro. Para habilitar el valor predeterminado arrastrar y colocar, debe presionarse la tecla ALT durante la operación de arrastre.  
  
 Si se establecen <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> y <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> a `true` produce una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tanto <see cref="P:System.Windows.Forms.ToolStrip.AllowDrop" /> como <see cref="P:System.Windows.Forms.ToolStrip.AllowItemReorder" /> se establecen en <see langword="true" />.</exception>
        <altmember cref="P:System.Windows.Forms.ToolStrip.AllowItemReorder" />
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="AllowItemReorder">
      <MemberSignature Language="C#" Value="public bool AllowItemReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowItemReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AllowItemReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowItemReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowItemReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowItemReorder : bool with get, set" Usage="System.Windows.Forms.ToolStrip.AllowItemReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la clase <see cref="T:System.Windows.Forms.ToolStrip" /> controla la organización de elementos y las operaciones de arrastrar y colocar de forma privada</summary>
        <value>Es <see langword="true" /> para que la clase <see cref="T:System.Windows.Forms.ToolStrip" /> controle automáticamente las operaciones de arrastrar y colocar, y la reordenación de elementos; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> propiedad `true` y establezca el <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> propiedad a `false` para responder al comportamiento de arrastrar y colocar ha definido en el <xref:System.Windows.Forms.Control.DragEnter?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.DragLeave?displayProperty=nameWithType>, y <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> eventos.  
  
 Establecer <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> a `false` y establecer <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> a `true` para hacer que el <xref:System.Windows.Forms.ToolStrip> clase para controlar automáticamente la reordenación de elementos y de arrastrar y colocar. Establecer <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> a `true` para dos <xref:System.Windows.Forms.ToolStrip> objetos para permitir arrastrar elementos de una <xref:System.Windows.Forms.ToolStrip> a otro. Para habilitar el valor predeterminado arrastrar y colocar, debe presionarse la tecla ALT durante la operación de arrastre.  
  
 Si se establecen <xref:System.Windows.Forms.ToolStrip.AllowDrop%2A> y <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> a `true` produce una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tanto <see cref="P:System.Windows.Forms.ToolStrip.AllowDrop" /> como <see cref="P:System.Windows.Forms.ToolStrip.AllowItemReorder" /> se establecen en <see langword="true" />.</exception>
        <altmember cref="P:System.Windows.Forms.ToolStrip.AllowDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="AllowMerge">
      <MemberSignature Language="C#" Value="public bool AllowMerge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMerge" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AllowMerge" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMerge As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMerge { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMerge : bool with get, set" Usage="System.Windows.Forms.ToolStrip.AllowMerge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se pueden combinar varios <see cref="T:System.Windows.Forms.MenuStrip" />, <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" />, <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> y otros tipos.</summary>
        <value>
          <see langword="true" /> si se permite combinar tipos; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A> propiedad para habilitar los elementos secundarios de interfaz de múltiples documentos (MDI) combinar sus menús respectivos en el formulario MDI primario.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.ToolStrip.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los bordes del contenedor al que está enlazado un <see cref="T:System.Windows.Forms.ToolStrip" /> y determina cómo se cambia el tamaño de un <see cref="T:System.Windows.Forms.ToolStrip" /> con su elemento primario.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.AnchorStyles" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.Anchor%2A> propiedad para definir cómo un <xref:System.Windows.Forms.ToolStrip> cambia automáticamente de tamaño cuando se cambia el tamaño de su control primario. Delimitación de un control a su control principal, se garantiza que los bordes delimitados permanecen en la misma posición relativa a los bordes del control primario cuando se cambia el tamaño del control primario.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.ToolStrip.Anchor%2A> y <xref:System.Windows.Forms.ToolStrip.Dock%2A> propiedades son mutuamente excluyentes. Solo una puede establecerse en un momento, y el último conjunto tiene prioridad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.Anchor%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.ToolStrip.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>
          <see langword="true" /> para desplazarse automáticamente; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El desplazamiento automático no es compatible con controles <see cref="T:System.Windows.Forms.ToolStrip" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoScrollMargin">
      <MemberSignature Language="C#" Value="public System.Drawing.Size AutoScrollMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScrollMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AutoScrollMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScrollMargin As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size AutoScrollMargin { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollMargin : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ToolStrip.AutoScrollMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>Valor <see cref="T:System.Drawing.Size" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScrollMinSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size AutoScrollMinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScrollMinSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AutoScrollMinSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScrollMinSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size AutoScrollMinSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollMinSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ToolStrip.AutoScrollMinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>Valor <see cref="T:System.Drawing.Size" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScrollPosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point AutoScrollPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point AutoScrollPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AutoScrollPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScrollPosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point AutoScrollPosition { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollPosition : System.Drawing.Point with get, set" Usage="System.Windows.Forms.ToolStrip.AutoScrollPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>Valor <see cref="T:System.Drawing.Point" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.ToolStrip.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control cambia automáticamente de tamaño para mostrar todo su contenido.</summary>
        <value>
          <see langword="true" /> si el control ajusta su ancho al contenido; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si establece <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> a `false` y el <xref:System.Windows.Forms.ToolStrip> está incrustado en un <xref:System.Windows.Forms.ToolStripContainer> panel, los límites de la <xref:System.Windows.Forms.ToolStrip> no se traducen al mover el <xref:System.Windows.Forms.ToolStrip> a otro panel de la <xref:System.Windows.Forms.ToolStripContainer>. Para traducir los límites correctamente, sincronice el <xref:System.Windows.Forms.ToolStrip.LayoutStyleChanged> eventos, compruebe el valor de la <xref:System.Windows.Forms.ToolStrip.Orientation%2A> propiedad y cambio de tamaño el <xref:System.Windows.Forms.ToolStrip>.  
  
 El <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, y <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propiedades corresponden a varios aspectos del control de imagen. Usar imágenes en <xref:System.Windows.Forms.ToolStrip> controles al establecer estas propiedades directamente o mediante el establecimiento de la ejecución únicamente en tiempo de <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propiedad.  
  
 Escalado de imagen viene determinada por la interacción de las propiedades de ambos <xref:System.Windows.Forms.ToolStrip> y <xref:System.Windows.Forms.ToolStripItem>, como sigue:  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> es la escala de la imagen final determinado por la combinación de la imagen <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> configuración y el contenedor <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> configuración.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> es `true` (predeterminado) y <xref:System.Windows.Forms.ToolStripItemImageScaling> es <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, se produce ningún ajuste de escala de imagen y el <xref:System.Windows.Forms.ToolStrip> es el tamaño de elemento más grande o un tamaño mínimo establecido.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> es `false` y <xref:System.Windows.Forms.ToolStripItemImageScaling> es <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, ninguna imagen ni <xref:System.Windows.Forms.ToolStrip> escalado se produce.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando ha cambiado la propiedad <see cref="P:System.Windows.Forms.ToolStrip.AutoSize" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.AutoSizeChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.AutoSizeChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#85](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#85)]
 [!code-vb[System.Windows.Forms.EventExamples#85](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#85)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStrip.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de fondo del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Un <see cref="T:System.Drawing.Color" /> que representa el color de fondo del <see cref="T:System.Windows.Forms.ToolStrip" />. El valor predeterminado es el valor de la propiedad <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ToolStrip.BackColor%2A> propiedad no admite colores transparentes a menos que el `SupportsTransparentBackColor` valor <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> está establecido en `true`.  
  
 El <xref:System.Windows.Forms.ToolStrip.BackColor%2A> es una propiedad de ambiente. Una propiedad de ambiente es una propiedad de control que, si no establece, se recupera desde el control primario. Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.ToolStrip.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada. Para obtener más información acerca de las propiedades de ambiente, vea la <xref:System.Windows.Forms.AmbientProperties> clase o el <xref:System.Windows.Forms.Control> información general de clases.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="P:System.Windows.Forms.ToolStrip.BackColor" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.ToolStrip.BackColor" /> propiedad para extender la implementación base. En caso contrario, debe proporcionar toda la implementación. No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.ToolStrip.BackColor" /> propiedad; se puede reemplazar sólo uno, si es necesario.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginDrag">
      <MemberSignature Language="C#" Value="public event EventHandler BeginDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BeginDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.BeginDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginDrag As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BeginDrag;" />
      <MemberSignature Language="F#" Value="member this.BeginDrag : EventHandler " Usage="member this.BeginDrag : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el usuario empieza a arrastrar el control <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de <xref:System.Windows.Forms.ToolStrip.BeginDrag> y <xref:System.Windows.Forms.ToolStrip.EndDrag> con un <xref:System.Windows.Forms.ToolStrip> y un <xref:System.Windows.Forms.ToolStripContainer>.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.BeginEndDrag#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.BeginEndDrag/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.BeginEndDrag#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.BeginEndDrag/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.BindingContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BindingContext As BindingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::BindingContext ^ BindingContext { System::Windows::Forms::BindingContext ^ get(); void set(System::Windows::Forms::BindingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingContext : System.Windows.Forms.BindingContext with get, set" Usage="System.Windows.Forms.ToolStrip.BindingContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contexto de enlace para el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Estructura <see cref="T:System.Windows.Forms.BindingContext" /> para la colección <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.BindingContext> de un <xref:System.Windows.Forms.ToolStrip> devuelve un único <xref:System.Windows.Forms.BindingManagerBase> para todos los controles enlazados a datos que contiene el <xref:System.Windows.Forms.ToolStrip>. El <xref:System.Windows.Forms.BindingManagerBase> mantiene todos los controles que están enlazados al mismo origen de datos sincronizado. Por ejemplo, si se establece la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propiedad de la <xref:System.Windows.Forms.BindingManagerBase> especifica el elemento en la lista subyacente que seleccione todos los controles enlazados a datos.  
  
 Para obtener más información acerca de cómo crear un nuevo <xref:System.Windows.Forms.BindingContext> y asignarlo a la <xref:System.Windows.Forms.Control.BindingContext%2A> propiedad, vea el <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.BindingContext" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.BindingContext" /> propiedad para extender la implementación base. En caso contrario, debe proporcionar toda la implementación. No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.BindingContext" /> propiedad; se puede reemplazar sólo uno, si es necesario.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanOverflow">
      <MemberSignature Language="C#" Value="public bool CanOverflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanOverflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.CanOverflow" />
      <MemberSignature Language="VB.NET" Value="Public Property CanOverflow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanOverflow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanOverflow : bool with get, set" Usage="System.Windows.Forms.ToolStrip.CanOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se puede enviar elementos del elemento <see cref="T:System.Windows.Forms.ToolStrip" /> a un menú de desbordamiento.</summary>
        <value>
          <see langword="true" /> para enviar elementos del <see cref="T:System.Windows.Forms.ToolStrip" /> a un menú de desbordamiento; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Forms.ToolStrip.CanOverflow%2A> propiedad `true` para enviar un <xref:System.Windows.Forms.ToolStrip> elemento a un menú de desbordamiento cuando el contenido del elemento supera el ancho de la barra de herramientas.  
  
> [!NOTE]
>  Si hay más elementos de desbordamiento que se pueden mostrar en el formulario, utilice el Editor de colección de elementos de ToolStrip para manejar esta situación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.CanOverflow%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Windows.Forms.ToolStrip.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el elemento <see cref="T:System.Windows.Forms.ToolStrip" /> hace que se realice una validación de todos los controles que requieren validación cuando recibe el foco.</summary>
        <value>
          <see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.CausesValidationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CausesValidationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CausesValidationChanged;" />
      <MemberSignature Language="F#" Value="member this.CausesValidationChanged : EventHandler " Usage="member this.CausesValidationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia la propiedad <see cref="P:System.Windows.Forms.ToolStrip.CausesValidation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.CausesValidationChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.CausesValidationChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#87](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#87)]
 [!code-vb[System.Windows.Forms.EventExamples#87](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#87)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.ControlAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlAdded As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlAdded;" />
      <MemberSignature Language="F#" Value="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este evento no es relevante para esta clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.ControlRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlRemoved As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlRemoved;" />
      <MemberSignature Language="F#" Value="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este evento no es relevante para esta clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control/ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control::ControlCollection ^ Controls { System::Windows::Forms::Control::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.Control.ControlCollection" Usage="System.Windows.Forms.ToolStrip.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Control.ControlCollection" /> que representa la colección de controles que forman parte del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="toolStrip.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuevo objeto de accesibilidad para el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>Nuevo <see cref="T:System.Windows.Forms.AccessibleObject" /> para el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="toolStrip.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la colección de controles para el control.</summary>
        <returns>Nueva instancia de <see cref="T:System.Windows.Forms.Control.ControlCollection" /> que se le asigna al control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultItem">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Forms.ToolStripItem CreateDefaultItem (string text, System.Drawing.Image image, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Forms.ToolStripItem CreateDefaultItem(string text, class System.Drawing.Image image, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.CreateDefaultItem(System.String,System.Drawing.Image,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Forms::ToolStripItem ^ CreateDefaultItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="abstract member CreateDefaultItem : string * System.Drawing.Image * EventHandler -&gt; System.Windows.Forms.ToolStripItem&#xA;override this.CreateDefaultItem : string * System.Drawing.Image * EventHandler -&gt; System.Windows.Forms.ToolStripItem" Usage="toolStrip.CreateDefaultItem (text, image, onClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se usará para el elemento <see cref="T:System.Windows.Forms.ToolStripItem" />. Si el parámetro <c>text</c> es un guion (-), este método crea un <see cref="T:System.Windows.Forms.ToolStripSeparator" />.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> que se va a mostrar en el elemento <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <param name="onClick">Un controlador de eventos que provoca el evento <see cref="E:System.Windows.Forms.Control.Click" /> al hacer clic en <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <summary>Crea un <see cref="T:System.Windows.Forms.ToolStripItem" /> predeterminado con el texto, la imagen y el controlador de eventos especificados en una nueva instancia del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>
          <see cref="M:System.Windows.Forms.ToolStripButton.#ctor(System.String,System.Drawing.Image,System.EventHandler)" /> o <see cref="T:System.Windows.Forms.ToolStripSeparator" /> si el parámetro <paramref name="text" /> es un guion (-).</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLayoutSettings">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.LayoutSettings CreateLayoutSettings (System.Windows.Forms.ToolStripLayoutStyle layoutStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.LayoutSettings CreateLayoutSettings(valuetype System.Windows.Forms.ToolStripLayoutStyle layoutStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.CreateLayoutSettings(System.Windows.Forms.ToolStripLayoutStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateLayoutSettings (layoutStyle As ToolStripLayoutStyle) As LayoutSettings" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::LayoutSettings ^ CreateLayoutSettings(System::Windows::Forms::ToolStripLayoutStyle layoutStyle);" />
      <MemberSignature Language="F#" Value="abstract member CreateLayoutSettings : System.Windows.Forms.ToolStripLayoutStyle -&gt; System.Windows.Forms.LayoutSettings&#xA;override this.CreateLayoutSettings : System.Windows.Forms.ToolStripLayoutStyle -&gt; System.Windows.Forms.LayoutSettings" Usage="toolStrip.CreateLayoutSettings layoutStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutStyle" Type="System.Windows.Forms.ToolStripLayoutStyle" />
      </Parameters>
      <Docs>
        <param name="layoutStyle">Organización visual que se va a aplicar al elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</param>
        <summary>Especifica la organización visual para el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>Uno de los valores de <see cref="T:System.Windows.Forms.ToolStripLayoutStyle" />. El valor predeterminado es <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.ToolStrip.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el cursor que se muestra cuando el puntero del mouse se sitúa sobre el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se va a mostrar cuando el puntero del mouse se sitúe sobre el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.Cursor%2A> propiedad para obtener o establecer un determinado <xref:System.Windows.Forms.Cursor> utilizado con el <xref:System.Windows.Forms.ToolStrip>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.Cursor%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="T:System.Windows.Forms.Cursor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.CursorChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.CursorChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#88](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#88)]
 [!code-vb[System.Windows.Forms.EventExamples#88](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDock">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DockStyle DefaultDock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle DefaultDock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultDock" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultDock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::DockStyle DefaultDock { System::Windows::Forms::DockStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDock : System.Windows.Forms.DockStyle" Usage="System.Windows.Forms.ToolStrip.DefaultDock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ubicación de acoplamiento del <see cref="T:System.Windows.Forms.ToolStrip" />, lo que indica qué bordes están acoplados al contenedor.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.DockStyle" />. El valor predeterminado es <see cref="F:System.Windows.Forms.DockStyle.Top" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDropDownDirection">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripDropDownDirection DefaultDropDownDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripDropDownDirection DefaultDropDownDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultDropDownDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultDropDownDirection As ToolStripDropDownDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripDropDownDirection DefaultDropDownDirection { System::Windows::Forms::ToolStripDropDownDirection get(); void set(System::Windows::Forms::ToolStripDropDownDirection value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDropDownDirection : System.Windows.Forms.ToolStripDropDownDirection with get, set" Usage="System.Windows.Forms.ToolStrip.DefaultDropDownDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripDropDownDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que representa la dirección predeterminada en la que se muestra un control <see cref="T:System.Windows.Forms.ToolStripDropDown" /> con respecto a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.ToolStripDropDownDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.DefaultDropDownDirection%2A> propiedad para obtener o establecer donde un <xref:System.Windows.Forms.ToolStripDropDown> control aparece en relación con su contenedor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.DefaultDropDownDirection%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor especificado no es ninguno de los valores de <see cref="T:System.Windows.Forms.ToolStripDropDownDirection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultGripMargin">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultGripMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultGripMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultGripMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultGripMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultGripMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultGripMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStrip.DefaultGripMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el espaciado predeterminado, en píxeles, entre el control de tamaño y los bordes del <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Valores de <see cref="T:System.Windows.Forms.Padding" /> que representan el espaciado, expresado en píxeles.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStrip.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el espaciado, en píxeles, entre el <see cref="T:System.Windows.Forms.ToolStrip" /> y el <see cref="T:System.Windows.Forms.ToolStripContainer" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.Padding" />. El valor predeterminado es <see cref="F:System.Windows.Forms.Padding.Empty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStrip.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el espaciado interno, en píxeles, del contenido de un <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Un <see cref="T:System.Windows.Forms.Padding" /> valor <c>(0, 0, 1, 0)</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el contenido de la <xref:System.Windows.Forms.ToolStrip> son rellena un píxel desde el borde derecho de la <xref:System.Windows.Forms.ToolStrip> para evitar que el borde derecho de dibujo a través de un <xref:System.Windows.Forms.ToolStripItem> que está alineado a la derecha.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultShowItemToolTips">
      <MemberSignature Language="C#" Value="protected virtual bool DefaultShowItemToolTips { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DefaultShowItemToolTips { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultShowItemToolTips : bool" Usage="System.Windows.Forms.ToolStrip.DefaultShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se muestra información sobre herramientas para <see cref="T:System.Windows.Forms.ToolStrip" /> de manera predeterminada.</summary>
        <value>
          <see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ToolStrip.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño predeterminado del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Drawing.Size" /> predeterminado del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ToolStrip.DefaultSize%2A> propiedad representa el <xref:System.Drawing.Size> valor de la <xref:System.Windows.Forms.ToolStrip> cuando se crea inicialmente. Puede ajustar el tamaño de la <xref:System.Windows.Forms.ToolStrip> estableciendo su <xref:System.Windows.Forms.Control.PreferredSize%2A> valor de propiedad.  
  
> [!NOTE]
>  Para mantener un rendimiento óptimo, no establezca la <xref:System.Drawing.Size> de un <xref:System.Windows.Forms.ToolStrip> en su constructor. En su lugar, invalide el <xref:System.Windows.Forms.ToolStrip.DefaultSize%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="P:System.Windows.Forms.ToolStrip.DefaultSize" /> propiedad en una clase derivada, es preferible devolver un <see cref="T:System.Drawing.Size" /> con las dimensiones preferidas en lugar de reemplazar toda la implementación.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DisplayedItems">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Forms.ToolStripItemCollection DisplayedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItemCollection DisplayedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DisplayedItems" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DisplayedItems As ToolStripItemCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Forms::ToolStripItemCollection ^ DisplayedItems { System::Windows::Forms::ToolStripItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayedItems : System.Windows.Forms.ToolStripItemCollection" Usage="System.Windows.Forms.ToolStrip.DisplayedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el subconjunto de elementos que se muestran actualmente en el elemento <see cref="T:System.Windows.Forms.ToolStrip" />, incluidos los elementos que se agregan automáticamente a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripItemCollection" /> que representa los elementos mostrados actualmente en el elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A> propiedad para tener acceso a solo aquellos elementos que se muestran actualmente. Estos son los elementos que no están actualmente en un menú de desbordamiento.  
  
 Use la <xref:System.Windows.Forms.ToolStrip.Items%2A> colección para recuperar todos los elementos de un <xref:System.Windows.Forms.ToolStrip>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStrip.Items" />
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolStrip.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Layout.IArrangedElement.DisplayRectangle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera el rectángulo de presentación actual.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> que representa el área del elemento <see cref="T:System.Windows.Forms.ToolStrip" /> para el diseño del elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El rectángulo de presentación es el área donde diseña los elementos. La posición y las dimensiones de la <xref:System.Windows.Forms.ToolStrip> muestre rectángulo cambio durante el desplazamiento automático.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="toolStrip.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.ToolStrip" /> y, de forma opcional, libera los recursos administrados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama por el público `Dispose` método y el <xref:System.Object.Finalize%2A> método. `Dispose` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`. <xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.  
  
 Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Windows.Forms.ToolStrip> hace referencia. Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> puede llamarse varias veces por otros objetos. Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpieza de Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado y [reemplazando el método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.ToolStrip.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece que los bordes del elemento <see cref="T:System.Windows.Forms.ToolStrip" /> se acoplarán a su control principal y determina cómo se cambia el tamaño de un elemento <see cref="T:System.Windows.Forms.ToolStrip" /> con su elemento primario.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.DockStyle" />. El valor predeterminado es <see cref="F:System.Windows.Forms.DockStyle.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.Dock%2A> propiedad para definir cómo un <xref:System.Windows.Forms.ToolStrip> cambia automáticamente de tamaño cuando se cambia el tamaño de su control primario. Por ejemplo, si se establece <xref:System.Windows.Forms.ToolStrip.Dock%2A> a <xref:System.Windows.Forms.DockStyle.Left> hace que el <xref:System.Windows.Forms.ToolStrip> para alinearse con los bordes izquierdos de su control primario y cambia de tamaño cuando se cambia el tamaño del control primario. Los controles se acoplan en su orden z, que es el diseño visual de los controles en un formulario de eje z del formulario (intensidad).  
  
 Un control se puede acoplar a uno de los bordes de su contenedor primario o se puede acoplar a todos los bordes y rellene el contenedor primario.  
  
 Si el <xref:System.Windows.Forms.ToolStrip> control se encuentra en un <xref:System.Windows.Forms.ToolStripPanel>, el <xref:System.Windows.Forms.ToolStrip> se puede mover dentro de la <xref:System.Windows.Forms.ToolStripPanel> y en <xref:System.Windows.Forms.ToolStripPanel>s. El <xref:System.Windows.Forms.ToolStrip.Dock%2A> propiedad se omite y si el <xref:System.Windows.Forms.ToolStrip.Stretch%2A> propiedad es `false`, el tamaño de la <xref:System.Windows.Forms.ToolStrip> crece a medida que se agregan elementos a la <xref:System.Windows.Forms.ToolStripPanel>. Normalmente, el <xref:System.Windows.Forms.ToolStrip> no participa en el orden de tabulación.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.ToolStrip.Anchor%2A> y <xref:System.Windows.Forms.ToolStrip.Dock%2A> propiedades son mutuamente excluyentes. Solo una puede establecerse en un momento, y el último conjunto tiene prioridad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.Dock%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDrag">
      <MemberSignature Language="C#" Value="public event EventHandler EndDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EndDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.EndDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndDrag As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EndDrag;" />
      <MemberSignature Language="F#" Value="member this.EndDrag : EventHandler " Usage="member this.EndDrag : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el usuario deja de arrastrar el control <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de <xref:System.Windows.Forms.ToolStrip.BeginDrag> y <xref:System.Windows.Forms.ToolStrip.EndDrag> con un <xref:System.Windows.Forms.ToolStrip> y un <xref:System.Windows.Forms.ToolStripContainer>.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.BeginEndDrag#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.BeginEndDrag/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.BeginEndDrag#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.BeginEndDrag/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.ToolStrip.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la fuente utilizada para mostrar texto en el control.</summary>
        <value>Fuente predeterminada actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStrip.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de primer plano del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> que representa el color de primer plano.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.ToolStrip.ForeColor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.ForeColorChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.ForeColorChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#90](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#90)]
 [!code-vb[System.Windows.Forms.EventExamples#90](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#90)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildAtPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el control secundario en una ubicación especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.GetChildAtPoint(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="override this.GetChildAtPoint : System.Drawing.Point -&gt; System.Windows.Forms.Control" Usage="toolStrip.GetChildAtPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Objeto <see cref="T:System.Drawing.Point" />.</param>
        <summary>Este método no es relevante para esta clase.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.Control" /> secundario ubicado en las coordenadas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.GetChildAtPointSkip skipValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point, skipValue As GetChildAtPointSkip) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt, System::Windows::Forms::GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="F#" Value="override this.GetChildAtPoint : System.Drawing.Point * System.Windows.Forms.GetChildAtPointSkip -&gt; System.Windows.Forms.Control" Usage="toolStrip.GetChildAtPoint (pt, skipValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="skipValue" Type="System.Windows.Forms.GetChildAtPointSkip" />
      </Parameters>
      <Docs>
        <param name="pt">Valor <see cref="T:System.Drawing.Point" />.</param>
        <param name="skipValue">Valor <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />.</param>
        <summary>Este método no es relevante para esta clase.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.Control" /> secundario ubicado en las coordenadas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemAt">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve el elemento situado en la ubicación especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem GetItemAt (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ToolStripItem GetItemAt(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.GetItemAt(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ToolStripItem ^ GetItemAt(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : System.Drawing.Point -&gt; System.Windows.Forms.ToolStripItem" Usage="toolStrip.GetItemAt point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <see cref="T:System.Drawing.Point" /> donde va a comenzar la búsqueda del elemento <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <summary>Devuelve el elemento situado en el punto especificado del área cliente del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ToolStripItem" /> que se encuentra en la ubicación especificada o <see langword="null" /> si no se encuentra el <see cref="T:System.Windows.Forms.ToolStripItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ToolStripItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ToolStripItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ToolStripItem" Usage="toolStrip.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordenada horizontal, en píxeles, del borde izquierdo del área cliente.</param>
        <param name="y">Coordenada vertical, en píxeles, del borde superior del área cliente.</param>
        <summary>Devuelve el elemento situado en las coordenadas X e Y especificadas del área cliente del <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ToolStripItem" /> ubicado en la ubicación especificada, o <see langword="null" /> si el <see cref="T:System.Windows.Forms.ToolStripItem" /> no se encuentra.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextItem">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripItem GetNextItem (System.Windows.Forms.ToolStripItem start, System.Windows.Forms.ArrowDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ToolStripItem GetNextItem(class System.Windows.Forms.ToolStripItem start, valuetype System.Windows.Forms.ArrowDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.GetNextItem(System.Windows.Forms.ToolStripItem,System.Windows.Forms.ArrowDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNextItem (start As ToolStripItem, direction As ArrowDirection) As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ToolStripItem ^ GetNextItem(System::Windows::Forms::ToolStripItem ^ start, System::Windows::Forms::ArrowDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member GetNextItem : System.Windows.Forms.ToolStripItem * System.Windows.Forms.ArrowDirection -&gt; System.Windows.Forms.ToolStripItem&#xA;override this.GetNextItem : System.Windows.Forms.ToolStripItem * System.Windows.Forms.ArrowDirection -&gt; System.Windows.Forms.ToolStripItem" Usage="toolStrip.GetNextItem (start, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Windows.Forms.ToolStripItem" />
        <Parameter Name="direction" Type="System.Windows.Forms.ArrowDirection" />
      </Parameters>
      <Docs>
        <param name="start">
          <see cref="T:System.Windows.Forms.ToolStripItem" /> que es el punto de referencia a partir del cual comienza la recuperación del siguiente elemento.</param>
        <param name="direction">Uno de los valores de <see cref="T:System.Windows.Forms.ArrowDirection" /> que especifica la dirección de desplazamiento.</param>
        <summary>Recupera el siguiente <see cref="T:System.Windows.Forms.ToolStripItem" /> del punto de referencia especificado y avanza en la dirección especificada.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ToolStripItem" /> especificado por el parámetro <paramref name="start" /> y que es el siguiente en el orden especificado por el parámetro <paramref name="direction" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.GetNextItem%2A> método para obtener la siguiente <xref:System.Windows.Forms.ToolStripItem> de un <xref:System.Windows.Forms.ToolStrip>. El <xref:System.Windows.Forms.ArrowDirection> enumeración se coordina con el <xref:System.Windows.Forms.ToolStrip.Orientation%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor especificado del parámetro <paramref name="direction" /> no es ninguno de los valores de <see cref="T:System.Windows.Forms.ArrowDirection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GripDisplayStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripGripDisplayStyle GripDisplayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripGripDisplayStyle GripDisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.GripDisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GripDisplayStyle As ToolStripGripDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripGripDisplayStyle GripDisplayStyle { System::Windows::Forms::ToolStripGripDisplayStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.GripDisplayStyle : System.Windows.Forms.ToolStripGripDisplayStyle" Usage="System.Windows.Forms.ToolStrip.GripDisplayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripGripDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la orientación del controlador de movimiento del elemento <see cref="T:System.Windows.Forms.ToolStrip" /></summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.ToolStripGripDisplayStyle" />. Los valores posibles son <see cref="F:System.Windows.Forms.ToolStripGripDisplayStyle.Horizontal" /> y <see cref="F:System.Windows.Forms.ToolStripGripDisplayStyle.Vertical" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GripMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding GripMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding GripMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.GripMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property GripMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding GripMargin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.GripMargin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ToolStrip.GripMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el espacio que hay alrededor del controlador de movimiento del <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> que representa el espaciado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.GripMargin%2A> propiedad para obtener o establecer el espacio que rodea el <xref:System.Windows.Forms.ToolStrip> controlador de movimiento. Dado que <xref:System.Windows.Forms.Padding?displayProperty=nameWithType> puede tomar valores individuales <xref:System.Windows.Forms.Padding.Top%2A>, <xref:System.Windows.Forms.Padding.Bottom%2A>, <xref:System.Windows.Forms.Padding.Left%2A>, y <xref:System.Windows.Forms.Padding.Right%2A>, puede ajustar el espacio que rodea el controlador de movimiento como preferido. El margen puede ser incluso fuera del borde de la <xref:System.Windows.Forms.ToolStrip>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.GripMargin%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Padding" />
      </Docs>
    </Member>
    <Member MemberName="GripRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GripRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle GripRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.GripRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GripRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle GripRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.GripRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolStrip.GripRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los límites del controlador de movimiento del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Objeto de tipo <see cref="T:System.Drawing.Rectangle" /> que representa los límites del controlador de movimiento. Si los límites no son visibles, la propiedad <see cref="P:System.Windows.Forms.ToolStrip.GripRectangle" /> devuelve <see cref="F:System.Drawing.Rectangle.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ToolStrip.GripRectangle%2A> propiedad para obtener los límites para dibujar, la prueba de posicionamiento y así sucesivamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripGripStyle GripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripGripStyle GripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.GripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GripStyle As ToolStripGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripGripStyle GripStyle { System::Windows::Forms::ToolStripGripStyle get(); void set(System::Windows::Forms::ToolStripGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GripStyle : System.Windows.Forms.ToolStripGripStyle with get, set" Usage="System.Windows.Forms.ToolStrip.GripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si el controlador de movimiento del elemento <see cref="T:System.Windows.Forms.ToolStrip" /> es visible o está oculto.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.ToolStripGripStyle" />. El valor predeterminado es <see cref="F:System.Windows.Forms.ToolStripGripStyle.Visible" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un diseño de pila, realice una <xref:System.Windows.Forms.ToolStrip> movible colocándola un <xref:System.Windows.Forms.ToolStripPanel> y asegurarse de que su <xref:System.Windows.Forms.ToolStrip.GripStyle%2A> está establecido en <xref:System.Windows.Forms.ToolStripGripStyle.Visible>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor especificado no es ninguno de los valores de <see cref="T:System.Windows.Forms.ToolStripGripStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Windows.Forms.ToolStrip.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Windows.Forms.ToolStrip" /> tiene elementos secundarios; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScroll">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HScrollProperties HorizontalScroll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HScrollProperties HorizontalScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.HorizontalScroll" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalScroll As HScrollProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HScrollProperties ^ HorizontalScroll { System::Windows::Forms::HScrollProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScroll : System.Windows.Forms.HScrollProperties" Usage="System.Windows.Forms.ToolStrip.HorizontalScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HScrollProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>Instancia de la clase <see cref="T:System.Windows.Forms.HScrollProperties" /> que proporciona las propiedades básicas para un <see cref="T:System.Windows.Forms.HScrollBar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ToolStrip.ImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la lista de imágenes que contiene la imagen mostrada en un elemento de <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Objeto de tipo <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, y <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propiedades corresponden a varios aspectos del control de imagen. Usar imágenes en <xref:System.Windows.Forms.ToolStrip> controles al establecer estas propiedades directamente o mediante el establecimiento de la ejecución únicamente en tiempo de <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propiedad.  
  
 Escalado de imagen viene determinada por la interacción de las propiedades de ambos <xref:System.Windows.Forms.ToolStrip> y <xref:System.Windows.Forms.ToolStripItem>, como sigue:  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> es la escala de la imagen final determinado por la combinación de la imagen <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> configuración y el contenedor <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> configuración.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> es `true` (predeterminado) y <xref:System.Windows.Forms.ToolStripItemImageScaling> es <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, se produce ningún ajuste de escala de imagen y el <xref:System.Windows.Forms.ToolStrip> es el tamaño de elemento más grande o un tamaño mínimo establecido.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> es `false` y <xref:System.Windows.Forms.ToolStripItemImageScaling> es <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, ninguna imagen ni <xref:System.Windows.Forms.ToolStrip> escalado se produce.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScalingSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ImageScalingSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ImageScalingSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.ImageScalingSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageScalingSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ImageScalingSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ImageScalingSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ToolStrip.ImageScalingSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "16,16")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño, en píxeles, de una imagen usada en un elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Valor <see cref="T:System.Drawing.Size" /> que representa el tamaño de la imagen, en píxeles. El valor predeterminado es 16 x 16 píxeles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ToolStripItemImageScaling> propiedad para controlar el tamaño predeterminado de una imagen. Use <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit> para reducir el tamaño de la imagen en un <xref:System.Windows.Forms.ToolStripItem> para ajustar automáticamente y cabe en un <xref:System.Windows.Forms.ToolStrip> conservando las proporciones originales de la imagen.  
  
 El <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, y <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propiedades corresponden a varios aspectos del control de imagen. Usar imágenes en <xref:System.Windows.Forms.ToolStrip> controles al establecer estas propiedades directamente o mediante el establecimiento de la ejecución únicamente en tiempo de <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propiedad.  
  
 Escalado de imagen viene determinada por la interacción de las propiedades de ambos <xref:System.Windows.Forms.ToolStrip> y <xref:System.Windows.Forms.ToolStripItem>, como sigue:  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> es la escala de la imagen final determinado por la combinación de la imagen <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> configuración y el contenedor <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> configuración.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> es `true` (predeterminado) y <xref:System.Windows.Forms.ToolStripItemImageScaling> es <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, se produce ningún ajuste de escala de imagen y el <xref:System.Windows.Forms.ToolStrip> es el tamaño de elemento más grande o un tamaño mínimo establecido.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> es `false` y <xref:System.Windows.Forms.ToolStripItemImageScaling> es <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, ninguna imagen ni <xref:System.Windows.Forms.ToolStrip> escalado se produce.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentlyDragging">
      <MemberSignature Language="C#" Value="public bool IsCurrentlyDragging { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentlyDragging" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.IsCurrentlyDragging" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentlyDragging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentlyDragging { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentlyDragging : bool" Usage="System.Windows.Forms.ToolStrip.IsCurrentlyDragging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el usuario está moviendo actualmente el elemento <see cref="T:System.Windows.Forms.ToolStrip" /> de un <see cref="T:System.Windows.Forms.ToolStripContainer" /> a otro.</summary>
        <value>
          <see langword="true" /> si el usuario está moviendo actualmente el elemento <see cref="T:System.Windows.Forms.ToolStrip" /> de un <see cref="T:System.Windows.Forms.ToolStripContainer" /> a otro; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDown">
      <MemberSignature Language="C#" Value="public bool IsDropDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.IsDropDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDropDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDown : bool" Usage="System.Windows.Forms.ToolStrip.IsDropDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si un <see cref="T:System.Windows.Forms.ToolStrip" /> es un control <see cref="T:System.Windows.Forms.ToolStripDropDown" />.</summary>
        <value>Es <see langword="true" /> si <see cref="T:System.Windows.Forms.ToolStrip" /> es un control <see cref="T:System.Windows.Forms.ToolStripDropDown" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected override bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.IsInputChar : char -&gt; bool" Usage="toolStrip.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Carácter que se va a probar.</param>
        <summary>Determina si un carácter es un carácter de entrada que el elemento reconoce.</summary>
        <returns>
          <see langword="true" /> si el carácter debe enviarse directamente al elemento sin preprocesamiento; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ToolStrip.IsInputChar%2A> se llama al método durante el preprocesamiento de mensajes de ventana para determinar si el carácter de entrada determinado debe preprocesarse o envían directamente a la <xref:System.Windows.Forms.ToolStrip>. Si el <xref:System.Windows.Forms.ToolStrip.IsInputChar%2A> devuelve del método `true`, el carácter especificado se envía directamente a la <xref:System.Windows.Forms.ToolStrip>. Sin embargo, si el método devuelve `false`, el carácter se preprocesa y sólo se envía a la <xref:System.Windows.Forms.ToolStrip> si no se consume en la fase de preprocesamiento. El preprocesamiento de un carácter incluye la comprobación de si el carácter es una tecla de acceso de otro control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="toolStrip.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Determina si la tecla especificada es una tecla de entrada normal o una tecla especial que requiere preprocesamiento.</summary>
        <returns>
          <see langword="true" /> si la tecla especificada es una tecla de entrada normal; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ToolStripItemEventHandler ItemAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ToolStripItemEventHandler ItemAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.ItemAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemAdded As ToolStripItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ToolStripItemEventHandler ^ ItemAdded;" />
      <MemberSignature Language="F#" Value="member this.ItemAdded : System.Windows.Forms.ToolStripItemEventHandler " Usage="member this.ItemAdded : System.Windows.Forms.ToolStripItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se agrega un nuevo <see cref="T:System.Windows.Forms.ToolStripItem" /> a <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.ItemAdded> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.ItemAdded> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#91](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#91)]
 [!code-vb[System.Windows.Forms.EventExamples#91](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ToolStripItemClickedEventHandler ItemClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ToolStripItemClickedEventHandler ItemClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.ItemClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemClicked As ToolStripItemClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ToolStripItemClickedEventHandler ^ ItemClicked;" />
      <MemberSignature Language="F#" Value="member this.ItemClicked : System.Windows.Forms.ToolStripItemClickedEventHandler " Usage="member this.ItemClicked : System.Windows.Forms.ToolStripItemClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.ItemClicked> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.ItemClicked> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#92](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#92)]
 [!code-vb[System.Windows.Forms.EventExamples#92](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#92)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ToolStripItemEventHandler ItemRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ToolStripItemEventHandler ItemRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.ItemRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemRemoved As ToolStripItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ToolStripItemEventHandler ^ ItemRemoved;" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : System.Windows.Forms.ToolStripItemEventHandler " Usage="member this.ItemRemoved : System.Windows.Forms.ToolStripItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se quita un <see cref="T:System.Windows.Forms.ToolStripItem" /> de <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.ItemRemoved> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.ItemRemoved> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#93](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#93)]
 [!code-vb[System.Windows.Forms.EventExamples#93](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#93)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As ToolStripItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripItemCollection ^ Items { System::Windows::Forms::ToolStripItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ToolStripItemCollection" Usage="System.Windows.Forms.ToolStrip.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene todos los elementos que pertenecen a un <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Objeto de tipo <see cref="T:System.Windows.Forms.ToolStripItemCollection" /> que representa todos los elementos que forman parte de un <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.Items%2A> colección para recuperar todos los elementos que se han agregado a la <xref:System.Windows.Forms.ToolStrip>, no solo los elementos que se muestran. Un elemento permanece en el <xref:System.Windows.Forms.ToolStrip.Items%2A> colección incluso si es un elemento de desbordamiento y, por tanto, no está visible actualmente.  
  
 Use la <xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A> propiedad para recuperar solo los elementos que se muestran actualmente en el <xref:System.Windows.Forms.ToolStrip>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se agrega una colección de elementos a un <xref:System.Windows.Forms.ToolStrip>.  
  
 [!code-csharp[System.Windows.Forms.MainToolStripExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MainToolStripExample/cs/hvtsctoolstrip.cs#3)]
 [!code-vb[System.Windows.Forms.MainToolStripExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MainToolStripExample/vb/hvtsctoolstrip.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStrip.DisplayedItems" />
      </Docs>
    </Member>
    <Member MemberName="LayoutCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.LayoutCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutCompleted;" />
      <MemberSignature Language="F#" Value="member this.LayoutCompleted : EventHandler " Usage="member this.LayoutCompleted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el diseño de <see cref="T:System.Windows.Forms.ToolStrip" /> se ha completado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando no caben dentro de la <xref:System.Windows.Forms.ToolStrip>, aparece automáticamente un botón de desbordamiento. El <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> configuración de la propiedad determina si un elemento aparece en el área de desbordamiento siempre, según sea necesario o nunca.  
  
 Inspeccionar el <xref:System.Windows.Forms.ToolStripItem.Placement%2A> propiedad en el <xref:System.Windows.Forms.ToolStrip.LayoutCompleted> evento para determinar si un elemento se colocó en el método main <xref:System.Windows.Forms.ToolStrip>, el desbordamiento <xref:System.Windows.Forms.ToolStrip>, o si no está actualmente visible en absoluto. ¿Por qué no se muestra un elemento de las causas más habituales son que el elemento no cabe en el principal <xref:System.Windows.Forms.ToolStrip> y su <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> propiedad se estableció en <xref:System.Windows.Forms.ToolStripItemOverflow.Never>.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.LayoutCompleted> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.LayoutCompleted> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#94](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#94)]
 [!code-vb[System.Windows.Forms.EventExamples#94](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#94)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.ToolStrip.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pasa una referencia al elemento <see cref="P:System.Windows.Forms.Control.LayoutEngine" /> almacenado en caché devuelto por la interfaz del motor de diseño.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> que representa el motor de diseño almacenado en caché devuelto por la interfaz del motor de diseño.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutSettings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LayoutSettings LayoutSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LayoutSettings LayoutSettings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.LayoutSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutSettings As LayoutSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LayoutSettings ^ LayoutSettings { System::Windows::Forms::LayoutSettings ^ get(); void set(System::Windows::Forms::LayoutSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutSettings : System.Windows.Forms.LayoutSettings with get, set" Usage="System.Windows.Forms.ToolStrip.LayoutSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las características del esquema de diseño.</summary>
        <value>
          <see cref="T:System.Windows.Forms.LayoutSettings" /> que representa las características del esquema de diseño.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripLayoutStyle LayoutStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripLayoutStyle LayoutStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.LayoutStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutStyle As ToolStripLayoutStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripLayoutStyle LayoutStyle { System::Windows::Forms::ToolStripLayoutStyle get(); void set(System::Windows::Forms::ToolStripLayoutStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutStyle : System.Windows.Forms.ToolStripLayoutStyle with get, set" Usage="System.Windows.Forms.ToolStrip.LayoutStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripLayoutStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica cómo dispone <see cref="T:System.Windows.Forms.ToolStrip" /> la colección de elementos.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.ToolStripLayoutStyle" />. Los valores posibles son <see cref="F:System.Windows.Forms.ToolStripLayoutStyle.Table" />, <see cref="F:System.Windows.Forms.ToolStripLayoutStyle.Flow" />, <see cref="F:System.Windows.Forms.ToolStripLayoutStyle.StackWithOverflow" />, <see cref="F:System.Windows.Forms.ToolStripLayoutStyle.HorizontalStackWithOverflow" /> y <see cref="F:System.Windows.Forms.ToolStripLayoutStyle.VerticalStackWithOverflow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El control de tamaño no se mostrarán a menos que establezca también la <xref:System.Windows.Forms.ToolStrip.LayoutStyle%2A> propiedad en uno de los valores de desbordamiento. Si el <xref:System.Windows.Forms.ToolStrip.LayoutStyle%2A> propiedad está establecida en <xref:System.Windows.Forms.ToolStripLayoutStyle.Flow> o <xref:System.Windows.Forms.ToolStripLayoutStyle.Table>, no se mostrará el control de tamaño.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.LayoutStyle%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor de <see cref="P:System.Windows.Forms.ToolStrip.LayoutStyle" /> no es ninguno de los valores de <see cref="T:System.Windows.Forms.ToolStripLayoutStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LayoutStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.LayoutStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.LayoutStyleChanged : EventHandler " Usage="member this.LayoutStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.ToolStrip.LayoutStyle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.LayoutStyleChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.LayoutStyleChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#95](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#95)]
 [!code-vb[System.Windows.Forms.EventExamples#95](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#95)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxItemSize">
      <MemberSignature Language="C#" Value="protected internal virtual System.Drawing.Size MaxItemSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaxItemSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.MaxItemSize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property MaxItemSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Drawing::Size MaxItemSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxItemSize : System.Drawing.Size" Usage="System.Windows.Forms.ToolStrip.MaxItemSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el alto y el ancho máximos, en píxeles, del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Drawing.Size" /> que representa el ancho y el alto del control, en píxeles.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginDrag (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginDrag(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnBeginDrag(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginDrag (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginDrag(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginDrag : EventArgs -&gt; unit&#xA;override this.OnBeginDrag : EventArgs -&gt; unit" Usage="toolStrip.OnBeginDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.BeginDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnBeginDrag%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnBeginDrag(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnBeginDrag(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDockChanged">
      <MemberSignature Language="C#" Value="protected override void OnDockChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDockChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnDockChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDockChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDockChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDockChanged : EventArgs -&gt; unit" Usage="toolStrip.OnDockChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.DockChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnDockChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnDockChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnDockChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="toolStrip.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="P:System.Windows.Forms.Control.Enabled" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnEnabledChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnEnabledChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnEnabledChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEndDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnEndDrag (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndDrag(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnEndDrag(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndDrag (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndDrag(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEndDrag : EventArgs -&gt; unit&#xA;override this.OnEndDrag : EventArgs -&gt; unit" Usage="toolStrip.OnEndDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.EndDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnEndDrag%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnEndDrag(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnEndDrag(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="toolStrip.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="toolStrip.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnHandleCreated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnHandleCreated(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnHandleCreated(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="toolStrip.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnHandleDestroyed%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnHandleDestroyed(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnHandleDestroyed(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected override void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInvalidated(class System.Windows.Forms.InvalidateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInvalidated (e As InvalidateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInvalidated(System::Windows::Forms::InvalidateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit" Usage="toolStrip.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InvalidateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.Invalidated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemAdded">
      <MemberSignature Language="C#" Value="protected internal virtual void OnItemAdded (System.Windows.Forms.ToolStripItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnItemAdded(class System.Windows.Forms.ToolStripItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnItemAdded (e As ToolStripItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnItemAdded(System::Windows::Forms::ToolStripItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemAdded : System.Windows.Forms.ToolStripItemEventArgs -&gt; unit&#xA;override this.OnItemAdded : System.Windows.Forms.ToolStripItemEventArgs -&gt; unit" Usage="toolStrip.OnItemAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ToolStripItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.ToolStripItemEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.ItemAdded" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnItemAdded%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemClicked (System.Windows.Forms.ToolStripItemClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemClicked(class System.Windows.Forms.ToolStripItemClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemClicked (e As ToolStripItemClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemClicked(System::Windows::Forms::ToolStripItemClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemClicked : System.Windows.Forms.ToolStripItemClickedEventArgs -&gt; unit&#xA;override this.OnItemClicked : System.Windows.Forms.ToolStripItemClickedEventArgs -&gt; unit" Usage="toolStrip.OnItemClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ToolStripItemClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.ItemClicked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnItemClicked%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemRemoved">
      <MemberSignature Language="C#" Value="protected internal virtual void OnItemRemoved (System.Windows.Forms.ToolStripItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnItemRemoved(class System.Windows.Forms.ToolStripItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnItemRemoved(System.Windows.Forms.ToolStripItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnItemRemoved (e As ToolStripItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnItemRemoved(System::Windows::Forms::ToolStripItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemRemoved : System.Windows.Forms.ToolStripItemEventArgs -&gt; unit&#xA;override this.OnItemRemoved : System.Windows.Forms.ToolStripItemEventArgs -&gt; unit" Usage="toolStrip.OnItemRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ToolStripItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.ToolStripItemEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.ItemRemoved" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnItemRemoved%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnItemRemoved(System.Windows.Forms.ToolStripItemEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnItemRemoved(System.Windows.Forms.ToolStripItemEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="toolStrip.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnLayout%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutCompleted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutCompleted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnLayoutCompleted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutCompleted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutCompleted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutCompleted : EventArgs -&gt; unit&#xA;override this.OnLayoutCompleted : EventArgs -&gt; unit" Usage="toolStrip.OnLayoutCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.LayoutCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnLayoutCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnLayoutCompleted(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnLayoutCompleted(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnLayoutStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutStyleChanged : EventArgs -&gt; unit&#xA;override this.OnLayoutStyleChanged : EventArgs -&gt; unit" Usage="toolStrip.OnLayoutStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.LayoutStyleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnLayoutStyleChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnLayoutStyleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnLayoutStyleChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : EventArgs -&gt; unit" Usage="toolStrip.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.Leave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnLeave%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnLeave(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnLeave(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="toolStrip.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.LostFocus" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnLostFocus%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnLostFocus(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnLostFocus(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected override void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="toolStrip.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs mea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs mea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (mea As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ mea);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStrip.OnMouseDown mea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mea" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mea">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.MouseDown" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnMouseDown%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="toolStrip.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnMouseLeave%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnMouseLeave(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnMouseLeave(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs mea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs mea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (mea As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ mea);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStrip.OnMouseMove mea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mea" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mea">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.MouseMove" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnMouseMove%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mea As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mea);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStrip.OnMouseUp mea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mea" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mea">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.MouseUp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnMouseUp%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStrip.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnPaint%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnPaint(System.Windows.Forms.PaintEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnPaint(System.Windows.Forms.PaintEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStrip.OnPaintBackground e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene información sobre el control que se va a pintar.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.Paint" /> para el fondo del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnPaintBackground%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Las clases herederas deben invalidar este método para controlar la solicitud de Windows para borrar el fondo.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaintGrip">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPaintGrip (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPaintGrip(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnPaintGrip(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPaintGrip (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPaintGrip(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintGrip : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintGrip : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStrip.OnPaintGrip e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.PaintGrip" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método cuando se pinta el controlador de movimiento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnPaintGrip%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnPaintGrip(System.Windows.Forms.PaintEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnPaintGrip(System.Windows.Forms.PaintEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRendererChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRendererChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRendererChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnRendererChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRendererChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRendererChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRendererChanged : EventArgs -&gt; unit&#xA;override this.OnRendererChanged : EventArgs -&gt; unit" Usage="toolStrip.OnRendererChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStrip.RendererChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnRendererChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnRendererChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnRendererChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="toolStrip.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnRightToLeftChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnRightToLeftChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnRightToLeftChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected override void OnScroll (System.Windows.Forms.ScrollEventArgs se);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnScroll(class System.Windows.Forms.ScrollEventArgs se) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnScroll (se As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnScroll(System::Windows::Forms::ScrollEventArgs ^ se);" />
      <MemberSignature Language="F#" Value="override this.OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="toolStrip.OnScroll se" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="se" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="se">Objeto <see cref="T:System.Windows.Forms.ScrollEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ScrollableControl.Scroll" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTabStopChanged">
      <MemberSignature Language="C#" Value="protected override void OnTabStopChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTabStopChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnTabStopChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTabStopChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTabStopChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTabStopChanged : EventArgs -&gt; unit" Usage="toolStrip.OnTabStopChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.Control.TabStopChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnTabStopChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnTabStopChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnTabStopChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="toolStrip.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.ToolStripItem.VisibleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cambiar el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad de un <xref:System.Windows.Forms.ToolStrip> no genera los diversos * cambia los eventos de un <xref:System.Windows.Forms.ToolStripItem>. Genera los eventos con valores de propiedad específicos.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.ToolStrip.OnVisibleChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.ToolStrip.OnVisibleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.ToolStrip.OnVisibleChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Orientation Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Orientation Orientation { System::Windows::Forms::Orientation get(); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Windows.Forms.Orientation" Usage="System.Windows.Forms.ToolStrip.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la orientación del elemento <see cref="T:System.Windows.Forms.ToolStripPanel" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.Orientation" />. El valor predeterminado es <see cref="F:System.Windows.Forms.Orientation.Horizontal" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverflowButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripOverflowButton OverflowButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripOverflowButton OverflowButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.OverflowButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverflowButton As ToolStripOverflowButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripOverflowButton ^ OverflowButton { System::Windows::Forms::ToolStripOverflowButton ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OverflowButton : System.Windows.Forms.ToolStripOverflowButton" Usage="System.Windows.Forms.ToolStrip.OverflowButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripOverflowButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Windows.Forms.ToolStripItem" /> que es el botón de desbordamiento para un <see cref="T:System.Windows.Forms.ToolStrip" /> con desbordamiento habilitado.</summary>
        <value>Objeto de tipo <see cref="T:System.Windows.Forms.ToolStripOverflowButton" /> con su <see cref="T:System.Windows.Forms.ToolStripItemAlignment" /> establecido en <see cref="F:System.Windows.Forms.ToolStripItemAlignment.Right" /> y su valor <see cref="T:System.Windows.Forms.ToolStripItemOverflow" /> establecido en <see cref="F:System.Windows.Forms.ToolStripItemOverflow.Never" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintGrip">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler PaintGrip;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler PaintGrip" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.PaintGrip" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaintGrip As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ PaintGrip;" />
      <MemberSignature Language="F#" Value="member this.PaintGrip : System.Windows.Forms.PaintEventHandler " Usage="member this.PaintGrip : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se dibuja el controlador de movimiento de <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.PaintGrip> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.PaintGrip> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#96](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#96)]
 [!code-vb[System.Windows.Forms.EventExamples#96](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#96)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="toolStrip.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">
          <see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje de ventana que se va a procesar.</param>
        <param name="keyData">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se va a procesar.</param>
        <summary>Procesa una tecla de comando.</summary>
        <returns>
          <see langword="true" /> si el control procesó el carácter; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para el llamador inmediato y las clases herederas llamar a este método. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="toolStrip.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se va a procesar.</param>
        <summary>Procesa una tecla de cuadro de diálogo.</summary>
        <returns>
          <see langword="true" /> si el control procesó la tecla; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ToolStrip.ProcessDialogKey%2A> se llama al método durante el preprocesamiento de mensajes para controlar los caracteres de cuadro de diálogo como teclas de flecha, la devolución, ESCAPE y PESTAÑA. Se llama a este método solo si el <xref:System.Windows.Forms.ToolStrip.IsInputKey%2A> método indica que el control no está procesando la clave. El <xref:System.Windows.Forms.ToolStrip.ProcessDialogKey%2A> simplemente envía el carácter para el control primario <xref:System.Windows.Forms.ToolStrip.ProcessDialogKey%2A> método, o se devuelve `false` si el control no tiene ningún elemento primario. La <xref:System.Windows.Forms.Form?displayProperty=nameWithType> clase reemplaza este método para realizar el procesamiento de las claves del cuadro de diálogo. Este método solo se llama cuando el control se hospeda en una aplicación de Windows Forms o un control ActiveX.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="M:System.Windows.Forms.ToolStrip.ProcessDialogKey(System.Windows.Forms.Keys)" /> método en una clase derivada, debe devolver un control <see langword="true" /> para indicar que ha procesado la clave. Para las claves que no son procesadas por el control, el resultado de llamar a la clase base <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> método se debe devolver. Controles rara vez, si alguna vez, debe invalidar este método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="toolStrip.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Carácter que se va a procesar.</param>
        <summary>Procesa un carácter de tecla de acceso.</summary>
        <returns>
          <see langword="true" /> si el control procesó el carácter como carácter de tecla de acceso; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ToolStrip.ProcessMnemonic%2A> método se llama para dar la oportunidad de procesar un carácter de tecla de acceso a un control. Este método debe determinar si el control está en un estado de las teclas de acceso del proceso y si el carácter especificado representa una tecla de acceso. Si es así, el método debe realizar la acción asociada con la tecla de acceso y devolver `true`. Si no, el método debe devolver `false`.  
  
 Las implementaciones de este método se utilizan a menudo el <xref:System.Windows.Forms.Control.IsMnemonic%2A?displayProperty=nameWithType> método para determinar si el carácter especificado coincide con una tecla de acceso en el texto del control.  
  
 Esta implementación predeterminada de la <xref:System.Windows.Forms.ToolStrip.ProcessMnemonic%2A> método simplemente devuelve `false`, para indicar que el control no tiene ningún carácter de tecla de acceso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Renderer">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripRenderer Renderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripRenderer Renderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Renderer" />
      <MemberSignature Language="VB.NET" Value="Public Property Renderer As ToolStripRenderer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripRenderer ^ Renderer { System::Windows::Forms::ToolStripRenderer ^ get(); void set(System::Windows::Forms::ToolStripRenderer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Renderer : System.Windows.Forms.ToolStripRenderer with get, set" Usage="System.Windows.Forms.ToolStrip.Renderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un elemento <see cref="T:System.Windows.Forms.ToolStripRenderer" /> usado para personalizar la apariencia de un <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripRenderer" /> usado para personalizar la apariencia de un elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.Renderer%2A> propiedad y el <xref:System.Windows.Forms.ToolStripRenderer> clase para personalizar la apariencia de cualquier <xref:System.Windows.Forms.ToolStripItem> que no tiene un identificador de ventana.  
  
 Para ello, derive una clase de <xref:System.Windows.Forms.ToolStripRenderer>, asígnelo a la <xref:System.Windows.Forms.ToolStrip.Renderer%2A> propiedad y llame a la <xref:System.Windows.Forms.ToolStripItem.Invalidate%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendererChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RendererChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RendererChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStrip.RendererChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RendererChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RendererChanged;" />
      <MemberSignature Language="F#" Value="member this.RendererChanged : EventHandler " Usage="member this.RendererChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.ToolStrip.Renderer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ToolStrip.RendererChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStrip> denominado `ToolStrip1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ToolStrip.RendererChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#97](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#97)]
 [!code-vb[System.Windows.Forms.EventExamples#97](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As ToolStripRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripRenderMode RenderMode { System::Windows::Forms::ToolStripRenderMode get(); void set(System::Windows::Forms::ToolStripRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Windows.Forms.ToolStripRenderMode with get, set" Usage="System.Windows.Forms.ToolStrip.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica qué estilos visuales se aplicarán al elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Valor que indica el estilo visual que se va a aplicar. El valor predeterminado es <see cref="F:System.Windows.Forms.ToolStripRenderMode.ManagerRenderMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para indicar qué conjunto de estilos visuales la <xref:System.Windows.Forms.ToolStrip> va a usar. Puede utilizar esta propiedad para especificar un estilo de representación profesional, un estilo de representación predeterminado del sistema o un estilo administrados por el <xref:System.Windows.Forms.ToolStrip.Renderer%2A> valor de propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.RenderMode%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor que se está estableciendo no es ninguno de los valores de <see cref="T:System.Windows.Forms.ToolStripRenderMode" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Windows.Forms.ToolStripRenderMode" /> se establece en <see cref="F:System.Windows.Forms.ToolStripRenderMode.Custom" /> sin que la propiedad <see cref="P:System.Windows.Forms.ToolStrip.Renderer" /> se asigne a una nueva instancia de <see cref="T:System.Windows.Forms.ToolStripRenderer" />.</exception>
        <altmember cref="P:System.Windows.Forms.ToolStrip.Renderer" />
      </Docs>
    </Member>
    <Member MemberName="ResetMinimumSize">
      <MemberSignature Language="C#" Value="public void ResetMinimumSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMinimumSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.ResetMinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMinimumSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMinimumSize();" />
      <MemberSignature Language="F#" Value="member this.ResetMinimumSize : unit -&gt; unit" Usage="toolStrip.ResetMinimumSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Este método no es relevante para esta clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFocus">
      <MemberSignature Language="C#" Value="protected virtual void RestoreFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RestoreFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.RestoreFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RestoreFocus ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RestoreFocus();" />
      <MemberSignature Language="F#" Value="abstract member RestoreFocus : unit -&gt; unit&#xA;override this.RestoreFocus : unit -&gt; unit" Usage="toolStrip.RestoreFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controla la ubicación de retorno del foco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalidar el <xref:System.Windows.Forms.ToolStrip.RestoreFocus%2A> método para controlar dónde el foco vuelve cuando la <xref:System.Windows.Forms.ToolStrip.TabStop%2A> propiedad es `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="toolStrip.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <see langword="true" /> para especificar la dirección del control que se va a seleccionar; en caso contrario, <see langword="false" />.</param>
        <param name="forward">Es <see langword="true" /> para moverse hacia delante en el orden de tabulación; es <see langword="false" /> para moverse hacia atrás en el orden de tabulación.</param>
        <summary>Activa un control secundario. Opcionalmente, especifica la dirección en que se seleccionará el control en el orden de tabulación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `directed` y `forward` parámetros se usan controles de estilo contenedor. Cuando el `directed` parámetro está establecido en `true`, el `forward` parámetro se evalúa para determinar el control para seleccionar. Cuando `forward` está establecido en `true`, se selecciona el siguiente control en el orden de tabulación; cuando `false`, se selecciona el control anterior en el orden de tabulación.  
  
 El <xref:System.Windows.Forms.ToolStrip.Select%2A> método activa el control si el control <xref:System.Windows.Forms.ControlStyles.Selectable?displayProperty=nameWithType> bit de estilo se establece en `true`, que está contenida en otro control y todos sus controles principales son visibles y están habilitados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAutoScrollMargin">
      <MemberSignature Language="C#" Value="public void SetAutoScrollMargin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAutoScrollMargin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.SetAutoScrollMargin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAutoScrollMargin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAutoScrollMargin(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.SetAutoScrollMargin : int * int -&gt; unit" Usage="toolStrip.SetAutoScrollMargin (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Una clase <see cref="T:System.Int32" />.</param>
        <param name="y">Una clase <see cref="T:System.Int32" />.</param>
        <summary>Este método no es relevante para esta clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="toolStrip.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Left" /> del control.</param>
        <param name="y">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Top" /> del control.</param>
        <param name="width">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Width" /> del control.</param>
        <param name="height">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Height" /> del control.</param>
        <param name="specified">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.BoundsSpecified" />.</param>
        <summary>Realiza la tarea de configurar los límites especificados de este control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayedItems">
      <MemberSignature Language="C#" Value="protected virtual void SetDisplayedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDisplayedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.SetDisplayedItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDisplayedItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDisplayedItems();" />
      <MemberSignature Language="F#" Value="abstract member SetDisplayedItems : unit -&gt; unit&#xA;override this.SetDisplayedItems : unit -&gt; unit" Usage="toolStrip.SetDisplayedItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece la colección de elementos mostrados y de desbordamiento una vez terminado un diseño.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemLocation">
      <MemberSignature Language="C#" Value="protected internal void SetItemLocation (System.Windows.Forms.ToolStripItem item, System.Drawing.Point location);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SetItemLocation(class System.Windows.Forms.ToolStripItem item, valuetype System.Drawing.Point location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.SetItemLocation(System.Windows.Forms.ToolStripItem,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub SetItemLocation (item As ToolStripItem, location As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void SetItemLocation(System::Windows::Forms::ToolStripItem ^ item, System::Drawing::Point location);" />
      <MemberSignature Language="F#" Value="member this.SetItemLocation : System.Windows.Forms.ToolStripItem * System.Drawing.Point -&gt; unit" Usage="toolStrip.SetItemLocation (item, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ToolStripItem" />
        <Parameter Name="location" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ToolStripItem" /> que se va a delimitar.</param>
        <param name="location">
          <see cref="T:System.Drawing.Point" /> que representa las coordenadas cliente X e Y de la ubicación del elemento <see cref="T:System.Windows.Forms.ToolStripItem" />, en píxeles.</param>
        <summary>Delimita un <see cref="T:System.Windows.Forms.ToolStripItem" /> a un lugar determinado de un <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="item" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El <see cref="T:System.Windows.Forms.ToolStrip" /> actual no es el propietario del <see cref="T:System.Windows.Forms.ToolStripItem" /> al que hace referencia el parámetro <paramref name="item" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItemParent">
      <MemberSignature Language="C#" Value="protected static void SetItemParent (System.Windows.Forms.ToolStripItem item, System.Windows.Forms.ToolStrip parent);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void SetItemParent(class System.Windows.Forms.ToolStripItem item, class System.Windows.Forms.ToolStrip parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.SetItemParent(System.Windows.Forms.ToolStripItem,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub SetItemParent (item As ToolStripItem, parent As ToolStrip)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void SetItemParent(System::Windows::Forms::ToolStripItem ^ item, System::Windows::Forms::ToolStrip ^ parent);" />
      <MemberSignature Language="F#" Value="static member SetItemParent : System.Windows.Forms.ToolStripItem * System.Windows.Forms.ToolStrip -&gt; unit" Usage="System.Windows.Forms.ToolStrip.SetItemParent (item, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ToolStripItem" />
        <Parameter Name="parent" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ToolStripItem" /> cuya propiedad <see cref="P:System.Windows.Forms.Control.Parent" /> se va a cambiar.</param>
        <param name="parent">
          <see cref="T:System.Windows.Forms.ToolStrip" /> que es el elemento primario del <see cref="T:System.Windows.Forms.ToolStripItem" /> al que hace referencia el parámetro <c>item</c>.</param>
        <summary>Le permite cambiar el elemento <see cref="T:System.Windows.Forms.ToolStrip" /> primario de un elemento <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ToolStrip.SetItemParent%2A> propiedad al crear un motor de diseño personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool visible);" />
      <MemberSignature Language="F#" Value="override this.SetVisibleCore : bool -&gt; unit" Usage="toolStrip.SetVisibleCore visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Es <see langword="true" /> si <see cref="T:System.Windows.Forms.ToolStripItem" /> está visible; en caso contrario, es <see langword="false" />.</param>
        <summary>Recupera un valor que establece el elemento <see cref="T:System.Windows.Forms.ToolStripItem" /> en el estado de visibilidad especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, debe reemplazar este método para cambiar el comportamiento de visibilidad del control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ToolStrip.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica cómo se muestra la información sobre herramientas en elementos del elemento <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Es <see langword="true" /> si se va a mostrar información sobre herramientas; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A> propiedad para determinar si se muestra información sobre herramientas para el <xref:System.Windows.Forms.ToolStripItem>.  
  
   
  
## Examples  
 El siguiente ejemplo de código desactiva el automático <xref:System.Windows.Forms.ToolTip> texto para un <xref:System.Windows.Forms.ToolStripButton> y establece personalizado <xref:System.Windows.Forms.ToolTip> texto. Este ejemplo forma parte de un ejemplo más extenso proporcionado en el <xref:System.Windows.Forms.ToolStripButton.AutoToolTip%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStripToolTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripToolTip/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripToolTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripToolTip/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public bool Stretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.Stretch" />
      <MemberSignature Language="VB.NET" Value="Public Property Stretch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Stretch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Stretch : bool with get, set" Usage="System.Windows.Forms.ToolStrip.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el elemento <see cref="T:System.Windows.Forms.ToolStrip" /> se expande de extremo a extremo en el elemento <see cref="T:System.Windows.Forms.ToolStripContainer" />.</summary>
        <value>
          <see langword="true" /> si el elemento <see cref="T:System.Windows.Forms.ToolStrip" /> se expande de extremo a extremo en su <see cref="T:System.Windows.Forms.ToolStripContainer" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ToolStrip.Stretch%2A> propiedad para obtener o establecer si el <xref:System.Windows.Forms.ToolStrip> se rellena automáticamente su contenedor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.Stretch%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.ToolStrip.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el usuario puede asignar el foco a un elemento del elemento <see cref="T:System.Windows.Forms.ToolStrip" /> mediante la tecla TAB.</summary>
        <value>Es <see langword="true" /> si el usuario puede dar el foco a un elemento de <see cref="T:System.Windows.Forms.ToolStrip" /> mediante la tecla TAB; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el usuario presiona la tecla TAB, el foco de entrada se establece en la siguiente <xref:System.Windows.Forms.ToolStripItem> en el orden de tabulación. Los controles con un <xref:System.Windows.Forms.Control.TabStop%2A> el valor de propiedad `false` no se incluyen en la colección de controles en el orden de tabulación. Puede manipular el orden de tabulación cambiando la <xref:System.Windows.Forms.Control.TabIndex%2A> valor de propiedad para controles de la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.TabStop%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripTextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripTextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextDirection As ToolStripTextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripTextDirection TextDirection { System::Windows::Forms::ToolStripTextDirection get(); void set(System::Windows::Forms::ToolStripTextDirection value); };" />
      <MemberSignature Language="F#" Value="member this.TextDirection : System.Windows.Forms.ToolStripTextDirection with get, set" Usage="System.Windows.Forms.ToolStrip.TextDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripTextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección en la que se dibujará el texto en un <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.ToolStripTextDirection" />. El valor predeterminado es <see cref="F:System.Windows.Forms.ToolStripTextDirection.Horizontal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ToolStrip.TextDirection%2A> propiedad va a obtener o establecer la dirección del texto de presentación de un <xref:System.Windows.Forms.ToolStripItem>, como un <xref:System.Windows.Forms.ToolStripLabel> o <xref:System.Windows.Forms.ToolStripButton>. Puede establecer el <xref:System.Windows.Forms.ToolStrip.TextDirection%2A> propiedad en el <xref:System.Windows.Forms.ToolStrip> Sí, en cuyo caso la configuración se aplicará a cada <xref:System.Windows.Forms.ToolStripItem> se agrega a la <xref:System.Windows.Forms.ToolStrip>, o bien puede establecer el <xref:System.Windows.Forms.ToolStrip.TextDirection%2A> propiedad diferente para cada <xref:System.Windows.Forms.ToolStripItem>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la sintaxis de configuración comunes <xref:System.Windows.Forms.ToolStrip> propiedades, incluida la <xref:System.Windows.Forms.ToolStrip.TextDirection%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor especificado no es ninguno de los valores de <see cref="T:System.Windows.Forms.ToolStripTextDirection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="toolStrip.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el control <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>Cadena que representa el control <see cref="T:System.Windows.Forms.ToolStrip" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScroll">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VScrollProperties VerticalScroll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.VScrollProperties VerticalScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStrip.VerticalScroll" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalScroll As VScrollProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::VScrollProperties ^ VerticalScroll { System::Windows::Forms::VScrollProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScroll : System.Windows.Forms.VScrollProperties" Usage="System.Windows.Forms.ToolStrip.VerticalScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VScrollProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es relevante para esta clase.</summary>
        <value>Instancia de la clase <see cref="T:System.Windows.Forms.VScrollProperties" /> que proporciona las propiedades básicas para un <see cref="T:System.Windows.Forms.VScrollBar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no es relevante para esta clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStrip.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="toolStrip.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <see cref="T:System.Windows.Forms.Message" /> de Windows que se va a procesar.</param>
        <summary>Procesa los mensajes de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos los mensajes se envían a la <xref:System.Windows.Forms.Control.WndProc%2A> método una vez filtrados a través de la <xref:System.Windows.Forms.Control.PreProcessMessage%2A> método.  
  
 El método <xref:System.Windows.Forms.Control.WndProc%2A> corresponde exactamente a la función `WindowProc` de Windows. Para obtener más información acerca de cómo procesar mensajes de Windows, consulte el `WindowProc` documentación de la función en la referencia de Windows Platform SDK se encuentra en la biblioteca MSDN en http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo reemplazar el <xref:System.Windows.Forms.Control.WndProc%2A> método para controlar los mensajes de sistema operativo identificados en el <xref:System.Windows.Forms.Message> estructura. El mensaje del sistema operativo WM_ACTIVATEAPP se controla en este ejemplo para saber cuando otra aplicación se está convirtiendo en activo. Para obtener información acerca de la disponible <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, y <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> valores, consulte la documentación de referencia de Platform SDK se encuentra en la biblioteca MSDN en http://msdn.microsoft.com/library. Los valores constantes reales se pueden encontrar en el archivo de encabezado de windows.h incluido en la descarga de Platform SDK (sección Core SDK), que también está disponible en MSDN.  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Los controles heredados deben llamar a la clase base <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> método para procesar los mensajes que no controlan.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>