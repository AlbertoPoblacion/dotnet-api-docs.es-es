<Type Name="SearchForVirtualItemEventArgs" FullName="System.Windows.Forms.SearchForVirtualItemEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51cbb4b4e4bd073441e87784a6ec79a5d99d2a40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649609" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchForVirtualItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchForVirtualItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchForVirtualItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchForVirtualItemEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.SearchForVirtualItemEventArgs> se construye y se pasa a la <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventos cuando se llama a la <xref:System.Windows.Forms.ListView.FindItemWithText%2A> o <xref:System.Windows.Forms.ListView.FindNearestItem%2A> métodos en un <xref:System.Windows.Forms.ListView> control en el modo virtual.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este tipo. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchForVirtualItemEventArgs (bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, string text, System.Drawing.Point startingPoint, System.Windows.Forms.SearchDirectionHint direction, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, string text, valuetype System.Drawing.Point startingPoint, valuetype System.Windows.Forms.SearchDirectionHint direction, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SearchForVirtualItemEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Point,System.Windows.Forms.SearchDirectionHint,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isTextSearch As Boolean, isPrefixSearch As Boolean, includeSubItemsInSearch As Boolean, text As String, startingPoint As Point, direction As SearchDirectionHint, startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchForVirtualItemEventArgs(bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, System::String ^ text, System::Drawing::Point startingPoint, System::Windows::Forms::SearchDirectionHint direction, int startIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isTextSearch" Type="System.Boolean" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="startingPoint" Type="System.Drawing.Point" />
        <Parameter Name="direction" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="isTextSearch">Valor que indica si la búsqueda es una búsqueda de texto.</param>
        <param name="isPrefixSearch">Valor que indica si la búsqueda es una búsqueda de prefijo.</param>
        <param name="includeSubItemsInSearch">Valor que indica si hay que incluir subelementos de elementos de lista en la búsqueda.</param>
        <param name="text">Texto del elemento que se va a buscar.</param>
        <param name="startingPoint">
          <see cref="T:System.Drawing.Point" /> donde va a comenzar la búsqueda.</param>
        <param name="direction">Uno de los valores de <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="startIndex">Índice del control <see cref="T:System.Windows.Forms.ListViewItem" /> en el que se va a iniciar la búsqueda.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SearchDirectionHint Direction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SearchDirectionHint Direction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Direction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Direction As SearchDirectionHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SearchDirectionHint Direction { System::Windows::Forms::SearchDirectionHint get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchDirectionHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección del elemento actual donde debe realizarse la búsqueda.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La identificación del elemento más cercano en un <xref:System.Windows.Forms.ListView> control puede variar según el sistema operativo que se ejecuta la aplicación; por lo tanto, la dirección de búsqueda es una sugerencia y no una garantía absoluta de resultados.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubItemsInSearch">
      <MemberSignature Language="C#" Value="public bool IncludeSubItemsInSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubItemsInSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IncludeSubItemsInSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeSubItemsInSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubItemsInSearch { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la búsqueda debe incluir subelementos de elementos de lista.</summary>
        <value>
          Es <see langword="true" /> si se deben incluir los subelementos en la búsqueda; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Suelen ser subelementos se usa cuando un <xref:System.Windows.Forms.ListView> en <xref:System.Windows.Forms.View.Details> vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el índice del <see cref="T:System.Windows.Forms.ListViewItem" /> que se encuentra en <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>El índice del <see cref="T:System.Windows.Forms.ListViewItem" /> de <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A> propiedad en el índice del elemento que cumpla los criterios de búsqueda al controlar la <xref:System.Windows.Forms.ListView.SearchForVirtualItem> eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrefixSearch">
      <MemberSignature Language="C#" Value="public bool IsPrefixSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrefixSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrefixSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrefixSearch { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la búsqueda debe devolver un elemento si su texto comienza con el texto de búsqueda.</summary>
        <value>
          Es <see langword="true" /> si la búsqueda se corresponde con el texto del elemento que comienza con el texto de búsqueda; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Text%2A> propiedad puede especificar una subcadena del texto deseado. El <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch%2A> propiedad indica si la búsqueda debe coincidir con los elementos que comienzan con el texto de búsqueda.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearch">
      <MemberSignature Language="C#" Value="public bool IsTextSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IsTextSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTextSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextSearch { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la búsqueda es una búsqueda de texto.</summary>
        <value>
          Es <see langword="true" /> si la búsqueda es una búsqueda de texto; es <see langword="false" /> si la búsqueda es una búsqueda de ubicación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede buscar un <xref:System.Windows.Forms.ListView> control por ubicación mediante el uso de la <xref:System.Windows.Forms.ListView.FindNearestItem%2A> método, o bien puede realizar una búsqueda de texto mediante el <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public int StartIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.StartIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el índice del control <see cref="T:System.Windows.Forms.ListViewItem" /> donde se inicia la búsqueda.</summary>
        <value>Índice del control <see cref="T:System.Windows.Forms.ListViewItem" /> que indica dónde se inicia la búsqueda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se utiliza para realizar una búsqueda de ubicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartingPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point StartingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point StartingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.StartingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartingPoint As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point StartingPoint { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ubicación de inicio de la búsqueda.</summary>
        <value>Control <see cref="T:System.Drawing.Point" /> que indica la ubicación de inicio de la búsqueda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede buscar un <xref:System.Windows.Forms.ListView> control por ubicación mediante el uso de la <xref:System.Windows.Forms.ListView.FindNearestItem%2A> método, o bien puede realizar una búsqueda de texto mediante el <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el texto utilizado para encontrar un elemento en el control <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Texto utilizado para encontrar un elemento en el control <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede buscar un <xref:System.Windows.Forms.ListView> control por ubicación mediante el uso de la <xref:System.Windows.Forms.ListView.FindNearestItem%2A> método, o bien puede realizar una búsqueda de texto mediante el <xref:System.Windows.Forms.ListView.FindItemWithText%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>