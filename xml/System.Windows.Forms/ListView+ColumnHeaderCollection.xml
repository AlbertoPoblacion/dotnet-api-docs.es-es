<Type Name="ListView+ColumnHeaderCollection" FullName="System.Windows.Forms.ListView+ColumnHeaderCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b8bb538d4005bac95280ac07223db31d378769e" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55671608" /></Metadata><TypeSignature Language="C#" Value="public class ListView.ColumnHeaderCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ColumnHeaderCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ColumnHeaderCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ColumnHeaderCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.ColumnHeaderCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa la colección de encabezados de columna en un control <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> clase almacena los encabezados de columna que se muestran en el <xref:System.Windows.Forms.ListView> controlar cuándo el <xref:System.Windows.Forms.ListView.View%2A> propiedad está establecida en <xref:System.Windows.Forms.View.Details>. El <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> almacena <xref:System.Windows.Forms.ColumnHeader> objetos que definen el texto para mostrar de una columna, así como la forma se muestra el encabezado de columna en la <xref:System.Windows.Forms.ListView> controlar al mostrar las columnas. Cuando un <xref:System.Windows.Forms.ListView> muestra columnas, los elementos y sus subelementos se muestran en sus propias columnas. Para especificar qué columnas se muestran datos de subelementos en, vea el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> clase.  
  
 Hay varias maneras de agregar los encabezados de columna a la colección. El <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método agrega un encabezado de columna única a la colección. Para agregar un número de encabezados de columna a la colección, se crea una matriz de <xref:System.Windows.Forms.ColumnHeader> objetos y páselo a la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método. Si desea insertar un encabezado de columna en una ubicación específica de la colección, puede usar el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método. Para quitar los encabezados de columna, puede usar el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> método o la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt%2A> método si sabe dónde se encuentra el encabezado de columna en la colección. El <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear%2A> método le permite quitar todos los encabezados de columna de la colección en lugar de usar el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> método para quitar un encabezado de columna única a la vez.  
  
 Además de los métodos y propiedades para agregar y quitar encabezados de columna, el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> también proporciona métodos para buscar los encabezados de columna en la colección. El <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains%2A> método le permite determinar si un encabezado de columna es un miembro de la colección. Una vez que sepa que se encuentra el encabezado de columna en la colección, puede usar el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> método para determinar dónde se encuentra el encabezado de columna en la colección.  
  
> [!NOTE]
>  Puede dar lugar a un comportamiento inesperado cuando el ancho combinado de todas las columnas supera los 32.768 píxeles.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un formulario que contiene un <xref:System.Windows.Forms.ListView> control que ordena manualmente los elementos cuando una columna en el <xref:System.Windows.Forms.ListView> se hace clic en el control. El ejemplo define una clase denominada `ListViewItemComparer` que implementa el <xref:System.Collections.IComparer?displayProperty=nameWithType> interfaz que realiza el <xref:System.Windows.Forms.ListViewItem> comparación. En el ejemplo se crea una instancia de `ListViewItemComparer` y lo usa para establecer el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad de la <xref:System.Windows.Forms.ListView> control. El <xref:System.Windows.Forms.ListView.Sort%2A> llame al método el <xref:System.Windows.Forms.ListView.ColumnClick> controlador de eventos utiliza los métodos definidos en `ListViewItemComparer` para realizar la ordenación de elementos, en función de la columna que se hizo clic.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnHeaderCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnHeaderCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.ColumnHeaderCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="new System.Windows.Forms.ListView.ColumnHeaderCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ListView" /> que posee esta colección.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear una instancia de esta clase sin asociarla a un <xref:System.Windows.Forms.ListView> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un encabezado de columna a la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <summary>Crea una columna con el texto especificado y la agrega a la colección.</summary>
        <returns>Objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con el texto especificado que se ha agregado a la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El encabezado de columna se agregará al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ColumnHeader) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.ColumnHeader -&gt; int&#xA;override this.Add : System.Windows.Forms.ColumnHeader -&gt; int" Usage="columnHeaderCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ColumnHeader" /> que se agrega a la colección.</param>
        <summary>Agrega un objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> existente a la colección.</summary>
        <returns>Índice basado en cero en la colección donde se almacena el elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método para agregar una existente <xref:System.Windows.Forms.ColumnHeader> a la colección. Si desea crear un nuevo <xref:System.Windows.Forms.ColumnHeader> en el momento de agregarlo a la colección, puede utilizar la otra versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método.  
  
 Cuando se agregan los encabezados de columna, se agrega al final de la colección. Para insertar un encabezado de columna en la colección en una posición específica, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método. Para agregar un conjunto de encabezados de columna a la colección en una sola operación, use el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un formulario que contiene un <xref:System.Windows.Forms.ListView> control que ordena manualmente los elementos cuando una columna en el <xref:System.Windows.Forms.ListView> se hace clic en el control. El ejemplo define una clase denominada `ListViewItemComparer` que implementa el <xref:System.Collections.IComparer?displayProperty=nameWithType> interfaz que realiza el <xref:System.Windows.Forms.ListViewItem> comparación. En el ejemplo se crea una instancia de `ListViewItemComparer` y lo usa para establecer el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad de la <xref:System.Windows.Forms.ListView> control. El <xref:System.Windows.Forms.ListView.Sort%2A> llame al método el <xref:System.Windows.Forms.ListView.ColumnClick> controlador de eventos utiliza los métodos definidos en `ListViewItemComparer` para realizar la ordenación de elementos, en función de la columna que se hizo clic.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange(System.Windows.Forms.ColumnHeader[])" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, width As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * int -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Texto del objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a agregar a la colección.</param>
        <param name="width">Ancho del objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a agregar a la colección.</param>
        <summary>Crea una columna con el texto y el ancho especificados y la agrega a la colección.</summary>
        <returns>Objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con el texto y el ancho especificados que se ha agregado a la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La columna se agrega al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Clave del objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a agregar a la colección.</param>
        <param name="text">Texto del objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a agregar a la colección.</param>
        <summary>Crea una columna con el texto y la clave especificados y la agrega a la colección.</summary>
        <returns>Objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con el texto y la clave especificados que se ha agregado a la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 La columna se agrega al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, width As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Clave del encabezado de columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial del objeto <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
        <summary>Crea una columna con el texto, la clave y el ancho especificados y la agrega a la colección.</summary>
        <returns>Objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con el texto, la clave y el ancho especificados que se ha agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 La columna se agrega al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string str, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string str, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (str As String, width As Integer, textAlign As HorizontalAlignment) As ColumnHeader" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ str, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (str, width, textAlign)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string text, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, width As Integer, textAlign As HorizontalAlignment) As ColumnHeader" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (text, width, textAlign)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="width" Type="System.Int32" Index="1" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" Index="2" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="str">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial del encabezado de columna.</param>
        <param name="textAlign">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</param>
        <summary>Agrega un encabezado de columna a la colección con los valores de alineación, ancho y texto específicos.</summary>
        <returns><see cref="T:System.Windows.Forms.ColumnHeader" /> creado y agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método para crear un nuevo <xref:System.Windows.Forms.ColumnHeader> para agregar a la colección. El texto de la nueva <xref:System.Windows.Forms.ColumnHeader> agregado para el control se basa en el `text` parámetro. Esta versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método también permite especificar el ancho de la columna y la alineación del texto del encabezado de columna. Si dispone de una <xref:System.Windows.Forms.ColumnHeader> que desea agregar a la colección, use la versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método que acepta un <xref:System.Windows.Forms.ColumnHeader> como su parámetro.  
  
 Cuando se agregan los encabezados de columna, se agrega al final de la colección. Para insertar un encabezado de columna en la colección en una posición específica, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método. Para agregar un conjunto de encabezados de columna a la colección en una sola operación, use el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.ListView> control con tres <xref:System.Windows.Forms.ListViewItem> objetos especificados y tres <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada elemento. El ejemplo también crea <xref:System.Windows.Forms.ColumnHeader> objetos que se mostrarán los subelementos en la vista de detalles. Dos <xref:System.Windows.Forms.ImageList> objetos también se crean en el ejemplo de código para proporcionar imágenes para la <xref:System.Windows.Forms.ListViewItem> objetos. Estos <xref:System.Windows.Forms.ImageList> se agregan objetos a la <xref:System.Windows.Forms.ListView.LargeImageList%2A> y <xref:System.Windows.Forms.ListView.SmallImageList%2A> propiedades. El ejemplo utiliza las propiedades siguientes para crear el <xref:System.Windows.Forms.ListView> control:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este ejemplo requiere que se ha agregado el código para un <xref:System.Windows.Forms.Form> y llame al método creado en el ejemplo desde el constructor u otro método en el formulario. El ejemplo también requiere que las imágenes denominado `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, y `MyLargeImage2` se encuentran en el directorio raíz de la unidad C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange(System.Windows.Forms.ColumnHeader[])" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageIndex As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int * System.Windows.Forms.HorizontalAlignment * int -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string * int * System.Windows.Forms.HorizontalAlignment * int -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text, width, textAlign, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Clave del encabezado de columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial del encabezado de columna.</param>
        <param name="textAlign">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</param>
        <param name="imageIndex">Valor de índice de la imagen que se va a mostrar en la columna.</param>
        <summary>Crea una columna con la clave, el texto alineado, el ancho y la imagen especificados, y la agrega a la colección.</summary>
        <returns>Objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con la clave, el texto alineado, el ancho y el índice de imagen especificados que se ha agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 La columna se agrega al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageKey As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int * System.Windows.Forms.HorizontalAlignment * string -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string * int * System.Windows.Forms.HorizontalAlignment * string -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text, width, textAlign, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Clave del encabezado de columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial del encabezado de columna.</param>
        <param name="textAlign">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</param>
        <param name="imageKey">Valor clave de la imagen que se va a mostrar en la columna.</param>
        <summary>Crea una columna con la clave, el texto alineado, el ancho y la clave de imagen especificados, y la agrega a la colección.</summary>
        <returns>Objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con la clave, el texto alineado, el ancho y la clave de imagen especificados que se ha agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 La columna se agrega al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.ColumnHeader[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.ColumnHeader[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange(System.Windows.Forms.ColumnHeader[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (values As ColumnHeader())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::ColumnHeader ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.ColumnHeader[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.ColumnHeader[] -&gt; unit" Usage="columnHeaderCollection.AddRange values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Windows.Forms.ColumnHeader[]" />
      </Parameters>
      <Docs>
        <param name="values">Matriz de objetos <see cref="T:System.Windows.Forms.ColumnHeader" /> que se agregará a la colección.</param>
        <summary>Agrega una matriz de encabezados de columna a la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para volver a usar los encabezados de columna utilizados en otro <xref:System.Windows.Forms.ListView> control. Si desea agregar un solo <xref:System.Windows.Forms.ColumnHeader>, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. También puede usar el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método si desea agregar un solo <xref:System.Windows.Forms.ColumnHeader> en una posición específica de la colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="columnHeaderCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los encabezados de columna de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al quitar los encabezados de columna de la colección, se pierde toda la información acerca de los encabezados de columna eliminada. Para quitar un encabezado de columna única de la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> o <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove(System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ColumnHeader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ColumnHeader -&gt; bool" Usage="columnHeaderCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ColumnHeader" /> que representa el encabezado de columna que se va a buscar en la colección.</param>
        <summary>Determina si el encabezado de columna especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si la colección contiene el encabezado de columna; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains%2A> método le permite determinar si un <xref:System.Windows.Forms.ColumnHeader> es un miembro de la colección. Una vez que sepa que el encabezado de columna está en la colección, puede usar el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> método para determinar la posición del encabezado de columna en la colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf(System.Windows.Forms.ColumnHeader)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="columnHeaderCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre de la columna que se va a buscar.</param>
        <summary>Determina si una columna con la clave especificada está incluida en la colección.</summary>
        <returns><see langword="true" /> si la columna con el nombre especificado está incluida en la colección; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. Si `key` es `null` o está vacío, <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.ContainsKey%2A> devuelve `false.`  
  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave de un elemento en el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de elementos de la colección.</summary>
        <value>Número de elementos de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite determinar el número de columnas que se muestran en el <xref:System.Windows.Forms.ListView> cuando el <xref:System.Windows.Forms.ListView.View%2A> propiedad está establecida en <xref:System.Windows.Forms.View.Details>. A continuación, puede usar este valor cuando se recorre los valores de la colección y debe proporcionar un número de iteraciones para realizar el bucle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="columnHeaderCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador que se utilizará para establecer un recorrido en iteración en la colección de encabezados de columna.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> que representa la colección de encabezados de columna.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ColumnHeader) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ColumnHeader -&gt; int" Usage="columnHeaderCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ColumnHeader" /> que representa el encabezado de columna que se va a buscar en la colección.</param>
        <summary>Devuelve el índice incluido en la colección del encabezado de columna especificado.</summary>
        <returns>Índice de base cero de la ubicación del encabezado de columna en la colección. Si el encabezado de columna no se encuentra en la colección, el valor devuelto es -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> método le permite determinar la posición de un encabezado de columna en la colección. Para determinar si un encabezado de columna se encuentra en la colección antes de llamar a este método, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains(System.Windows.Forms.ColumnHeader)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="columnHeaderCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre de la columna cuyo índice se va a recuperar.</param>
        <summary>Determina el índice de una columna con la clave especificada.</summary>
        <returns>Índice de base cero de la primera aparición de la columna con el nombre especificado, si se encuentra; de lo contrario, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. Si `key` es `null` o una cadena vacía, <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOfKey%2A> devuelve -1`.`  
  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Si <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOfKey%2A> se llama sucesivamente, el último devuelve el índice se comprobará para una coincidencia de clave en primer lugar, y si no hay ninguna coincidencia, la búsqueda comienza al principio de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inserta un encabezado de columna en la colección, en el índice especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="columnHeaderCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <summary>Crea un nuevo encabezado de columna con el texto especificado y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para agregar un encabezado de columna sin especificar una posición en la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ColumnHeader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ColumnHeader -&gt; unit" Usage="columnHeaderCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="value"><see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a insertar en la colección.</param>
        <summary>Inserta un encabezado de columna existente en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método le permite insertar una existente <xref:System.Windows.Forms.ColumnHeader> en una posición específica en el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Si desea crear un nuevo <xref:System.Windows.Forms.ColumnHeader> e insertarlo en una posición específica de la colección, utilice la otra versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método. Para agregar un encabezado de columna sin especificar una posición específica de la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String, width As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; unit" Usage="columnHeaderCollection.Insert (index, text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial, en píxeles, del encabezado de columna.</param>
        <summary>Crea un nuevo encabezado de columna con el texto y el ancho inicial especificados y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para agregar un encabezado de columna sin especificar una posición en la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="key">El nombre del encabezado de la columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <summary>Crea un nuevo encabezado de columna con el texto y la clave especificados y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para agregar un encabezado de columna sin especificar una posición en la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, width As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="key">El nombre del encabezado de la columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial, en píxeles, del encabezado de columna.</param>
        <summary>Crea un nuevo encabezado de columna con el texto, la clave y el ancho especificados y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para agregar un encabezado de columna sin especificar una posición en la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string str, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string str, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, str As String, width As Integer, textAlign As HorizontalAlignment)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ str, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int * System.Windows.Forms.HorizontalAlignment -&gt; unit" Usage="columnHeaderCollection.Insert (index, str, width, textAlign)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void Insert (int index, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String, width As Integer, textAlign As HorizontalAlignment)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int * System.Windows.Forms.HorizontalAlignment -&gt; unit" Usage="columnHeaderCollection.Insert (index, text, width, textAlign)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" />
        <Parameter Name="str" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="width" Type="System.Int32" Index="2" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" Index="3" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="str">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial del encabezado de columna. Se establece en -1 para que el encabezado de columna se ajuste automáticamente al tamaño del texto del subelemento más grande de la columna o en -2 para que el encabezado se ajuste automáticamente al tamaño del texto del encabezado de columna.</param>
        <param name="textAlign">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</param>
        <summary>Crea un nuevo encabezado de columna y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método le permite crear un nuevo <xref:System.Windows.Forms.ColumnHeader> con el texto del encabezado de columna específica, el ancho y el valor de alineación de texto e insertarlo en una posición específica en el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. Puede usar este método si desea insertar un nuevo encabezado de columna en una colección de encabezados de columna existente. Si desea usar una existente <xref:System.Windows.Forms.ColumnHeader> e insertarlo en una posición específica de la colección, utilice la otra versión de la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> método. Para agregar un encabezado de columna sin especificar una posición específica de la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int * System.Windows.Forms.HorizontalAlignment * int -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text, width, textAlign, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="key">El nombre del encabezado de la columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial, en píxeles, del encabezado de columna.</param>
        <param name="textAlign">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</param>
        <param name="imageIndex">Índice de la imagen que se va a mostrar en el encabezado de columna.</param>
        <summary>Crea un nuevo encabezado de columna con el texto alineado, la clave, el ancho y el índice de imagen especificados y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para agregar un encabezado de columna sin especificar una posición en la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int * System.Windows.Forms.HorizontalAlignment * string -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text, width, textAlign, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="key">El nombre del encabezado de la columna.</param>
        <param name="text">Texto que se va a mostrar en el encabezado de columna.</param>
        <param name="width">Ancho inicial, en píxeles, del encabezado de columna.</param>
        <param name="textAlign">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</param>
        <param name="imageKey">Clave de la imagen que se va a mostrar en el encabezado de columna.</param>
        <summary>Crea un nuevo encabezado de columna con el texto alineado, la clave, el ancho y la clave de imagen especificados y lo inserta en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para agregar un encabezado de columna sin especificar una posición en la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> método. Si desea agregar una matriz de encabezados de columna a la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> método.  
  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
        <value><see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es siempre `false` para esta colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene un encabezado de columna de la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ColumnHeader Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ColumnHeader ^ default[int] { System::Windows::Forms::ColumnHeader ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ColumnHeader" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice del encabezado de columna que se va a recuperar de la colección.</param>
        <summary>Obtiene el encabezado de columna en el índice especificado de la colección.</summary>
        <value><see cref="T:System.Windows.Forms.ColumnHeader" /> que representa el encabezado de columna ubicado en el índice especificado de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para obtener el <xref:System.Windows.Forms.ColumnHeader> almacenados en una ubicación específica de la colección. Para determinar el índice de un encabezado de columna específica de la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf(System.Windows.Forms.ColumnHeader)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ColumnHeader Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ColumnHeader ^ default[System::String ^] { System::Windows::Forms::ColumnHeader ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ColumnHeader" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del encabezado de columna que se va a recuperar de la colección.</param>
        <summary>Obtiene de la colección el encabezado de columna con la clave especificada.</summary>
        <value>El objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> con la clave especificada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. Si `key` es `null` o una cadena vacía, <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Item%2A> devuelve `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ColumnHeader column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ColumnHeader column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (column As ColumnHeader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ColumnHeader ^ column);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.ColumnHeader -&gt; unit&#xA;override this.Remove : System.Windows.Forms.ColumnHeader -&gt; unit" Usage="columnHeaderCollection.Remove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Windows.Forms.ColumnHeader" /> que representa el encabezado de columna que se va a quitar de la colección.</param>
        <summary>Quita el encabezado de columna especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se quita un encabezado de columna de la colección, cambian los índices de los encabezados de columna en la colección. Se elimina toda la información sobre el encabezado de columna quitada. Puede usar este método para quitar un encabezado de columna específico de la colección mediante la especificación de los datos reales <xref:System.Windows.Forms.ColumnHeader> para quitar. Para especificar el índice del encabezado de columna para quitar en lugar del encabezado de columna propiamente dicho, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt%2A> método. Para quitar todos los encabezados de columna de la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="columnHeaderCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del encabezado de columna que se va a quitar.</param>
        <summary>Quita el encabezado de columna en el índice especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se quita un encabezado de columna de la colección, cambian los índices de los encabezados de columna en la colección. Se elimina toda la información sobre el encabezado de columna quitada. Puede usar este método para quitar un encabezado de columna específico de la colección especificando el índice del encabezado de columna para quitar de la colección. Para especificar el encabezado de columna para quitar en lugar del índice del encabezado de columna, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> método. Para quitar todos los encabezados de columna de la colección, utilice el <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove(System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="columnHeaderCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre de la columna que se va a quitar de la colección.</param>
        <summary>Quita de la colección la columna con la clave especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ColumnHeader.Name%2A> propiedad se corresponde con la clave para una columna en la <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 La comparación de la clave es no distinguir mayúsculas de minúsculas. Si `key` es `null` o una cadena vacía, <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveByKey%2A> no cambia la colección`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Matriz unidimensional que constituye el destino de los elementos copiados de la colección. La matriz debe tener una indización de base cero.</param>
        <param name="index">Índice de base cero de la matriz donde comienza la copia.</param>
        <summary>Copia los objetos <see cref="T:System.Windows.Forms.ColumnHeader" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> en una matriz, comenzando por un índice determinado de la matriz.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> está sincronizado (es seguro para subprocesos).</summary>
        <value><see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que puede utilizarse para sincronizar el acceso a la colección de controles.</summary>
        <value>Objeto que se utiliza para sincronizar la colección.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a agregar a <see cref="T:System.Windows.Forms.ListView" />.</param>
        <summary>Agrega un objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> a <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <returns>Índice de base cero que indica la ubicación del objeto que se ha agregado a la colección.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> no es un <see cref="T:System.Windows.Forms.ColumnHeader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objeto que representa el encabezado de columna que se va a buscar en la colección.</param>
        <summary>Determina si el encabezado de columna especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si el objeto es un encabezado de columna que está incluido en la colección; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objeto que representa el encabezado de columna que se va a buscar en la colección.</param>
        <summary>Devuelve el índice incluido en la colección del encabezado de columna especificado.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Posición de índice de base cero donde se inserta el encabezado de columna.</param>
        <param name="value"><see cref="T:System.Windows.Forms.ColumnHeader" /> que se va a insertar en la colección.</param>
        <summary>Inserta un encabezado de columna existente en la colección, en el índice especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la interfaz <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> tiene un tamaño fijo.</summary>
        <value><see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
        <summary>Obtiene o establece el encabezado de columna en el índice especificado de la colección.</summary>
        <value>Un objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> que representa el encabezado de columna ubicado en el índice especificado de la colección.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Un objeto <see cref="T:System.Windows.Forms.ColumnHeader" /> que representa el encabezado de columna que se va a quitar de la colección.</param>
        <summary>Quita el encabezado de columna especificado de la colección.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>