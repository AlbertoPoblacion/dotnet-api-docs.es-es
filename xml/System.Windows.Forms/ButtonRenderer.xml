<Type Name="ButtonRenderer" FullName="System.Windows.Forms.ButtonRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f11f209e95a14f7a503cde17c5ae64e62f6be80" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590704" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ButtonRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ButtonRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ButtonRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ButtonRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonRenderer sealed" />
  <TypeSignature Language="F#" Value="type ButtonRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos que se utilizan para representar un control de botón con estilos visuales o sin ellos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ButtonRenderer> clase proporciona un conjunto de `static` métodos que pueden usarse para representar un control de botón. La representación de un control hace referencia al hecho de dibujar la interfaz de usuario de un control. Para dibujar un botón, use uno de los <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> métodos. Estos métodos ofrecen una variedad de opciones, como dibujar texto o una imagen en el botón.  
  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> dibujará el botón con el estilo visual actual. En caso contrario, <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> dibujará el botón con el estilo clásico de Windows. Esto es útil si se dibuja un control personalizado que debe coincidir automáticamente la configuración de estilo visual actual del sistema operativo.  
  
 Esta clase encapsula la funcionalidad de un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer?displayProperty=nameWithType> que se establece en uno de los elementos expuestos por la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton?displayProperty=nameWithType> clase. Para obtener más información, consulte [representar controles con estilos visuales](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un control personalizado que utiliza el <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> método para dibujar un botón. Cuando se hace clic en el botón, el control dibuja un botón más pequeño dentro de los límites del botón original y el control utiliza el <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> método para dibujar sobre el resto del botón original.  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ButtonRenderer#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
    <altmember cref="P:System.Windows.Forms.Application.RenderWithVisualStyles" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja un control de botón.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawButton (g As Graphics, bounds As Rectangle, state As PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawButton (g As Graphics, bounds As Rectangle, focused As Boolean, state As PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="focused">
          <see langword="true" /> para dibujar un rectángulo de foco en el botón; de lo contrario, <see langword="false" />.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados, además de un rectángulo de foco opcional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Drawing::Image ^ image, System::Drawing::Rectangle imageBounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Image * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, image, imageBounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> que se va a dibujar en el botón.</param>
        <param name="imageBounds">Objeto <see cref="T:System.Drawing.Rectangle" /> que representa las dimensiones de <paramref name="image" />.</param>
        <param name="focused">
          <see langword="true" /> para dibujar un rectángulo de foco en el botón; de lo contrario, <see langword="false" />.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados, junto con la imagen especificada y con un rectángulo de foco opcional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> que se va a dibujar en el botón.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar a <paramref name="buttonText" />.</param>
        <param name="focused">
          <see langword="true" /> para dibujar un rectángulo de foco en el botón; de lo contrario, <see langword="false" />.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados, junto con el texto especificado y un rectángulo de foco opcional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.ButtonRenderer.DrawButton%28System.Drawing.Graphics%2CSystem.Drawing.Rectangle%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Boolean%2CSystem.Windows.Forms.VisualStyles.PushButtonState%29> método en un control personalizado <xref:System.Windows.Forms.Control.OnPaint%2A> método para dibujar un botón en el estado determinado por la ubicación del puntero del mouse. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.ButtonRenderer> clase.  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ButtonRenderer#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * System.Windows.Forms.TextFormatFlags * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, flags, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> que se va a dibujar en el botón.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar a <paramref name="buttonText" />.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" /> que se van a aplicar a <paramref name="buttonText" />.</param>
        <param name="focused">
          <see langword="true" /> para dibujar un rectángulo de foco en el botón; de lo contrario, <see langword="false" />.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados, junto con el texto y el formato de texto especificados, y con un rectángulo de foco opcional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, System::Drawing::Image ^ image, System::Drawing::Rectangle imageBounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * System.Drawing.Image * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, image, imageBounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> que se va a dibujar en el botón.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar a <paramref name="buttonText" />.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> que se va a dibujar en el botón.</param>
        <param name="imageBounds">Objeto <see cref="T:System.Drawing.Rectangle" /> que representa las dimensiones de <paramref name="image" />.</param>
        <param name="focused">
          <see langword="true" /> para dibujar un rectángulo de foco en el botón; de lo contrario, <see langword="false" />.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados, junto con el texto y la imagen especificados, además de un rectángulo de foco opcional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags, System::Drawing::Image ^ image, System::Drawing::Rectangle imageBounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * System.Windows.Forms.TextFormatFlags * System.Drawing.Image * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, flags, image, imageBounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">Control <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el botón.</param>
        <param name="bounds">Control <see cref="T:System.Drawing.Rectangle" /> que especifica los límites del botón.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> que se va a dibujar en el botón.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar a <paramref name="buttonText" />.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" /> que se van a aplicar a <paramref name="buttonText" />.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> que se va a dibujar en el botón.</param>
        <param name="imageBounds">Objeto <see cref="T:System.Drawing.Rectangle" /> que representa las dimensiones de <paramref name="image" />.</param>
        <param name="focused">
          <see langword="true" /> para dibujar un rectángulo de foco en el botón; de lo contrario, <see langword="false" />.</param>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Dibuja un control de botón en el estado especificado y con los límites indicados, junto con el texto, el formato de texto y la imagen especificados, además de un rectángulo de foco opcional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los estilos visuales están habilitados en el sistema operativo y los estilos visuales se aplican a la aplicación actual, este método dibujará el botón con el estilo visual actual. En caso contrario, dibujará el botón con el estilo clásico de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public static void DrawParentBackground (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawParentBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawParentBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawParentBackground (g As Graphics, bounds As Rectangle, childControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawParentBackground(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::Control ^ childControl);" />
      <MemberSignature Language="F#" Value="static member DrawParentBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.Control -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawParentBackground (g, bounds, childControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el fondo del control primario de <paramref name="childControl" />.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> donde se va a dibujar el fondo del control primario. Este rectángulo debe encontrarse dentro de los límites del control secundario.</param>
        <param name="childControl">Control a cuyo control principal se va a dibujar el fondo.</param>
        <summary>Dibuja el fondo del elemento primario de un control en el área especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> método para pintar sobre un área de un control personalizado. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Windows.Forms.ButtonRenderer> clase.  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ButtonRenderer#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public static bool IsBackgroundPartiallyTransparent (System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBackgroundPartiallyTransparent(valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.IsBackgroundPartiallyTransparent(System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBackgroundPartiallyTransparent (state As PushButtonState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBackgroundPartiallyTransparent(System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member IsBackgroundPartiallyTransparent : System.Windows.Forms.VisualStyles.PushButtonState -&gt; bool" Usage="System.Windows.Forms.ButtonRenderer.IsBackgroundPartiallyTransparent state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="state">Uno de los valores de <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> que especifica el estado visual del botón.</param>
        <summary>Indica si el fondo del botón tiene partes semitransparentes o partes combinadas para Alpha.</summary>
        <returns>Es <see langword="true" /> si el fondo del botón tiene partes semitransparentes o partes combinadas para Alfa; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMatchingApplicationState">
      <MemberSignature Language="C#" Value="public static bool RenderMatchingApplicationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RenderMatchingApplicationState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenderMatchingApplicationState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RenderMatchingApplicationState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMatchingApplicationState : bool with get, set" Usage="System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el representador utiliza el estado de la aplicación para determinar el estilo de representación.</summary>
        <value>
          <see langword="true" /> si el estado de la aplicación se utiliza para determinar el estilo de representación; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState%2A> propiedad es `true`, <xref:System.Windows.Forms.ButtonRenderer> utiliza la configuración de la <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A?displayProperty=nameWithType> propiedad para determinar el estilo de representación. Si <xref:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState%2A> es `false`, el representador representará siempre utilizando estilos visuales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>