<Type Name="ListView+ListViewItemCollection" FullName="System.Windows.Forms.ListView+ListViewItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4545810034ca48ece3e2536dcb8193136ef44efb" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58554794" /></Metadata><TypeSignature Language="C#" Value="public class ListView.ListViewItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ListViewItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ListViewItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ListViewItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ListViewItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.ListViewItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa la colección de elementos en un control <see cref="T:System.Windows.Forms.ListView" /> o asignados a <see cref="T:System.Windows.Forms.ListViewGroup" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.ListView.ListViewItemCollection> almacena los elementos mostrados en un <xref:System.Windows.Forms.ListView> controlar o asignados a un <xref:System.Windows.Forms.ListViewGroup>. Hay otras dos colecciones definidas dentro de la <xref:System.Windows.Forms.ListView> clases que permiten determinar qué elementos están seleccionados dentro de un <xref:System.Windows.Forms.ListView> control. El <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> clase proporciona propiedades y métodos para determinar qué elementos están seleccionados en un <xref:System.Windows.Forms.ListView> (control), mientras el <xref:System.Windows.Forms.ListView.SelectedIndexCollection> clase le permite determinar los índices dentro de la <xref:System.Windows.Forms.ListView.ListViewItemCollection> de un <xref:System.Windows.Forms.ListView> control son seleccionado. Además de las clases de colección de selección, también hay dos clases que permiten determinar qué elementos se desprotegieron (cuando el <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propiedad de la <xref:System.Windows.Forms.ListView> control está establecido en `true`) dentro de esta colección.  
  
 Hay varias maneras de agregar elementos a la colección. El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método agrega un elemento único a la colección. Para agregar un número de elementos a la colección, crear una matriz de elementos y pasarlo a la <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método. Si desea insertar un elemento en una ubicación específica de la colección, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método. Para quitar elementos, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> método o la <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> método si sabe dónde se encuentra el elemento de la colección. El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> método le permite quitar todos los elementos de la colección en lugar de usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> método para quitar un solo elemento a la vez.  
  
 Además de métodos y propiedades para agregar y quitar elementos, la <xref:System.Windows.Forms.ListView.ListViewItemCollection> también proporciona métodos para buscar elementos en la colección. El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> método le permite determinar si un elemento es un miembro de la colección. Una vez que sepa que el elemento se encuentra en la colección, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> método para determinar dónde se encuentra el elemento de la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo agregar elementos a un <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Tenga en cuenta que el <xref:System.Windows.Forms.ListView.Items%2A> propiedad de `ListView1` es de tipo <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Para ejecutar este ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.ListView> objeto denominado `ListView1` y un <xref:System.Windows.Forms.TextBox> denominado `TextBox1`. Llame a la `InitializeListView` método desde el constructor del formulario o <xref:System.Windows.Forms.Form.Load> controlador de eventos.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
    <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.ListViewItemCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.ListViewItemCollection" Usage="new System.Windows.Forms.ListView.ListViewItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ListView" /> que posee la colección.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe evitar el uso de este constructor. En su lugar, tener acceso a la <xref:System.Windows.Forms.ListView.ListViewItemCollection> a través de la <xref:System.Windows.Forms.ListView.Items%2A> propiedad de la <xref:System.Windows.Forms.ListView> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un elemento a la colección de elementos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a mostrar para el elemento.</param>
        <summary>Crea un elemento con el texto especificado y lo agrega a la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> que se agregó a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método para crear un nuevo <xref:System.Windows.Forms.ListViewItem> para agregar a un <xref:System.Windows.Forms.ListView> control. El texto de la nueva <xref:System.Windows.Forms.ListViewItem> agregado para el control se basa en el `text` parámetro. Si desea especificar una imagen para el elemento, utilice la versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método que acepta un índice de imagen como un parámetro. Si dispone de una <xref:System.Windows.Forms.ListViewItem> que desea agregar a la colección, use la versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método que acepta un <xref:System.Windows.Forms.ListViewItem> como su parámetro.  
  
 Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de agrega el elemento. En caso contrario, el elemento se inserta al final de la lista. Si no se ordena la lista, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método para insertar un elemento en el <xref:System.Windows.Forms.ListView> en una posición específica. Para agregar un conjunto de elementos al control en una sola operación, use el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método. Si desea usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método para agregar un gran número de elementos al control, use el <xref:System.Windows.Forms.ListView.BeginUpdate%2A> y <xref:System.Windows.Forms.ListView.EndUpdate%2A> métodos para evitar la <xref:System.Windows.Forms.ListView> de actualización de la pantalla hasta que se agreguen todos los elementos. Al agregar elementos a un <xref:System.Windows.Forms.ListView>, resulta más eficaz ordenar primero los elementos y, a continuación, agregar nuevos elementos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (System.Windows.Forms.ListViewItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(class System.Windows.Forms.ListViewItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::Windows::Forms::ListViewItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewItem" /> que se agrega a la colección.</param>
        <summary>Agrega un objeto <see cref="T:System.Windows.Forms.ListViewItem" /> existente a la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> que se agregó a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método para agregar una existente <xref:System.Windows.Forms.ListViewItem> a la colección. Esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método se utiliza normalmente para volver a usar elementos desde otros <xref:System.Windows.Forms.ListView> controles o si el <xref:System.Windows.Forms.ListViewItem> se creó manualmente antes de agregarlo a la colección. Si desea crear un nuevo <xref:System.Windows.Forms.ListViewItem> en lugar de un elemento existente, use las otras versiones de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método.  
  
 Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de agrega el elemento. En caso contrario, el elemento se inserta al final de la lista. Si no se ordena la lista, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método para insertar un elemento en el <xref:System.Windows.Forms.ListView> en una posición específica. Para agregar un conjunto de elementos al control en una sola operación, use el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método. Si desea usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método para agregar un gran número de elementos al control, use el <xref:System.Windows.Forms.ListView.BeginUpdate%2A> y <xref:System.Windows.Forms.ListView.EndUpdate%2A> métodos para evitar la <xref:System.Windows.Forms.ListView> de actualización de la pantalla hasta que se agreguen todos los elementos. Al agregar elementos a un <xref:System.Windows.Forms.ListView>, resulta más eficaz ordenar primero los elementos y, a continuación, agregar nuevos elementos.  
  
 Esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método también se usa para asignar un <xref:System.Windows.Forms.ListViewItem> a un <xref:System.Windows.Forms.ListViewGroup>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Texto del elemento.</param>
        <param name="imageIndex">Índice de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un elemento con la imagen y el texto especificados y lo agrega a la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> que se agregó a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método para crear un nuevo <xref:System.Windows.Forms.ListViewItem> para agregar a la <xref:System.Windows.Forms.ListView> control. El texto de la nueva <xref:System.Windows.Forms.ListViewItem> agregado para el control se basa en el `text` parámetro. También puede especificar una imagen para el elemento pasando el índice de la <xref:System.Windows.Forms.ImageList> asignado a la <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propiedades para el `imageIndex` parámetro. (Normalmente, el <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propiedades utilizan las mismas posiciones de índice para mostrar imágenes relacionadas.) Si no desea especificar un índice de imagen para el elemento, utilice la versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método que sólo acepta una cadena como parámetro. Si dispone de una <xref:System.Windows.Forms.ListViewItem> que desea agregar a la colección, use la versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método que acepta un <xref:System.Windows.Forms.ListViewItem> como su parámetro.  
  
 Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de agrega el elemento. En caso contrario, el elemento se inserta al final de la lista. Si no se ordena la lista, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método para insertar un elemento en el <xref:System.Windows.Forms.ListView> en una posición específica. Para agregar un conjunto de elementos al control en una sola operación, use el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método. Si desea usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método para agregar un gran número de elementos al control, use el <xref:System.Windows.Forms.ListView.BeginUpdate%2A> y <xref:System.Windows.Forms.ListView.EndUpdate%2A> métodos para evitar la <xref:System.Windows.Forms.ListView> de actualización de la pantalla hasta que se agreguen todos los elementos. Al agregar elementos a un <xref:System.Windows.Forms.ListView>, resulta más eficaz ordenar primero los elementos y, a continuación, agregar nuevos elementos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Texto del elemento.</param>
        <param name="imageKey">Clave de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un elemento con la imagen y el texto especificados y lo agrega a la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Forms.ListView> está ordenada, el elemento se agrega en el orden de clasificación correctamente; en caso contrario, se agrega al final de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento.</param>
        <param name="text">Texto del elemento.</param>
        <param name="imageIndex">Índice de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un elemento con el texto, la clave y la imagen especificadas y lo agrega a la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Forms.ListView> está ordenada, el elemento se agrega en el orden de clasificación correctamente; en caso contrario, se agrega al final de la colección. El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método establece el <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad a la clave especificada, por lo que se puede recuperar el elemento por su índice o por clave.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="T:System.Windows.Forms.ListView" /> que contiene está en modo virtual.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento.</param>
        <param name="text">Texto del elemento.</param>
        <param name="imageKey">Clave de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un elemento con el texto, la clave y la imagen especificados y lo agrega a la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 Si el <xref:System.Windows.Forms.ListView> está ordenada, el elemento se agrega en el orden de clasificación correctamente; en caso contrario, se agrega al final de la colección. El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método establece el <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad del elemento a la clave especificada, por lo que se puede recuperar el elemento por su índice o por clave.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega una matriz de elementos a la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListView.ListViewItemCollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListView/ListViewItemCollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListView.ListViewItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListView.ListViewItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListView::ListViewItemCollection ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListView.ListViewItemCollection -&gt; unit" Usage="listViewItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListView+ListViewItemCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> que se agrega a la colección.</param>
        <summary>Agrega una colección de elementos a la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la que contiene <xref:System.Windows.Forms.ListView> está ordenada, el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método agregará los elementos ordenados; en caso contrario, agregará al final de la colección.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La <see cref="T:System.Windows.Forms.ListView" /> que contiene está en modo virtual.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] values) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (values As ListViewItem())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange values" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] items) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange items" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="items">Matriz de objetos <see cref="T:System.Windows.Forms.ListViewItem" /> que se agregará a la colección.</param>
        <param name="values">Matriz de objetos <see cref="T:System.Windows.Forms.ListViewItem" /> que se agregará a la colección.</param>
        <summary>Agrega una matriz de objetos <see cref="T:System.Windows.Forms.ListViewItem" /> a la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para reutilizar los elementos de otro <xref:System.Windows.Forms.ListView> control. Si desea agregar un solo <xref:System.Windows.Forms.ListViewItem>, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método. También puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método si desea agregar un solo <xref:System.Windows.Forms.ListViewItem> en una posición específica de la colección.  
  
 También puede usar este método para asignar varios <xref:System.Windows.Forms.ListViewItem> objetos a un <xref:System.Windows.Forms.ListViewGroup>.  
  
 Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de agregar los elementos. En caso contrario, los elementos se insertan al final de la lista. Si no se ordena la lista, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método para insertar elementos en el <xref:System.Windows.Forms.ListView> en posiciones específicas.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.Forms.ListView> control con tres <xref:System.Windows.Forms.ListViewItem> objetos especificados y tres <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada elemento. El ejemplo también crea <xref:System.Windows.Forms.ColumnHeader> objetos que se mostrarán los subelementos en la vista de detalles. Dos <xref:System.Windows.Forms.ImageList> objetos también se crean en el ejemplo de código para proporcionar imágenes para la <xref:System.Windows.Forms.ListViewItem> objetos. Estos <xref:System.Windows.Forms.ImageList> se agregan objetos a la <xref:System.Windows.Forms.ListView.LargeImageList%2A> y <xref:System.Windows.Forms.ListView.SmallImageList%2A> propiedades. El ejemplo utiliza las propiedades siguientes para crear el <xref:System.Windows.Forms.ListView> control:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este ejemplo requiere que se ha agregado el código para un <xref:System.Windows.Forms.Form> y llama al método creado en el ejemplo desde el constructor u otro método en el formulario. El ejemplo también requiere que las imágenes denominado `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, y `MyLargeImage2` se encuentran en el directorio raíz de la unidad C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los elementos de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al quitar elementos de la colección, se pierde toda la información sobre los elementos eliminados. Para quitar un único elemento de la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> o <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ListViewItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem -&gt; bool" Usage="listViewItemCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento que se desea buscar en la colección.</param>
        <summary>Determina si el elemento especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si la colección contiene el elemento; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> método le permite determinar si un <xref:System.Windows.Forms.ListViewItem> es un miembro de la colección. Una vez que sepa que el elemento está en la colección, puede usar el <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> método para determinar la posición del elemento en la colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">El nombre del elemento que se va a buscar.</param>
        <summary>Determina si la colección contiene un elemento con la clave especificada.</summary>
        <returns><see langword="true" /> para indicar que la colección contiene un elemento con la clave especificada; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewItemCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> que representa la matriz en la que se va a copiar el contenido de la colección.</param>
        <param name="index">Ubicación en la matriz de destino en la que se van a copiar los elementos de la colección.</param>
        <summary>Copia toda la colección en una matriz existente, en un lugar especificado de la matriz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para combinar los elementos seleccionados de varias colecciones en una sola matriz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de elementos de la colección.</summary>
        <value>Número de elementos de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite determinar el número de elementos en el <xref:System.Windows.Forms.ListView>. A continuación, puede usar este valor cuando se recorre los valores de la colección y debe proporcionar un número de iteraciones para realizar el bucle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem[] Find (string key, bool searchAllSubItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem[] Find(string key, bool searchAllSubItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllSubItems As Boolean) As ListViewItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ Find(System::String ^ key, bool searchAllSubItems);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.ListViewItem[]" Usage="listViewItemCollection.Find (key, searchAllSubItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllSubItems" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento que se va a buscar.</param>
        <param name="searchAllSubItems"><see langword="true" /> para buscar subelementos; de lo contrario, <see langword="false" />.</param>
        <summary>Busca elementos cuyo nombre coincida con la clave especificada y, opcionalmente, subelementos.</summary>
        <returns>Matriz de objetos <see cref="T:System.Windows.Forms.ListViewItem" /> que contienen los elementos coincidentes o una matriz vacía si no coincidía ningún elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador que se va a utilizar para recorrer en iteración la colección de elementos.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> que representa la colección de elementos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el propietario <xref:System.Windows.Forms.ListView> está en modo virtual, no se pueden enumerar a través de la <xref:System.Windows.Forms.ListView.ListViewItemCollection> mediante un enumerador o llamada <xref:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator%2A>. En su lugar, use el <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> propiedad para tener acceso a un elemento por valor de índice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control <see cref="T:System.Windows.Forms.ListView" /> propietario está en modo virtual.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As ListViewItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem -&gt; int" Usage="listViewItemCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento que se desea buscar en la colección.</param>
        <summary>Devuelve el índice del elemento especificado en la colección.</summary>
        <returns>Índice de base cero de la ubicación del elemento en la colección; de lo contrario, -1 si el elemento no se encuentra en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> método le permite determinar la posición de un elemento en la colección. Para determinar si un elemento se encuentra en la colección antes de llamar a este método, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento que se va a buscar en la colección.</param>
        <summary>Recupera el índice del elemento con la clave especificada.</summary>
        <returns>Índice de base cero de la primera aparición del elemento que tiene la clave especificada, si se encuentra; en caso contrario, devuelve -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> se llama sucesivamente, el último devuelve el índice se comprobará para una coincidencia de clave en primer lugar, y si no hay ninguna coincidencia, la búsqueda comienza al principio de la colección.  
  
 El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 La comparación de claves no distingue mayúsculas de minúsculas. Si el `key` parámetro es `null` o una cadena vacía, <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> devuelve -1`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inserta un elemento en el índice especificado de la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="text">Texto que se va a mostrar para el elemento.</param>
        <summary>Crea un nuevo elemento y lo inserta en la colección, en el índice especificado.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> insertado en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método le permite insertar un nuevo elemento en una posición específica en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>. El texto especificado en el `text` parámetro se usa para crear un nuevo <xref:System.Windows.Forms.ListViewItem> que, a continuación, se inserta en el <xref:System.Windows.Forms.ListView.ListViewItemCollection> en la ubicación especificada.  
  
> [!NOTE]
>  Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de inserta el elemento.  
  
 Para agregar un elemento sin especificar una posición específica de la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método. Si desea agregar una matriz de elementos a la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método. Puede usar este método si desea insertar un nuevo elemento en una colección de elementos existente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento que se va a insertar.</param>
        <summary>Inserta un <see cref="T:System.Windows.Forms.ListViewItem" /> existente en el índice especificado de la colección.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> insertado en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método le permite insertar una existente <xref:System.Windows.Forms.ListViewItem> en una posición específica en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
> [!NOTE]
>  Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de inserta el elemento.  
  
 Para agregar un elemento sin especificar una posición específica de la colección para agregar el elemento, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método. Si desea agregar una matriz de elementos a la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método. Puede usar este método si desea insertar un nuevo elemento en una colección de elementos existente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="text">Texto que se va a mostrar para el elemento.</param>
        <param name="imageIndex">Índice de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un nuevo elemento con el índice de imágenes especificado y lo inserta en la colección, en el índice especificado.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> insertado en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método le permite insertar un nuevo elemento en una posición específica en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>. El texto especificado en el `text` parámetro se usa para crear un nuevo <xref:System.Windows.Forms.ListViewItem> que, a continuación, se inserta en el <xref:System.Windows.Forms.ListView.ListViewItemCollection> en la ubicación especificada.  
  
> [!NOTE]
>  Si el <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> o si el <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> propiedad está establecida, la lista se ordena después de inserta el elemento.  
  
 También puede usar esta versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método para especificar una imagen para el elemento pasando el índice de la <xref:System.Windows.Forms.ImageList> asignado a la <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propiedades para el `imageIndex` parámetro. (Normalmente, el <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propiedades utilizan las mismas posiciones de índice para mostrar imágenes relacionadas.) Si no desea especificar un índice de imagen para el elemento, use la otra versión de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método que acepta una cadena como un parámetro.  
  
 Para agregar un elemento sin especificar una posición específica de la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> método. Si desea agregar una matriz de elementos a la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="text">El texto del <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Clave de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un nuevo elemento con la imagen y el texto especificados y lo inserta en la colección, en el índice especificado.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> agregado a la colección.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se va a insertar el elemento.</param>
        <param name="key"><see cref="P:System.Windows.Forms.ListViewItem.Name" /> del elemento.</param>
        <param name="text">Texto del elemento.</param>
        <param name="imageIndex">Índice de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un nuevo elemento con el texto, la imagen y la clave especificadas y lo inserta en la colección, en el índice especificado.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método establece el <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad del elemento a la clave especificada, por lo que se puede recuperar el elemento por su índice o por clave.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="key"><see cref="P:System.Windows.Forms.ListViewItem.Name" /> del elemento.</param>
        <param name="text">Texto del elemento.</param>
        <param name="imageKey">Clave de la imagen que se va a mostrar para el elemento.</param>
        <summary>Crea un nuevo elemento con el texto, la imagen y la clave especificadas y lo agrega a la colección, en el índice especificado.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> método establece el <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad del elemento a la clave especificada, por lo que se puede recuperar el elemento por su índice o por clave.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
        <value><see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es siempre `false` para esta colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece un elemento de la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">El nombre del elemento que se va a recuperar.</param>
        <summary>Recupera el elemento con la clave especificada.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> cuya propiedad <see cref="P:System.Windows.Forms.ListViewItem.Name" /> coincide con la clave especificada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int displayIndex] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(displayIndex As Integer) As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int displayIndex); void set(int displayIndex, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ListViewItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="displayIndex" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="index">Índice del elemento de la colección que se va a obtener o establecer.</param>
        <param name="displayIndex">Índice del elemento de la colección que se va a obtener o establecer.</param>
        <summary>Obtiene o establece el elemento en el índice especificado de la colección.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento ubicado en el índice especificado de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para obtener el <xref:System.Windows.Forms.ListViewItem> almacenados en una ubicación específica de la colección. Para determinar el índice de un elemento específico de la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> del <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.ListViewItem -&gt; unit&#xA;override this.Remove : System.Windows.Forms.ListViewItem -&gt; unit" Usage="listViewItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento que se va a quitar de la colección.</param>
        <summary>Quita el elemento especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se quita un elemento de la colección, cambian los índices de los elementos siguientes en la colección. Se elimina toda la información sobre el elemento quitado. Puede usar este método para quitar un elemento específico de la colección especificando el elemento real que desea quitar. Para especificar el índice del elemento que se va a quitar en lugar del propio elemento, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> método. Para quitar todos los elementos de la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El <see cref="T:System.Windows.Forms.ListViewItem" /> asignado al parámetro <paramref name="item" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del elemento que se va a quitar.</param>
        <summary>Quita el elemento en el índice especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se quita un elemento de la colección, cambian los índices de los elementos siguientes en la colección. Se elimina toda la información sobre el elemento quitado. Puede usar este método para quitar un elemento específico de la colección especificando el índice del elemento que se va a quitar de la colección. Para especificar el elemento que quitar en lugar del índice del elemento, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> método. Para quitar todos los elementos de la colección, utilice el <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> del <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento que se va a quitar de la colección.</param>
        <summary>Quita de la colección el elemento con la clave especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparación de claves no distingue mayúsculas de minúsculas. El <xref:System.Windows.Forms.ListViewItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
        <value><see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que puede utilizarse para sincronizar el acceso a la colección de controles.</summary>
        <value>Objeto que se utiliza para sincronizar la colección.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">El objeto que se va a agregar a la colección.</param>
        <summary>Agrega un objeto existente a la colección.</summary>
        <returns>El índice de base cero que indica la ubicación del objeto si éste se agregó a la colección; de lo contrario, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `item` parámetro puede ser cualquier tipo. Si `item` es un <xref:System.Windows.Forms.ListViewItem>, se agrega a la <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Si `item` es otro tipo, un nuevo <xref:System.Windows.Forms.ListViewItem> creado que contiene la cadena de la <xref:System.Object.ToString%2A> método `item`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que representa el elemento que se va a buscar en la colección.</param>
        <summary>Determina si el elemento especificado se encuentra en la colección.</summary>
        <returns><see langword="true" /> si el elemento especificado está ubicado en la colección; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento que se va a buscar en la colección.</param>
        <summary>Devuelve el índice del elemento especificado en la colección.</summary>
        <returns>Índice de base cero del elemento si se encuentra en la colección; en caso contrario, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="item">Objeto que representa el elemento que se va a insertar.</param>
        <summary>Inserta un objeto en el índice especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `item` parámetro puede ser cualquier tipo. Si `item` es un <xref:System.Windows.Forms.ListViewItem>, se agrega a la <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Si `item` es otro tipo, un nuevo <xref:System.Windows.Forms.ListViewItem> creado que contiene la cadena de la <xref:System.Object.ToString%2A> método `item`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de índice es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección tiene un tamaño fijo.</summary>
        <value><see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del elemento que se va a obtener.</param>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Forms.ListViewItem" /> en el índice especificado de la colección.</summary>
        <value>Control <see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento ubicado en el índice especificado de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `item` parámetro puede establecerse en cualquier tipo. Si `item` es un <xref:System.Windows.Forms.ListViewItem>, se agrega a la <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Si `item` es otro tipo, un nuevo <xref:System.Windows.Forms.ListViewItem> creado que contiene la cadena de la <xref:System.Object.ToString%2A> método `item`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de índice es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> del <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que representa el elemento que se va a quitar de la colección.</param>
        <summary>Quita el elemento especificado de la colección.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>