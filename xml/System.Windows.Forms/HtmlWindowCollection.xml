<Type Name="HtmlWindowCollection" FullName="System.Windows.Forms.HtmlWindowCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5886bcd1115fa712e18f28e6ac79e1d979b8ca7f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51881160" /></Metadata><TypeSignature Language="C#" Value="public class HtmlWindowCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlWindowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlWindowCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlWindowCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlWindowCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HtmlWindowCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa las ventanas incluidas en otra <see cref="T:System.Windows.Forms.HtmlWindow" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un documento HTML puede constar de un `FRAMESET` que define varios fijada `FRAME` objetos, cada uno de los cuales contiene su propia página HTML. Como alternativa, un documento puede contener un número de `IFRAME` objetos, que se pueden colocar documentos arbitrariamente dentro de otros documentos. `FRAME` los objetos y `IFRAME` objetos se representan en su nivel superior por una <xref:System.Windows.Forms.HtmlWindowCollection>, que contiene los elementos de tipo <xref:System.Windows.Forms.HtmlWindow>.  
  
 <xref:System.Windows.Forms.HtmlWindowCollection> admite la <xref:System.Collections.IEnumerator> interfaz para que se puede usar en construcciones de bucle. También define un método Item, que permite el acceso a los elementos de la colección mediante una llamada al método o mediante la sintaxis de matriz estándar.  
  
 Si crea nuevas ventanas con la <xref:System.Windows.Forms.HtmlWindow.Open%2A> o <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> métodos y los documentos hospedados por estas ventanas contienen `FRAME` o `IFRAME` elementos, que estos elementos aparecerán en el <xref:System.Windows.Forms.HtmlWindowCollection> de la página primaria.  
  
 Para obtener más información sobre los fotogramas, consulte la documentación para el <xref:System.Windows.Forms.HtmlWindow.Frames%2A> propiedad.  
  
   
  
## Examples  
 El siguiente ejemplo de código inspecciona cada documento dentro de una página que contiene marcos y crea una tabla de todos los hipervínculos de salida de cada página para inspeccionarlos en el futuro.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/framescollection2.asp?frame=true">Interfaz IHTMLFramesCollection2</related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.HtmlWindowCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de elementos de la colección.</summary>
        <value>Número de objetos <see cref="T:System.Windows.Forms.HtmlWindow" /> de la colección <see cref="T:System.Windows.Forms.HtmlWindowCollection" /> actual.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/get_length.asp?frame=true">length (Propiedad)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindowCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="htmlWindowCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador que puede recorrer en iteración todos los elementos de <see cref="T:System.Windows.Forms.HtmlWindowCollection" />.</summary>
        <returns>Interfaz <see cref="T:System.Collections.IEnumerator" /> que habilita la enumeración de los elementos de esta colección.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un elemento por su propiedad <see langword="name" /> o por su posición en la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> permite el acceso a los elementos de la colección utilizando la sintaxis de la matriz.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/item.asp?frame=true">item (Método)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ default[int] { System::Windows::Forms::HtmlWindow ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Posición de <see cref="T:System.Windows.Forms.HtmlWindow" /> en la colección.</param>
        <summary>Recupera una ventana de marco proporcionando la posición del marco en la colección.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlWindow" /> correspondiente al marco solicitado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindowCollection> es una colección basada en cero. Si no hay *N* elementos de la colección, los argumentos válidos para <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> son los enteros de 0 a *N*-1.  
  
 Windows no están dispuestos en <xref:System.Windows.Forms.HtmlWindowCollection> predeterminados que en cualquier orden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> es mayor que el número de elementos de la colección.</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/item.asp?frame=true">item (Método)</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow this[string windowId] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(windowId As String) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ default[System::String ^] { System::Windows::Forms::HtmlWindow ^ get(System::String ^ windowId); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="windowId">Nombre del objeto <see cref="T:System.Windows.Forms.HtmlWindow" /> que se va a recuperar.</param>
        <summary>Recupera una ventana de marco proporcionando el nombre del marco.</summary>
        <value>Elemento <see cref="T:System.Windows.Forms.HtmlWindow" /> que corresponde al nombre proporcionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> devolverá un único elemento cuyo <xref:System.Windows.Forms.HtmlElement.Name%2A> propiedad se corresponde con `elementId`. Si el documento contiene varios elementos con el mismo nombre, <xref:System.Windows.Forms.HtmlWindowCollection.Item%2A> devolverá sólo la primera de ellas en la colección. Si tiene que recuperar todos los elementos con un <xref:System.Windows.Forms.HtmlElement.Name%2A> propiedad de `windowId`, utilice el <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> método en su lugar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="windowId" /> no es el nombre de un objeto <see langword="Frame" /> en el documento actual o en cualquiera de sus elementos secundarios.</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/framescollection2/item.asp?frame=true">item (Método)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de la colección. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
        <param name="index">Índice de base cero en la <see langword="Array" /> donde comienza la copia.</param>
        <summary>Copia los elementos de la colección en un objeto <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
        <value><see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindowCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
        <value>Objeto que se puede utilizar para sincronizar el acceso a la colección.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>