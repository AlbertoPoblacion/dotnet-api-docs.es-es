<Type Name="NumericUpDown" FullName="System.Windows.Forms.NumericUpDown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b52c6769354e1517b304c0db4a6b052a1980d9f5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NumericUpDown : System.Windows.Forms.UpDownBase, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumericUpDown extends System.Windows.Forms.UpDownBase implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NumericUpDown" />
  <TypeSignature Language="VB.NET" Value="Public Class NumericUpDown&#xA;Inherits UpDownBase&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumericUpDown : System::Windows::Forms::UpDownBase, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type NumericUpDown = class&#xA;    inherit UpDownBase&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a Windows spin box (also known as an up-down control) that displays numeric values.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.NumericUpDown> control contiene un único valor numérico que puede ser aumenta o disminuye haciendo clic en arriba o hacia abajo de botones del control. El usuario también puede escribir un valor, a menos que la <xref:System.Windows.Forms.UpDownBase.ReadOnly%2A> propiedad está establecida en `true`.  
  
 Se puede aplicar el formato de presentación numérica estableciendo la <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>, o <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> propiedades. Para mostrar valores hexadecimales en el control, establezca la <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedad `true`. Para mostrar miles separador en números decimales cuando corresponda, establecer el <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> propiedad `true`. Para especificar el número de dígitos que se muestran después del separador decimal, establezca la <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A> propiedad para el número de posiciones decimales que se van a mostrar.  
  
 Para especificar el intervalo permitido de valores para el control, establezca la <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedades. Establecer el <xref:System.Windows.Forms.NumericUpDown.Increment%2A> valor para especificar el valor que se aumenta o disminuye en el <xref:System.Windows.Forms.NumericUpDown.Value%2A> propiedad cuando el usuario hace clic en arriba o hacia abajo de los botones de flecha. Puede aumentar la velocidad que el control se mueve a través de números cuando el usuario presiona continuamente arriba o flecha abajo estableciendo la <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A> propiedad.  
  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.UpButton%2A> o <xref:System.Windows.Forms.NumericUpDown.DownButton%2A> se llaman a métodos en el código o hacer clic con el de arriba o hacia abajo de botones, se valida el nuevo valor y el control se actualiza con el nuevo valor en el formato adecuado. En concreto, si la <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> propiedad está establecida en `true`, el <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> método se llama antes de validar o actualizar el valor. A continuación, se comprueba el valor debe para estar entre el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valores y el <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> se llama al método.  
  
 A partir de la versión 4.6 de .NET Framework, el <xref:System.Windows.Forms.NumericUpDown> control se ajustará en función del valor de PPP del sistema cuando el archivo app.config contiene la entrada siguiente:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.ComponentModel.ISupportInitialize" />
    <altmember cref="T:System.Windows.Forms.DomainUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumericUpDown();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.NumericUpDown" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Accelerations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accelerations As NumericUpDownAccelerationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::NumericUpDownAccelerationCollection ^ Accelerations { System::Windows::Forms::NumericUpDownAccelerationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Accelerations : System.Windows.Forms.NumericUpDownAccelerationCollection" Usage="System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NumericUpDownAccelerationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of sorted acceleration objects for the <see cref="T:System.Windows.Forms.NumericUpDown" /> control.</summary>
        <value>A <see cref="T:System.Windows.Forms.NumericUpDownAccelerationCollection" /> que contiene la aceleración ordenada de objetos para el <see cref="T:System.Windows.Forms.NumericUpDown" /> control</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A> propiedad puede utilizarse para aumentar la velocidad con la que el <xref:System.Windows.Forms.NumericUpDown> se desplaza a través de un gran conjunto de números cuando el usuario mantiene el arriba o flecha abajo, con el teclado o con el mouse. Al establecer esta propiedad se reducirá el número de <xref:System.Windows.Forms.NumericUpDown.ValueChanged> eventos que se producen en función de la <xref:System.Windows.Forms.NumericUpDownAcceleration.Increment%2A> y <xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A> valores de propiedad especificados para cada <xref:System.Windows.Forms.NumericUpDownAcceleration> objeto de la colección. El <xref:System.Windows.Forms.NumericUpDownAcceleration> contenidos en la colección de objetos se ordenan por sus <xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A?displayProperty=nameWithType> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A> propiedad. Para ejecutar este ejemplo, pegue el siguiente código en un formulario y llame a la `InitializeAcceleratedUpDown` método desde el constructor del formulario o <xref:System.Windows.Forms.Form.Load> método de control de eventos. Mientras se ejecuta el código, presione y mantenga la arriba o flecha abajo para ver la aceleración se producen.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.NumericUpDownAcceleration" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="numericUpDown.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins the initialization of a <see cref="T:System.Windows.Forms.NumericUpDown" /> control that is used on a form or used by another component. The initialization occurs at run time.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="numericUpDown.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new accessibility object for the control.</summary>
        <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="DecimalPlaces">
      <MemberSignature Language="C#" Value="public int DecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DecimalPlaces { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DecimalPlaces : int with get, set" Usage="System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of decimal places to display in the spin box (also known as an up-down control).</summary>
        <value>Número de posiciones decimales que se muestran en el cuadro de número. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A> propiedad está establecida, la <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> método se llama para actualizar la presentación del cuadro de número al nuevo formato.  
  
 El símbolo decimal adecuado está determinado por la configuración regional del sistema operativo del usuario.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value assigned is less than 0.  -or-  The value assigned is greater than 99.</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.DownButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DownButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DownButton();" />
      <MemberSignature Language="F#" Value="override this.DownButton : unit -&gt; unit" Usage="numericUpDown.DownButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Decrements the value of the spin box (also known as an up-down control).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.DownButton%2A> se llama al método, en el código o al hacer clic en el botón abajo, se valida el nuevo valor y el control se actualiza con el nuevo valor en el formato adecuado. En concreto, si la <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> propiedad está establecida en `true`, el <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> método se llama antes de validar o actualizar el valor. A continuación, se valida el valor para que esté entre el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valores y el <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="numericUpDown.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends the initialization of a <see cref="T:System.Windows.Forms.NumericUpDown" /> control that is used on a form or used by another component. The initialization occurs at run time.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hexadecimal">
      <MemberSignature Language="C#" Value="public bool Hexadecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hexadecimal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property Hexadecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hexadecimal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Hexadecimal : bool with get, set" Usage="System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the spin box (also known as an up-down control) should display the value it contains in hexadecimal format.</summary>
        <value>
          <see langword="true" /> Si el cuadro de número debe mostrar su valor en formato hexadecimal; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedad está establecida, la <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> método se llama para actualizar la presentación del cuadro de número al nuevo formato.  
  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedad está establecida en `true`, el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedad debe establecerse en <xref:System.Int32.MaxValue?displayProperty=nameWithType> y <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> propiedad debe establecerse en <xref:System.Int32.MinValue?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public decimal Increment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Increment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Property Increment As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Increment { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Increment : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Increment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value to increment or decrement the spin box (also known as an up-down control) when the up or down buttons are clicked.</summary>
        <value>El valor para incrementar o disminuir el <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> propiedad cuando arriba o hacia abajo de botones se hace clic en el cuadro de número. El valor predeterminado es 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al hacer clic en el botón Subir el <xref:System.Windows.Forms.NumericUpDown.Value%2A> propiedad que se va a incrementar la cantidad especificada por el <xref:System.Windows.Forms.NumericUpDown.Increment%2A> propiedad y un nuevo enfoque el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedad. Al hacer clic en el botón hacia abajo el <xref:System.Windows.Forms.NumericUpDown.Value%2A> propiedad se reduce la cantidad especificada por el <xref:System.Windows.Forms.NumericUpDown.Increment%2A> propiedad y un nuevo enfoque el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The assigned value is not greater than or equal to zero.</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public decimal Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Maximum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum value for the spin box (also known as an up-down control).</summary>
        <value>Valor máximo del cuadro de número. El valor predeterminado es 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedad está establecida, el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> propiedad se evalúa y el <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> se llama al método. Si el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> es mayor que la nueva propiedad <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedad, el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> valor de la propiedad se establece igual que el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valor. Si la actual <xref:System.Windows.Forms.NumericUpDown.Value%2A> es mayor que el nuevo <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valor. el <xref:System.Windows.Forms.NumericUpDown.Value%2A> valor de la propiedad se establece igual que el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public decimal Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Minimum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum allowed value for the spin box (also known as an up-down control).</summary>
        <value>Valor mínimo permitido para el cuadro de número. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> propiedad está establecida, el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedad se evalúa y el <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> se llama al método. Si el nuevo <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> valor de la propiedad es mayor que el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valor de propiedad, el <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valor se establece igual que el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> valor. Si el <xref:System.Windows.Forms.NumericUpDown.Value%2A> es menor que el nuevo <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> valor, el <xref:System.Windows.Forms.NumericUpDown.Value%2A> propiedad también se establece igual que el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="numericUpDown.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.NumericUpDown.OnKeyDown%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="numericUpDown.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.NumericUpDown.OnKeyUp%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="numericUpDown.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.NumericUpDown.OnLostFocus%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextBoxKeyPress (source As Object, e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextBoxKeyPress(System::Object ^ source, System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextBoxKeyPress : obj * System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="numericUpDown.OnTextBoxKeyPress (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">The source of the event.</param>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.NumericUpDown> control acepta sólo dígitos, el signo negativo, el separador decimal y edición de pulsaciones de teclas, como retroceso. Si el <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedad está establecida en `true`, <xref:System.Windows.Forms.NumericUpDown> acepta dígitos hexadecimales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : EventArgs -&gt; unit&#xA;override this.OnValueChanged : EventArgs -&gt; unit" Usage="numericUpDown.OnValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.NumericUpDown.ValueChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.NumericUpDown.OnValueChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.NumericUpDown.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the space between the edges of a <see cref="T:System.Windows.Forms.NumericUpDown" /> control and its contents.</summary>
        <value>
          <see cref="F:System.Windows.Forms.Padding.Empty" /> en todos los casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Forms.NumericUpDown.Padding%2A> propiedad no tiene ningún efecto en la apariencia de la <xref:System.Windows.Forms.NumericUpDown> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.NumericUpDown.Padding" /> property changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseEditText">
      <MemberSignature Language="C#" Value="protected void ParseEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ParseEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ParseEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ParseEditText();" />
      <MemberSignature Language="F#" Value="member this.ParseEditText : unit -&gt; unit" Usage="numericUpDown.ParseEditText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the text displayed in the spin box (also known as an up-down control) to a numeric value and evaluates it.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> propiedad está establecida en `true`, el texto mostrado se convierte en un valor numérico para que pueda comprobar que está entre el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valores de propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.UpDownBase.UserEdit" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.NumericUpDown.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text to be displayed in the <see cref="T:System.Windows.Forms.NumericUpDown" /> control.</summary>
        <value>
          <see langword="Null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.NumericUpDown.Text%2A> no tiene ningún efecto en la apariencia de la <xref:System.Windows.Forms.NumericUpDown> el control; por lo tanto, está oculta en el diseñador y de IntelliSense.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.NumericUpDown.Text" /> property changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public bool ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThousandsSeparator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThousandsSeparator : bool with get, set" Usage="System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether a thousands separator is displayed in the spin box (also known as an up-down control) when appropriate.</summary>
        <value>
          <see langword="true" /> Si miles separador se muestra en el cuadro de número cuando sea necesario; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> propiedad está establecida, la <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> método se llama para actualizar la presentación del cuadro de número al nuevo formato.  
  
 Los miles adecuados separador viene determinado por la configuración regional del sistema operativo del usuario.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="numericUpDown.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the <see cref="T:System.Windows.Forms.NumericUpDown" /> control.</summary>
        <returns>A string that represents the current <see cref="T:System.Windows.Forms.NumericUpDown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena devuelta incluye el tipo y los valores de la <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpButton();" />
      <MemberSignature Language="F#" Value="override this.UpButton : unit -&gt; unit" Usage="numericUpDown.UpButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Increments the value of the spin box (also known as an up-down control).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.UpButton%2A> se llama al método, en el código o al hacer clic en el botón arriba, se valida el nuevo valor y el control se actualiza con el nuevo valor en el formato adecuado. En concreto, si <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> está establecido en `true`, <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> se llama antes de validar o actualizar el valor. A continuación, se valida el valor para que esté entre el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valores y <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.DownButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateEditText();" />
      <MemberSignature Language="F#" Value="override this.UpdateEditText : unit -&gt; unit" Usage="numericUpDown.UpdateEditText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Displays the current value of the spin box (also known as an up-down control) in the appropriate format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se está inicializando el cuadro de número, el valor actual está comprendido entre el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valores y se convierte en el formato correcto para su presentación en el control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEditText">
      <MemberSignature Language="C#" Value="protected override void ValidateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ValidateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateEditText();" />
      <MemberSignature Language="F#" Value="override this.ValidateEditText : unit -&gt; unit" Usage="numericUpDown.ValidateEditText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Validates and updates the text displayed in the spin box (also known as an up-down control).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.NumericUpDown.ValidateEditText%2A> llamadas al método el <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> y <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> métodos para validar y actualizar la presentación del cuadro de número.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public decimal Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Value { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Value : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value assigned to the spin box (also known as an up-down control).</summary>
        <value>El valor numérico de la <see cref="T:System.Windows.Forms.NumericUpDown" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.NumericUpDown.Value%2A> propiedad está establecida, el nuevo valor está comprendido entre el <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> y <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> valores. De este modo, el <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> método se llama para actualizar la presentación del cuadro de número con el nuevo valor en el formato adecuado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea e inicializa un <xref:System.Windows.Forms.NumericUpDown> control, establece algunas de sus propiedades comunes y permite al usuario cambiar algunas de estas propiedades en tiempo de ejecución. Este código supone tres <xref:System.Windows.Forms.CheckBox> controles se han colocado en un formulario y los controladores de su <xref:System.Windows.Forms.Control.Click> se han creado instancias de eventos. El <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>, y <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> propiedades se establecen en el <xref:System.Windows.Forms.Control.Click> eventos de cada casilla de verificación.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The assigned value is less than the <see cref="P:System.Windows.Forms.NumericUpDown.Minimum" /> property value.  -or-  The assigned value is greater than the <see cref="P:System.Windows.Forms.NumericUpDown.Maximum" /> property value.</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberSignature Language="F#" Value="member this.ValueChanged : EventHandler " Usage="member this.ValueChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> property has been changed in some way.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para el <xref:System.Windows.Forms.NumericUpDown.ValueChanged> eventos que se produzca la <xref:System.Windows.Forms.NumericUpDown.Value%2A> propiedad se puede cambiar en el código, haciendo clic en arriba o abajo botón o por el usuario introduce un valor nuevo que se lee el control. El nuevo valor se lee cuando el usuario presiona la tecla ENTRAR o se desplaza fuera del control. Si el usuario escribe un nuevo valor y, a continuación, haga clic en arriba o abajo botón, el <xref:System.Windows.Forms.NumericUpDown.ValueChanged> evento se producirá dos veces.  
  
 Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.NumericUpDown.ValueChanged> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.NumericUpDown> denominado `NumericUpDown1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.NumericUpDown.ValueChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#515](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#515)]
 [!code-vb[System.Windows.Forms.EventExamples#515](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#515)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
      </Docs>
    </Member>
  </Members>
</Type>