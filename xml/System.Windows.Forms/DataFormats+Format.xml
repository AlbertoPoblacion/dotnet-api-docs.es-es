<Type Name="DataFormats+Format" FullName="System.Windows.Forms.DataFormats+Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0348ac902074fd7b9b28638c9aef93306da2c82e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30636239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataFormats.Format" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DataFormats/Format extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataFormats.Format" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormats.Format" />
  <TypeSignature Language="C++ CLI" Value="public: ref class DataFormats::Format" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un tipo de formato del Portapapeles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tipo de formato consta de un nombre de formato basado en texto y un número de identificación. El par de números de identificador/nombre de formato puede definir un sistema <xref:System.Windows.Forms.Clipboard> u otro formato.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar un <xref:System.Windows.Forms.DataFormats.Format> que representa un par de nombre/identificador de formato. El <xref:System.Windows.Forms.DataFormats.UnicodeText> se solicita el formato y el contenido de los recuperados <xref:System.Windows.Forms.DataFormats.Format> se muestran en un cuadro de texto.  
  
 Este código requiere que `textBox1` se ha creado.  
  
 [!code-cpp[Classic DataFormats.GetFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataFormats.GetFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DataFormats.GetFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Format (string name, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataFormats.Format.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Format(System::String ^ name, int id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de este formato.</param>
        <param name="id">Número de identificación para este formato.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataFormats.Format" /> con un valor booleano que indica si se espera un indicador <see langword="Win32" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo formato de un nombre y el número de identificación único. El nuevo formato no requiere un identificador de Windows. Requiere que `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic DataFormats.Format.Format Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataFormats.Format.Format Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataFormats.Format.Format Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataFormats.Format.Format Example/CS/source.cs#1)]
 [!code-vb[Classic DataFormats.Format.Format Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataFormats.Format.Format Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataFormats.Format.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de identificación para este formato.</summary>
        <value>Número de identificación para este formato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataFormats.Format.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de este formato.</summary>
        <value>Nombre de este formato.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>