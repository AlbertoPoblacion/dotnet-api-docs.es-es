<Type Name="HtmlElementEventArgs" FullName="System.Windows.Forms.HtmlElementEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88ca405ea7ef604920d0e4468de17b146589d798" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlElementEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlElementEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlElementEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlElementEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlElementEventArgs sealed : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para los eventos definidos en <see cref="T:System.Windows.Forms.HtmlDocument" /> y <see cref="T:System.Windows.Forms.HtmlElement" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs> Encapsula la misma información que se encuentra en la `window.event` objeto al programar con el DOM de HTML no administrado o al escribir Script activo para páginas HTML.  
  
 En la mayoría de los casos, puede usar <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> para encontrar el elemento HTML que recibe la acción del evento, y <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> para buscar el elemento HTML que el evento actual está haciendo que deje. Sin embargo, no todos los eventos proporcionan un valor para estas propiedades; Consulte la documentación para un evento administrada o la documentación correspondiente en la documentación del SDK de Internet Explorer, para detectar si el evento lo proporciona.  
  
 Muchos eventos en el DOM de HTML se envían a sus elementos principales a menos que se cancelan. Esto se conoce como propagación de eventos. Si un `SPAN` dentro de un `DIV` recibe un clic, y, a continuación, se desencadena un evento click para el `SPAN` en primer lugar, a continuación, para la `DIV`y, finalmente, para la página HTML `BODY` elemento. <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> Controla si un evento se comportará de esta manera o no.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este tipo. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AltKeyPressed">
      <MemberSignature Language="C#" Value="public bool AltKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyPressed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si se presionó la tecla ALT cuando se produjo este evento.</summary>
        <value>
          Es <see langword="true" /> si se presionó la tecla ALT; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BubbleEvent">
      <MemberSignature Language="C#" Value="public bool BubbleEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BubbleEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BubbleEvent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el evento actual traspasa la jerarquía de elementos del modelo de objeto del documento HTML.</summary>
        <value>
          Es <see langword="true" /> si el evento traspasa la jerarquía; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No todos los eventos de la burbuja de Document Object Model. Todos los eventos expuestos por el <xref:System.Windows.Forms.HtmlDocument> administrado burbujas de contenedor con la excepción de <xref:System.Windows.Forms.HtmlDocument.Stop>. Para <xref:System.Windows.Forms.HtmlElement>, `Error` y `Load` eventos no se propagan. Establecer `BubbleEvent` a `true` durante alguno de estos eventos no tiene ningún efecto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientMousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ClientMousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point ClientMousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientMousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point ClientMousePosition { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la posición del cursor del mouse en el área cliente del documento.</summary>
        <value>La posición actual del cursor del mouse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ClientMousePosition` proporciona la posición del mouse del cursor en relación con la esquina superior izquierda del documento. Use <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> si necesita las coordenadas de mouse (ratón) en relación con el elemento que provocó el evento.  
  
   
  
## Examples  
 El siguiente archivo HTML muestra la posición relativa de un `TABLE` dentro de un `BODY` etiqueta.  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text</TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 En el ejemplo de código siguiente se muestra la diferencia entre <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, y <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> cuando el usuario hace clic en un elemento de la `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> mostrará las coordenadas relativas a la esquina superior izquierda del área de cliente del documento. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> mostrará las coordenadas relativas a la esquina superior izquierda de la `TABLE`. Si hace clic en una de las líneas de texto, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> mostrará las coordenadas con respecto a que `TD` elemento.  
  
 Este ejemplo requiere que se haya configurado `Document_MouseDown` como un controlador para el <xref:System.Windows.Forms.HtmlDocument.MouseDown> eventos en <xref:System.Windows.Forms.HtmlDocument>.  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyPressed">
      <MemberSignature Language="C#" Value="public bool CtrlKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyPressed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si se presionó la tecla CTRL cuando se produjo este evento.</summary>
        <value>
          <see langword="true" /> si se presionó la tecla CTRL; en caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public string EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.EventType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del evento que se generó.</summary>
        <value>Nombre del evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="T:System.Windows.Forms.HtmlElement" />
      </Docs>
    </Member>
    <Member MemberName="FromElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement FromElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement FromElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.FromElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FromElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ FromElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Forms.HtmlElement" /> del que se aleja el puntero del mouse.</summary>
        <value>Objeto <see cref="T:System.Windows.Forms.HtmlElement" /> del que se aleja el puntero del mouse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> tendrá un valor válido durante los eventos del mouse como <xref:System.Windows.Forms.HtmlElement.MouseEnter> y <xref:System.Windows.Forms.HtmlElement.MouseLeave>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPressedCode">
      <MemberSignature Language="C#" Value="public int KeyPressedCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyPressedCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyPressedCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyPressedCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor ASCII del carácter de teclado escrito en los eventos <see cref="E:System.Windows.Forms.HtmlElement.KeyPress" />, <see cref="E:System.Windows.Forms.HtmlElement.KeyDown" /> o <see cref="E:System.Windows.Forms.HtmlElement.KeyUp" />.</summary>
        <value>Valor ASCII de la entrada de teclado compuesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseButtonsPressed">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons MouseButtonsPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons MouseButtonsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseButtonsPressed As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons MouseButtonsPressed { System::Windows::Forms::MouseButtons get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el botón del mouse con el que se hizo clic durante un evento <see cref="E:System.Windows.Forms.HtmlElement.MouseDown" /> o <see cref="E:System.Windows.Forms.HtmlElement.MouseUp" />.</summary>
        <value>Botón del mouse en el que se hizo clic.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la posición del cursor del mouse con respecto a un elemento principal colocado con relación a otro elemento.</summary>
        <value>La posición del cursor del mouse con respecto a la esquina superior izquierda del elemento primario del elemento que provocó el evento, si el elemento primario está colocado con relación a otro elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Posición relativa se utiliza en HTML para colocar un elemento en una página en relación con su elemento primario.  
  
 Si un elemento tiene una posición, esta propiedad devolverá el mismo resultado que <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>.  
  
   
  
## Examples  
 El siguiente archivo HTML muestra la posición relativa de un `TABLE` dentro de un `BODY` etiqueta.  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text/TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 En el ejemplo de código siguiente se muestra la diferencia entre <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, y <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> cuando el usuario hace clic en un elemento de la `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> mostrará las coordenadas relativas a la esquina superior izquierda del área de cliente del documento. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> mostrará las coordenadas relativas a la esquina superior izquierda de la `TABLE`. Si hace clic en una de las líneas de texto, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> mostrará las coordenadas con respecto a que `TD` elemento.  
  
 Este ejemplo requiere que se haya configurado `Document_MouseDown` como un controlador para el <xref:System.Windows.Forms.HtmlDocument.MouseDown> eventos en <xref:System.Windows.Forms.HtmlDocument>.  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      </Docs>
    </Member>
    <Member MemberName="OffsetMousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point OffsetMousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point OffsetMousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetMousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point OffsetMousePosition { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la posición del cursor del mouse con respecto al elemento que produce el evento.</summary>
        <value>La posición del mouse con respecto al elemento que produce el evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente archivo HTML muestra la posición relativa de un `TABLE` dentro de un `BODY` etiqueta.  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text</TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 En el ejemplo de código siguiente se muestra la diferencia entre <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> y <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> cuando el usuario hace clic en un elemento de la `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> mostrará las coordenadas relativas a la esquina superior izquierda del área de cliente del documento. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> mostrará las coordenadas relativas a la esquina superior izquierda de la `TABLE`. Si hace clic en una de las líneas de texto, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> mostrará las coordenadas con respecto a que `TD` elemento.  
  
 Este ejemplo requiere que se haya configurado `Document_MouseDown` como un controlador para el <xref:System.Windows.Forms.HtmlDocument.MouseDown> eventos en <xref:System.Windows.Forms.HtmlDocument>.  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public bool ReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor devuelto por el evento controlado.</summary>
        <value>
          Es <see langword="true" /> si se ha controlado el evento; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyPressed">
      <MemberSignature Language="C#" Value="public bool ShiftKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyPressed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si se presionó la tecla MAYÚS cuando se produjo este evento.</summary>
        <value>
          <see langword="true" /> si se presionó la tecla MAYÚS; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement ToElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement ToElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ToElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ ToElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Forms.HtmlElement" /> hacia el que el usuario mueve el puntero del mouse.</summary>
        <value>Elemento hacia el que se mueve el puntero del mouse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> tendrá un valor válido durante los eventos del mouse como <xref:System.Windows.Forms.HtmlElement.MouseEnter> y <xref:System.Windows.Forms.HtmlElement.MouseLeave>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.HtmlDocument> denominado `HtmlDocument1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>