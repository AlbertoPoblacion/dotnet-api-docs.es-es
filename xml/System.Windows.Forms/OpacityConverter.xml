<Type Name="OpacityConverter" FullName="System.Windows.Forms.OpacityConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ea33b1eb1e0b2b0d26e69b0ac4b1ceea55b018b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OpacityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpacityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpacityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class OpacityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpacityConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un convertidor de tipos para convertir valores de opacidad en otra cadena y desde otra cadena.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, no se crea directamente una instancia de un <xref:System.Windows.Forms.OpacityConverter>. En su lugar, se llama a la <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método <xref:System.ComponentModel.TypeDescriptor> clase. Para obtener más información sobre los convertidores de tipos y para ver ejemplos de código, vea la <xref:System.ComponentModel.TypeConverter> clase base y [Cómo: implementar un convertidor de tipos](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpacityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpacityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Windows.Forms.OpacityConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este es el constructor predeterminado proporcionado por el compilador.  
  
 Normalmente, no se crea directamente una instancia de un <xref:System.Windows.Forms.OpacityConverter>. En su lugar, llame a la <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método <xref:System.ComponentModel.TypeDescriptor> clase. Para obtener más información, vea los ejemplos de código en el <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información acerca del contexto de un convertidor de tipos.</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> que representa el tipo a partir del cual se desea realizar la conversión.</param>
        <summary>Devuelve un valor que indica si el convertidor puede convertir un objeto del tipo de origen dado en el tipo nativo del convertidor mediante el contexto especificado.</summary>
        <returns>
          <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `sourceType` se espera que sea un <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 Puede usar el <paramref name="context" /> parámetro para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que debe comprobar siempre el contenido. Además, las propiedades en el <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> también pueden devolver <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información acerca del contexto de un convertidor de tipos.</param>
        <param name="culture">Información de configuración regional para la conversión.</param>
        <param name="value">Objeto que se va a convertir.</param>
        <summary>Convierte el objeto especificado al tipo nativo del convertidor.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.OpacityConverter.ConvertFrom%2A> método está especializado para convertir <xref:System.String> valores que representan porcentajes o fracciones decimales en sus correspondientes <xref:System.Double> valores que representan la opacidad como un porcentaje. Los tipos distintos de <xref:System.String> se pasan a la implementación de la clase base de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">El objeto no era de un tipo compatible para la conversión.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="value" /> no se pudieron convertir correctamente al tipo <see cref="T:System.Double" />.  
  
 O bien  
  
 El <paramref name="value" /> convertido resultante fue menos del cero por ciento o más del cien por cien.</exception>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 Puede usar el <paramref name="context" /> parámetro para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que debe comprobar siempre el contenido. Además, las propiedades en el <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> también pueden devolver <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información acerca del contexto de un convertidor de tipos.</param>
        <param name="culture">Información de configuración regional para la conversión.</param>
        <param name="value">Valor que se va a convertir.</param>
        <param name="destinationType">Tipo en el que se va a convertir el objeto.</param>
        <summary>Convierte del tipo nativo del convertidor a un valor del tipo de destino.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.OpacityConverter.ConvertTo%2A> método está especializado para convertir los valores enteros a sus <xref:System.String> representaciones de porcentaje. Otros tipos se pasan a la implementación de la clase base de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> no se pueden convertir en <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 Puede usar el <paramref name="context" /> parámetro para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que debe comprobar siempre el contenido. Además, las propiedades en el <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> también pueden devolver <see langword="null" />.  
  
 El objeto resultante es un <see cref="T:System.String" /> que representa el porcentaje de opacidad.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
  </Members>
</Type>