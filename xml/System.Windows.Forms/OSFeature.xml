<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f8490b1b743429b4f7179e1a7f1ae345071802c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517147" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona consultas de características específicas del sistema operativo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la `static` instancia de esta clase proporcionada en la <xref:System.Windows.Forms.OSFeature.Feature%2A> propiedad para consultar características del sistema operativo. No se puede crear una instancia de esta clase.  
  
 Para determinar la versión de una característica, llame a la <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> método. Para determinar si está presente una característica o una versión específica, llame a la <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> método y especifique la característica que se va a buscar con los identificadores de característica proporcionados en esta clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se utiliza <xref:System.Windows.Forms.OSFeature> para consultar el sistema operativo para determinar si el <xref:System.Windows.Forms.OSFeature.LayeredWindows> se instala la característica. En el ejemplo se muestra dos formas diferentes de comprobación para ver si la característica está presente. En el primer método, `myVersion` se comprueban para ver si es `null`. Si la versión es `null`, la característica no está instalada. En el segundo método, en el ejemplo se llama al método de clase base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> para ver si está instalada la característica. Los resultados se muestran en un cuadro de texto.  
  
 Este código supone `textBox1` se ha creado y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.OSFeature" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear una instancia de esta clase. Para consultar características del sistema operativo, use la `static` instancia de <xref:System.Windows.Forms.OSFeature> proporcionada en esta clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una instancia <see langword="static" /> de la clase <see cref="T:System.Windows.Forms.OSFeature" /> que se va a utilizar en las consultas de las características. Esta propiedad es de sólo lectura.</summary>
        <value>Instancia de la clase <see cref="T:System.Windows.Forms.OSFeature" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilícelo `static` propiedad para consultar características del sistema operativo. No se puede crear una instancia de esta clase.  
  
 Para determinar la versión de una característica, llame a la <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> método. Para determinar si está presente una característica o una versión específica, llame a la <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> método y especifique la característica que se va a buscar con los identificadores de característica proporcionados en esta clase.  
  
   
  
## Examples  
 El siguiente ejemplo se consulta <xref:System.Windows.Forms.OSFeature> para el <xref:System.Windows.Forms.OSFeature.LayeredWindows> característica. La versión se comprueba para ver si es `null`, para determinar si la característica está presente. El resultado se muestra en un cuadro de texto. Este código supone `textBox1` se ha creado y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Característica cuya versión se solicita, o bien <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> o <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</param>
        <summary>Recupera la versión de la característica especificada disponible actualmente en el sistema.</summary>
        <returns>
          <see cref="T:System.Version" /> que representa la versión de la característica del sistema operativo especificada disponible actualmente en el sistema, o <see langword="null" /> si no puede encontrarse la característica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.OSFeature.Feature%2A> propiedad, el `static` instancia de <xref:System.Windows.Forms.OSFeature> proporcionada en esta clase, para consultar el número de versión de una característica.  
  
   
  
## Examples  
 El siguiente ejemplo se consulta <xref:System.Windows.Forms.OSFeature> para el <xref:System.Windows.Forms.OSFeature.LayeredWindows> característica. La versión se comprueba para ver si es `null`, para determinar si la característica está presente. El resultado se muestra en un cuadro de texto. Este código supone `textBox1` se ha creado y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" />
      </Parameters>
      <Docs>
        <param name="enumVal">Un objeto <see cref="T:System.Windows.Forms.SystemParameter" /> que representa la característica que se va a buscar.</param>
        <summary>Recupera un valor que indica si el sistema operativo admite la característica o la métrica especificadas.</summary>
        <returns>
          <see langword="true" /> si la característica está disponible en el sistema; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se utiliza el <xref:System.Windows.Forms.OSFeature.IsPresent%2A> método para determinar si el sistema operativo es compatible con la característica concreta o la métrica identificado por `enumValue`. En función del valor devuelto desde <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, podría realizar acciones condicionales en el código. Por ejemplo, si llama a este método con un valor de parámetro de <xref:System.Windows.Forms.SystemParameter.FlatMenu> devuelve `true`, podría crear menús dibujados por el propietario de la aplicación en un estilo plano.  
  
 Obtener acceso a algunas características del sistema o las métricas pueden producir excepciones si no están disponibles en una versión de sistema operativo específico. En este caso, utilice primero el correspondiente <xref:System.Windows.Forms.SystemParameter> valor de enumeración, junto con <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, para determinar si se admite la métrica. Por ejemplo, llamar a <xref:System.Windows.Forms.OSFeature.IsPresent%2A> con <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> antes de obtener la <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> valor de propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.OSFeature.IsPresent%2A> método con el <xref:System.Windows.Forms.SystemParameter> enumeración. El ejemplo determina si el sistema operativo admite el `CaretWidth` métrica antes de llamar a la <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> propiedad.  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa la característica de ventanas por capas de nivel superior. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una ventana superpuesta puede realizarse transparente o translúcida por el sistema operativo. Compatibilidad con ventanas superpuestas en primer lugar se introdujo en Windows 2000. Para obtener más información, vea "Niveles Windows: un nuevo Way to Use transparencia y transparencia efectos en Windows Applications" en la documentación de Platform SDK en http://msdn.microsoft.com.  
  
 Para determinar si está instalada la característica de ventanas superpuestas, use la <xref:System.Windows.Forms.OSFeature.Feature%2A> propiedad que se va a llamar al método de clase base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> con <xref:System.Windows.Forms.OSFeature.LayeredWindows> como la característica que se va a buscar.  
  
 Como alternativa, también puede comprobar si la característica se instala mediante una llamada a la <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> método con <xref:System.Windows.Forms.OSFeature.LayeredWindows> como la característica que se va a buscar.  
  
   
  
## Examples  
 En el ejemplo siguiente se determina si el sistema actual admite ventanas superpuestas. El método de clase base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> se llama con <xref:System.Windows.Forms.OSFeature.LayeredWindows> como la característica que se va a buscar. El resultado se muestra en un cuadro de texto. Este código supone `textBox1` se crea una instancia y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa la característica de temas del sistema operativo. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tema es una colección de configuración de la interfaz visual que incluye papel tapiz, cursores, fuentes, sonidos e iconos que se introdujo por primera vez en Microsoft Plus! para Windows 95. .NET Framework no admite directamente manipulación de temas, aunque tiene una amplia compatibilidad para los estilos visuales en el <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> espacio de nombres. Para obtener más información acerca de los temas de Windows, vea los temas Themes and Visual Styles y Visual Styles Reference en el SDK de Win32.  
  
 Para determinar si está instalada la característica de temas, llame al método de clase base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> con <xref:System.Windows.Forms.OSFeature.Themes> como la característica que se va a buscar.  
  
 Como alternativa, también puede comprobar si la característica se instala mediante una llamada a la <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> método con <xref:System.Windows.Forms.OSFeature.Themes> como la característica que se va a buscar.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>