<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e0e8f3cdd9a1dfa8d2486cf1fb30e8cc25ef41d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513556" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <TypeSignature Language="F#" Value="type TextRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos utilizados para medir y representar texto. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TextRenderer> clase proporciona un conjunto de `static` métodos que pueden utilizar para medir y para dibujar texto en un control de formulario Windows Forms.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un parámetro <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags>. Para obtener un ejemplo, consulta <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  No se admiten los métodos <xref:System.Windows.Forms.TextRenderer.DrawText%2A> de <xref:System.Windows.Forms.TextRenderer> para la impresión. Debe utilizar siempre el <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText1` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Traza el texto especificado en la ubicación indicada, utilizando el contexto de dispositivo, color y fuente que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que representa la esquina superior izquierda del texto trazado.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto trazado.</param>
        <summary>Traza el texto especificado en la ubicación indicada, utilizando el contexto de dispositivo, fuente y color que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>.  
  
 Si `font` es `null` o `forecolor` es <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Point> como la esquina superior izquierda del texto dibujado no se representan correctamente en Windows 2000. Si su aplicación está pensada para su uso en equipos que ejecutan Windows 2000, debe usar uno de los <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Rectangle> para los límites del texto dibujado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText1` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del texto.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto trazado.</param>
        <summary>Traza el texto especificado dentro de los límites indicados, utilizando el contexto de dispositivo, fuente y color que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `font` o `forecolor` es `null` o <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 Este método se producirá en el texto que se centra horizontalmente y verticalmente en el rectángulo especificado por el `bounds` parámetro. Para cambiar cómo se dibuja el texto, use una versión de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un <xref:System.Windows.Forms.TextFormatFlags> tipo de parámetro.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText2` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que representa la esquina superior izquierda del texto trazado.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto trazado.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al área de fondo del texto trazado.</param>
        <summary>Traza el texto especificado en la ubicación indicada, utilizando el contexto de dispositivo, fuente, color y color de fondo que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `backColor` parámetro se aplica al área rectangular que contiene el texto dibujado. Si `font`, `backcolor` o `forecolor` es `null` o <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Point> como la esquina superior izquierda del texto dibujado no se representan correctamente en Windows 2000. Si su aplicación está pensada para su uso en equipos que ejecutan Windows 2000, debe usar uno de los <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Rectangle> para los límites del texto dibujado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText3` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que representa la esquina superior izquierda del texto trazado.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto trazado.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Traza el texto especificado en la ubicación indicada, utilizando el contexto de dispositivo, fuente, color e instrucciones de formato que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un parámetro <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags>. Para obtener un ejemplo, consulta <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 El `backColor` parámetro se aplica al área que indica la `bounds` parámetro. Si `font` o `forecolor` es `null` o <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
 El <xref:System.Windows.Forms.TextRenderer> hace que no admiten la agregación de tabulaciones para representar texto, aunque puede expandir ficha existente deja de usar la <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> marca.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Point> como la esquina superior izquierda del texto dibujado no se representan correctamente en Windows 2000. Si su aplicación está pensada para su uso en equipos que ejecutan Windows 2000, debe usar uno de los <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Rectangle> para los límites del texto dibujado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText5` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del texto.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto trazado.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al área representada por <c>bounds</c>.</param>
        <summary>Traza el texto especificado dentro de los límites indicados, utilizando el contexto de dispositivo, fuente, color y color de fondo que se concretan.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `backColor` parámetro se aplica al área que indica la `bounds` parámetro. Si `font`, `backcolor` o `forecolor` es `null` o <xref:System.Drawing.Color.Empty>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 Este método se producirá en el texto que se centra horizontalmente y verticalmente en el rectángulo especificado por el `bounds` parámetro. Para cambiar cómo se dibuja el texto, use una versión de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un <xref:System.Windows.Forms.TextFormatFlags> tipo de parámetro.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText4` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del texto.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto trazado.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Traza el texto especificado dentro de los límites indicados, utilizando el contexto de dispositivo, fuente, color e instrucciones de formato que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `font` o `color` es `null` o <xref:System.Drawing.Color.Empty>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un parámetro <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags>. Para obtener un ejemplo, consulta <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
 El <xref:System.Windows.Forms.TextRenderer> hace que no admiten la agregación de tabulaciones para representar texto, aunque puede expandir ficha existente deja de usar la <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> marca.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText6` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> que representa la esquina superior izquierda del texto trazado.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al área de fondo del texto trazado.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Traza el texto especificado en la ubicación indicada, utilizando el contexto de dispositivo, fuente, color, color de fondo e instrucciones de formato que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `backcolor` parámetro se aplica el área rectangular que contiene el texto dibujado. Si `font` o `forecolor` es `null` o <xref:System.Drawing.Color.Empty>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> método dibujará el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un parámetro <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags>. Para obtener un ejemplo, consulta <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
 El <xref:System.Windows.Forms.TextRenderer> hace que no admiten la agregación de tabulaciones para representar texto, aunque puede expandir ficha existente deja de usar la <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> marca.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Point> como la esquina superior izquierda del texto dibujado no se representan correctamente en Windows 2000. Si su aplicación está pensada para su uso en equipos que ejecutan Windows 2000, debe usar uno de los <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos que especifican un <xref:System.Drawing.Rectangle> para los límites del texto dibujado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText7` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se traza el texto.</param>
        <param name="text">Texto que se va a trazar.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto trazado.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del texto.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al texto.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> que se va a aplicar al área representada por <c>bounds</c>.</param>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Traza el texto especificado dentro de los límites indicados, utilizando el contexto de dispositivo, fuente, color, color de fondo e instrucciones de formato que se concreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `backcolor` parámetro se aplica al área que indica la `bounds` parámetro`.` si `font`, `forecolor` o `backcolor` es `null` o <xref:System.Drawing.Color.Empty>, respectivamente; la <xref:System.Windows.Forms.TextRenderer.DrawText%2A> le (método) dibujar el texto en la fuente o el color seleccionado actualmente en el contexto de dispositivo especificado por `dc`. Si `forecolor` es <xref:System.Drawing.Color.Transparent%2A>, no se dibujará el texto.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un parámetro <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags>. Para obtener un ejemplo, consulta <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 La representación de texto que ofrece el <xref:System.Windows.Forms.TextRenderer> clase se basa en la representación de texto GDI y no se admite para la impresión de formularios Windows Forms. En su lugar, use la <xref:System.Drawing.Graphics.DrawString%2A> métodos de la <xref:System.Drawing.Graphics> clase.  
  
 El <xref:System.Windows.Forms.TextRenderer> hace que no admiten la agregación de tabulaciones para representar texto, aunque puede expandir ficha existente deja de usar la <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> marca.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `RenderText8` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Mide el texto especificado cuando se traza con la fuente que se concreta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a medir.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto medido.</param>
        <summary>Proporciona el tamaño, en píxeles, del texto especificado cuando se traza con la fuente determinada.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, en píxeles, del parámetro <paramref name="text" /> trazado en una sola línea con el parámetro <paramref name="font" /> especificado. Puede manipular cómo se traza el texto mediante una de las sobrecargas de <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> que toma un parámetro <see cref="T:System.Windows.Forms.TextFormatFlags" />. Por ejemplo, el comportamiento predeterminado de <see cref="T:System.Windows.Forms.TextRenderer" /> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> y <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> que toman un parámetro <see cref="T:System.Drawing.Size" /> y <see cref="T:System.Windows.Forms.TextFormatFlags" />. Para obtener un ejemplo, consulta <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> método requiere que se dibuja el texto en una sola línea.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `MeasureText1` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se mide el texto.</param>
        <param name="text">Texto que se va a medir.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto medido.</param>
        <summary>Proporciona el tamaño, en píxeles, del texto especificado trazado con la fuente indicada en el contexto de dispositivo que se concrete.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, en píxeles, del parámetro <paramref name="text" /> trazado en una sola línea con el parámetro <paramref name="font" /> concretado en el contexto de dispositivo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> método requiere que se dibuja el texto en una sola línea.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar uno de los <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> métodos. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `DrawALineOfText` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a medir.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto medido.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> del rectángulo delimitador inicial.</param>
        <summary>Proporciona el tamaño, en píxeles, del texto especificado cuando se traza con la fuente indicada y utilizando el tamaño concretado para crear un rectángulo delimitador inicial.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, en píxeles, del parámetro <paramref name="text" /> trazado con el parámetro <paramref name="font" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> método usa la `proposedSize` parámetro para indicar la relación de alto y ancho al determinar el tamaño del texto. Cuando se mide texto en una sola línea, si la `proposedSize` parámetro representa un <xref:System.Drawing.Size> con una dimensión de alto mayor que <xref:System.Int32.MaxValue?displayProperty=nameWithType>, el valor devuelto <xref:System.Drawing.Size> se ajustarán para reflejar el alto real del texto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar uno de los <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> métodos. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `DrawALineOfText` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se mide el texto.</param>
        <param name="text">Texto que se va a medir.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto medido.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> del rectángulo delimitador inicial.</param>
        <summary>Proporciona el tamaño, en píxeles, del texto especificado cuando se traza con la fuente indicada en el contexto de dispositivo dado y utilizando el tamaño concretado para crear un rectángulo delimitador inicial.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, en píxeles, del parámetro <paramref name="text" /> trazado con el parámetro <paramref name="font" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> método usa la `proposedSize` parámetro para indicar la relación de alto y ancho al determinar el tamaño del texto. Cuando se mide texto en una sola línea, si la `proposedSize` parámetro representa un <xref:System.Drawing.Size> con una dimensión de alto mayor que <xref:System.Int32.MaxValue?displayProperty=nameWithType>, el valor devuelto <xref:System.Drawing.Size> se ajustarán para reflejar el alto real del texto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar uno de los <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> métodos. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `DrawALineOfText` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a medir.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto medido.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> del rectángulo delimitador inicial.</param>
        <param name="flags">Instrucciones de formato que se van a aplicar al texto medido.</param>
        <summary>Proporciona el tamaño, en píxeles, del texto especificado cuando se traza con la fuente e instrucciones de formato indicadas y utilizando el tamaño concretado para crear un rectángulo delimitador inicial.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, en píxeles, del parámetro <paramref name="text" /> trazado con el parámetro <paramref name="font" /> y el formato especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> usa el `proposedSize` y `flags` parámetros para indicar la relación de alto y ancho al determinar el tamaño del texto. Cuando se mide texto en una sola línea, si la `proposedSize` parámetro representa un <xref:System.Drawing.Size> con una dimensión de alto mayor que <xref:System.Int32.MaxValue?displayProperty=nameWithType>, el valor devuelto <xref:System.Drawing.Size> se ajustarán para reflejar el alto real del texto.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si tiene que trazar una línea de texto sin estos espacios extra, debe usar las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un parámetro <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags>. Para obtener un ejemplo, consulta <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Esta sobrecarga de <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> hará caso omiso de una <xref:System.Windows.Forms.TextFormatFlags> valo <xref:System.Windows.Forms.TextFormatFlags.NoPadding> o <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Si va a especificar un valor de relleno distinto del predeterminado, debe utilizar la sobrecarga de <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> que toma un <xref:System.Drawing.IDeviceContext> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar uno de los <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> métodos. Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms y llame a `DrawALineOfText` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Contexto de dispositivo en el que se mide el texto.</param>
        <param name="text">Texto que se va a medir.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que se va a aplicar al texto medido.</param>
        <param name="proposedSize">
          <see cref="T:System.Drawing.Size" /> del rectángulo delimitador inicial.</param>
        <param name="flags">Instrucciones de formato que se van a aplicar al texto medido.</param>
        <summary>Proporciona el tamaño, en píxeles, del texto especificado cuando se traza con el dispositivo de contexto, la fuente y las instrucciones de formato indicadas y utilizando el tamaño concretado para crear un rectángulo delimitador inicial.</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />, en píxeles, del parámetro <paramref name="text" /> trazado con el parámetro <paramref name="font" /> y el formato especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> método usa la `proposedSize` y `flags` parámetros para indicar la relación de alto y ancho al determinar el tamaño del texto. Cuando se mide texto en una sola línea, si la `proposedSize` parámetro representa un <xref:System.Drawing.Size> con una dimensión de alto mayor que <xref:System.Int32.MaxValue?displayProperty=nameWithType>, el valor devuelto <xref:System.Drawing.Size> se ajustarán para reflejar el alto real del texto.  
  
 Puede manipular cómo se traza el texto mediante una de las sobrecargas de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> que toma un parámetro <xref:System.Windows.Forms.TextFormatFlags>. Por ejemplo, el comportamiento predeterminado de <xref:System.Windows.Forms.TextRenderer> es agregar relleno al rectángulo de delimitación del texto trazado para dar cabida a glifos que sobresalgan. Si necesita dibujar una línea de texto sin estos espacios, utilice las versiones de <xref:System.Windows.Forms.TextRenderer.DrawText%2A> y <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> que toman un <xref:System.Drawing.Size> y <xref:System.Windows.Forms.TextFormatFlags> parámetro, tal como se muestra en el ejemplo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> y <xref:System.Windows.Forms.TextRenderer.DrawText%2A> métodos para dibujar una sola línea de texto en diferentes estilos de fuente. Para ejecutar este ejemplo pega el código siguiente en un formulario Windows Forms y llaman a `DrawALineOfText` desde el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>