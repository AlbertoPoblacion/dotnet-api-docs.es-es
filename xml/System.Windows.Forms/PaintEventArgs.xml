<Type Name="PaintEventArgs" FullName="System.Windows.Forms.PaintEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43ef0f46216e929549535d644eb172d74d873945" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30648409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PaintEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PaintEventArgs extends System.EventArgs implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.PaintEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PaintEventArgs&#xA;Inherits EventArgs&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PaintEventArgs : EventArgs, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="488ae-101">Proporciona datos para el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="488ae-101">Provides data for the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488ae-102">El <xref:System.Windows.Forms.Control.Paint> evento tiene lugar cuando se vuelve a dibujar un control.</span><span class="sxs-lookup"><span data-stu-id="488ae-102">The <xref:System.Windows.Forms.Control.Paint> event occurs when a control is redrawn.</span></span> <span data-ttu-id="488ae-103">A <xref:System.Windows.Forms.PaintEventArgs> especifica la <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> se utiliza para pintar el control y la <xref:System.Windows.Forms.PaintEventArgs.ClipRectangle%2A> en el que se va a pintar.</span><span class="sxs-lookup"><span data-stu-id="488ae-103">A <xref:System.Windows.Forms.PaintEventArgs> specifies the <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> to use to paint the control and the <xref:System.Windows.Forms.PaintEventArgs.ClipRectangle%2A> in which to paint.</span></span>  
  
 <span data-ttu-id="488ae-104">Para obtener información sobre el modelo de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="488ae-104">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488ae-105">En el ejemplo siguiente se muestra el control de la <xref:System.Windows.Forms.Control.Paint> eventos y usar la <xref:System.Windows.Forms.PaintEventArgs> clase para dibujar rectángulos en el formulario.</span><span class="sxs-lookup"><span data-stu-id="488ae-105">The following example demonstrates handling the <xref:System.Windows.Forms.Control.Paint> event and using the <xref:System.Windows.Forms.PaintEventArgs> class to draw rectangles on the form.</span></span> <span data-ttu-id="488ae-106">El <xref:System.Windows.Forms.Control.MouseDown> y <xref:System.Windows.Forms.Control.MouseUp> se controlan los eventos para determinar el tamaño del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="488ae-106">The <xref:System.Windows.Forms.Control.MouseDown> and <xref:System.Windows.Forms.Control.MouseUp> events are handled to determine the size of the rectangle.</span></span> <span data-ttu-id="488ae-107">El ejemplo también muestra el <xref:System.Windows.Forms.Control.Invalidate%2A> método para invalidar el área del rectángulo, lo que hace que se vuelvan a dibujar.</span><span class="sxs-lookup"><span data-stu-id="488ae-107">The example also demonstrates the <xref:System.Windows.Forms.Control.Invalidate%2A> method to invalidate the area of the rectangle, causing it to be redrawn.</span></span>  
  
 [!code-cpp[Demontrates Form Paint Event#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Demontrates Form Paint Event/CPP/form1.cpp#1)]
 [!code-csharp[Demontrates Form Paint Event#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Demontrates Form Paint Event/CS/form1.cs#1)]
 [!code-vb[Demontrates Form Paint Event#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Demontrates Form Paint Event/VB/form1.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Rectangle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PaintEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PaintEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipRect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <span data-ttu-id="488ae-108">Objeto <see cref="T:System.Drawing.Graphics" /> utilizado para dibujar el elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-108">The <see cref="T:System.Drawing.Graphics" /> used to paint the item.</span>
          </span>
        </param>
        <param name="clipRect">
          <span data-ttu-id="488ae-109">Objeto <see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo en el que se va a dibujar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-109">The <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle in which to paint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488ae-110">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.PaintEventArgs" /> con el rectángulo de recorte y el gráfico especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-110">Initializes a new instance of the <see cref="T:System.Windows.Forms.PaintEventArgs" /> class with the specified graphics and clipping rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488ae-111">El <xref:System.Drawing.Graphics> identificado por la `graphics` parámetro se elimina cuando el <xref:System.Windows.Forms.PaintEventArgs> se elimina.</span><span class="sxs-lookup"><span data-stu-id="488ae-111">The <xref:System.Drawing.Graphics> identified by the `graphics` parameter is disposed when the <xref:System.Windows.Forms.PaintEventArgs> is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488ae-112">Los ejemplos de código siguiente se dibuja líneas y texto en un <xref:System.Windows.Forms.PictureBox> control.</span><span class="sxs-lookup"><span data-stu-id="488ae-112">The following code examples draws lines and text on a <xref:System.Windows.Forms.PictureBox> control.</span></span>  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="ClipRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClipRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClipRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PaintEventArgs.ClipRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClipRectangle { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="488ae-113">Obtiene el rectángulo en el que se va a pintar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-113">Gets the rectangle in which to paint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="488ae-114">
            <see cref="T:System.Drawing.Rectangle" /> en el que se va a pintar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-114">The <see cref="T:System.Drawing.Rectangle" /> in which to paint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="488ae-115">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="488ae-115">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="488ae-116">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="488ae-116">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="488ae-117">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="488ae-117">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="488ae-118">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="488ae-118">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="488ae-119">A continuación, asigne a la instancia `Control1` y asegurarse de que el controlador de eventos está asociado con el <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="488ae-119">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#42](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#42)]
 [!code-vb[System.Windows.Forms.EventExamples#42](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="488ae-120">Libera los recursos que usa <see cref="T:System.Windows.Forms.PaintEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-120">Releases the resources used by the <see cref="T:System.Windows.Forms.PaintEventArgs" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="488ae-121">Libera todos los recursos que usa <see cref="T:System.Windows.Forms.PaintEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-121">Releases all resources used by the <see cref="T:System.Windows.Forms.PaintEventArgs" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488ae-122">Llame a <xref:System.Windows.Forms.PaintEventArgs.Dispose> cuando haya terminado de usar <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="488ae-122">Call <xref:System.Windows.Forms.PaintEventArgs.Dispose> when you are finished using the <xref:System.Windows.Forms.PaintEventArgs>.</span></span> <span data-ttu-id="488ae-123">El método <xref:System.Windows.Forms.PaintEventArgs.Dispose> deja el <xref:System.Windows.Forms.PaintEventArgs> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="488ae-123">The <xref:System.Windows.Forms.PaintEventArgs.Dispose> method leaves the <xref:System.Windows.Forms.PaintEventArgs> in an unusable state.</span></span> <span data-ttu-id="488ae-124">Después de llamar a <xref:System.Windows.Forms.PaintEventArgs.Dispose>, debe liberar todas las referencias a la <xref:System.Windows.Forms.PaintEventArgs> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Windows.Forms.PaintEventArgs> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="488ae-124">After calling <xref:System.Windows.Forms.PaintEventArgs.Dispose>, you must release all references to the <xref:System.Windows.Forms.PaintEventArgs> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.PaintEventArgs> was occupying.</span></span> <span data-ttu-id="488ae-125">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="488ae-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488ae-126">Realice siempre una llamada a <xref:System.Windows.Forms.PaintEventArgs.Dispose> antes de liberar la última referencia al objeto <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="488ae-126">Always call <xref:System.Windows.Forms.PaintEventArgs.Dispose> before you release your last reference to the <xref:System.Windows.Forms.PaintEventArgs>.</span></span> <span data-ttu-id="488ae-127">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Windows.Forms.PaintEventArgs> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="488ae-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.PaintEventArgs> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="488ae-128">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488ae-129">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.PaintEventArgs" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-129">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.PaintEventArgs" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488ae-130">Se llama a este método público `Dispose()` método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="488ae-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="488ae-131">`Dispose()` se invoca el protegido <xref:System.Windows.Forms.PaintEventArgs.Dispose%28System.Boolean%29> método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="488ae-131">`Dispose()` invokes the protected <xref:System.Windows.Forms.PaintEventArgs.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="488ae-132"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="488ae-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="488ae-133">Cuando el `disposing` del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <xref:System.Windows.Forms.PaintEventArgs> referencias.</span><span class="sxs-lookup"><span data-stu-id="488ae-133">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.PaintEventArgs> references.</span></span> <span data-ttu-id="488ae-134">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="488ae-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="488ae-135">
              <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="488ae-135">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="488ae-136">Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="488ae-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="488ae-137">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="488ae-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="488ae-138">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="488ae-138">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PaintEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PaintEventArgs.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PaintEventArgs ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="488ae-139">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-139">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PaintEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="488ae-140">Obtiene los gráficos que se utilizan para pintar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-140">Gets the graphics used to paint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="488ae-141">Objeto <see cref="T:System.Drawing.Graphics" /> utilizado para pintar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-141">The <see cref="T:System.Drawing.Graphics" /> object used to paint.</span>
          </span>
          <span data-ttu-id="488ae-142">El objeto <see cref="T:System.Drawing.Graphics" /> proporciona métodos para dibujar objetos en el dispositivo de pantalla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="488ae-142">The <see cref="T:System.Drawing.Graphics" /> object provides methods for drawing objects on the display device.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="488ae-143">En el ejemplo siguiente se muestra el control de la <xref:System.Windows.Forms.Control.Paint> eventos y usar la <xref:System.Windows.Forms.PaintEventArgs> clase para dibujar rectángulos en el formulario.</span><span class="sxs-lookup"><span data-stu-id="488ae-143">The following example demonstrates handling the <xref:System.Windows.Forms.Control.Paint> event and using the <xref:System.Windows.Forms.PaintEventArgs> class to draw rectangles on the form.</span></span> <span data-ttu-id="488ae-144">El <xref:System.Windows.Forms.Control.MouseDown> y <xref:System.Windows.Forms.Control.MouseUp> se controlan los eventos para determinar el tamaño del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="488ae-144">The <xref:System.Windows.Forms.Control.MouseDown> and <xref:System.Windows.Forms.Control.MouseUp> events are handled to determine the size of the rectangle.</span></span> <span data-ttu-id="488ae-145">El ejemplo también muestra el <xref:System.Windows.Forms.Control.Invalidate%2A> método para invalidar el área del rectángulo, lo que hace que se vuelvan a dibujar.</span><span class="sxs-lookup"><span data-stu-id="488ae-145">The example also demonstrates the <xref:System.Windows.Forms.Control.Invalidate%2A> method to invalidate the area of the rectangle, causing it to be redrawn.</span></span>  
  
 [!code-cpp[Demontrates Form Paint Event#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Demontrates Form Paint Event/CPP/form1.cpp#1)]
 [!code-csharp[Demontrates Form Paint Event#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Demontrates Form Paint Event/CS/form1.cs#1)]
 [!code-vb[Demontrates Form Paint Event#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Demontrates Form Paint Event/VB/form1.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
  </Members>
</Type>