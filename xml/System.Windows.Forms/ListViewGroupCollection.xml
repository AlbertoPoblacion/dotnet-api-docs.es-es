<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a3144f6ca08ec34a84fc51153f90529d59a487a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39730992" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa la colección de grupos de un control <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> propiedad va a obtener el <xref:System.Windows.Forms.ListViewGroupCollection> asociado con un <xref:System.Windows.Forms.ListView> control. Esta colección contiene el <xref:System.Windows.Forms.ListViewGroup> objetos que representan los grupos que se muestra en el control cuando el <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Todos los elementos que no están asignados a un grupo aparecerá en el grupo predeterminado, que tiene la etiqueta de encabezado "DefaultGroup{0}". El grupo predeterminado no está contenido en el <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> colección y no se puede modificar. Resulta útil principalmente en la depuración para asegurarse de que todos los elementos se han agregado correctamente a los grupos. Si no hay ningún grupo en el <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> se deshabilita la recopilación, la característica de agrupación.  
  
 Use el <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> para agregar un único grupo a la colección. Use el <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> método para agregar un grupo en un índice determinado dentro de la colección. Para quitar un grupo, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> método. Use el <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> método para quitar el grupo en un índice determinado.  
  
 No puede agregar un <xref:System.Windows.Forms.ListViewGroup> a la colección de más de una vez. Para cambiar la posición de un grupo dentro de la colección, primero debe quitar de la colección y, a continuación, se inserta en la ubicación deseada. Use el <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> método para determinar si un grupo determinado ya está en la colección. Para recuperar el índice de un grupo dentro de la colección, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> método. Puede obtener o establecer el grupo en un índice determinado con el <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> indizador.  
  
 Use el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> para agregar varios grupos a la colección. Puede agregar varios grupos como una matriz de grupos o como un <xref:System.Windows.Forms.ListViewGroupCollection> que se recupera mediante la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> propiedad de otro <xref:System.Windows.Forms.ListView> control. Use el <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método para quitar todos los grupos de la colección.  
  
> [!NOTE]
>  El <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, y <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> métodos quitar grupos de la colección, pero no elimine cualquier elemento que el <xref:System.Windows.Forms.ListView> control. Si no hay ningún grupo en el <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> colección, se deshabilita la característica de agrupación y normalmente, se muestran todos los elementos del control.  
  
 El <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> y <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> métodos son útiles cuando desea proporcionar varias formas para agrupar los elementos en un <xref:System.Windows.Forms.ListView> control. Para ello, cree varias matrices de grupo. Para cambiar la agrupación, utilice primero la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método para quitar todos los grupos de la colección y, después, usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método para agregar la siguiente matriz de grupos para mostrar.  
  
 Use el <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> método para copiar los grupos de una colección en una matriz compatible, empezando en el índice especificado. Esto es útil, por ejemplo, cuando desea ordenar los grupos de la colección utilizando el <xref:System.Array.Sort%2A?displayProperty=nameWithType> método. Para ello, copie los grupos en una matriz compatible, a continuación, ordenar la matriz. A continuación, use el <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método para quitar todos los grupos de la colección y, después, usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método para agregar la matriz ordenada a la colección.  
  
 Use el <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> propiedad para determinar cuántos grupos se encuentran en la colección. Para recorrer en iteración la colección, utilice el <xref:System.Collections.IEnumerator> devuelto desde el <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> método.  
  
> [!NOTE]
>  La característica de agrupación sólo está disponible en Windows XP y la familia Windows Server 2003 cuando la aplicación llama a la <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método. En sistemas operativos anteriores, se omitirá cualquier código relacionado con grupos y los grupos no aparecerán. Como resultado, cualquier código que depende de la característica de agrupación no funcionen correctamente. Es posible que desea incluir una prueba que determina si está disponible la característica de agrupación y proporcionar una funcionalidad alternativa cuando no está disponible. Por ejemplo, es posible que desee proporcionar una ordenación alternativa cuando se ejecuta en sistemas operativos que no admiten la ordenación por grupo.  
>   
>  La característica de marca de inserción se proporciona la misma biblioteca que proporciona la característica de temas del sistema operativo. Para comprobar la disponibilidad de esta biblioteca, llame a la <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> sobrecarga del método y pase la <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valor.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Forms.ListView> característica de agrupación para organizar los elementos por valor de subelemento en la vista de detalles. Esta forma de agrupación es similar a la agrupación que se usa en el Explorador de Windows. En el ejemplo, los grupos se crean dinámicamente. Para cada columna de subelementos, se crea un grupo para cada valor único del subelemento. En la columna del elemento primario, se crea un grupo para cada letra inicial única. Al hacer clic en el encabezado de una columna se ordena los elementos en los grupos creados para esa columna. Vuelva a hacer clic en el mismo encabezado de columna, se invierte el orden de los grupos.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un elemento <see cref="T:System.Windows.Forms.ListViewGroup" /> a la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se agrega a la colección.</param>
        <summary>Agrega el <see cref="T:System.Windows.Forms.ListViewGroup" /> especificado a la colección.</summary>
        <returns>Índice del grupo dentro de la colección; de lo contrario, -1 si el valor ya está en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para agregar una existente <xref:System.Windows.Forms.ListViewGroup> a la colección. No puede agregar un <xref:System.Windows.Forms.ListViewGroup> a la colección de más de una vez. Cuando se llama a la <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> método mediante un <xref:System.Windows.Forms.ListViewGroup> que ya está en la colección, se produce un error en la adición y se devuelve -1.  
  
 Para agregar varios grupos a la colección, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> contiene al menos un <see cref="T:System.Windows.Forms.ListViewItem" /> que pertenece a un control <see cref="T:System.Windows.Forms.ListView" /> distinto del que posee este <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">El valor inicial de la propiedad <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> del nuevo grupo.</param>
        <param name="headerText">El valor inicial de la propiedad <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> del nuevo grupo.</param>
        <summary>Agrega un nuevo <see cref="T:System.Windows.Forms.ListViewGroup" /> a la colección utilizando los valores especificados para inicializar las propiedades <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> y <see cref="P:System.Windows.Forms.ListViewGroup.Header" /></summary>
        <returns>Nuevo objeto <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega varios grupos a la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Matriz de tipo <see cref="T:System.Windows.Forms.ListViewGroup" /> que especifica los grupos que se agregarán a la colección.</param>
        <summary>Agrega una matriz de grupos a la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta versión de la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> para agregar una matriz de grupos a la colección de grupos. Este método es útil al crear varios <xref:System.Windows.Forms.ListViewGroup> objetos y desea agregarlos a la colección con una única llamada al método. Para agregar grupos individuales a la colección, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> método.  
  
 Este método también es útil cuando desea proporcionar varias formas para agrupar los elementos en un <xref:System.Windows.Forms.ListView> control. Para ello, cree varias matrices de grupo. Para cambiar la agrupación, utilice primero la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método para quitar todos los grupos de la colección y, después, usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método para agregar una matriz de grupos diferentes.  
  
 A diferencia de la <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> método, el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método no tiene un valor devuelto que puede usarse para determinar si un grupo que se va a agregar ya está en la colección. Si necesita esta información, use la <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> método antes de usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método puede utilizarse en una aplicación que organiza <xref:System.Windows.Forms.ListView> elementos por valor de subelemento en la vista de detalles. Esta forma de agrupación es similar a la agrupación que se usa en el Explorador de Windows. En el ejemplo, los grupos se crean dinámicamente. Para cada columna de subelementos, se crea un grupo para cada valor único del subelemento. En la columna del elemento primario, se crea un grupo para cada letra inicial única. Los grupos creados para cada columna se almacenan en una tabla hash junto con la letra inicial o el texto del subelemento. Cuando se hace clic en un encabezado de columna, el <xref:System.Windows.Forms.ListViewGroupCollection> está desactivada. La tabla de hash correspondiente a la columna seleccionada, a continuación, se recupera y cada elemento se asigna al grupo adecuado. Por último, se agrega una matriz ordenada de los grupos en la tabla hash para el <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.ListViewGroupCollection> tema de referencia.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> contiene al menos un grupo que tiene por lo menos un <see cref="T:System.Windows.Forms.ListViewItem" /> que pertenece a un control <see cref="T:System.Windows.Forms.ListView" /> distinto del que posee este <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">
          <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> que contiene los grupos que se van a agregar a la colección.</param>
        <summary>Agrega a la colección los grupos de un <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> existente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta versión de la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método para agregar los elementos de un <xref:System.Windows.Forms.ListViewGroupCollection> que se recupera mediante la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> propiedad de otro <xref:System.Windows.Forms.ListView> control.  
  
 A diferencia de la <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> método, el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método no tiene un valor devuelto que puede usarse para determinar si un grupo que se va a agregar ya está en la colección. Si necesita esta información, use la <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> método antes de usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> contiene al menos un grupo que tiene por lo menos un <see cref="T:System.Windows.Forms.ListViewItem" /> que pertenece a un control <see cref="T:System.Windows.Forms.ListView" /> distinto del que posee este <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los grupos de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para quitar todos los grupos de la colección. Tenga en cuenta que la eliminación de grupos desde el <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> colección no quita los elementos de la <xref:System.Windows.Forms.ListView> control.  
  
 Este método es útil para deshabilitar la característica de agrupación. Cuando no hay ningún grupo en un <xref:System.Windows.Forms.ListView> controlar, los elementos aparecen con normalidad. Para quitar grupos individuales de la colección, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> o <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> método.  
  
 Este método también es útil cuando desea proporcionar varias formas para agrupar los elementos. Para cambiar la agrupación, utilice primero la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método para quitar todos los grupos de la colección y, después, usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método para agregar una matriz de grupos diferentes.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método puede utilizarse en una aplicación que organiza <xref:System.Windows.Forms.ListView> elementos por valor de subelemento en la vista de detalles. Esta forma de agrupación es similar a la agrupación que se usa en el Explorador de Windows. En el ejemplo, los grupos se crean dinámicamente. Para cada columna de subelementos, se crea un grupo para cada valor único del subelemento. En la columna del elemento primario, se crea un grupo para cada letra inicial única. Los grupos creados para cada columna se almacenan en una tabla hash junto con la letra inicial o el texto del subelemento. Cuando se hace clic en un encabezado de columna, el <xref:System.Windows.Forms.ListViewGroupCollection> está desactivada. La tabla de hash correspondiente a la columna seleccionada, a continuación, se recupera y cada elemento se asigna al grupo adecuado. Por último, se agrega una matriz ordenada de los grupos en la tabla hash para el <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.ListViewGroupCollection> tema de referencia.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a buscar en la colección.</param>
        <summary>Determina si el grupo especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si el grupo está en la colección; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No puede agregar un <xref:System.Windows.Forms.ListViewGroup> a la colección de más de una vez. Sin embargo, no la al intentar agregar otra copia producirá una excepción. En su lugar, la adición simplemente generará un error. El <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> método devolverá un valor de – 1 en este caso. El <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> y <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> métodos, sin embargo, no tienen valores devueltos. Agregar grupos mediante uno de estos métodos, use el <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> método para determinar si un determinado <xref:System.Windows.Forms.ListViewGroup> ya está en la colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Control <see cref="T:System.Array" /> al que se copian los grupos.</param>
        <param name="index">Primer índice dentro de la matriz en la que se copian los grupos.</param>
        <summary>Copia los grupos de la colección en un control <see cref="T:System.Array" /> unidimensional compatible, empezando en el índice especificado de la matriz de destino.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> método para copiar los grupos de una colección (incluidas las referencias de elemento que contienen) a una matriz compatible, empezando en el índice especificado. Esto es útil, por ejemplo, cuando desea ordenar los grupos de la colección utilizando el <xref:System.Array.Sort%2A?displayProperty=nameWithType> método. Para ello, copie los grupos en una matriz compatible, a continuación, ordenar la matriz. A continuación, use el <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método para quitar todos los grupos de la colección y, después, usar el <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> método para agregar la matriz ordenada a la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de grupos de la colección.</summary>
        <value>Número de grupos de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para determinar el número de grupos de la colección. Esto es útil cuando se necesita recorrer la colección y realizar la misma operación en cada grupo. También puede usar el <xref:System.Collections.IEnumerator> devuelto por la <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> método para recorrer en iteración la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador utilizado para recorrer en iteración la colección.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> que representa la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es útil cuando se necesita recorrer en iteración la colección para realizar la misma operación en cada grupo. También puede recorrer la colección una vez para cada grupo, mediante el <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> propiedad para determinar el número de bucles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a buscar en la colección.</param>
        <summary>Devuelve el índice del <see cref="T:System.Windows.Forms.ListViewGroup" /> especificado en la colección.</summary>
        <returns>Índice de base cero del grupo dentro de la colección, o -1 si el grupo no está en la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para determinar el índice de un grupo dentro de la colección. Esto es útil, por ejemplo, para determinar el índice de cada grupo cuando se recorren en iteración la colección utilizando el <xref:System.Collections.IEnumerator> devuelto por la <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Índice de la colección donde se va a insertar el grupo.</param>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a insertar en la colección.</param>
        <summary>Inserta la clase <see cref="T:System.Windows.Forms.ListViewGroup" /> especificada en el índice especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para insertar que existente <xref:System.Windows.Forms.ListViewGroup> en un índice determinado dentro de la colección.  
  
 No puede agregar un <xref:System.Windows.Forms.ListViewGroup> a la colección de más de una vez. Cuando se llama a la <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> método mediante un grupo que ya está en la colección, la inserción simplemente se produce un error. Use el <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> método antes de la inserción para determinar si un grupo determinado ya está en la colección. Para cambiar la posición de un grupo dentro de la colección, debe quitarlo primero y, a continuación, se inserte en el índice deseado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece un objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> de la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">El índice dentro de la colección del <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a obtener o establecer.</param>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> en el índice especificado de la colección.</summary>
        <value>El objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> situado en el índice especificado dentro de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para recuperar el grupo en el índice especificado dentro de la colección. Cuando tenga una referencia al objeto del grupo y necesita el índice, utilice la <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> es menor que 0, o mayor o igual a <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">El nombre del grupo que se va a obtener o establecer.</param>
        <summary>Obtiene o establece el <see cref="T:System.Windows.Forms.ListViewGroup" /> que tiene el valor de la propiedad <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> especificado.</summary>
        <value>El objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> con el nombre especificado o <see langword="null" /> si <see cref="T:System.Windows.Forms.ListViewGroup" /> no existe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a quitar de la colección.</param>
        <summary>Quita el objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para quitar un grupo de la colección cuando tenga una referencia al grupo. Tenga en cuenta que al quitar un grupo desde el <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> colección no quita los elementos de la <xref:System.Windows.Forms.ListView> control.  
  
 Para quitar un grupo en un índice determinado, use el <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> método en su lugar. Para quitar todos los grupos de la colección, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">El índice de la colección del <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a quitar.</param>
        <summary>Quita el <see cref="T:System.Windows.Forms.ListViewGroup" /> de la colección en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para quitar un grupo de la colección cuando tiene el índice del grupo dentro de la colección. Tenga en cuenta que la eliminación de grupos desde el <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> colección no quita los elementos de la <xref:System.Windows.Forms.ListView> control.  
  
 Para quitar un grupo mediante una referencia al objeto, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> método en su lugar. Para quitar todos los grupos de la colección, utilice el <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> método. Cuando se quita un elemento de la colección, cambian los índices de los elementos siguientes en la colección. Se elimina toda la información sobre el elemento quitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
        <value>
          <see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
        <value>Objeto que se utiliza para sincronizar la colección.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a agregar a <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Agrega un nuevo objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> a la colección <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>Índice en el que se ha agregado el control <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> no es un <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
O bien 
 <paramref name="value" /> contiene al menos un <see cref="T:System.Windows.Forms.ListViewItem" /> que pertenece a un control <see cref="T:System.Windows.Forms.ListView" /> distinto del que posee este <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objeto que representa el control <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a encontrar en la colección.</param>
        <summary>Determina si el valor especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si <paramref name="value" /> es un control <see cref="T:System.Windows.Forms.ListViewGroup" /> contenido en la colección; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Control <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a buscar en <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Devuelve el índice en la colección del valor especificado.</summary>
        <returns>El índice de base cero de <paramref name="value" /> si se encuentra en la colección; de lo contrario, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Posición en la que el control <see cref="T:System.Windows.Forms.ListViewGroup" /> se ha agregado a la colección.</param>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se agrega a la colección.</param>
        <summary>Inserta un control <see cref="T:System.Windows.Forms.ListViewGroup" /> en <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` no es un <xref:System.Windows.Forms.ListViewGroup>, no se agrega a la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección tiene un tamaño fijo.</summary>
        <value>
          <see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
        <value>
          <see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> en el índice especificado de la colección.</summary>
        <value>Control <see cref="T:System.Windows.Forms.ListViewGroup" /> que representa el elemento ubicado en el índice especificado de la colección.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.ListViewGroup" /> que se va a quitar de <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Quita el objeto <see cref="T:System.Windows.Forms.ListViewGroup" /> de la colección <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>