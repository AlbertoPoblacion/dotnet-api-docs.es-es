<Type Name="KeysConverter" FullName="System.Windows.Forms.KeysConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="643aed9ff16e31b5aaf2f1962fb6018939abbf92" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46658247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeysConverter extends System.ComponentModel.TypeConverter implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeysConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class KeysConverter&#xA;Inherits TypeConverter&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeysConverter : System::ComponentModel::TypeConverter, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type KeysConverter = class&#xA;    inherit TypeConverter&#xA;    interface IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Proporciona <see cref="T:System.ComponentModel.TypeConverter" /> para convertir objetos <see cref="T:System.Windows.Forms.Keys" /> en otras representaciones y desde otras representaciones.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, el <xref:System.Windows.Forms.KeysConverter> se usa el convertidor de tipos para convertir <xref:System.Windows.Forms.Keys> instancias a y desde sus correspondientes localizado <xref:System.String> representaciones.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.KeysConverter> clase para convertir un <xref:System.Windows.Forms.Keys.KeyCode> a un <xref:System.String>. En este ejemplo se supone que tiene un <xref:System.Windows.Forms.TextBox> denominado `TextBox1` en un <xref:System.Windows.Forms.Form> denominado `Form1`.  
  
 [!code-csharp[SystemWindowsFormsKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsKeys/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsKeys/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Keys" />
    <related type="Article" href="http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada">Conversión de tipos generalizada</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Cómo: Implementar un convertidor de tipos</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeysConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeysConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Windows.Forms.KeysConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este es el valor predeterminado, el constructor proporcionado por el compilador para la <xref:System.Windows.Forms.KeysConverter> clase.  
  
 Normalmente, no se crea directamente una instancia de un <xref:System.Windows.Forms.KeysConverter>. En su lugar, llame a la <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método <xref:System.ComponentModel.TypeDescriptor> clase. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="keysConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Una interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato, que puede utilizarse para extraer información adicional sobre el entorno a partir del cual se invoca este convertidor. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> desde el que se va a convertir.</param>
        <summary>Devuelve un valor que indica si el convertidor puede convertir un objeto del tipo de origen especificado al tipo nativo del convertidor utilizando el contexto especificado.</summary>
        <returns>
          <see langword="true" /> si la conversión se puede realizar; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.KeysConverter.CanConvertFrom%2A> método sirve para devolver `true` si el `sourceType` parámetro es de tipo <xref:System.String> o <xref:System.Enum> matriz; en caso contrario, se aplaza la evaluación a la implementación base de este método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
El contexto puede utilizarse para extraer información adicional sobre el entorno de que se está invocando este convertidor. Podría ser <see langword="null" />, por lo que se debe comprobar siempre. Aparte, las propiedades del objeto de contexto también podrían devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="keysConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Una interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato, que puede utilizarse para extraer información adicional sobre el entorno a partir del cual se invoca este convertidor. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> en el que se va a convertir.</param>
        <summary>Devuelve un valor que indica si el convertidor puede convertir un objeto del tipo de origen especificado al tipo nativo del convertidor utilizando el contexto especificado.</summary>
        <returns>
          <see langword="true" /> si la conversión se puede realizar; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.KeysConverter.CanConvertTo%2A> método sirve para devolver `true` si el `destinationType` parámetro es de tipo <xref:System.Enum> matriz; en caso contrario, se aplaza la evaluación a la implementación base de este método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
El contexto puede utilizarse para extraer información adicional sobre el entorno de que se está invocando este convertidor. Podría ser <see langword="null" />, por lo que se debe comprobar siempre. Aparte, las propiedades del objeto de contexto también podrían devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="keysConverter.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <see cref="T:System.Object" /> que representa la primera tecla que se va a comparar.</param>
        <param name="b">
          <see cref="T:System.Object" /> que representa la segunda tecla que se va a comparar.</param>
        <summary>Compara dos valores de tecla para determinar si son equivalentes.</summary>
        <returns>Entero que indica la relación que existe entre los dos parámetros.  
  
 <list type="table"><listheader><term> Tipo de valor 
 </term><description> Condition 
 </description></listheader><item><term> Entero negativo.  
  
 </term><description><paramref name="a" /> es menor que <paramref name="b" />.  
  
 </description></item><item><term> cero 
 </term><description><paramref name="a" /> es igual que <paramref name="b" />.  
  
 </description></item><item><term> Entero positivo.  
  
 </term><description><paramref name="a" /> es mayor que <paramref name="b" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método usa <xref:System.String.Compare%2A?displayProperty=nameWithType> para comparar los dos objetos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="keysConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Una interfaz <see langword="ITypeDescriptorContext" /> que proporciona un contexto de formato, que puede utilizarse para extraer información adicional sobre el entorno a partir del cual se invoca este convertidor. Este parámetro o sus propiedades pueden ser nulos.</param>
        <param name="culture">Un objeto <see langword="CultureInfo" /> que va a proporcionar información de la configuración regional.</param>
        <param name="value">Objeto que se va a convertir.</param>
        <summary>Convierte el objeto especificado al tipo nativo del convertidor.</summary>
        <returns>Un objeto que representa el objeto <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.KeysConverter.ConvertFrom%2A> método sirve para convertir objetos de tipo <xref:System.String> o <xref:System.Enum> matriz. En este caso, devolverá un objeto de tipo <xref:System.Windows.Forms.Keys>. En caso contrario, aplaza la evaluación a la implementación base de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Se ha proporcionado una combinación de teclas no válida.  
  
O bien 
Se ha proporcionado nombre de tecla que no es válido.</exception>
        <block subset="none" type="overrides">
          <para>El parámetro <paramref name="context" /> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. Podría ser <see langword="null" />, por lo que se debe comprobar siempre. Aparte, las propiedades del objeto de contexto también podrían devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="keysConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Una interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato, que puede utilizarse para extraer información adicional sobre el entorno a partir del cual se invoca este convertidor. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> para proporcionar información de la configuración regional.</param>
        <param name="value">
          <see cref="T:System.Object" /> que se va a convertir.</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> al que se va a convertir el objeto.</param>
        <summary>Convierte el objeto especificado en el tipo de destino especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.KeysConverter.ConvertTo%2A> método sirve para convertir objetos de tipo <xref:System.Windows.Forms.Keys> o <xref:System.Int32>. En este caso, devolverá un objeto de tipo <xref:System.String>. En caso contrario, aplaza la evaluación a la implementación base de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> es <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
El parámetro de contexto puede utilizarse para extraer información adicional sobre el entorno de que se está invocando este convertidor. Esto puede ser <see langword="null" />, por lo que siempre debe comprobar este valor devuelto. Aparte, las propiedades del objeto de contexto también podrían devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.CanConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="keysConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Una interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato, que puede utilizarse para extraer información adicional sobre el entorno a partir del cual se invoca este convertidor. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Devuelve una colección de valores estándar para el tipo de datos para el que se ha diseñado este convertidor de tipos cuando se proporciona un contexto de formato.</summary>
        <returns>Un objeto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos, y que podría estar vacío si el tipo de datos no es compatible con un conjunto estándar de valores.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La colección devuelta contiene los valores de las claves que se pueden convertir.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="keysConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexto de formateador. Este objeto se puede usar para extraer información adicional sobre el entorno desde el que se está invocando este convertidor. Podría ser <see langword="null" />, por lo que se debe comprobar siempre. Aparte, las propiedades del objeto de contexto también podrían devolver <see langword="null" />.</param>
        <summary>Determina si la lista de valores estándar devueltos desde <see langword="GetStandardValues" /> es una lista exclusiva mediante la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> especificada.</summary>
        <returns>
          <see langword="true" /> si la colección devuelta desde <see cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" /> es una lista exhaustiva de valores posibles; en caso contrario, <see langword="false" /> si hay otros valores posibles. La implementación predeterminada de este método siempre devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `context` parámetro no se utiliza en la implementación estándar de este método.  
  
 Si la lista es exclusiva, no hay otros valores son válidos, como en un <xref:System.Enum> tipo de datos. Si la lista no es exclusiva, hay otros valores válidos además de la lista de valores estándar <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A> proporciona.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="keysConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Una interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato, que puede utilizarse para extraer información adicional sobre el entorno a partir del cual se invoca este convertidor. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Obtiene un valor que indica si el objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</summary>
        <returns>Siempre devuelve <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `context` parámetro no se utiliza en la implementación estándar de este método.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.KeysConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
  </Members>
</Type>