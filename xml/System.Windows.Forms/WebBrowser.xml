<Type Name="WebBrowser" FullName="System.Windows.Forms.WebBrowser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3e307d8cd38467c70db48b1c77e7dbc45bd8851" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55366814" /></Metadata><TypeSignature Language="C#" Value="public class WebBrowser : System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBrowser extends System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBrowser&#xA;Inherits WebBrowserBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser : System::Windows::Forms::WebBrowserBase" />
  <TypeSignature Language="F#" Value="type WebBrowser = class&#xA;    inherit WebBrowserBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("DocumentCompleted")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Url")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite al usuario navegar por páginas web dentro del formulario.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control le permite hospedar páginas Web y otros documentos habilitadas para el explorador en las aplicaciones de Windows Forms. Puede usar el <xref:System.Windows.Forms.WebBrowser> controlar, por ejemplo, para proporcionar asistencia al usuario basada en HTML integrado o Web capacidades de navegación en la aplicación. Además, puede usar el <xref:System.Windows.Forms.WebBrowser> control para agregar los controles basados en Web existentes a las aplicaciones de cliente de Windows Forms.  
  
> [!IMPORTANT]
>  El <xref:System.Windows.Forms.WebBrowser> control consume muchos recursos. No olvide llamar a la <xref:System.ComponentModel.Component.Dispose> método cuando haya terminado de utilizar el control para asegurarse de que todos los recursos se liberen de manera oportuna. Debe llamar a la <xref:System.ComponentModel.Component.Dispose> método en el mismo subproceso que adjunta los eventos, que siempre deben ser el mensaje o el subproceso de interfaz de usuario (UI).  
  
 El <xref:System.Windows.Forms.WebBrowser> no se puede utilizar el control de código de confianza parcial. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 El <xref:System.Windows.Forms.WebBrowser> control tiene varias propiedades, métodos y eventos relacionados con la navegación. Los miembros siguientes le permiten navegar por el control a una dirección URL específica, desplazarse hacia atrás y hacia delante a través de la lista del historial de navegación y carga la página principal y la página de búsqueda del usuario actual:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Si el panel de navegación es correcta, se muestra una página que indica el problema. Navegación con cualquiera de estas causas de los miembros del <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, y <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos que se produzca en las diferentes etapas del panel de navegación.  
  
 Estos y otros miembros, como el <xref:System.Windows.Forms.WebBrowser.Stop%2A> y <xref:System.Windows.Forms.WebBrowser.Refresh%2A> métodos, le permiten implementar controles de interfaz de usuario en su aplicación similar a los de Internet Explorer. Algunos miembros son útiles incluso cuando no desea mostrar el <xref:System.Windows.Forms.WebBrowser> control en el formulario. Por ejemplo, puede usar el <xref:System.Windows.Forms.WebBrowser.Print%2A> método para imprimir la versión más reciente de una página Web sin mostrar la página al usuario.  
  
 El <xref:System.Windows.Forms.WebBrowser> control también le permite mostrar el contenido que se crea en la aplicación o recuperar desde un archivo de base de datos o un recurso. Use la <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> o <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propiedad va a obtener o establecer el contenido del documento actual como una cadena o secuencia de datos.  
  
 También se puede manipular el contenido de una página Web a través de la <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad, que contiene un <xref:System.Windows.Forms.HtmlDocument> objeto que proporciona acceso administrado al modelo de objetos de documento (DOM) HTML para la página actual. Esta propiedad es útil, cuando se usa en combinación con el <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propiedad, al implementar la comunicación bidireccional entre el código de aplicación y el código HTML (DHTML) dinámico en una página Web, lo que le permite combinar controles basados en Web y los controles de Windows Forms en un interfaz de usuario único. Puede usar el <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad para llamar a métodos de código de secuencias de comandos de la aplicación. El código de scripting puede tener acceso a la aplicación a través de la `window.external` objeto, que es un objeto DOM integrado proporcionado para el acceso de host, y que se asigna al objeto que se especifique para el <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propiedad.  
  
 El <xref:System.Windows.Forms.WebBrowser> control es un contenedor administrado de ActiveX [control WebBrowser](https://go.microsoft.com/fwlink/?LinkId=198812)y se usa independientemente de la versión del control está instalado en el equipo del usuario.  
  
> [!NOTE]
>  Esta clase realiza peticiones de seguridad en el nivel de clase. Un <xref:System.Security.SecurityException> se produce cuando una clase derivada o cualquier llamador de la pila de llamadas no tiene permiso de plena confianza. Para obtener más información acerca de las peticiones de seguridad, consulte [peticiones de vínculo](~/docs/framework/misc/link-demands.md) y [peticiones de herencias](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.WebBrowser> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para usar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar una barra de direcciones para su uso con el <xref:System.Windows.Forms.WebBrowser> control. Este ejemplo requiere que tenga un formulario que contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`, un <xref:System.Windows.Forms.TextBox> control denominado `TextBoxAddress`y un <xref:System.Windows.Forms.Button> control denominado `ButtonGo`. Cuando escriba una dirección URL en el cuadro de texto y presione ENTRAR o haga clic en el **vaya** botón, el <xref:System.Windows.Forms.WebBrowser> control se desplaza a la dirección URL especificada. Al navegar al hacer clic en un hipervínculo, el cuadro de texto se actualiza automáticamente para mostrar la dirección URL actual.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">para las clases derivadas heredan este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/12667861-5b5b-46bc-8fb5-675e25264c9f">WebBrowser (Control, Windows Forms)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/dd66cd4c-b087-415f-9c3e-94e3a1835f74">Utilizar bibliotecas de código que no es de plena confianza</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el <xref:System.Windows.Forms.WebBrowser> control está vacío. Para navegar por él en un documento inicial, establezca el <xref:System.Windows.Forms.WebBrowser.Url%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El control <see cref="T:System.Windows.Forms.WebBrowser" /> se hospeda en Internet Explorer.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNavigation : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control puede navegar a otra página después de haberse cargado la página inicial.</summary>
        <value><see langword="true" /> si el control puede navegar hasta otra página; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no impide que se cargue una página inicial estableciendo la <xref:System.Windows.Forms.WebBrowser.Url%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> o <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propiedad, pero impedirá que todos los desplazamientos posteriores.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowWebBrowserDrop">
      <MemberSignature Language="C#" Value="public bool AllowWebBrowserDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWebBrowserDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWebBrowserDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWebBrowserDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWebBrowserDrop : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Windows.Forms.WebBrowser" /> navega hasta los documentos colocados en él.</summary>
        <value>Es <see langword="true" /> si el control acepta los documentos colocados en él; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el <xref:System.Windows.Forms.WebBrowser> control navega automáticamente a los documentos colocados en él. Este comportamiento es útil cuando se usa el control como explorador genérico. Si utiliza el control para mostrar contenido diseñado específicamente para la aplicación, como usuario basado en HTML asistencia, establezca el <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> propiedad `false` para evitar la presentación de otro tipo de contenido. Esto es especialmente útil cuando desee ocultar el hecho de que está usando el <xref:System.Windows.Forms.WebBrowser> control, por ejemplo, para crear una interfaz de usuario que combine perfectamente los controles basados en Web con controles de formularios Windows Forms.  
  
 Otras características de explorador estándar se pueden deshabilitar estableciendo la <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> y <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propiedades a `false`.  
  
> [!NOTE]
>  Esta propiedad no está relacionado con la <xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=nameWithType> propiedad y no provoca eventos de arrastrar y colocar, como el <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> que se produce en el control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected override void AttachInterfaces (object nativeActiveXObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachInterfaces(object nativeActiveXObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AttachInterfaces (nativeActiveXObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AttachInterfaces(System::Object ^ nativeActiveXObject);" />
      <MemberSignature Language="F#" Value="override this.AttachInterfaces : obj -&gt; unit" Usage="webBrowser.AttachInterfaces nativeActiveXObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeActiveXObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nativeActiveXObject">Objeto que representa el control ActiveX subyacente.</param>
        <summary>El control llama a este método cuando se ha creado el control ActiveX subyacente.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Las clases derivadas pueden invalidar este método para convertir el objeto ActiveX subyacente en una interfaz adecuada y lo almacena en caché en una variable miembro. Este valor debe liberarse, a continuación, en un reemplazo del <see cref="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces" /> método.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si una página anterior del historial de navegación está disponible; de esta forma, el método <see cref="M:System.Windows.Forms.WebBrowser.GoBack" /> se puede ejecutar correctamente.</summary>
        <value><see langword="true" /> si el control puede navegar hacia atrás; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. El <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método navega el <xref:System.Windows.Forms.WebBrowser> el control a la página anterior de este historial, si está disponible. Use el <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propiedad para determinar si el historial de navegación está disponible y contiene una página anterior. Si esta propiedad es `true`, el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método se realizará correctamente. En caso contrario, una llamada a la <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método devolverá un valor de `false` y no se producirá ninguna navegación.  
  
 También puede controlar la <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> eventos para recibir una notificación cuando la <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> los cambios de propiedad. Controle este evento es útil, por ejemplo, para cambiar el estado habilitado de un **Atrás** botón cuando el <xref:System.Windows.Forms.WebBrowser> control navega a o deja el principio del historial de navegación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propiedad que se va a implementar un **Atrás** botón el <xref:System.Windows.Forms.WebBrowser> control que es similar a la **volver** botón en Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `backButton`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoBackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoBackChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoBackChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoBackChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoBackChanged : EventHandler " Usage="member this.CanGoBackChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. El <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método navega el <xref:System.Windows.Forms.WebBrowser> el control a la página anterior de este historial, si está disponible. El <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propiedad indica si el historial de navegación está disponible y contiene una página anterior. Controlar la <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> eventos para recibir una notificación cuando la <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> los cambios de propiedad. Controle este evento es útil, por ejemplo, para cambiar el estado habilitado de un **Atrás** botón cuando el <xref:System.Windows.Forms.WebBrowser> control navega a o deja el principio del historial de navegación.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un controlador para el <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> evento para implementar un **Atrás** botón el <xref:System.Windows.Forms.WebBrowser> control que es similar a la **volver** botón en Internet Explorador. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `backButton`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si una página posterior del historial de navegación está disponible; de esta forma, el método <see cref="M:System.Windows.Forms.WebBrowser.GoForward" /> se puede ejecutar correctamente.</summary>
        <value><see langword="true" /> si el control puede navegar hacia delante; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. El <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método navega el <xref:System.Windows.Forms.WebBrowser> el control a la página siguiente de este historial, si está disponible como resultado de una navegación hacia atrás anterior. Si esta propiedad es `true`, el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método se realizará correctamente. En caso contrario, una llamada a la <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método devolverá un valor de `false` y no se producirá ninguna navegación.  
  
 Use la <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propiedad para determinar si el historial de navegación está disponible y contiene una página situada después del actual, lo que permite el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método correctamente.  
  
 También puede controlar la <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> eventos para recibir una notificación cuando la <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> los cambios de propiedad. Controle este evento es útil, por ejemplo, para cambiar el estado habilitado de un **reenviar** botón cuando el <xref:System.Windows.Forms.WebBrowser> control navega a o deja el final del historial de navegación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un controlador para el <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> evento para implementar un **hacia delante** botón el <xref:System.Windows.Forms.WebBrowser> control que es similar a la **hacia delante** botón Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonForward`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoForwardChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoForwardChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoForwardChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoForwardChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoForwardChanged : EventHandler " Usage="member this.CanGoForwardChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. El <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método navega el <xref:System.Windows.Forms.WebBrowser> el control a la página siguiente de este historial, si está disponible como resultado de una navegación hacia atrás anterior. El <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propiedad indica si el historial de navegación está disponible y contiene una página situada después del actual, lo que permite el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método correctamente. Controlar la <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> eventos para recibir una notificación cuando la <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> los cambios de propiedad. Controle este evento es útil, por ejemplo, para cambiar el estado habilitado de un **reenviar** botón cuando el <xref:System.Windows.Forms.WebBrowser> control navega a o deja el final del historial de navegación.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para implementar un **hacia delante** botón el <xref:System.Windows.Forms.WebBrowser> control que es similar a la **reenviar** botón en Internet Explorador. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonForward`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected override void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateSink();" />
      <MemberSignature Language="F#" Value="override this.CreateSink : unit -&gt; unit" Usage="webBrowser.CreateSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asocia el control ActiveX subyacente con un cliente que puede controlar eventos de control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es útil si está familiarizado con el desarrollo de OLE mediante no administrado `WebBrowser` control ActiveX y desea ampliar la funcionalidad de los formularios de Windows <xref:System.Windows.Forms.WebBrowser> control, que es un contenedor administrado para el control ActiveX. Puede usar esta extensibilidad para implementar los eventos del control ActiveX que no se proporcionan el control contenedor.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso de este método en una clase derivada de <xref:System.Windows.Forms.WebBrowser> que complementa la normal <xref:System.Windows.Forms.WebBrowser> eventos con el `NavigateError` evento desde OLE `DWebBrowserEvents2` interfaz.  
  
 [!code-csharp[WebBrowserExtensibility#00](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#00)]
 [!code-vb[WebBrowserExtensibility#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#00)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.DetachSink" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa768283.aspx">Interfaz DWebBrowserEvents2</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebBrowserSiteBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWebBrowserSiteBase () As WebBrowserSiteBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::WebBrowserSiteBase ^ CreateWebBrowserSiteBase();" />
      <MemberSignature Language="F#" Value="override this.CreateWebBrowserSiteBase : unit -&gt; System.Windows.Forms.WebBrowserSiteBase" Usage="webBrowser.CreateWebBrowserSiteBase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserSiteBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una referencia al sitio del control ActiveX <see langword="WebBrowser" /> no administrado, que se puede ampliar para personalizar el control <see cref="T:System.Windows.Forms.WebBrowser" /> administrado.</summary>
        <returns><see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> que representa el sitio del control ActiveX <see langword="WebBrowser" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es útil si está familiarizado con el desarrollo de OLE mediante no administrado `WebBrowser` control ActiveX y desea ampliar la funcionalidad de los formularios de Windows <xref:System.Windows.Forms.WebBrowser> control, que es un contenedor administrado para el control ActiveX. Puede usar esta extensibilidad para personalizar el menú y el método abreviado teclas de método abreviado en explorador o para proporcionar una configuración de seguridad personalizada para los documentos hospedados.  
  
 Para usar esta característica, implementar las clases que heredan de la <xref:System.Windows.Forms.WebBrowser> y <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> clases. No administrado `WebBrowser` control ActiveX utiliza protegido <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> método para recuperar las interfaces de extensibilidad implementadas por el <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> clase. Invalidar el <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> método para devolver una instancia de su propia clase que hereda de la <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> clase. El <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> clase proporciona implementaciones predeterminadas de OLE `IDocHostUIHandler` interfaz. Puede proporcionar su propia implementación de esta interfaz o implementar cualquier otro `WebBrowser` interfaz del control ActiveX con el fin de personalizar el comportamiento del control.  
  
> [!NOTE]
>  Si proporciona su propia implementación de cualquier `IDocHostUIHandler` miembros, debe implementar todos los miembros de esa interfaz.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa753260.aspx">IDocHostUIHandler Interface</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño predeterminado del control.</summary>
        <value>Obtiene el tamaño predeterminado del control.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachInterfaces">
      <MemberSignature Language="C#" Value="protected override void DetachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachInterfaces" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachInterfaces ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachInterfaces();" />
      <MemberSignature Language="F#" Value="override this.DetachInterfaces : unit -&gt; unit" Usage="webBrowser.DetachInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Llamado por el control cuando se descarta el control ActiveX subyacente.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Las clases derivadas pueden invalidar este método para liberar una referencia al objeto ActiveX subyacente que se almacenó en caché en un reemplazo del <see cref="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)" /> método.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected override void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachSink();" />
      <MemberSignature Language="F#" Value="override this.DetachSink : unit -&gt; unit" Usage="webBrowser.DetachSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera el cliente de control de eventos conectado al método <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" /> del control ActiveX subyacente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es útil si está familiarizado con el desarrollo de OLE mediante no administrado `WebBrowser` control ActiveX y desea ampliar la funcionalidad de los formularios de Windows <xref:System.Windows.Forms.WebBrowser> control, que es un contenedor administrado para el control ActiveX. Puede usar esta extensibilidad para implementar los eventos del control ActiveX que no se proporcionan el control contenedor.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso de este método en una clase derivada de <xref:System.Windows.Forms.WebBrowser> que complementa el estándar <xref:System.Windows.Forms.WebBrowser> eventos con el `NavigateError` evento desde OLE `DWebBrowserEvents2` interfaz.  
  
 El ejemplo de código completo, vea <xref:System.Windows.Forms.WebBrowser.CreateSink%2A>.  
  
 [!code-csharp[WebBrowserExtensibility#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#10)]
 [!code-vb[WebBrowserExtensibility#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.CreateSink" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa768283.aspx">Interfaz DWebBrowserEvents2</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="webBrowser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.WebBrowser" /> y, de forma opcional, libera los recursos administrados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.WebBrowser.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un <see cref="T:System.Windows.Forms.HtmlDocument" /> que representa la página web que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlDocument" /> que representa la página actual o <see langword="null" /> si no se carga ninguna página.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad cuando desea tener acceso al contenido de una página Web que se muestra en el <xref:System.Windows.Forms.WebBrowser> control mediante el modelo de objetos de documento (DOM) HTML. Esto es útil, por ejemplo, si desea utilizar controles basados en Web en su aplicación de Windows Forms.  
  
 Puede usar esta propiedad, en combinación con la <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propiedad, al implementar la comunicación bidireccional entre una página Web que se muestra en el <xref:System.Windows.Forms.WebBrowser> control y la aplicación. Use el <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> método para llamar a métodos de script implementados en una página Web desde el código de aplicación cliente. El código de scripting puede tener acceso a la aplicación a través de la `window.external` objeto, que es un objeto DOM integrado proporcionado para el acceso de host, y que se asigna a un objeto que se especifique para el <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propiedad.  
  
 Para obtener acceso al contenido de una página Web como una cadena, utilice el <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propiedad. Para obtener acceso al contenido de una página Web como un <xref:System.IO.Stream>, utilice el <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad en un controlador para el <xref:System.Windows.Forms.WebBrowser.Navigating> evento para determinar si se ha rellenado el formulario de una página Web. Si el campo de entrada no contiene un valor, se cancela la navegación.  
  
 Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserDocumentCompletedEventHandler ^ DocumentCompleted;" />
      <MemberSignature Language="F#" Value="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " Usage="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserDocumentCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el control <see cref="T:System.Windows.Forms.WebBrowser" /> termina de cargar un documento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control se desplaza a un nuevo documento cada vez que se ha establecido uno de las siguientes propiedades o se llama a métodos:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Controlar la <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos para recibir una notificación cuando finaliza la carga de nuevo el documento. Cuando el <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> evento tiene lugar, el nuevo documento está totalmente cargado, lo que significa que puede tener acceso a su contenido a través de la <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, o <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propiedad.  
  
 Para recibir una notificación antes de que comience la exploración, controle el <xref:System.Windows.Forms.WebBrowser.Navigating> eventos. Controle este evento permite cancelar la navegación si no se cumplen ciertas condiciones, por ejemplo, cuando el usuario no ha rellenado completamente un formulario. Controlar la <xref:System.Windows.Forms.WebBrowser.Navigated> eventos para recibir una notificación cuando el <xref:System.Windows.Forms.WebBrowser> control finalice la exploración y haya empezado a cargar el documento en la nueva ubicación.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este evento para imprimir un documento una vez que se haya cargado completamente.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream DocumentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream DocumentStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ DocumentStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStream : System.IO.Stream with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una secuencia con el contenido de la página web que se muestra en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see cref="T:System.IO.Stream" /> con el contenido de la página web actual, o <see langword="null" /> si no se carga ninguna página. De manera predeterminada, es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para cargar una página Web en el <xref:System.Windows.Forms.WebBrowser> controlar desde un <xref:System.IO.Stream> objeto. Puede utilizar esta propiedad, por ejemplo, para cargar páginas Web desde un archivo de base de datos o un recurso. Al establecer esta propiedad, el <xref:System.Windows.Forms.WebBrowser> control se desplaza automáticamente hasta el sobre: en blanco la dirección URL antes de cargar el texto especificado. Esto significa que el <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, y <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos se producen cuando se establece esta propiedad y el valor de la <xref:System.Windows.Forms.WebBrowser.Url%2A> propiedad ya no es significativa.  
  
> [!NOTE]
>  Esta propiedad contiene el contenido del documento actual, incluso si se ha solicitado otro documento. Si se establece el valor de esta propiedad y, a continuación, inmediatamente recuperarlo de nuevo, el valor recuperado puede ser diferente del valor establecido si el <xref:System.Windows.Forms.WebBrowser> control no tiene tiempo para cargar el nuevo contenido. Puede recuperar el nuevo valor en un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> controlador de eventos.  
  
 Para obtener acceso al contenido de una página Web como una cadena, utilice el <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propiedad. También puede acceder al contenido de página mediante el modelo de objetos de documento (DOM) HTML a través de la <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.IO.Stream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentText">
      <MemberSignature Language="C#" Value="public string DocumentText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentText : string with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contenido HTML de la página que se muestra en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>El texto HTLM de la página mostrada, o la cadena vacía ("") si no se carga ningún documento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad cuando desea manipular el contenido de una página HTML que se muestra en el <xref:System.Windows.Forms.WebBrowser> controlar mediante herramientas de procesamiento de la cadena. Puede utilizar esta propiedad, por ejemplo, para cargar páginas desde una base de datos o para analizar las páginas mediante expresiones regulares. Al establecer esta propiedad, el <xref:System.Windows.Forms.WebBrowser> control se desplaza automáticamente hasta el sobre: en blanco la dirección URL antes de cargar el texto especificado. Esto significa que el <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, y <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos se producen cuando se establece esta propiedad y el valor de la <xref:System.Windows.Forms.WebBrowser.Url%2A> propiedad ya no es significativa.  
  
> [!NOTE]
>  Esta propiedad contiene el texto del documento actual, incluso si se ha solicitado otro documento. Si se establece el valor de esta propiedad y, a continuación, inmediatamente recuperarlo de nuevo, el valor recuperado puede ser diferente del valor establecido si el <xref:System.Windows.Forms.WebBrowser> control no tiene tiempo para cargar el nuevo contenido. Puede recuperar el nuevo valor en un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> controlador de eventos. Como alternativa, puede bloquear el subproceso hasta que el documento se carga mediante una llamada a la <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> método en un bucle hasta que el <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propiedad devuelve el valor que se estableció originalmente.  
  
 Para obtener acceso al contenido de una página Web como un <xref:System.IO.Stream>, utilice el <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propiedad. También puede acceder al contenido de página mediante el modelo de objetos de documento (DOM) HTML a través de la <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propiedad para mostrar el contenido del documento de su elección mediante programación. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentTitle : string" Usage="System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el título del documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>El título del documento actual, o la cadena vacía ("") si no se carga ningún documento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es útil, por ejemplo, cuando desea mostrar el título del documento en la barra de título de la aplicación. Si no se ha definido ningún título para el documento actual, esta propiedad se establece en la ubicación del documento y el nombre de archivo.  
  
 Controlar la <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> eventos para actualizar el título en el título de la barra cuando el <xref:System.Windows.Forms.WebBrowser> control se desplaza a un nuevo documento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> propiedad para actualizar la barra de título del formulario con el título del documento actual. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DocumentTitleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DocumentTitleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentTitleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DocumentTitleChanged;" />
      <MemberSignature Language="F#" Value="member this.DocumentTitleChanged : EventHandler " Usage="member this.DocumentTitleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede controlar este evento para actualizar la barra de título de la aplicación con el valor actual de la <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> propiedad.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un controlador para el <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> evento para actualizar la barra de título del formulario con el título del documento actual. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public string DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : string" Usage="System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo del documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Tipo del documento actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de esta propiedad corresponde al tipo Extensiones multipropósito de correo Internet (MIME) del documento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionLevel As WebBrowserEncryptionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserEncryptionLevel EncryptionLevel { System::Windows::Forms::WebBrowserEncryptionLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevel : System.Windows.Forms.WebBrowserEncryptionLevel" Usage="System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserEncryptionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica el método de cifrado que usa el documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad con el <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> eventos para implementar un indicador en la interfaz de usuario de la aplicación similar al icono de candado en Internet Explorer. Cuando no se cifra el documento actual, el valor de esta propiedad es <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure?displayProperty=nameWithType>. Cuando el <xref:System.Windows.Forms.WebBrowser> control muestra una página Web que contiene varios marcos con contenido de los niveles de cifrado diferente, el valor de esta propiedad es <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed?displayProperty=nameWithType>. Cuando el nivel de cifrado es desconocido, el valor de esta propiedad es <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown?displayProperty=nameWithType>. Otros valores indican el tipo de cifrado presente. Para imitar el comportamiento del icono de bloqueo de Internet Explorer, mostrar el tipo de cifrado en una información sobre herramientas que aparece cuando el puntero del mouse se sitúa sobre el indicador.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevelChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EncryptionLevelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EncryptionLevelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EncryptionLevelChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EncryptionLevelChanged;" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevelChanged : EventHandler " Usage="member this.EncryptionLevelChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el control <see cref="T:System.Windows.Forms.WebBrowser" /> navega hasta un sitio web que usa el cifrado o cuando sale de él.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este evento con el <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> propiedad que se va a implementar un indicador en la interfaz de usuario de la aplicación similar al icono de candado en Internet Explorer. En un controlador para este evento, compruebe el valor de la <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> propiedad para determinar si debe ocultar o mostrar el indicador. Para imitar el comportamiento del icono de bloqueo de Internet Explorer, también puede proporcionar información sobre herramientas que muestra el nivel de cifrado cuando el puntero del mouse se sitúa sobre el indicador.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.WebBrowser> denominado `WebBrowser1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#647](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#647)]
 [!code-vb[System.Windows.Forms.EventExamples#647](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#647)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="FileDownload">
      <MemberSignature Language="C#" Value="public event EventHandler FileDownload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FileDownload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.FileDownload" />
      <MemberSignature Language="VB.NET" Value="Public Event FileDownload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FileDownload;" />
      <MemberSignature Language="F#" Value="member this.FileDownload : EventHandler " Usage="member this.FileDownload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el control <see cref="T:System.Windows.Forms.WebBrowser" /> descarga un archivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.WebBrowser.FileDownload> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.WebBrowser> denominado `WebBrowser1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.WebBrowser.FileDownload> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#648](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#648)]
 [!code-vb[System.Windows.Forms.EventExamples#648](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#648)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.WebBrowser.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control o cualquiera de sus ventanas secundarias tiene el foco de entrada.</summary>
        <value>Es <see langword="true" /> si el control o cualquiera de sus ventanas secundarias tiene el foco de entrada; de lo contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> propiedad para extender la implementación base. En caso contrario, debe proporcionar toda la implementación.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; bool" Usage="webBrowser.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el control <see cref="T:System.Windows.Forms.WebBrowser" /> navegue hasta la página anterior del historial de navegación, si hay alguna disponible.</summary>
        <returns>Es <see langword="true" /> si la navegación es correcta; es <see langword="false" /> si no está disponible una página anterior del historial de navegación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Puede usar el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para implementar un **volver** botón similar a la de Internet Explorer, que permitirá a los usuarios a volver a la página anterior del historial de navegación.  
  
 Use el <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propiedad para determinar si el historial de navegación está disponible y contiene una página anterior. Controlar la <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> eventos para recibir una notificación cuando la <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> cambios de valor de propiedad. Controle este evento es útil, por ejemplo, para cambiar el estado habilitado de un **Atrás** botón cuando el <xref:System.Windows.Forms.WebBrowser> control navega a o deja el principio del historial de navegación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para implementar un **Atrás** botón el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `backButton`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; bool" Usage="webBrowser.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el control <see cref="T:System.Windows.Forms.WebBrowser" /> navegue hasta la página siguiente del historial de navegación, si hay alguna disponible.</summary>
        <returns>Es <see langword="true" /> si la navegación es correcta; es <see langword="false" /> si no está disponible una página posterior del historial de navegación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Puede usar el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para implementar un **reenviar** botón similar a uno en Internet Explorer, lo que permite a los usuarios volver a la página siguiente del historial de navegación después de navegar hacia atrás.  
  
 Use el <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propiedad para determinar si el historial de navegación está disponible y contiene una página situada después del actual. Controlar la <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> eventos para recibir una notificación cuando la <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> cambios de valor de propiedad. Controle este evento es útil, por ejemplo, para cambiar el estado habilitado de un **reenviar** botón cuando el <xref:System.Windows.Forms.WebBrowser> control navega a o deja el final del historial de navegación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para implementar un **reenviar** botón el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonForward`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoHome">
      <MemberSignature Language="C#" Value="public void GoHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoHome();" />
      <MemberSignature Language="F#" Value="member this.GoHome : unit -&gt; unit" Usage="webBrowser.GoHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el control <see cref="T:System.Windows.Forms.WebBrowser" /> navegue hasta la página principal del usuario actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **inicio** botón similar a la de Internet Explorer. El usuario puede especificar una página principal en el **opciones de Internet** cuadro de diálogo, que está disponible desde el Panel de Control o desde el **herramientas** menús en Internet Explorer.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.GoHome%2A> método para implementar un **inicio** botón el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonHome`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#11)]
 [!code-csharp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.WebBrowser#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="GoSearch">
      <MemberSignature Language="C#" Value="public void GoSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoSearch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoSearch" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoSearch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoSearch();" />
      <MemberSignature Language="F#" Value="member this.GoSearch : unit -&gt; unit" Usage="webBrowser.GoSearch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el control <see cref="T:System.Windows.Forms.WebBrowser" /> navegue hasta la página de búsqueda predeterminada del usuario actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para implementar una característica de búsqueda similar a la de Internet Explorer. Según la versión instalada de Internet Explorer, el usuario puede especificar una página de búsqueda predeterminada en el **opciones de Internet** cuadro de diálogo, que está disponible desde el Panel de Control o desde el **herramientas** menú en Internet Explorer.  
  
 La página de búsqueda predeterminada se almacena en el registro bajo la `HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Search Page` clave del registro. Con versiones posteriores de Internet Explorer, esta clave del registro se debe modificar para cambiar la página de búsqueda predeterminado utilizada por este método. Para usar una página de búsqueda distinto del predeterminado, llame a la <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método o especifique el <xref:System.Windows.Forms.WebBrowser.Url%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.GoSearch%2A> método para implementar un **búsqueda** botón el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonSearch`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#12)]
 [!code-csharp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.WebBrowser#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control <see cref="T:System.Windows.Forms.WebBrowser" /> está cargando un documento nuevo actualmente.</summary>
        <value><see langword="true" /> si el control está ocupado cargando un documento; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si esta propiedad es `true`, puede usar el <xref:System.Windows.Forms.WebBrowser.Stop%2A> método para detener la exploración actual antes de que el nuevo documento se ha cargado completamente. Use la <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> propiedad para determinar el estado de navegación exacto de la <xref:System.Windows.Forms.WebBrowser> control. El <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> valor de propiedad es false cuando el <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> es el valor de propiedad <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.ReadyState" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control <see cref="T:System.Windows.Forms.WebBrowser" /> está en modo sin conexión.</summary>
        <value>Es <see langword="true" /> si el control <see cref="T:System.Windows.Forms.WebBrowser" /> está en el modo sin conexión; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el modo sin conexión, el <xref:System.Windows.Forms.WebBrowser> control se ve obligado a cargar las páginas Web desde la memoria caché local en lugar de descargarlos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="IsWebBrowserContextMenuEnabled">
      <MemberSignature Language="C#" Value="public bool IsWebBrowserContextMenuEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWebBrowserContextMenuEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebBrowserContextMenuEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsWebBrowserContextMenuEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el menú contextual del control <see cref="T:System.Windows.Forms.WebBrowser" /> está habilitado.</summary>
        <value><see langword="true" /> si está habilitado el menú contextual del control <see cref="T:System.Windows.Forms.WebBrowser" />; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el <xref:System.Windows.Forms.WebBrowser> control muestra un menú contextual cuando un usuario lo hace. Este comportamiento es útil cuando se usa el control como explorador genérico. Si desea ocultar el hecho de que está usando el <xref:System.Windows.Forms.WebBrowser> control, por ejemplo, para crear una interfaz de usuario que combine perfectamente los controles basados en Web con controles de Windows Forms, establezca la <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propiedad en false.  
  
 Otras características de explorador estándar se pueden deshabilitar estableciendo la <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> y <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> propiedades en false.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga el documento en la ubicación especificada en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="webBrowser.Navigate urlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">Dirección URL del documento que se va a cargar.</param>
        <summary>Carga el documento del Localizador uniforme de recursos (URL) especificado en el control <see cref="T:System.Windows.Forms.WebBrowser" /> y reemplaza el documento anterior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga, el <xref:System.Windows.Forms.WebBrowser> control navega al URI especificado y lo agrega al final de la lista del historial. Use el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para devolver el control a la página anterior del historial de navegación. Use el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para volver a una página posterior del historial de navegación después de navegar hacia atrás.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
 Puede usar el <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método para implementar una barra de direcciones similar a la de Internet Explorer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="webBrowser.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> que representa la dirección URL del documento que se va a cargar.</param>
        <summary>Carga el documento en la ubicación indicada por el <see cref="T:System.Uri" /> especificado en el control <see cref="T:System.Windows.Forms.WebBrowser" /> y reemplaza el documento anterior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga, el <xref:System.Windows.Forms.WebBrowser> control navega al URI especificado y lo agrega al final de la lista del historial. Use el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para devolver el control a la página anterior del historial de navegación. Use el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para volver a una página posterior del historial de navegación después de navegar hacia atrás.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
 Puede usar el <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método para implementar una barra de direcciones similar a la de Internet Explorer.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método para implementar una barra de direcciones para el <xref:System.Windows.Forms.WebBrowser> control. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`, un <xref:System.Windows.Forms.TextBox> control denominado `TextBoxAddress`y un <xref:System.Windows.Forms.Button> control denominado `ButtonGo`. Cuando escriba una dirección URL en el cuadro de texto y presione ENTRAR o haga clic en el **vaya** botón, el <xref:System.Windows.Forms.WebBrowser> control se desplaza a la dirección URL especificada. Al navegar al hacer clic en un hipervínculo, el cuadro de texto se actualiza automáticamente para mostrar la dirección URL actual.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <exception cref="T:System.ArgumentException">El valor de parámetro <paramref name="url" /> no representa un URI absoluto. Para obtener más información, vea <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * bool -&gt; unit" Usage="webBrowser.Navigate (urlString, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">Dirección URL del documento que se va a cargar.</param>
        <param name="newWindow">Es <see langword="true" /> para cargar el documento en una nueva ventana del explorador; es <see langword="false" /> para cargar el documento en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
        <summary>Carga el documento del Localizador uniforme de recursos (URL) especificado en una nueva ventana del explorador o en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga con un `newWindow` valor del parámetro de `false`, el control navega al URI especificado con normalidad y agrega el URI al final de la lista del historial. Cuando se llama a esta sobrecarga con un `newWindow` valor del parámetro de `true`, el <xref:System.Windows.Forms.WebBrowser> control carga el documento en el URI especificado en una nueva ventana de Internet Explorer, que mantiene su propio historial de navegación. Puede controlar la <xref:System.Windows.Forms.WebBrowser.NewWindow> eventos para recibir notificaciones antes de que se abre una nueva ventana del explorador, lo que permite cancelar la acción, si es necesario.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página o cargue una página en otra ventana del explorador, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente. Cuando se carga una página en una ventana de Internet Explorer independiente, el usuario puede recuperar la versión más reciente, haga clic en el **actualizar** botón.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">Dirección URL del documento que se va a cargar.</param>
        <param name="targetFrameName">Nombre del marco en el que se carga el documento.</param>
        <summary>Carga el documento del Localizador uniforme de recursos (URL) especificado en el control <see cref="T:System.Windows.Forms.WebBrowser" /> y reemplaza el contenido del marco de la página web por el nombre especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga, el <xref:System.Windows.Forms.WebBrowser> control carga el documento en el URI especificado en el marco de página Web con el nombre especificado y agrega el URI al final de la lista del historial. Si el nombre del marco especificado no es válido, se carga el documento en una nueva ventana de Internet Explorer.  
  
 Use el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para devolver el control a la página anterior del historial de navegación. Use el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para volver a una página posterior del historial de navegación después de navegar hacia atrás.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * bool -&gt; unit" Usage="webBrowser.Navigate (url, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> que representa la dirección URL del documento que se va a cargar.</param>
        <param name="newWindow">Es <see langword="true" /> para cargar el documento en una nueva ventana del explorador; es <see langword="false" /> para cargar el documento en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
        <summary>Carga el documento de la ubicación indicada por el <see cref="T:System.Uri" /> especificado en una nueva ventana del explorador o en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga con un `newWindow` valor del parámetro de `false`, el control navega al URI especificado con normalidad y agrega el URI al final de la lista del historial. Cuando se llama a esta sobrecarga con un `newWindow` valor del parámetro de `true`, el <xref:System.Windows.Forms.WebBrowser> control carga el documento en el URI especificado en una nueva ventana de Internet Explorer, que mantiene su propio historial de navegación. Puede controlar la <xref:System.Windows.Forms.WebBrowser.NewWindow> eventos para recibir notificaciones antes de que se abre una nueva ventana del explorador, lo que permite cancelar la acción, si es necesario.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página o cargue una página en otra ventana del explorador, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente. Cuando se carga una página en una ventana de Internet Explorer independiente, el usuario puede recuperar la versión más reciente, haga clic en el **actualizar** botón.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <exception cref="T:System.ArgumentException">El valor de parámetro <paramref name="url" /> no representa un URI absoluto. Para obtener más información, vea <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> que representa la dirección URL del documento que se va a cargar.</param>
        <param name="targetFrameName">Nombre del marco en el que se carga el documento.</param>
        <summary>Carga el documento de la ubicación indicada por el <see cref="T:System.Uri" /> especificado en el control <see cref="T:System.Windows.Forms.WebBrowser" /> y reemplaza el contenido del marco de la página web por el nombre especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga, el <xref:System.Windows.Forms.WebBrowser> control carga el documento en el URI especificado en el marco de página Web con el nombre especificado y agrega el URI al final de la lista del historial. Si el nombre del marco especificado no es válido, se carga el documento en una nueva ventana de Internet Explorer.  
  
 Use el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para devolver el control a la página anterior del historial de navegación. Use el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para volver a una página posterior del historial de navegación después de navegar hacia atrás.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <exception cref="T:System.ArgumentException">El valor de parámetro <paramref name="url" /> no representa un URI absoluto. Para obtener más información, vea <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">Dirección URL del documento que se va a cargar.</param>
        <param name="targetFrameName">Nombre del marco en el que se carga el documento.</param>
        <param name="postData">Datos de HTTP POST, como los datos del formulario.</param>
        <param name="additionalHeaders">Encabezados de HTTP para agregar a los encabezados predeterminados.</param>
        <summary>Carga el documento del Localizador uniforme de recursos (URL) especificado en el control <see cref="T:System.Windows.Forms.WebBrowser" /> y solicita que use los datos HTTP especificados y que reemplace el contenido del marco de la página web por el nombre especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga, el <xref:System.Windows.Forms.WebBrowser> control carga el documento en el URI especificado en el marco de página Web con el nombre especificado y agrega el URI al final de la lista del historial. Si el nombre del marco especificado no es válido, se carga el documento en una nueva ventana de Internet Explorer.  
  
 Use el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para devolver el control a la página anterior del historial de navegación. Use el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para volver a una página posterior del historial de navegación después de navegar hacia atrás.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> que representa la dirección URL del documento que se va a cargar.</param>
        <param name="targetFrameName">Nombre del marco en el que se carga el documento.</param>
        <param name="postData">Datos de HTTP POST, como los datos del formulario.</param>
        <param name="additionalHeaders">Encabezados de HTTP para agregar a los encabezados predeterminados.</param>
        <summary>Carga el documento de la ubicación indicada por el <see cref="T:System.Uri" /> especificado en el control <see cref="T:System.Windows.Forms.WebBrowser" /> y solicita que use los datos HTTP especificados y que reemplace el contenido del marco de la página web por el nombre especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Cuando se llama a esta sobrecarga, el <xref:System.Windows.Forms.WebBrowser> control carga el documento en el URI especificado en el marco de página Web con el nombre especificado y agrega el URI al final de la lista del historial. Si el nombre del marco especificado no es válido, se carga el documento en una nueva ventana de Internet Explorer.  
  
 Use el <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para devolver el control a la página anterior del historial de navegación. Use el <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para volver a una página posterior del historial de navegación después de navegar hacia atrás.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <exception cref="T:System.ArgumentException">El valor de parámetro <paramref name="url" /> no representa un URI absoluto. Para obtener más información, vea <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As WebBrowserNavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " Usage="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el control <see cref="T:System.Windows.Forms.WebBrowser" /> navega hasta un nuevo documento y empieza a cargarlo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control se desplaza a un nuevo documento cada vez que se ha establecido uno de las siguientes propiedades o se llama a métodos:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Controlar la <xref:System.Windows.Forms.WebBrowser.Navigated> eventos para recibir una notificación cuando el <xref:System.Windows.Forms.WebBrowser> control ha navegado hasta un nuevo documento. Cuando el <xref:System.Windows.Forms.WebBrowser.Navigated> evento tiene lugar, el nuevo documento ha empezado a cargar, lo que significa que puede acceder al contenido cargado a través de la <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, y <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propiedades. Controlar la <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos para recibir una notificación cuando el <xref:System.Windows.Forms.WebBrowser> control termina de cargar el nuevo documento.  
  
 También puede recibir una notificación antes de que comienza la navegación controlando el <xref:System.Windows.Forms.WebBrowser.Navigating> eventos. Controle este evento permite cancelar la navegación si no se cumplen ciertas condiciones, por ejemplo, cuando el usuario no ha rellenado completamente un formulario.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un controlador para el <xref:System.Windows.Forms.WebBrowser.Navigated> evento para implementar una barra de direcciones para el <xref:System.Windows.Forms.WebBrowser> control. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`, un <xref:System.Windows.Forms.TextBox> control denominado `TextBoxAddress`y un <xref:System.Windows.Forms.Button> control denominado `ButtonGo`. Cuando escriba una dirección URL en el cuadro de texto y presione ENTRAR o haga clic en el **vaya** botón, el <xref:System.Windows.Forms.WebBrowser> control se desplaza a la dirección URL especificada. Al navegar al hacer clic en un hipervínculo, el cuadro de texto se actualiza automáticamente para mostrar la dirección URL actual.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As WebBrowserNavigatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatingEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " Usage="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de que el control <see cref="T:System.Windows.Forms.WebBrowser" /> navegue hasta un nuevo documento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control se desplaza a un nuevo documento cada vez que se ha establecido uno de las siguientes propiedades o se llama a métodos:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Puede controlar la <xref:System.Windows.Forms.WebBrowser.Navigating> evento para cancelar la navegación si no se cumplen ciertas condiciones, por ejemplo, cuando el usuario no ha rellenado completamente un formulario. Para cancelar la navegación, establezca la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs> objeto pasa al controlador de eventos para `true`. También puede utilizar este objeto para recuperar la dirección URL del documento nuevo mediante el <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=nameWithType> propiedad. Si se mostrará el nuevo documento en un marco de página Web, puede recuperar el nombre del marco mediante el <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=nameWithType> propiedad.  
  
 Controlar la <xref:System.Windows.Forms.WebBrowser.Navigated> eventos para recibir una notificación cuando el <xref:System.Windows.Forms.WebBrowser> control finalice la exploración y haya empezado a cargar el documento en la nueva ubicación. Controlar la <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos para recibir una notificación cuando el <xref:System.Windows.Forms.WebBrowser> control termina de cargar el nuevo documento.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un controlador para el <xref:System.Windows.Forms.WebBrowser.Navigating> evento para cancelar la navegación cuando un formulario de la página Web no se ha rellenado. El <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad se utiliza para determinar si el campo de entrada de formulario contiene un valor.  
  
 Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y que la clase de formulario tiene un <xref:System.Runtime.InteropServices.ComVisibleAttribute> hacerla accesible a COM.  
  
 Para obtener un ejemplo de código completo que puede pegar el código siguiente en, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler NewWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler NewWindow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Event NewWindow As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ NewWindow;" />
      <MemberSignature Language="F#" Value="member this.NewWindow : System.ComponentModel.CancelEventHandler " Usage="member this.NewWindow : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de que se abra una nueva ventana del explorador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control abre una ventana del explorador independiente cuando la sobrecarga adecuada del <xref:System.Windows.Forms.WebBrowser.Navigate%2A> se llama al método o cuando el usuario hace clic en el **abrir en nueva ventana** opción de menú contextual del explorador cuando el puntero del mouse Mantenga el mouse sobre un hipervínculo. El menú contextual se puede deshabilitar estableciendo la <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propiedad en false.  
  
 El <xref:System.Windows.Forms.WebBrowser.NewWindow> evento tiene lugar antes de abre la nueva ventana del explorador. Puede controlar este evento, por ejemplo, para evitar que la ventana de apertura cuando no se cumplen ciertas condiciones.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.WebBrowser.NewWindow> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.WebBrowser> denominado `WebBrowser1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.WebBrowser.NewWindow> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#651](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#651)]
 [!code-vb[System.Windows.Forms.EventExamples#651](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#651)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectForScripting : obj with get, set" Usage="System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto al que se puede acceder mediante código de scripting incluido en una página web que se muestra en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>El objeto disponible para el código de scripting.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para habilitar la comunicación entre una página Web hospedada por el <xref:System.Windows.Forms.WebBrowser> control y la aplicación que contiene el <xref:System.Windows.Forms.WebBrowser> control. Esta propiedad le permite integrar el código HTML (DHTML) dinámico con el código de aplicación cliente. El objeto especificado para esta propiedad está disponible para script de página Web como la `window.external` objeto, que es un objeto DOM integrado proporcionado para el acceso de host.  
  
 Puede establecer esta propiedad para cualquier objeto visible para COM para el que desea que sus propiedades y métodos públicos disponibles para el código de secuencias de comandos. Puede realizar una clase visible para COM marcándolo con el <xref:System.Runtime.InteropServices.ComVisibleAttribute>.  
  
 Para llamar a funciones definidas en la página Web desde el código de aplicación de cliente, use el <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> método de la <xref:System.Windows.Forms.HtmlDocument> objeto puede recuperarse la <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propiedad. En el ejemplo, el <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propiedad está establecida en el formulario actual.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor especificado al establecer esta propiedad es una instancia de un tipo no público.  
  
O bien 
El valor especificado al establecer esta propiedad es una instancia de un tipo que no es visible a través de COM. Para obtener más información, vea <see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoBackChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoBackChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoBackChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoBackChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoBackChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoBackChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoBackChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoBackChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnCanGoBackChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoForwardChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoForwardChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoForwardChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoForwardChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoForwardChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoForwardChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoForwardChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoForwardChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentCompleted(class System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentCompleted (e As WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentCompleted(System::Windows::Forms::WebBrowserDocumentCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit&#xA;override this.OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit" Usage="webBrowser.OnDocumentCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnDocumentCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTitleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTitleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentTitleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentTitleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentTitleChanged : EventArgs -&gt; unit&#xA;override this.OnDocumentTitleChanged : EventArgs -&gt; unit" Usage="webBrowser.OnDocumentTitleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnEncryptionLevelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEncryptionLevelChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEncryptionLevelChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEncryptionLevelChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEncryptionLevelChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEncryptionLevelChanged : EventArgs -&gt; unit&#xA;override this.OnEncryptionLevelChanged : EventArgs -&gt; unit" Usage="webBrowser.OnEncryptionLevelChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFileDownload">
      <MemberSignature Language="C#" Value="protected virtual void OnFileDownload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFileDownload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFileDownload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFileDownload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFileDownload : EventArgs -&gt; unit&#xA;override this.OnFileDownload : EventArgs -&gt; unit" Usage="webBrowser.OnFileDownload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnFileDownload%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.FileDownload" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Forms.WebBrowserNavigatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Forms::WebBrowserNavigatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit&#xA;override this.OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit" Usage="webBrowser.OnNavigated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.Navigated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnNavigated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Forms.WebBrowserNavigatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Forms::WebBrowserNavigatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit&#xA;override this.OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit" Usage="webBrowser.OnNavigating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.Navigating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnNavigating%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNewWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewWindow(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewWindow (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewWindow(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="webBrowser.OnNewWindow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnNewWindow%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.Windows.Forms.WebBrowserProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::Windows::Forms::WebBrowserProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit" Usage="webBrowser.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnProgressChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStatusTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStatusTextChanged : EventArgs -&gt; unit&#xA;override this.OnStatusTextChanged : EventArgs -&gt; unit" Usage="webBrowser.OnStatusTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Windows.Forms.WebBrowser.OnStatusTextChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.WebBrowser.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no es significativa para este control.</summary>
        <value><see cref="F:System.Windows.Forms.Padding.Empty" /></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.WebBrowser.Padding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque puede obtener o establecer el valor de la <xref:System.Windows.Forms.WebBrowser.Padding%2A> propiedad y responder a los cambios al controlar este evento, la propiedad de relleno no es significativa para este control.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Padding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="webBrowser.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imprime el documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" /> usando la configuración de impresora y de página actuales.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **impresión** botón similar a la de Internet Explorer. Este método imprime el documento actual sin requerir aún más la intervención del usuario. Para mostrar el **impresión** cuadro de diálogo antes de la impresión, use el <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método. Para mostrar el **Configurar página** cuadro de diálogo que permite a los usuarios especificar el encabezado y los valores de pie de página y otras opciones de página, utilice el <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método. Para mostrar el **vista previa de impresión** cuadro de diálogo, use el <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.Print%2A> método para implementar un **impresión** botón el <xref:System.Windows.Forms.WebBrowser> control que es similar a la **impresión** botón en Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonPrint`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.WebBrowser#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Para obtener acceso a la impresora a través de este método. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeración asociada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ProgressChanged As WebBrowserProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " Usage="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el control <see cref="T:System.Windows.Forms.WebBrowser" /> actualiza la información sobre el progreso de la descarga de un documento al que está navegando.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar un controlador para este evento para implementar una barra de progreso de la navegación similar a la de Internet Explorer. Use el <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=nameWithType> propiedad para determinar el número de bytes que se han descargado correctamente. Use el <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=nameWithType> propiedad para determinar el número total de bytes disponible para descargar.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.WebBrowser.ProgressChanged> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.WebBrowser> denominado `WebBrowser1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.WebBrowser.ProgressChanged> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#652](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#652)]
 [!code-vb[System.Windows.Forms.EventExamples#652](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#652)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ReadyState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserReadyState ReadyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadyState As WebBrowserReadyState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserReadyState ReadyState { System::Windows::Forms::WebBrowserReadyState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadyState : System.Windows.Forms.WebBrowserReadyState" Usage="System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserReadyState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica el estado actual del control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.WebBrowserReadyState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> propiedad para recuperar el estado específico de la <xref:System.Windows.Forms.WebBrowser> controlar cuando necesite más información que el <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> proporciona la propiedad.  
  
 Cuando el <xref:System.Windows.Forms.WebBrowser> control no contiene un documento, el valor de esta propiedad es <xref:System.Windows.Forms.WebBrowserReadyState.Uninitialized?displayProperty=nameWithType>. Otros valores indican el estado del control cuando navega a un nuevo documento. Estos valores incluyen <xref:System.Windows.Forms.WebBrowserReadyState.Loading?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Loaded?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Interactive?displayProperty=nameWithType>, y <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsBusy" />
        <altmember cref="T:System.Windows.Forms.WebBrowserReadyState" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vuelve a cargar el documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="webBrowser.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vuelve a cargar el documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" />; para ello, busca una versión actualizada en el servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. El <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método fuerza la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente. Puede utilizar este método para implementar un **actualizar** botón similar a la de Internet Explorer.  
  
> [!NOTE]
>  Una actualización del documento simplemente vuelve a cargar la página actual, por lo que la <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, y <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos no se producen cuando se llama a la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para implementar un **actualizar** botón el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonRefresh`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.WebBrowser#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Windows.Forms.WebBrowserRefreshOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (opt As WebBrowserRefreshOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Windows::Forms::WebBrowserRefreshOption opt);" />
      <MemberSignature Language="F#" Value="override this.Refresh : System.Windows.Forms.WebBrowserRefreshOption -&gt; unit" Usage="webBrowser.Refresh opt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opt" Type="System.Windows.Forms.WebBrowserRefreshOption" />
      </Parameters>
      <Docs>
        <param name="opt">Uno de los valores de <see cref="T:System.Windows.Forms.WebBrowserRefreshOption" />.</param>
        <summary>Vuelve a cargar el documento que se muestra actualmente en el control <see cref="T:System.Windows.Forms.WebBrowser" /> mediante las opciones de actualización especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web visitadas recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. El <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método fuerza la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual. El tipo de recarga depende el <xref:System.Windows.Forms.WebBrowserRefreshOption> valor especificado. Si se llama a la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método con el <xref:System.Windows.Forms.WebBrowserRefreshOption.Completely?displayProperty=nameWithType> se descarga el valor de la versión más reciente del documento. Si usas el <xref:System.Windows.Forms.WebBrowserRefreshOption.IfExpired?displayProperty=nameWithType> valor, la versión más reciente se descarga solo si ha expirado el documento actual. Si usas el <xref:System.Windows.Forms.WebBrowserRefreshOption.Normal?displayProperty=nameWithType> valor, el servidor envía una copia del documento almacenado en su propia memoria caché.  
  
> [!NOTE]
>  Una actualización del documento simplemente vuelve a cargar la página actual, por lo que la <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, y <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos no se producen cuando se llama a la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="ScriptErrorsSuppressed">
      <MemberSignature Language="C#" Value="public bool ScriptErrorsSuppressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptErrorsSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptErrorsSuppressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptErrorsSuppressed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptErrorsSuppressed : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Windows.Forms.WebBrowser" /> muestra cuadros de diálogo, como los mensajes de error de script.</summary>
        <value>Es <see langword="true" /> si el control no muestra cuadros de diálogo; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en `false` depurar páginas Web que se muestran en el <xref:System.Windows.Forms.WebBrowser> control. Esto es útil cuando se usa el control para agregar controles basados en Web y código de scripting a la aplicación. Es menos útil cuando se usa el control como explorador genérico. Cuando haya terminado de depurar la aplicación, establezca esta propiedad en `true` para suprimir errores de script.  
  
> [!NOTE]
>  Cuando <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> está establecido en `true`, el <xref:System.Windows.Forms.WebBrowser> control oculta todos los cuadros de diálogo que se originan en el control ActiveX subyacente, no solo errores de secuencia de comandos. En ocasiones, es posible que deba suprimir errores de script al mostrar cuadros de diálogo tales como las usadas para el inicio de sesión de usuario y la configuración de seguridad del explorador. En este caso, establezca <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> a `false` y suprimir los errores de script en un controlador para el <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> eventos. Para obtener más información, vea el ejemplo de código en este tema.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo suprimir errores de script sin suprimir otros cuadros de diálogo. En el ejemplo, el <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> propiedad está establecida en `false` para asegurarse de que se muestran cuadros de diálogo. Un controlador para el <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> evento suprime el error. Este evento solo es accesible cuando finaliza un documento de carga, por lo que está asociado el controlador en un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> controlador de eventos.  
  
 [!code-csharp[WebBrowserMisc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#40)]
 [!code-vb[WebBrowserMisc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la [interfaz IWebBrowser2](https://go.microsoft.com/fwlink/?LinkId=151479) no se puede recuperar del [control WebBrowser](https://go.microsoft.com/fwlink/?LinkId=151478) ActiveX subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarsEnabled">
      <MemberSignature Language="C#" Value="public bool ScrollBarsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollBarsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBarsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollBarsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBarsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si las barras de desplazamiento se muestran en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see langword="true" /> si las barras de desplazamiento se muestran en el control; en caso contrario, <see langword="false" />. El valor predeterminado es true.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de esta propiedad es `true`, barras de desplazamiento se muestran únicamente cuando el contenido de la página es mayor que la ventana del explorador.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowPageSetupDialog">
      <MemberSignature Language="C#" Value="public void ShowPageSetupDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPageSetupDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPageSetupDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPageSetupDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPageSetupDialog : unit -&gt; unit" Usage="webBrowser.ShowPageSetupDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre el cuadro de diálogo **Configurar página** de Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **Configurar página** elemento de menú similar a la de Internet Explorer **archivo** menú. Este método muestra el **Configurar página** cuadro de diálogo que permite a los usuarios especificar valores de encabezado y pie de página y otras opciones de página antes de imprimir. Para imprimir el documento actual, utilice el <xref:System.Windows.Forms.WebBrowser.Print%2A> método o la <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método. Para mostrar el **vista previa de impresión** cuadro de diálogo, use el <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método para implementar un **Configurar página** opción de menú que es similar a la de Internet Explorer **archivo** menú. Este ejemplo requiere que el formulario contenga un menú con un elemento denominado `MenuItemFilePageSetup` y un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Para obtener acceso a la impresora a través de este método. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeración asociada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre el cuadro de diálogo **Imprimir** de Internet Explorer sin establecer los valores de encabezado y pie de página.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **impresión** elemento de menú similar a la de Internet Explorer **archivo** menú. Este método muestra el **imprimir** cuadro de diálogo, permitir que los usuarios modificar la configuración de impresión antes de imprimir. Para permitir que los usuarios especificar la configuración de página antes de la impresión, utilice el <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método. Para mostrar el **vista previa de impresión** cuadro de diálogo, use el <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método para implementar un **impresión** opción de menú que es similar a la de Internet Explorer **archivo** menú. Este ejemplo requiere que el formulario contenga un menú con un elemento denominado `MenuItemFilePrint` y un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Para obtener acceso a la impresora a través de este método. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeración asociada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintPreviewDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintPreviewDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintPreviewDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintPreviewDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintPreviewDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintPreviewDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintPreviewDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre el cuadro de diálogo **Vista previa de impresión** de Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **vista previa de impresión** elemento de menú similar a la de Internet Explorer **archivo** menú. Este método muestra el **vista previa de impresión** cuadro de diálogo, permitir a los usuarios ver cómo aparecerá el documento actual si se imprime. Para permitir que los usuarios especificar la configuración de página antes de la impresión, utilice el <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método. Para imprimir el documento actual, utilice el <xref:System.Windows.Forms.WebBrowser.Print%2A> método o la <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método para implementar un **vista previa de impresión** opción de menú similar a la de Internet Explorer **archivo** menú. Este ejemplo requiere que el formulario contenga un menú con un elemento denominado `MenuItemFilePrintPreview`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.WebBrowser#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Para obtener acceso a la impresora a través de este método. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeración asociada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPropertiesDialog">
      <MemberSignature Language="C#" Value="public void ShowPropertiesDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertiesDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPropertiesDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPropertiesDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPropertiesDialog : unit -&gt; unit" Usage="webBrowser.ShowPropertiesDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre el cuadro de diálogo **Propiedades** de Internet Explorer del documento actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **propiedades** opción de menú similar a la de Internet Explorer **archivo** menú. Este método muestra el **propiedades** cuadro de diálogo que contiene información sobre el documento actual, como su tipo, dirección URL, tamaño y las fechas de creación y modificación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.ShowPropertiesDialog%2A> método para implementar un **propiedades** opción de menú que es similar a la de Internet Explorer **archivo** menú. Este ejemplo requiere que el formulario contenga un menú con un elemento denominado `MenuItemFileProperties` y un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.WebBrowser#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowSaveAsDialog">
      <MemberSignature Language="C#" Value="public void ShowSaveAsDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSaveAsDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowSaveAsDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowSaveAsDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowSaveAsDialog : unit -&gt; unit" Usage="webBrowser.ShowSaveAsDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre el cuadro de diálogo **Guardar página web** de Internet Explorer o el cuadro de diálogo **Guardar** del documento hospedado si no es una página HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para implementar un **Guardar como** elemento de menú similar a la de Internet Explorer **archivo** menú. El cuadro de diálogo que aparece cuando se llama a este método depende del tipo de documento cargado actualmente.  
  
> [!NOTE]
>  Este método permite a los usuarios guardar solo el contenido del documento a medida que se cargó originalmente. Cualquier modificación realizada en el documento en tiempo de ejecución a través de la <xref:System.Windows.Forms.WebBrowser.Document%2A> propiedad no se conservan. Para obtener información sobre cómo recuperar las modificaciones en tiempo de ejecución, vea [Cómo: Obtener acceso al origen de HTML en el modelo de objetos de documento HTML administrado](~/docs/framework/winforms/controls/how-to-access-the-html-source-in-the-managed-html-document-object-model.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> método para implementar un **Guardar como** opción de menú que es similar a la de Internet Explorer **archivo** menú. Este ejemplo requiere que el formulario contenga un menú con un elemento denominado `MenuItemFileSaveAs` y un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Para obtener acceso a la impresora a través de este método. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeración asociada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
      </Docs>
    </Member>
    <Member MemberName="StatusText">
      <MemberSignature Language="C#" Value="public virtual string StatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.StatusText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StatusText : string" Usage="System.Windows.Forms.WebBrowser.StatusText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el texto de estado del control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>El texto del estado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para mostrar el estado de la <xref:System.Windows.Forms.WebBrowser> control en una barra de estado. El texto de estado es un mensaje que contiene información como la dirección URL de un hipervínculo cuando el puntero del mouse se desplaza sobre él y la dirección URL del documento cargado actualmente. Controlar la <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> barra de eventos para actualizar el estado cuando el valor de la <xref:System.Windows.Forms.WebBrowser.StatusText%2A> los cambios de propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.StatusText%2A> propiedad para implementar una barra de estado para el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.StatusBar> control denominado `StatusBar1`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="StatusTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusTextChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusTextChanged : EventHandler " Usage="member this.StatusTextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.WebBrowser.StatusText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificador de este evento para actualizar el estado de un barra cuando el valor de la <xref:System.Windows.Forms.WebBrowser.StatusText%2A> los cambios de propiedad.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un controlador para el <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> evento para implementar una barra de estado para el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.StatusBar> control denominado `StatusBar1`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="webBrowser.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela cualquier navegación pendiente y detiene los elementos dinámicos de la página, como sonidos de fondo y animación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Windows.Forms.WebBrowser.Stop%2A> método para implementar un **detener** botón similar a la de Internet Explorer.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.Stop%2A> método para implementar un **detener** botón el <xref:System.Windows.Forms.WebBrowser> control similar a la de Internet Explorer. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1` y un <xref:System.Windows.Forms.Button> control denominado `ButtonStop`.  
  
 El ejemplo de código completo, vea [Cómo: Agregar funciones de explorador Web a una aplicación de Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.WebBrowser#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri with get, set" Usage="System.Windows.Forms.WebBrowser.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL del documento actual.</summary>
        <value><see cref="T:System.Uri" /> que representa la dirección URL del documento actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer esta propiedad equivale a llamar a la <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método y pasando la dirección URL especificada.  
  
 El <xref:System.Windows.Forms.WebBrowser> control mantiene una lista de historial de todas las páginas Web visitadas durante una sesión de exploración. Al establecer el <xref:System.Windows.Forms.WebBrowser.Url%2A> propiedad, el <xref:System.Windows.Forms.WebBrowser> control navega a la dirección URL especificada y lo agrega al final de la lista del historial.  
  
 El <xref:System.Windows.Forms.WebBrowser> control almacena páginas Web desde los sitios visitados recientemente en una caché en el disco duro local. Cada página puede especificar una fecha de expiración que indica cuánto tiempo permanecerá en la memoria caché. Cuando el control navega a una página, ahorra tiempo muestra una versión almacenada en caché, si está disponible, en lugar de volver a descargar la página. Use la <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forzar la <xref:System.Windows.Forms.WebBrowser> control para volver a cargar la página actual mediante la descarga, lo que garantiza que el control muestra la versión más reciente.  
  
> [!NOTE]
>  Esta propiedad contiene la dirección URL del documento actual, incluso si se ha solicitado otro documento. Si se establece el valor de esta propiedad y, a continuación, inmediatamente recuperarlo de nuevo, el valor recuperado puede ser diferente del valor establecido si el <xref:System.Windows.Forms.WebBrowser> control no tiene tiempo para cargar el nuevo documento. Puede recuperar el nuevo valor en un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> controlador de eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.Url%2A> propiedad para implementar una barra de direcciones para el <xref:System.Windows.Forms.WebBrowser> control. Este ejemplo requiere que el formulario contenga un <xref:System.Windows.Forms.WebBrowser> control denominado `webBrowser1`, un <xref:System.Windows.Forms.TextBox> control denominado `TextBoxAddress`y un <xref:System.Windows.Forms.Button> control denominado `ButtonGo`. Cuando escriba una dirección URL en el cuadro de texto y presione ENTRAR o haga clic en el **vaya** botón, el <xref:System.Windows.Forms.WebBrowser> control se desplaza a la dirección URL especificada. Al navegar al hacer clic en un hipervínculo, el cuadro de texto se actualiza automáticamente para mostrar la dirección URL actual.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Esta instancia de <see cref="T:System.Windows.Forms.WebBrowser" /> ya no es válida.</exception>
        <exception cref="T:System.InvalidOperationException">Una referencia a una implementación de la interfaz <see langword="IWebBrowser2" /> no se pudo recuperar del control ActiveX <see langword="WebBrowser" /> subyacente.</exception>
        <exception cref="T:System.ArgumentException">El valor especificado al establecer esta propiedad no es un URI absoluto. Para obtener más información, vea <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser (Control)</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">Interfaz IWebBrowser2</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Windows.Forms.WebBrowser.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión instalada de Internet Explorer.</summary>
        <value>Objeto <see cref="T:System.Version" /> que representa la versión instalada de Internet Explorer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.WebBrowser> control es un contenedor administrado alrededor de un componente instalado con Internet Explorer. Utilice esta propiedad para determinar qué versión de Internet Explorer está instalada. Esto es útil cuando la aplicación utiliza una característica de Internet Explorer que se encuentra solo en determinadas versiones. Si la versión requerida no está presente en el equipo local, puede proporcionar funcionalidad alternativa o pedir al usuario que actualice.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowserShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool WebBrowserShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebBrowserShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property WebBrowserShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebBrowserShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowserShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los métodos abreviados de teclado están habilitados en el control <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Es <see langword="true" /> si los métodos abreviados de teclado se habilitan en el control; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en false para impedir que los usuarios utilizando los métodos abreviados de teclado de Internet Explorer con el <xref:System.Windows.Forms.WebBrowser> control. Esto es útil cuando desee ocultar el hecho de que está usando el <xref:System.Windows.Forms.WebBrowser> control, por ejemplo, para crear una interfaz de usuario que combine perfectamente los controles basados en DHTML con controles de formularios Windows Forms.  
  
 Otras características de explorador estándar se pueden deshabilitar estableciendo la <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> y <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propiedades a `false`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> propiedad.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para que los llamadores inmediatos puede usar este control. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permisos con nombre](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="webBrowser.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><see cref="T:System.Windows.Forms.Message" /> de Windows que se va a procesar.</param>
        <summary>Procesa los mensajes de Windows.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>