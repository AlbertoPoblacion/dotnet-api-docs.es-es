<Type Name="DomainUpDown+DomainUpDownItemCollection" FullName="System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9566452abe16014a03c0cc2fca4d08d7b22740e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638959" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DomainUpDown.DomainUpDownItemCollection : System.Collections.ArrayList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DomainUpDown/DomainUpDownItemCollection extends System.Collections.ArrayList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DomainUpDown.DomainUpDownItemCollection&#xA;Inherits ArrayList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class DomainUpDown::DomainUpDownItemCollection : System::Collections::ArrayList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ArrayList</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Encapsula una colección de objetos para su uso en la clase <see cref="T:System.Windows.Forms.DomainUpDown" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear una colección de objetos que se mostrarán en el <xref:System.Windows.Forms.DomainUpDown> (control), puede agregar o quitar los elementos por separado mediante el <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> y <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> métodos. Se tiene acceso a la colección desde el control primario, <xref:System.Windows.Forms.DomainUpDown>, por el <xref:System.Windows.Forms.DomainUpDown.Items%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea e inicializa un <xref:System.Windows.Forms.DomainUpDown> control. El ejemplo permite establecer algunas de sus propiedades y crear una colección de cadenas para mostrar en el control de flechas. El código supone que un <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox> y <xref:System.Windows.Forms.Button> se han creado instancias en un formulario. El ejemplo también se supone que tiene una variable miembro en el nivel de clase declarada como un entero de 32 bits con signo denominado `myCounter`. Puede escribir una cadena en el cuadro de texto y agregarlo a la <xref:System.Windows.Forms.DomainUpDown.Items%2A> colección cuando se hace clic en el botón. Haciendo clic en la casilla de verificación, puede activar o desactivar el <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> propiedad y observar la diferencia en la colección de elementos en el control de flechas.  
  
 [!code-cpp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Add(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Object" /> que se va a agregar al final de la colección.</param>
        <summary>Agrega el objeto especificado al final de la colección.</summary>
        <returns>Valor de índice de base cero del <see cref="T:System.Object" /> agregado a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 También puede agregar un nuevo <xref:System.Object> a la colección utilizando la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> método.  
  
 Para quitar un <xref:System.Object> que agregó anteriormente, use la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> métodos.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea e inicializa un <xref:System.Windows.Forms.DomainUpDown> control. El ejemplo permite establecer algunas de sus propiedades y crear una colección de cadenas para mostrar en el control de flechas. El código supone que un <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox> y <xref:System.Windows.Forms.Button> se han creado instancias en un formulario. El ejemplo también se supone que tiene una variable miembro en el nivel de clase declarada como un entero de 32 bits con signo denominado `myCounter`. Puede escribir una cadena en el cuadro de texto y agregarlo a la <xref:System.Windows.Forms.DomainUpDown.Items%2A> colección cuando se hace clic en el botón. Haciendo clic en la casilla de verificación, puede activar o desactivar el <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> propiedad y observar la diferencia en la colección de elementos en el control de flechas.  
  
 [!code-cpp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public override void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Insert(int index, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación indizada en la colección donde se va a insertar el <see cref="T:System.Object" />.</param>
        <param name="item">
          <see cref="T:System.Object" /> que se va a insertar.</param>
        <summary>Inserta el objeto especificado en la colección en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 También puede agregar un nuevo <xref:System.Object> a la colección utilizando la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> método.  
  
 Para quitar un <xref:System.Object> que agregó anteriormente, use la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación indizada del elemento en la colección.</param>
        <summary>Obtiene o establece el elemento en la ubicación indizada especificada en la colección.</summary>
        <value>
          <see cref="T:System.Object" /> que representa el elemento en la ubicación indizada especificada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para asignar elementos a una ubicación específica o para recuperarlos desde el <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection>, hacer referencia al objeto de colección con un valor de índice específico. El valor de índice de la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection> es un índice de base cero.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Object" /> que se va a quitar de la colección.</param>
        <summary>Quita el elemento especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 También puede quitar un <xref:System.Object> que ha agregado anteriormente mediante el uso de la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> método.  
  
 Para agregar un nuevo <xref:System.Object> a la colección, utilice el <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">Ubicación indizada del control <see cref="T:System.Object" /> en la colección.</param>
        <summary>Quita el elemento de la ubicación especificada en la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 También puede quitar un <xref:System.Object> que ha agregado anteriormente mediante el uso de la <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> método.  
  
 Para agregar un nuevo <xref:System.Object> a la colección, utilice el <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>