<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ControlStyles.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc33f394b9675cc633b116b6039a1f3d0d639c2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc33f394b9675cc633b116b6039a1f3d0d639c2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ControlStyles">
          <source>Specifies the style and behavior of a control.</source>
          <target state="translated">Especifica el estilo y comportamiento de un control.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Controls use this enumeration in various properties and methods to specify functionality.</source>
          <target state="translated">Controles utilizan esta enumeración en diferentes propiedades y métodos para especificar la funcionalidad.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">Un control puede habilitar un estilo llamando a la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> método y pasando la correspondiente <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bits (o bits) y el valor booleano para establecer los bits.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For example, the following line of Visual Basic code would enable double-buffering.</source>
          <target state="translated">Por ejemplo, la siguiente línea de código de Visual Basic habilitaría doble búfer.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the AllPaintingInWmPaint bit is set to <ph id="ph1">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> methods are called directly from the window message WM_PAINT.</source>
          <target state="translated">Si se establece el bit AllPaintingInWmPaint en <ph id="ph1">`true`</ph>, el mensaje de ventana WM_ERASEBKGND se pasa por alto y ambos <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> métodos se llaman directamente desde el mensaje de ventana WM_PAINT.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</source>
          <target state="translated">Normalmente, esto reduce el parpadeo a menos que otros controles de envían el mensaje de ventana WM_ERASEBKGND al control.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> with flat appearance does this.</source>
          <target state="translated">Puede enviar el mensaje de ventana WM_ERASEBKGRND para lograr un efecto similar a SupportsTransparentBackColor; Por ejemplo, un <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> con apariencia plana para ello.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Para habilitar completamente el búfer doble, puede establecer los bits OptimizedDoubleBuffer y AllPaintingInWmPaint en <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However the preferred method for enabling double buffering, which yields the same result, is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> property for the control to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Sin embargo es el método preferido para habilitar el almacenamiento en búfer doble, que produce el mismo resultado establecer el <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> propiedad para el control a <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If the SupportsTransparentBackColor bit is set to <ph id="ph1">`true`</ph>, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> is set to a color whose alpha component is less than 255, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> will simulate transparency by asking its parent control to paint the background.</source>
          <target state="translated">Si se establece el bit SupportsTransparentBackColor en <ph id="ph1">`true`</ph>y el <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> se establece en un color cuyo componente alfa es menor que 255, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> simulará la transparencia pidiendo a su control principal para pintar el fondo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This is not true transparency.</source>
          <target state="translated">Esto no es una transparencia real.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>If there is another control between the control and its parent, the current control will not show the control in the middle.</source>
          <target state="translated">Si hay otro control entre el control y su elemento primario, el control actual no mostrará el control en la parte central.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UserMouse bit is set to <ph id="ph1">`true`</ph>, the following methods are still called: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cuando se establece el bit de UserMouse en <ph id="ph1">`true`</ph>, se sigue llamando a los métodos siguientes: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType&gt;</ph>, y <ph id="ph8">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is clicked, if the StandardClick bit is set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Cuando se selecciona el control, si se establece el bit StandardClick en <ph id="ph1">`true`</ph> el <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType&gt;</ph> se llama al método y genera el <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id="ph1">`true`</ph>, the click is passed on to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated">Cuando se hace doble clic en el control y la StandardClick y StandardDoubleClick bits se establecen en <ph id="ph1">`true`</ph>, haga clic en se pasa a la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Then the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph> method is called and it raises the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType&gt;</ph> se llama al método y genera el <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>However, the control can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> directly regardless of the StandardClick and StandardDoubleClick bit values.</source>
          <target state="translated">Sin embargo, el control puede llamar a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> directamente sin tener en cuenta la StandardClick y StandardDoubleClick valores de bit.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>For more information on control click and double click behaviors, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">Para obtener más información sobre el control, haga clic en y haga doble clic en comportamientos, consulte la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType&gt;</ph> temas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>When the UseTextForAccessibility bit is set and there is a value in the control's <ph id="ph1">`Text`</ph> property, the value of that control's <ph id="ph2">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">Cuando se establece el bit UseTextForAccessibility y hay un valor en el control <ph id="ph1">`Text`</ph> propiedad, el valor de ese control <ph id="ph2">`Text`</ph> propiedad determina predeterminado Active Accessibility nombre y método abreviado de la clave del control.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Otherwise, the text of the preceding <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> control will be used instead.</source>
          <target state="translated">En caso contrario, el texto de los anteriores <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> se va a utilizar en su lugar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>This style is set by default.</source>
          <target state="translated">Este estilo se establece de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Certain built-in control types, such as <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, reset this style so that the <ph id="ph3">`Text`</ph> property of those controls will not be used by Active Accessibility.</source>
          <target state="translated">Tipos de cierto control integrado, como <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, restablecen este estilo para que la <ph id="ph3">`Text`</ph> Active Accessibility no usará la propiedad de los controles.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>The following example demonstrates a use of <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">En el ejemplo siguiente se muestra un uso de <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> con el <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ControlStyles">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph> bit values to <ph id="ph3">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or can have no effect at all if the control does not support the <ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">Heredar de un control de formularios Windows Forms estándar y cambiar la <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /&gt;</ph> valores de bits <ph id="ph3">&lt;see langword="true" /&gt;</ph> puede provocar un comportamiento inesperado o no puede tener ningún efecto en absoluto si el control no admite la <ph id="ph4">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> o <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control ignores the window message WM_ERASEBKGND to reduce flicker.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control ignora el mensaje de ventana WM_ERASEBKGND para reducir el parpadeo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
          <source>This style should only be applied if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Este estilo solo debe aplicarse si el bit <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> se establece en <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control keeps a copy of the text rather than getting it from the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> each time it is needed.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control mantiene una copia del texto en lugar de obtenerlo desde <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> cada vez que se necesita.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado de este estilo es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.CacheText">
          <source>This behavior improves performance, but makes it difficult to keep the text synchronized.</source>
          <target state="translated">Este comportamiento mejora el rendimiento, pero es difícil mantener el texto sincronizado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ContainerControl">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is a container-like control.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control es un control similar a un contenedor.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, drawing is performed in a buffer, and after it completes, the result is output to the screen.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, se realiza el dibujo en un búfer y, después de que finalice, el resultado aparece en la pantalla.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>Double-buffering prevents flicker caused by the redrawing of the control.</source>
          <target state="translated">El doble búfer evita que se produzca un parpadeo como consecuencia de volver a dibujar el control.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
          <source>If you set <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, you should also set <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> and <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si establece <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /&gt;</ph> en <ph id="ph2">&lt;see langword="true" /&gt;</ph>, también debe establecer <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> y <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> en <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is called for every message sent to the control's <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, se llama al método <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> para cada mensaje enviado al <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> del control.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source>This style defaults to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado de este estilo es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> does not work in partial trust.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /&gt;</ph> no funciona en confianza parcial.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed height when auto-scaled.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control tiene un alto fijo cuando se ajusta la escala automática.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedHeight">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> remains unchanged.</source>
          <target state="translated">Por ejemplo, si una operación de diseño intercambia la escala del control para dar cabida a un nuevo <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, el <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> del control permanece sin cambios.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control has a fixed width when auto-scaled.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control tiene un ancho fijo cuando se ajusta la escala automática.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.FixedWidth">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> remains unchanged.</source>
          <target state="translated">Por ejemplo, si una operación de diseño intercambia la escala del control para dar cabida a un nuevo <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>, el <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> del control permanece sin cambios.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Opaque">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is drawn opaque and the background is not painted.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control se dibuja opaco y no se pinta el fondo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control se dibuja primero en un búfer, en lugar de directamente en la pantalla, lo que puede reducir el parpadeo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
          <source>If you set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, you should also set the <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si establece esta propiedad en <ph id="ph1">&lt;see langword="true" /&gt;</ph>, también debe establecer <ph id="ph2">&lt;see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.ResizeRedraw">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control is redrawn when it is resized.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control se vuelve a dibujar cuando se cambia el tamaño.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.Selectable">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control can receive focus.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control puede recibir el foco.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> behavior.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control implementa el comportamiento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> estándar.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control implements the standard <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> behavior.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control implementa el comportamiento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> estándar.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
          <source>This style is ignored if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> bit is not set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Este estilo se omite si el bit <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /&gt;</ph> no está establecido en <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control accepts a <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> with an alpha component of less than 255 to simulate transparency.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control acepta un <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> con un componente alfa menor de 255 para simular una transparencia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
          <source>Transparency will be simulated only if the <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the parent control is derived from <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">La transparencia solo se simulará si el bit <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /&gt;</ph> se establece en <ph id="ph2">&lt;see langword="true" /&gt;</ph> y el control primario deriva de <ph id="ph3">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserMouse">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control does its own mouse processing, and mouse events are not handled by the operating system.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control realiza su propio procesamiento de mouse y el sistema operativo no controla los eventos de mouse.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the control paints itself rather than the operating system doing so.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el control es el que dibuja en vez de hacerlo el sistema operativo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event is not raised.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, no se provoca el evento <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UserPaint">
          <source>This style only applies to classes derived from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated">Este estilo solo se aplica a las clases derivadas de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility">
          <source>Specifies that the value of the control's <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> property, if set, determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">Especifica que el valor de la propiedad <bpt id="p1">&lt;c&gt;</bpt>Text<ept id="p1">&lt;/c&gt;</ept> del control, si se ha establecido, determina el nombre de Active Accessibility y el método abreviado de teclado predeterminado del control.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>