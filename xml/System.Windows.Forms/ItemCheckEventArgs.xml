<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95d38d704635ffcb44d892a7374ac97b0f1a9756" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37567881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ItemCheckEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> de los controles <see cref="T:System.Windows.Forms.CheckedListBox" /> y <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.CheckedListBox.ItemCheck> evento se produce cuando cambia el estado activado de un elemento en un cuadro de lista activado. La <xref:System.Windows.Forms.ItemCheckEventArgs> clase especifica el índice del elemento para el cambio, el valor actual de la casilla de verificación para el elemento y el nuevo valor para establecer para la casilla de verificación.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 El código siguiente muestra un activado <xref:System.Windows.Forms.ListView> control que administra el <xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType> eventos. El método usa la <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> y <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> propiedades de la <xref:System.Windows.Forms.ItemCheckEventArgs> objeto para recuperar y calcular el precio de los elementos de menú seleccionado. Para ejecutar este ejemplo pegue el siguiente código en un formulario que contenga un <xref:System.Windows.Forms.ListView> denominado `ListView1` y un <xref:System.Windows.Forms.TextBox> denominado `Textbox1`. Llame a la `InititalizeListView` método desde el constructor del formulario o `Load` método. Puede usar esta propiedad en el  eventos para asegurarse de que el control muestra los elementos de menú apropiados.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ItemCheckEventArgs : int * System.Windows.Forms.CheckState * System.Windows.Forms.CheckState -&gt; System.Windows.Forms.ItemCheckEventArgs" Usage="new System.Windows.Forms.ItemCheckEventArgs (index, newCheckValue, currentValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del elemento que se va a cambiar.</param>
        <param name="newCheckValue">Uno de los valores de <see cref="T:System.Windows.Forms.CheckState" /> que indica si se va a cambiar la casilla del elemento para que esté activada, desactivada o indeterminada.</param>
        <param name="currentValue">Uno de los valores de <see cref="T:System.Windows.Forms.CheckState" /> que indica si la casilla del elemento está actualmente activada, desactivada o indeterminada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : System.Windows.Forms.CheckState" Usage="System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica el estado actual de la casilla del elemento.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.CheckState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite determinar el estado de activación del elemento especificado en el <xref:System.Windows.Forms.CheckedListBox> antes de la comprobación se realiza el cambio de estado que se aplicará.  
  
   
  
## Examples  
 El código siguiente muestra un activado <xref:System.Windows.Forms.ListView> control que administra el <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> eventos. El método usa la <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> y <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> propiedades de la <xref:System.Windows.Forms.ItemCheckEventArgs> objeto para recuperar y calcular el precio de los elementos de menú seleccionado. Para ejecutar este ejemplo pegue el siguiente código en un formulario que contenga un <xref:System.Windows.Forms.ListView> denominado `ListView1` y un <xref:System.Windows.Forms.TextBox> denominado `Textbox1`. Llame a la `InititalizeListView` método desde el constructor del formulario o `Load` método. Puede usar esta propiedad en el  eventos para asegurarse de que el control muestra los elementos de menú apropiados.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el índice de base cero del elemento que se va a cambiar.</summary>
        <value>Índice de base cero del elemento que se va a cambiar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para determinar qué casilla correspondiente en el <xref:System.Windows.Forms.CheckedListBox> se va a cambiar.  
  
   
  
## Examples  
 El código siguiente muestra un activado <xref:System.Windows.Forms.ListView> control que administra el <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> eventos. El método usa la <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> y <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> propiedades de la <xref:System.Windows.Forms.ItemCheckEventArgs> objeto para recuperar y calcular el precio de los elementos de menú seleccionado. Para ejecutar este ejemplo pegue el siguiente código en un formulario que contenga un <xref:System.Windows.Forms.ListView> denominado `ListView1` y un <xref:System.Windows.Forms.TextBox> denominado `Textbox1`. Llame a la `InititalizeListView` método desde el constructor del formulario o `Load` método. Puede usar esta propiedad en el  eventos para asegurarse de que el control muestra los elementos de menú apropiados.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : System.Windows.Forms.CheckState with get, set" Usage="System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a establecer la casilla del elemento para que esté activada, desactivada o indeterminada.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Forms.CheckState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite determinar el nuevo estado de activación para el elemento especificado antes de que cambie el estado de activación por el <xref:System.Windows.Forms.CheckedListBox> control. Además de determinar el nuevo estado de verificación, puede utilizar esta propiedad en un controlador de eventos para el <xref:System.Windows.Forms.CheckedListBox.ItemCheck> eventos para cambiar el estado a un estado de comprobación diferente a la especificada. Por ejemplo, si el usuario coloca una marca de verificación junto a un elemento en el <xref:System.Windows.Forms.CheckedListBox> que haya determinado no debe estar activado en función del estado de la aplicación, puede invalidar el cambio en el estado de la marca de verificación al establecer esta propiedad en su valor anterior o t o un estado de verificación diferente.  
  
   
  
## Examples  
 Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar. Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.CheckedListBox> denominado `CheckedListBox1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>