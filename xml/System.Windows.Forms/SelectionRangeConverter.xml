<Type Name="SelectionRangeConverter" FullName="System.Windows.Forms.SelectionRangeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c42a3482c8bf87a25fa1d77671fda9bbb59b7145" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SelectionRangeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectionRangeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SelectionRangeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectionRangeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectionRangeConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un convertidor de tipos para convertir objetos de tipo <see cref="T:System.Windows.Forms.SelectionRange" /> en otros tipos distintos y viceversa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Forms.SelectionRange> clase representa una sola fecha o un intervalo de fechas. Esta clase es comúnmente asociada con el <xref:System.Windows.Forms.MonthCalendar> controlar, donde representa las fechas seleccionadas y resaltadas. El <xref:System.Windows.Forms.SelectionRangeConverter> es una clase adjuntos a <xref:System.Windows.Forms.SelectionRange> que le permite convertir a y desde otros tipos, cadenas con más frecuencia.  
  
 Para obtener más información sobre los convertidores de tipos, vea la <xref:System.ComponentModel.TypeConverter> de la clase base [conversión de tipos generalizada](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada), y [Cómo: implementar un convertidor de tipos](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Nunca debe crearse una <xref:System.Windows.Forms.SelectionRangeConverter>. En su lugar, se llama al método <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> de la clase <xref:System.ComponentModel.TypeDescriptor>. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.SelectionRange" />
    <altmember cref="T:System.Windows.Forms.MonthCalendar" />
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectionRangeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SelectionRangeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.SelectionRangeConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.%23ctor%2A> es el constructor predeterminado proporcionado por el compilador.  
  
 Nunca debe crearse una <xref:System.Windows.Forms.SelectionRangeConverter>. En su lugar, se llama al método <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> de la clase <xref:System.ComponentModel.TypeDescriptor>. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <param name="sourceType">Objeto <see cref="T:System.Type" /> de origen que se va a convertir.</param>
        <summary>Determina si este convertidor puede convertir un objeto del tipo de origen especificado en el tipo nativo del convertidor consultando el contexto del descriptor de tipos proporcionado.</summary>
        <returns>
          Es <see langword="true" /> si el convertidor puede realizar la conversión especificada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.SelectionRangeConverter> clase está especializada para convertir entre los tipos de <xref:System.String> y <xref:System.Windows.Forms.SelectionRange>. Como resultado, el <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom%2A> método `true` si la `sourceType` parámetro es de tipo <xref:System.String>. De lo contrario, difiere la llamada a la implementación base de este método, <xref:System.ComponentModel.TypeConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 El parámetro <paramref name="context" /> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que siempre debe comprobar la información. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertTo" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <param name="destinationType">Objeto <see cref="T:System.Type" /> de destino al que se va a convertir.</param>
        <summary>Obtiene un valor que indica si este convertidor puede convertir un objeto en el tipo de destino especificado utilizando el contexto especificado.</summary>
        <returns>
          <see langword="true" /> si este convertidor puede realizar la conversión especificada; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertTo%2A> método `true` si la `destinationType` parámetro es de tipo <xref:System.String> o <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>. De lo contrario, difiere la llamada a la implementación base de este método, <xref:System.ComponentModel.TypeConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 El parámetro <paramref name="context" /> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que siempre debe comprobar la información. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <param name="culture">Información de configuración regional para la conversión.</param>
        <param name="value">
          <see cref="T:System.Object" /> que se va a convertir.</param>
        <summary>Convierte el valor especificado en el tipo nativo del convertidor utilizando la configuración regional especificada.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.SelectionRangeConverter.ConvertFrom%2A> método está especializado para convertir <xref:System.String> valores que representan un intervalo de fechas para sus <xref:System.Windows.Forms.SelectionRange> representaciones. Los tipos distintos de <xref:System.String> se pasan a la implementación de la clase base de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> es del tipo <see cref="T:System.String" />, pero no pudo analizarse en dos cadenas que representan fechas.</exception>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> es de tipo <see cref="T:System.String" /> y se analizó correctamente en dos cadenas, pero la conversión de una de ellas o de las dos al tipo <see cref="T:System.DateTime" /> no pudo realizarse correctamente.</exception>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 El parámetro <paramref name="context" /> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que siempre debe comprobar la información. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <param name="culture">Información de configuración regional para la conversión.</param>
        <param name="value">
          <see cref="T:System.Object" /> que se va a convertir.</param>
        <param name="destinationType">Objeto <see cref="T:System.Type" /> de destino al que se va a convertir.</param>
        <summary>Convierte el objeto <see cref="T:System.Windows.Forms.SelectionRangeConverter" /> especificado en otro tipo utilizando la referencia cultural especificada.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.SelectionRangeConverter.ConvertTo%2A> método está especializado para convertir <xref:System.Windows.Forms.SelectionRange> valores a sus <xref:System.String> o <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> representaciones. Otros tipos se pasan a la implementación de la clase base de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> no se pueden convertir en <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propios requisitos de conversión.  
  
 El parámetro <paramref name="context" /> puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor. El parámetro puede ser <see langword="null" />, por lo que siempre debe comprobar la información. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CanConvertTo" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.ConvertFrom" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <param name="propertyValues">Una interfaz <see cref="T:System.Collections.IDictionary" /> que contiene los nuevos valores de propiedades.</param>
        <summary>Crea un objeto <see cref="T:System.Windows.Forms.SelectionRange" /> utilizando el descriptor de tipos especificado y el conjunto de valores de propiedades de dicho objeto.</summary>
        <returns>Si es correcto, devuelve el objeto <see cref="T:System.Windows.Forms.SelectionRange" /> recientemente creado; de lo contrario, este método produce una excepción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.SelectionRangeConverter.CreateInstance%2A> método para realizar cambios en un objeto inmutable existente mediante la creación de una versión modificada del mismo. Este método espera el `propertyValues` tener elementos con valores de clave de parámetro `Start` y `End`, cada uno con la correspondiente <xref:System.DateTime> valor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyValues" /> es <see langword="null" />, o sus elementos <c>Start</c> y <c>End</c> no se pudieron convertir en <see cref="T:System.Windows.Forms.SelectionRange" />.</exception>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <summary>Determina si, al cambiar un valor en una instancia, es necesario llamar a <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> para crear un nuevo valor.</summary>
        <returns>
          <see langword="true" /> si debe llamarse a <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> para realizar un cambio en una o varias propiedades; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada siempre devuelve `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <param name="value">
          <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</param>
        <param name="attributes">Matriz de tipo <see cref="T:System.Attribute" /> que se utiliza como filtro.</param>
        <summary>Devuelve el conjunto de propiedades filtradas del tipo <see cref="T:System.Windows.Forms.SelectionRange" /></summary>
        <returns>Si es correcto, devuelve el conjunto de propiedades que deberían exponerse para el tipo <see cref="T:System.Windows.Forms.SelectionRange" />; de lo contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada de este método no usa el `context` o `value` parámetros, sino que simplemente hace referencia a la llamada a la TypeDescriptor.<xref:System.ComponentModel.TypeDescriptor.GetProperties%28System.Type%2CSystem.Attribute%5B%5D%29?displayProperty=nameWithType> .  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
        <summary>Determina si el objeto actual admite propiedades que utilizan el contexto del descriptor de tipos especificado.</summary>
        <returns>
          <see langword="true" /> si se puede llamar a <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" /> para buscar las propiedades de un objeto <see cref="T:System.Windows.Forms.SelectionRange" />; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada siempre devuelve `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" />
        <altmember cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported" />
      </Docs>
    </Member>
  </Members>
</Type>