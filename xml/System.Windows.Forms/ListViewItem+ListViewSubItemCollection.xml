<Type Name="ListViewItem+ListViewSubItemCollection" FullName="System.Windows.Forms.ListViewItem+ListViewSubItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14d9fd6e86bd01c69c1444cd2eb34830e4a2e3ac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37510015" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListViewItem/ListViewSubItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewItem.ListViewSubItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa una colección de objetos <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> almacenados en un <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> almacena <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos que representan los subelementos de un elemento primario <xref:System.Windows.Forms.ListViewItem> en el <xref:System.Windows.Forms.ListView> control. Subelementos solo se muestran en un <xref:System.Windows.Forms.ListView> controlar cuando se especifican las columnas en el <xref:System.Windows.Forms.ListView.Columns%2A> propiedad de la <xref:System.Windows.Forms.ListView> control y cuándo el <xref:System.Windows.Forms.ListView.View%2A> propiedad de la <xref:System.Windows.Forms.ListView> control está establecido en <xref:System.Windows.Forms.View.Details>. El orden de los subelementos en la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> determina las columnas se muestran los subelementos en el <xref:System.Windows.Forms.ListView> control.  
  
 Hay varias maneras de agregar subelementos a la colección. El <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método agrega una sola <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> a la colección. Para agregar un número de subelementos a la colección, se crea una matriz de <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos y páselo a la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método. Si desea insertar un subelemento en una ubicación específica en la colección, puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método. Para quitar subelementos, puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> método o la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> método si sabe dónde se encuentra el subelemento en la colección. El <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> método le permite quitar todos los subelementos de la colección en lugar de usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> método para quitar un solo subelemento a la vez.  
  
 Además de métodos y propiedades para agregar y quitar subelementos, la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> también proporciona métodos para buscar subelementos en la colección. El <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> método le permite determinar si un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> es un miembro de la colección. Una vez que sepa que el elemento se encuentra en la colección, puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> método para determinar dónde se encuentra el subelemento en la colección.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItemCollection (System.Windows.Forms.ListViewItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.#ctor(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItemCollection(System::Windows::Forms::ListViewItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItemCollection" Usage="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.ListViewItem" /> que posee la colección.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear una instancia de esta clase sin asociarla con un <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un subelemento a la colección de subelementos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se mostrará para el subelemento.</param>
        <summary>Agrega un subelemento a la colección con el texto especificado.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se agregó a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método le permite agregar un subelemento a la colección especificando el texto del subelemento. Cuando se llama a este método, un nuevo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> se crea con el texto especificado. A continuación, puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> devuelto por este método para establecer las propiedades y llamar a métodos para manipular el subelemento. Si ya dispone de una <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> que desea agregar a la colección, puede usar la versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método que acepta un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> como un parámetro, o utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método si desea agregar el subelemento en un determinado posición dentro de la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.ListView> control con tres <xref:System.Windows.Forms.ListViewItem> objetos especificados y tres <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos especificados para cada elemento. El ejemplo también crea <xref:System.Windows.Forms.ColumnHeader> objetos que se mostrarán los subelementos en la vista de detalles. Dos <xref:System.Windows.Forms.ImageList> objetos también se crean en el ejemplo de código para proporcionar imágenes para la <xref:System.Windows.Forms.ListViewItem> objetos. Estos <xref:System.Windows.Forms.ImageList> se agregan objetos a la <xref:System.Windows.Forms.ListView.LargeImageList%2A> y <xref:System.Windows.Forms.ListView.SmallImageList%2A> propiedades. El ejemplo utiliza las propiedades siguientes para crear el <xref:System.Windows.Forms.ListView> control:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Este ejemplo requiere que se ha agregado el código para un <xref:System.Windows.Forms.Form> y llame al método creado en el ejemplo desde el constructor u otro método en el formulario. El ejemplo también requiere que las imágenes denominado `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, y `MyLargeImage2` se encuentran en el directorio raíz de la unidad C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As ListViewItem.ListViewSubItem) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se agrega a la colección.</param>
        <summary>Agrega un objeto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> existente a la colección.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se agregó a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método para agregar una existente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> a la colección. Este método se utiliza normalmente para reutilizar los subelementos existentes desde otros <xref:System.Windows.Forms.ListViewItem> objetos. Elementos que se agregan a la colección se insertan al final de la lista. Para insertar un elemento en la colección en una posición específica, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método. Si desea agregar una matriz de existente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos, puede utilizar la versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método que acepta una matriz de <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos como un parámetro.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add (text, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se mostrará para el subelemento.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que representa el color de primer plano del subelemento.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> que representa el color de fondo del subelemento.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que representa el tipo de letra con el que se va a mostrar el texto del subelemento.</param>
        <summary>Agrega un subelemento a la colección con los valores de texto, color de primer plano, color de fondo y fuente especificados.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se agregó a la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método le permite agregar un subelemento a la colección especificando el texto del subelemento. Además, esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método le permite especificar el color de primer plano, color de fondo y fuente del texto del subelemento. Cuando se llama a este método, un nuevo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> se crea con el texto especificado. A continuación, puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> devuelto por este método para establecer las propiedades y llamar a métodos para manipular el subelemento. Si ya dispone de una <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> que desea agregar a la colección, puede usar la versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método que acepta un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> como un parámetro, o utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método si desea agregar el subelemento en un determinado posición en la colección.  
  
> [!NOTE]
>  De forma predeterminada, los subelementos utilizan el color de primer plano, color de fondo y fuente especificados para el elemento primario. Establecer el <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> propiedad `false` para evitar que los estilos del elemento primario reemplacen los estilos del subelemento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega una matriz de subelementos a la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">Matriz de cadenas que representa el texto de cada subelemento que se va a agregar a la colección.</param>
        <summary>Crea nuevos subelementos basándose en una matriz y los agrega a la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método para agregar una matriz de cadenas a la colección, donde cada cadena de la colección representa el texto de un subelemento nuevo. Puede utilizar la otra versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método que acepta una matriz de cadenas como un parámetro para especificar el color de primer plano, color de fondo y fuente para cada elemento que se va a agregar. Si desea reutilizar existente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos y agregarlos a la colección, puede usar la versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método que acepta una matriz de <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos como un parámetro.  
  
 Si desea agregar un solo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método. También puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método si desea agregar un solo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en una posición específica de la colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem.ListViewSubItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem/ListViewSubItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem.ListViewSubItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem.ListViewSubItem[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Matriz de objetos <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se agregará a la colección.</param>
        <summary>Agrega una matriz de objetos <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> a la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para reutilizar los subelementos almacenados en otro <xref:System.Windows.Forms.ListViewItem>. Si desea agregar un solo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> de objeto, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método. También puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método si desea agregar un solo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en una posición específica de la colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[],System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; unit" Usage="listViewSubItemCollection.AddRange (items, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">Matriz de cadenas que representa el texto de cada subelemento que se va a agregar a la colección.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> que representa el color de primer plano del subelemento.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> que representa el color de fondo del subelemento.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> que representa el tipo de letra con el que se va a mostrar el texto del subelemento.</param>
        <summary>Crea nuevos subelementos basándose en una matriz y los agrega a la colección con el color de primer plano, el color de fondo y la fuente especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método para agregar una matriz de cadenas a la colección, donde cada cadena de la colección representa el texto de un subelemento nuevo. Además, esta versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método le permite especificar el color de primer plano, color de fondo y fuente para cada subelemento. Puede utilizar la otra versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método que acepta una matriz de cadenas como parámetro si no desea especificar el color de primer plano, color de fondo y fuente para cada subelemento. Si desea reutilizar existente <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos y agregarlos a la colección, puede usar la versión de la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método que acepta una matriz de <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objetos como un parámetro.  
  
 Si desea agregar un solo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método. También puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> método si desea agregar un solo <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en una posición específica de la colección.  
  
> [!NOTE]
>  De forma predeterminada, los subelementos utilizan el color de primer plano, color de fondo y fuente especificados para el elemento primario. Establecer el <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> propiedad `false` para evitar que los estilos del elemento primario reemplacen los estilos del subelemento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewSubItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los subelementos y el <see cref="T:System.Windows.Forms.ListViewItem" /> primario de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al quitar los subelementos de la colección, se pierde toda la información acerca de los subelementos eliminados. Para quitar un solo subelemento de la colección, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> o <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (subItem As ListViewItem.ListViewSubItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; bool" Usage="listViewSubItemCollection.Contains subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que representa el subelemento que se va a buscar en la colección.</param>
        <summary>Determina si el subelemento especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si la colección contiene el subelemento; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> método le permite determinar si un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> es un miembro de la colección. Una vez que sepa que el subelemento está en la colección, puede usar el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> método para determinar la posición del subelemento en la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewSubItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del objeto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se va a buscar.</param>
        <summary>Determina si la colección contiene un elemento con la clave especificada.</summary>
        <returns>
          <see langword="true" /> para indicar que la colección contiene un elemento con la clave especificada; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 La comparación de claves no distingue mayúsculas de minúsculas. Si el `key` parámetro es `null` o una cadena vacía, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey%2A> devuelve `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de subelementos de la colección.</summary>
        <value>Número de subelementos de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite determinar el número de subelementos que se definen para un <xref:System.Windows.Forms.ListViewItem>. A continuación, puede usar este valor cuando se recorre los valores de la colección y debe proporcionar un número de iteraciones para realizar el bucle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewSubItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador que se utilizará para establecer un recorrido en iteración en la colección de subelementos.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> que representa la colección de subelementos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (subItem As ListViewItem.ListViewSubItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; int" Usage="listViewSubItemCollection.IndexOf subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que representa el subelemento que se va a buscar en la colección.</param>
        <summary>Devuelve el índice en la colección del subelemento especificado.</summary>
        <returns>Índice de base cero de la ubicación del subelemento en la colección. Si el subelemento no se encuentra en la colección, el valor devuelto es menos uno (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> método le permite determinar la posición de un subelemento en la colección. Para determinar si se encuentra un subelemento de la colección antes de llamar a este método, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewSubItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento cuyo índice se va a recuperar.</param>
        <summary>Determina el índice de la primera aparición de un elemento que tiene la clave especificada en la colección.</summary>
        <returns>Índice de base cero de la primera aparición de un elemento que tiene la clave especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> se llama sucesivamente, el último devuelve el índice se comprobará para una coincidencia de clave en primer lugar, y si no hay ninguna coincidencia, la búsqueda comienza al principio de la colección.  
  
 El <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 La comparación de claves no distingue mayúsculas de minúsculas. Si el `key` parámetro es `null` o una cadena vacía, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> devuelve -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que representa el subelemento que se va a insertar en la colección.</param>
        <summary>Inserta un subelemento en la colección, en el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método le permite insertar un subelemento en una posición específica en el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>. Para agregar un subelemento sin especificar una posición específica, use el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> método. Si desea agregar una matriz de subelementos a la colección, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> método. Puede usar este método si desea insertar un subelemento nuevo en una colección existente de subelementos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor que el valor de la propiedad <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
        <value>
          <see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es siempre `false` para esta colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene un elemento de la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[int] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem.ListViewSubItem with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice del elemento de la colección que se va a recuperar.</param>
        <summary>Obtiene o establece el subelemento en el índice especificado de la colección.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que representa el subelemento ubicado en el índice especificado de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar este método para obtener el <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> almacenados en una ubicación específica de la colección. Para determinar el índice de un elemento específico de la colección, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem.ListViewSubItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del objeto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se va a recuperar.</param>
        <summary>Obtiene un elemento de la colección que tiene la clave especificada.</summary>
        <value>El objeto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> con la clave especificada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 La comparación de claves no distingue mayúsculas de minúsculas. Si el `key` parámetro es `null` o una cadena vacía, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item%2A> devuelve `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">Elemento que se va a quitar de la colección.</param>
        <summary>Quita un elemento especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si desea quitar un elemento en el índice especificado o con una clave especificada, use el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> método o la <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey%2A> método, respectivamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewSubItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del subelemento que se va a quitar.</param>
        <summary>Quita el subelemento en el índice especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se quita un subelemento de la colección, cambian los índices de subelementos subsiguientes de la colección. Se elimina toda la información acerca del subelemento quitado. Puede usar este método para quitar un subelemento concreto de la colección especificando el índice del subelemento que se va a quitar de la colección. Para especificar el subelemento que se desea quitar en lugar del índice del subelemento, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> método. Para quitar todos los subelementos de la colección, utilice el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero o mayor o igual que el valor de la propiedad <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> de la colección <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewSubItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del elemento que se va a quitar de la colección.</param>
        <summary>Quita un elemento de la colección que tiene la clave especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> propiedad se corresponde con la clave para un <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> en el <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 La comparación de claves no distingue mayúsculas de minúsculas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Matriz de <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</param>
        <param name="index">Índice de base cero de la matriz donde comienza la copia.</param>
        <summary>Copia el elemento y la colección de subelementos en una matriz.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">El tipo de matriz no es compatible con <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
        <value>
          <see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
        <value>Objeto que se utiliza para sincronizar la colección.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que se agrega a la colección.</param>
        <summary>Agrega un objeto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> existente a la colección.</summary>
        <returns>Índice de base cero que indica la ubicación del objeto que se ha agregado a la colección.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> no es un <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (subItem As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ subItem) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Un objeto que representa el subelemento que se va a buscar en la colección.</param>
        <summary>Determina si el subelemento especificado se encuentra en la colección.</summary>
        <returns>Es <see langword="true" /> si la colección contiene el subelemento; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (subItem As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ subItem) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Un objeto que representa el subelemento que se va a buscar en la colección.</param>
        <summary>Devuelve el índice en la colección del subelemento especificado.</summary>
        <returns>Índice de base cero del subelemento si éste se encuentra en la colección; en caso contrario, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación del índice de base cero donde se inserta el elemento.</param>
        <param name="item">Un objeto que representa el subelemento que se va a insertar en la colección.</param>
        <summary>Inserta un subelemento en la colección, en el índice especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> no es un <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de índice es menor que cero o mayor o igual que el valor de la propiedad Count de la colección <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección tiene un tamaño fijo.</summary>
        <value>
          <see langword="false" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> en el índice especificado de la colección.</summary>
        <value>Control <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> que representa el elemento ubicado en el índice especificado de la colección.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de índice es menor que cero o mayor o igual que el valor de la propiedad Count de la colección <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <exception cref="T:System.ArgumentException">El objeto no es un control <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Elemento que se va a quitar de la colección.</param>
        <summary>Quita un elemento especificado de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> se convierte en una interfaz <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>