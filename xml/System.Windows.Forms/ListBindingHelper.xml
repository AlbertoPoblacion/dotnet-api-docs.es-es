<Type Name="ListBindingHelper" FullName="System.Windows.Forms.ListBindingHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2996cae154f6b659cb54d9081946a459b9d8eacd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36518840" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ListBindingHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ListBindingHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBindingHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBindingHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBindingHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type ListBindingHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona funcionalidad para detectar una lista que se puede enlazar y las propiedades de los elementos incluidos en ella cuando difieren de las propiedades públicas del objeto al que se enlazan.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase es utilizada por clases como <xref:System.Windows.Forms.BindingSource>.  
  
 Tenga en cuenta que para las aplicaciones de Smartphone, esta clase requiere el software de Windows Mobile versión 5.0 para Smartphones.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetList">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve una lista asociada a un origen de datos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (list As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetList : obj -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">El origen de datos que se va a examinar para su lista subyacente.</param>
        <summary>Devuelve una lista asociada al origen de datos especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa la lista subyacente si existe; de lo contrario, el origen de datos original especificado por <paramref name="list" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el origen de datos especificado por la `list` parámetro implementa la <xref:System.ComponentModel.IListSource> interfaz, la <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> método devolverá un objeto de tipo <xref:System.Collections.IList> que representa la lista asociada. En caso contrario, este método solo devuelve el origen de datos especificado porque no hay ninguna lista subyacente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (dataSource As Object, dataMember As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetList : obj * string -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">El origen de datos del que buscar la lista.</param>
        <param name="dataMember">El nombre de la propiedad de origen de datos que contiene la lista. Puede ser <see langword="null" />.</param>
        <summary>Devuelve un objeto, normalmente una lista, de la evaluación de un origen de datos y un miembro de datos opcional especificados.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa la lista subyacente si se encontró; de lo contrario, <paramref name="dataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el miembro de datos es `null` o una cadena vacía (""), el <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> método `dataSource`.  
  
 Si `dataSource` no es una lista, <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> devuelve el valor de la `dataSource` propiedad que cumple el `dataMember` valor.  
  
 Si `dataSource` es una lista, en que implementa el <xref:System.Windows.Forms.ICurrencyManagerProvider> o <xref:System.Collections.IEnumerable> interfaces, a continuación, se obtiene la lista subyacente si elige un elemento de la lista y consultando dicho elemento para el valor de la propiedad denominada por `dataMember`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El nombre de miembro de los datos especificado no coincidió con ninguna de las propiedades encontradas para el origen de datos.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe las propiedades de los elementos incluidos en la lista o la propia lista.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Origen de datos que se va a examinar para obtener información sobre la propiedad.</param>
        <summary>Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe las propiedades de un tipo de elemento incluido en un origen de datos especificado o las propiedades del origen de datos especificado.</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades de los elementos incluidos en la <paramref name="list" /> o las propiedades de la <paramref name="list." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> método se usa para examinar la colección de propiedades para un origen de datos. La acción de este método depende del tipo real de la `list` parámetro según la tabla siguiente:  
  
|tipo de parámetro|Acción|  
|--------------------|------------|  
|Un tipo que es una lista o una colección de elementos.|Devuelve un <xref:System.ComponentModel.PropertyDescriptorCollection> que describen las propiedades del tipo de elemento incluido en la lista.|  
|Un tipo que no es una lista o colección.|Devuelve un <xref:System.ComponentModel.PropertyDescriptorCollection> que describen las propiedades del tipo.|  
|`null`|Devuelve una <xref:System.ComponentModel.PropertyDescriptorCollection> vacía.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">Origen de datos que se va a examinar para obtener información sobre la propiedad.</param>
        <param name="listAccessors">La matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> describiendo qué propiedades del origen de datos se examinarán. Puede ser <see langword="null" />.</param>
        <summary>Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe las propiedades de un tipo de elemento incluido en una propiedad de colección de un origen de datos. Utiliza la matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificada para indicar qué propiedades examinar.</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe las propiedades del tipo de elemento incluido en una propiedad de colección del origen de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> método resulta útil cuando el origen de datos tiene propiedades que son una colección de elementos y debe conocer las propiedades del tipo de elemento de la colección, no las propiedades del tipo de colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object dataSource, string dataMember, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object dataSource, string dataMember, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.String,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (dataSource As Object, dataMember As String, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ dataSource, System::String ^ dataMember, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * string * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (dataSource, dataMember, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="dataSource">Origen de datos que se va a examinar para obtener información sobre la propiedad.</param>
        <param name="dataMember">El miembro de datos opcional que se va a examinar para obtener información de propiedad. Puede ser <see langword="null" />.</param>
        <param name="listAccessors">La matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> describiendo qué propiedades del miembro de datos se examinarán. Puede ser <see langword="null" />.</param>
        <summary>Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe las propiedades de un tipo de elemento incluido en el miembro de datos especificado de un origen de datos. Utiliza la matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificada para indicar qué propiedades examinar.</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe las propiedades de un tipo de elemento incluido en una propiedad de colección del origen de datos especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `dataMember` parámetro puede ser `null`, en cuyo caso el <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> método devolverá descripciones de propiedad mediante el origen de datos y la <xref:System.ComponentModel.PropertyDescriptor> matriz.  
  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> es útil cuando el miembro de datos tiene propiedades que son una colección de elementos y debe conocer las propiedades del tipo de elemento de la colección, no las propiedades del tipo de colección.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El miembro de datos especificado no se pudo encontrar en el origen de datos especificado.</exception>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemType">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve el tipo de un elemento incluido en una lista o colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (list As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">La lista que se va a examinar para obtener información de tipo.</param>
        <summary>Devuelve el tipo de datos de los elementos de la lista especificada.</summary>
        <returns>
          <see cref="T:System.Type" /> de los elementos incluidos en la lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `list` parámetro no es una lista o matriz, el tipo devuelto será de la `list` propio parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (dataSource As Object, dataMember As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj * string -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Origen de datos que se examinará para los elementos.</param>
        <param name="dataMember">Nombre opcional de la propiedad en el origen de datos que se va a utilizar como el miembro de datos. Puede ser <see langword="null" />.</param>
        <summary>Devuelve el tipo de datos de los elementos del origen de datos especificado.</summary>
        <returns>Para enlace de datos complejo, <see cref="T:System.Type" /> de los elementos representados por el <paramref name="dataMember" /> del origen de datos; en caso contrario, el <see cref="T:System.Type" /> del elemento de la propia lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Windows.Forms.ListBindingHelper.GetListItemType%2A> método se utiliza para determinar el tipo de elementos que se usan en los esquemas de enlace de datos simples o complejos. Este método estático puede ser útil para determinar si un esquema de enlace de datos propuesto es adecuado antes de intentarlo.  
  
 Si `dataSource` es `null`, no se puede encontrar los descriptores de propiedades para los elementos de lista del miembro de datos especificado o el descriptor de propiedad para el elemento de lista es un <xref:System.ComponentModel.ICustomTypeDescriptor>, a continuación, este método devuelve el tipo de la <xref:System.Object> clase.  
  
 Si `dataMember` es `null` o está vacío, a continuación, este método devuelve el <xref:System.Type> de los elementos del origen de datos, si es una lista; en caso contrario, este método devuelve el <xref:System.Type> de los datos de origen propio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public static string GetListName (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetListName(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListName(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListName (list As Object, listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetListName(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListName : obj * System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="System.Windows.Forms.ListBindingHelper.GetListName (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">El origen de datos donde se va a examinar el nombre de la lista.</param>
        <param name="listAccessors">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se encuentran en el origen de datos. Puede ser <see langword="null" />.</param>
        <summary>Devuelve el nombre de una base de lista, dado un origen de datos y opcionales <see cref="T:System.ComponentModel.PropertyDescriptor" /> matriz.</summary>
        <returns>Nombre de la lista en el origen de datos, como se describe en <paramref name="listAccessors" />, o el nombre del tipo de origen de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `listAccessors` es `null` o está vacía, el <xref:System.Windows.Forms.ListBindingHelper.GetListName%2A> método devuelve el nombre del tipo de origen de datos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
  </Members>
</Type>