<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AxHost.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d9f95d307ef4fee1723318c2b8875ae8daca626b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9f95d307ef4fee1723318c2b8875ae8daca626b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Wraps ActiveX controls and exposes them as fully featured Windows Forms controls.</source>
          <target state="translated">Ajusta los controles ActiveX y los expone como controles completos de formularios Windows Forms.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>You typically do not use the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class directly.</source>
          <target state="translated">Normalmente no se usan los <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase directamente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>You can use the <bpt id="p1">[</bpt>Aximp.exe (Windows Forms ActiveX Control Importer)<ept id="p1">](~/docs/framework/tools/aximp-exe-windows-forms-activex-control-importer.md)</ept> to generate the wrappers that extend <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>.</source>
          <target state="translated">Puede usar el <bpt id="p1">[</bpt>Aximp.exe (importador de controles de ActiveX de Windows Forms)<ept id="p1">](~/docs/framework/tools/aximp-exe-windows-forms-activex-control-importer.md)</ept> para generar los contenedores que amplían <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>The ActiveX Control Importer generates a class that is derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class, and compiles it into a library file (DLL) that can be added as a reference to your application.</source>
          <target state="translated">El importador de controles ActiveX genera una clase que se deriva de la <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase y lo compila en un archivo de biblioteca (DLL) que puede agregarse como una referencia a la aplicación.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>Alternatively, you can use the <ph id="ph1">`/source`</ph> switch with the ActiveX Control Importer and a C# file is generated for your <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class.</source>
          <target state="translated">Como alternativa, puede usar el <ph id="ph1">`/source`</ph> cambia con el importador de controles ActiveX y se genera un archivo C# para su <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>You can then make changes to the code and recompile it into a library file.</source>
          <target state="translated">A continuación, puede realizar cambios en el código y compilarlo en un archivo de biblioteca.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>If the name of a member of the ActiveX control matches a name defined in the .NET Framework, then the ActiveX Control Importer will prefix the member name with "Ctl" when it creates the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class.</source>
          <target state="translated">Si el nombre de un miembro del control ActiveX coincide con un nombre definido en .NET Framework, el importador de controles ActiveX agregará el prefijo "Ctl" el nombre del miembro cuando crea la <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>For example, if your ActiveX control has a member named "Layout", it is renamed "CtlLayout" in the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class because the <ph id="ph2">`Layout`</ph> event is defined within the .NET Framework.</source>
          <target state="translated">Por ejemplo, si el control ActiveX tiene un miembro denominado "Layout", que se cambia el nombre a "CtlLayout" en la <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada porque el <ph id="ph2">`Layout`</ph> evento está definido en .NET Framework.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>Most of the common properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class are only valid and used if the underlying ActiveX control exposes those properties.</source>
          <target state="translated">La mayoría de las propiedades comunes de la <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase solo son válidos y se utiliza si el control ActiveX subyacente expone dichas propiedades.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>A few examples of the common properties are <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>.</source>
          <target state="translated">Algunos ejemplos de las propiedades comunes son <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>If you are using Visual Studio as your Windows Forms design environment, you can make an ActiveX control available to your application by adding the ActiveX control to your Toolbox.</source>
          <target state="translated">Si se utiliza Visual Studio como entorno de diseño de formularios Windows Forms, puede poner un control ActiveX a disposición de la aplicación agregando el control ActiveX a su cuadro de herramientas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>To accomplish this, right-click the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Customize Toolbox<ept id="p2">**</ept>, then browse to the ActiveX control's.ocx file.</source>
          <target state="translated">Para ello, haga clic en el <bpt id="p1">**</bpt>cuadro de herramientas<ept id="p1">**</ept>, seleccione <bpt id="p2">**</bpt>Personalizar cuadro de herramientas<ept id="p2">**</ept>, a continuación, busque el archivo.ocx del control ActiveX.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>For more information, see "Adding ActiveX Controls to Windows Forms" in the Visual Studio documentation.</source>
          <target state="translated">Para obtener más información, vea "Agregar controles de ActiveX para Windows Forms" en la documentación de Visual Studio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">En el ejemplo de código siguiente se reemplaza el constructor y el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> métodos de un <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada que contiene el ActiveX Control Masked Edit de Microsoft.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">Este código requiere que haya creado el código fuente generado ejecutando AxImp.exe en el archivo MSMask32.ocx con el <ph id="ph1">`/source`</ph> conmutador que se va a generar la clase de contenedor que se pueda editar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.AxHost">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">Este código se muestra únicamente en sintaxis de C# porque esa es la salida de solo lenguaje por AxImp.exe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String)">
          <source>The CLSID of the ActiveX control to wrap.</source>
          <target state="translated">CLSID del control ActiveX que se va a ajustar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class, wrapping the ActiveX control indicated by the specified CLSID.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>, ajustando el control ActiveX indicado por el CLSID especificado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>The CLSID of the ActiveX control to wrap.</source>
          <target state="translated">CLSID del control ActiveX que se va a ajustar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that modifies the shortcut-menu behavior for the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que modifica el comportamiento del menú contextual por el control.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class, wrapping the ActiveX control indicated by the specified CLSID, and using the shortcut-menu behavior indicated by the specified <ph id="ph2">&lt;paramref name="flags" /&gt;</ph> value.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>, ajustando el control ActiveX indicado por el CLSID especificado y utilizando el comportamiento del menú contextual indicado por el valor <ph id="ph2">&lt;paramref name="flags" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>If the binary representation of the <ph id="ph1">`flags`</ph> parameter value contains the bit represented by the value 0x1, the shortcut menu for the control will not contain an <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> option unless the ActiveX control explicitly provides it.</source>
          <target state="translated">Si la representación binaria de la <ph id="ph1">`flags`</ph> el valor del parámetro contiene el bit representado por el valor 0 x 1, el menú contextual para el control no contendrá una <bpt id="p1">**</bpt>editar<ept id="p1">**</ept> opción a menos que el control ActiveX lo proporciona explícitamente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
          <source>If the binary representation of the <ph id="ph1">`flags`</ph> parameter value contains the bit represented by the value 0x2, the shortcut menu for the control will contain a Properties option if the ActiveX control offers a set of property pages; otherwise, the shortcut menu will contain a Properties option only if the ActiveX control explicitly provides it.</source>
          <target state="translated">Si la representación binaria de la <ph id="ph1">`flags`</ph> el valor del parámetro contiene el bit representado por el valor 0 x 2, el menú contextual para el control contendrá una opción propiedades si el control ActiveX ofrece un conjunto de páginas de propiedades; en caso contrario, el menú contextual contendrá una opción propiedades solo si el control ActiveX lo proporciona explícitamente.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>When overridden in a derived class, attaches interfaces to the underlying ActiveX control.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, adjunta interfaces al control ActiveX subyacente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">En el ejemplo de código siguiente se reemplaza el constructor y el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> métodos de un <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada que contiene el ActiveX Control Masked Edit de Microsoft.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">Este código requiere que haya creado el código fuente generado ejecutando AxImp.exe en el archivo MSMask32.ocx con el <ph id="ph1">`/source`</ph> conmutador que se va a generar la clase de contenedor que se pueda editar.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">Este código se muestra únicamente en sintaxis de C# porque esa es la salida de solo lenguaje por AxImp.exe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>Classes that extend <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> should override this method.</source>
          <target state="translated">Las clases que extienden <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> debe invalidar este método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>Within an overridden version of this method, the extending class should call <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph> to retrieve its own interface.</source>
          <target state="translated">En una versión reemplazada de este método, debe llamar la clase de extensión <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph> para recuperar su propia interfaz.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.AttachInterfaces">
          <source>In most cases, the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph> method should not be called before this method is called.</source>
          <target state="translated">En la mayoría de los casos, la <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.GetOcx" /&gt;</ph> método no debe llamarse antes de llama a este método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.BackColor">
          <source>This member is not meaningful for this control.</source>
          <target state="translated">Este miembro no es significativo para este control.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.BackColor">
          <source>A Color that represents the background color of the control.</source>
          <target state="translated">Un color que representa el color de fondo del control.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackColorChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackColorChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackColorChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackColorChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackColorChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.BackgroundImage">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.BackgroundImage">
          <source>The background image displayed in the control.</source>
          <target state="translated">Imagen de fondo que se muestra en el control.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackgroundImageChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BackgroundImageChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackgroundImageChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BackgroundImageChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.BackgroundImageLayout">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.BackgroundImageLayout">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BackgroundImageLayoutChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Este evento no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>Begins the initialization of the ActiveX control.</source>
          <target state="translated">Comienza la inicialización del control ActiveX.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Los entornos de diseño, este método utilizan normalmente para comenzar la inicialización de un componente que se emplea en un formulario o utilizado por otro componente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> método termina la inicialización.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Mediante el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> métodos impide que el control que se va a usar antes de que esté totalmente inicializado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">La inicialización se produce en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BindingContextChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.BindingContextChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BindingContextChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BindingContextChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.BindingContextChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ChangeUICues" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ChangeUICues" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ChangeUICues&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ChangeUICues&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ChangeUICues">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.Click">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Click" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Click" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Click">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Click&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Click&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Click">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Click">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>Gets or sets the control containing the ActiveX control.</source>
          <target state="translated">Obtiene o establece el control que contiene el control ActiveX.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> that represents the control containing the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> que representa el control que contiene el control ActiveX.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph> property value can be different from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph> valor de propiedad puede ser diferente de la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> represented by this property is the ActiveX control's logical container.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl&gt;</ph> representado por esta propiedad es el contenedor lógico del control ActiveX.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>For example, if an ActiveX control is hosted in a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, and the <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> is contained on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then the <ph id="ph4">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph> property value of the ActiveX control is the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>, and the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value is the <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control.</source>
          <target state="translated">Por ejemplo, si un control ActiveX está hospedado en un <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> (control) y el <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> se encuentra en un <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, la <ph id="ph4">&lt;xref:System.Windows.Forms.AxHost.ContainingControl%2A&gt;</ph> valor de propiedad del control ActiveX es el <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>y el <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> es el valor de la propiedad el <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>for all windows to get this property value.</source>
          <target state="translated">para todas las ventanas obtener este valor de propiedad.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContainingControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ContextMenu">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ContextMenu">
          <source>The shortcut menu associated with the control.</source>
          <target state="translated">Menú contextual asociado al control.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ContextMenuChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ContextMenuChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContextMenuChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ContextMenuChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ContextMenuChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">Crea un identificador para el control.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
          <source>The CLSID of the ActiveX control.</source>
          <target state="translated">Identificador CLSID del control ActiveX.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
          <source>Called by the system to create the ActiveX control.</source>
          <target state="translated">Lo llama el sistema para crear el control ActiveX.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el control ActiveX.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">Obtiene los parámetros de creación necesarios cuando se crea el identificador del control.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> que contiene los parámetros de creación necesarios cuando se crea el identificador del control.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.CreateSink">
          <source>Called by the control to prepare it for listening to events.</source>
          <target state="translated">Llamado por el control para prepararlo para escuchar los eventos.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.CreateSink">
          <source>This base-class implementation is empty.</source>
          <target state="translated">Esta implementación de la clase base está vacía.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Cursor">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Cursor">
          <source>The foreground color of the control.</source>
          <target state="translated">Color de primer plano del control.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.CursorChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.CursorChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.CursorChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.CursorChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.CursorChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">Obtiene el tamaño predeterminado del control.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> predeterminado del control.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DestroyHandle">
          <source>Destroys the handle associated with the control.</source>
          <target state="translated">Destruye el identificador asociado a este control.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DetachSink">
          <source>Called by the control when it stops listening to events.</source>
          <target state="translated">Llamado por el control cuando deja de escuchar los eventos.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.DetachSink">
          <source>This base-class implementation is empty.</source>
          <target state="translated">Esta implementación de la clase base está vacía.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and its child controls and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usan <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> y sus controles secundarios, además de liberar los recursos administrados de forma opcional.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DoubleClick" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DoubleClick" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DoubleClick&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DoubleClick&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DoubleClick">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
          <source>One of the actions enumerated for the object in IOleObject::EnumVerbs.</source>
          <target state="translated">Una de las acciones enumeradas para el objeto en IOleObject::EnumVerbs.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
          <source>Requests that an object perform an action in response to an end-user's action.</source>
          <target state="translated">Solicita que un objeto realice una acción en respuesta a una acción del usuario final.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
          <source>This method passes the specified verb to the <bpt id="p1">[</bpt>IOleObject::DoVerb<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166076)</ept> method of the hosted control.</source>
          <target state="translated">Este método pasa el verbo especificado para la <bpt id="p1">[</bpt>DoVerb<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166076)</ept> método del control hospedado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragDrop" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragDrop" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragDrop&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragDrop&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragDrop">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragEnter" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragEnter" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragEnter&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragEnter&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragEnter">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragLeave" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragLeave" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragLeave&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragLeave&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragLeave">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragOver" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.DragOver" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragOver&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.DragOver&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.DragOver">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Bitmap" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Bitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>This method is not supported by this control.</source>
          <target state="translated">El control no es compatible con este método.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.EditMode">
          <source>Returns a value that indicates whether the hosted control is in edit mode.</source>
          <target state="translated">Devuelve un valor que indica si el control hospedado está en modo de edición.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.EditMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the hosted control is in edit mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control hospedado se encuentra en modo de edición; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Enabled">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Enabled">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.EnabledChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.EnabledChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EnabledChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EnabledChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.EnabledChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>Ends the initialization of an ActiveX control.</source>
          <target state="translated">Termina la inicialización de un control ActiveX.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Entornos de diseño suelen utilizar este método para finalizar la inicialización de un componente que se emplea en un formulario o utilizado por otro componente.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> método termina la inicialización.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Mediante el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.BeginInit%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.EndInit%2A&gt;</ph> métodos impide que el control que se va a usar antes de que esté totalmente inicializado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">La inicialización se produce en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Font">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Font">
          <source>The font of the text displayed by the control.</source>
          <target state="translated">La fuente del texto que muestra el control.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.FontChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.FontChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.FontChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.FontChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.FontChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ForeColor">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ForeColor">
          <source>The foreground color of the control.</source>
          <target state="translated">Color de primer plano del control.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ForeColorChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ForeColorChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ForeColorChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ForeColorChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ForeColorChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
          <source>The OLE color value to translate.</source>
          <target state="translated">Valor de color OLE que se va a convertir.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that corresponds to the specified OLE color value.</source>
          <target state="translated">Devuelve una estructura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> que se corresponde con el valor de color OLE especificado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the translated OLE color value.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> que representa el valor de color OLE convertido.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
          <source>The IFont to create a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> from.</source>
          <target state="translated">IFont a partir del cual crear una <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> object.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> creado a partir del objeto <bpt id="p1">[</bpt>OLE IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> especificado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept>, <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> if the font could not be created, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if <ph id="ph4">&lt;paramref name="font" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> creado a partir del objeto <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> especificado, <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> si no se pudo crear la fuente o <ph id="ph3">&lt;see langword="null" /&gt;</ph> si <ph id="ph4">&lt;paramref name="font" /&gt;</ph> es <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
          <source>The IFontDisp to create a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> from.</source>
          <target state="translated">IFontDisp a partir del cual crear una <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> object.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> creado a partir del objeto OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> especificado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> created from the specified <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept>, <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> if the font could not be created, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if <ph id="ph4">&lt;paramref name="font" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> creado a partir del <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> especificado, <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> si no se pudo crear la fuente, o <ph id="ph3">&lt;see langword="null" /&gt;</ph> si <ph id="ph4">&lt;paramref name="font" /&gt;</ph> es <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>The font to create an IFontDisp object from.</source>
          <target state="translated">La fuente a partir de la cual crear un objeto IFontDisp.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>Returns an OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> object created from the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> object.</source>
          <target state="translated">Devuelve un objeto OLE <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> creado a partir del objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>The <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> object created from the specified font or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="font" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <bpt id="p1">[</bpt>IFontDisp<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166073)</ept> creado a partir de la fuente especificada, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;paramref name="font" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> property value is not <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>.</source>
          <target state="translated">El valor de propiedad <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> no es <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>The font to create an IFont object from.</source>
          <target state="translated">La fuente a partir de la cual crear un objeto IFont.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>Returns an OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> object created from the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> object.</source>
          <target state="translated">Devuelve un objeto OLE <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> creado a partir del objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>The <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> object created from the specified font, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="font" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> or the <bpt id="p2">[</bpt>IFont<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> could not be created.</source>
          <target state="translated">Objeto <bpt id="p1">[</bpt>IFont<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept> creado a partir de la fuente especificada, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;paramref name="font" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph> o no se pudo crear el objeto <bpt id="p2">[</bpt>IFont<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=166075)</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> property value is not <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>.</source>
          <target state="translated">El valor de propiedad <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Unit" /&gt;</ph> no es <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> object corresponding to the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> OLE correspondiente al valor de <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> OLE.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>, which is an image that represents the Windows mouse pointer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>, que es una imagen que representa el puntero del mouse de Windows.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object corresponding to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> OLE correspondiente al valor de <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> OLE.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object corresponding to the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> OLE correspondiente al valor de <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> OLE.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure to translate.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>Returns an OLE Automation date that corresponds to the specified <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure.</source>
          <target state="translated">Devuelve una fecha de automatización OLE que corresponde a la estructura <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>A double-precision floating-point number that contains an OLE Automation date equivalent to specified <ph id="ph1">&lt;paramref name="time" /&gt;</ph> value.</source>
          <target state="translated">Número de punto flotante de precisión doble que contiene la fecha de automatización OLE equivalente al valor <ph id="ph1">&lt;paramref name="time" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>An OLE Automation date is implemented as a floating-point number whose value is the number of days from midnight, 30 December 1899.</source>
          <target state="translated">Fecha de automatización OLE se implementa como un número de punto flotante cuyo valor es el número de días desde la medianoche del 30 de diciembre de 1899.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</source>
          <target state="translated">Por ejemplo, medianoche, 31 de diciembre de 1899 se representa como 1,0; 6 A.M., 1 de enero de 1900 se representa mediante 2.25; medianoche, 29 de diciembre de 1899 se representa como -1,0; y 6 A.M., 29 de diciembre de 1899 se representa como -1,25.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The base OLE Automation Date is midnight, 30 December 1899.</source>
          <target state="translated">La fecha de automatización OLE base es la medianoche del 30 de diciembre de 1899.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The maximum OLE Automation Date is the same as <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph>, the last moment of 31 December 9999.</source>
          <target state="translated">La fecha máxima de automatización OLE es igual a <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph>, el último momento del 31 de diciembre 9999.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>For more information about OLE Automation, see the <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</source>
          <target state="translated">Para obtener más información sobre la automatización OLE, vea el <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
          <source>The value of this instance cannot be represented as an OLE Automation Date.</source>
          <target state="translated">El valor de esta instancia no puede representarse como una fecha de Automation OLE.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>Retrieves a reference to the underlying ActiveX control.</source>
          <target state="translated">Recupera una referencia al control ActiveX subyacente.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>An object that represents the ActiveX control.</source>
          <target state="translated">Objeto que representa el control ActiveX.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">En el ejemplo de código siguiente se reemplaza el constructor y el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> métodos de un <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada que contiene el ActiveX Control Masked Edit de Microsoft.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">Este código requiere que haya creado el código fuente generado ejecutando AxImp.exe en el archivo MSMask32.ocx con el <ph id="ph1">`/source`</ph> conmutador que se va a generar la clase de contenedor que se pueda editar.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetOcx">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">Este código se muestra únicamente en sintaxis de C# porque esa es la salida de solo lenguaje por AxImp.exe.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure to translate.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
          <source>Returns an OLE color value that corresponds to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure.</source>
          <target state="translated">Devuelve un valor de color OLE que corresponde a la estructura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
          <source>The OLE color value that represents the translated <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure.</source>
          <target state="translated">Valor de color OLE que representa la estructura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> convertida.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> corresponding to the specified OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que corresponde al objeto <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> representing the <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que representa <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>You can use this method to convert <ph id="ph1">`IPictureDisp`</ph> objects in addition to <ph id="ph2">`IPicture`</ph> objects.</source>
          <target state="translated">Puede utilizar este método para convertir <ph id="ph1">`IPictureDisp`</ph> objetos además <ph id="ph2">`IPicture`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>This works because the <ph id="ph1">`IPictureDisp`</ph> OLE interface is a subset of the <ph id="ph2">`IPicture`</ph> interface.</source>
          <target state="translated">Esto funciona porque el <ph id="ph1">`IPictureDisp`</ph> OLE (interfaz) es un subconjunto de la <ph id="ph2">`IPicture`</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
          <source>Converting <ph id="ph1">`IPictureDisp`</ph> objects with this method is necessary because the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp%2A&gt;</ph> does not work correctly at this time.</source>
          <target state="translated">Convertir <ph id="ph1">`IPictureDisp`</ph> objetos con este método es necesario porque el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp%2A&gt;</ph> no funciona correctamente en este momento.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> corresponding to the specified OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que corresponde al objeto <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> representing the <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> que representa <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>This method does not work correctly.</source>
          <target state="translated">Este método no funciona correctamente.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPicture%2A&gt;</ph> method to convert an <ph id="ph2">`IPictureDisp`</ph> object into an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>, however, because the <ph id="ph4">`IPictureDisp`</ph> OLE interface is a subset of the <ph id="ph5">`IPicture`</ph> interface.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GetPictureFromIPicture%2A&gt;</ph> método para convertir un <ph id="ph2">`IPictureDisp`</ph> objeto en un <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>, sin embargo, porque la <ph id="ph4">`IPictureDisp`</ph> OLE (interfaz) es un subconjunto de la <ph id="ph5">`IPicture`</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The original bounds of the ActiveX control.</source>
          <target state="translated">Los límites originales del control ActiveX.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A scaling factor.</source>
          <target state="translated">Un factor de escala.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Called by the system to retrieve the current bounds of the ActiveX control.</source>
          <target state="translated">Lo llama el sistema para recuperar los límites actuales del control ActiveX.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The unmodified <ph id="ph1">&lt;paramref name="bounds" /&gt;</ph> value.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="bounds" /&gt;</ph> sin modificar.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>ActiveX controls scale themselves, so this method does not perform any special calculations, ignores the <ph id="ph1">`factor`</ph> and <ph id="ph2">`specified`</ph> values, and returns the <ph id="ph3">`bounds`</ph> value unchanged.</source>
          <target state="translated">Controles ActiveX se escalan a sí mismos, por lo que este método no realiza ningún cálculo especial, pasa por alto el <ph id="ph1">`factor`</ph> y <ph id="ph2">`specified`</ph> valores y devuelve el <ph id="ph3">`bounds`</ph> valor sin modificar.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The OLE Automate date to translate.</source>
          <target state="translated">Fecha de automatización OLE que se va a convertir.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure that corresponds to the specified OLE Automation date.</source>
          <target state="translated">Devuelve una estructura <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que corresponde a la fecha de automatización OLE especificada.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that represents the same date and time as <ph id="ph2">&lt;paramref name="date" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que representa la misma fecha y hora que <ph id="ph2">&lt;paramref name="date" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The <ph id="ph1">`date`</ph> parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</source>
          <target state="translated">El <ph id="ph1">`date`</ph> parámetro es un número de punto flotante de precisión doble que representa una fecha como el número de días antes o después de la fecha base, medianoche, 30 de diciembre de 1899.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The sign and integral part of <ph id="ph1">`date`</ph> encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of <ph id="ph2">`date`</ph> encodes the time of day as a fraction of a day displacement from midnight.</source>
          <target state="translated">La parte de entero y de inicio de sesión de <ph id="ph1">`date`</ph> codifican la fecha como un desplazamiento de días positivo o negativo desde el 30 de diciembre de 1899 y el valor absoluto de la parte fraccionaria del <ph id="ph2">`date`</ph> codifica la hora del día como una fracción de un desplazamiento de días desde la medianoche.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source><ph id="ph1">`date`</ph> must be a value between negative 657435.0 through positive 2958466.0.</source>
          <target state="translated"><ph id="ph1">`date`</ph> debe ser un valor entre 657435.0 negativo 2958466,0 positivo.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</source>
          <target state="translated">Tenga en cuenta que, debido al modo en que las fechas están codificadas, hay dos formas de representar cualquier hora del día del 30 de diciembre de 1899.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</source>
          <target state="translated">Por ejemplo, -0,5 y 0,5 significan el mediodía del 30 de diciembre de 1899 porque un desplazamiento de días de más o menos cero días a partir de la fecha base sigue siendo la fecha base, y medio día de desplazamiento desde la medianoche es mediodía.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>For more information about OLE Automation, see the <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</source>
          <target state="translated">Para obtener más información sobre la automatización OLE, vea el <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
          <source>The date is not a valid OLE Automation Date value.</source>
          <target state="translated">La fecha no es un valor válido de fecha de automatización OLE.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.GiveFeedback" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.GiveFeedback" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GiveFeedback&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.GiveFeedback&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.GiveFeedback">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>Gets a value indicating whether the ActiveX control has an <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box.</source>
          <target state="translated">Obtiene un valor que indica si el control ActiveX tiene un cuadro de diálogo <bpt id="p1">**</bpt>Acerca de<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ActiveX control has an <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si el control ActiveX tiene un <bpt id="p1">**</bpt>sobre<ept id="p1">**</ept> cuadro de diálogo; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>The <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box typically displays version and copyright information about the ActiveX control.</source>
          <target state="translated">El <bpt id="p1">**</bpt>sobre<ept id="p1">**</ept> por lo general, cuadro de diálogo muestra información de versión y copyright acerca del control ActiveX.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">En el ejemplo de código siguiente se reemplaza el constructor y el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> métodos de un <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada que contiene el ActiveX Control Masked Edit de Microsoft.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">Este código requiere que haya creado el código fuente generado ejecutando AxImp.exe en el archivo MSMask32.ocx con el <ph id="ph1">`/source`</ph> conmutador que se va a generar la clase de contenedor que se pueda editar.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.HasAboutBox">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">Este código se muestra únicamente en sintaxis de C# porque esa es la salida de solo lenguaje por AxImp.exe.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source>Determines if the ActiveX control has a property page.</source>
          <target state="translated">Determina si el control ActiveX tiene una página de propiedades.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ActiveX control has a property page; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control ActiveX tiene una página de propiedades; en caso contrario, es  <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source>Property pages allow an ActiveX control user to view and change ActiveX control properties.</source>
          <target state="translated">Páginas de propiedades permiten que un usuario del control ActiveX ver y cambiar las propiedades del control ActiveX.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.HasPropertyPages">
          <source>These properties are accessed by invoking a control properties dialog box, which contains one or more property pages that provide a customized, graphical interface for viewing and editing the control properties.</source>
          <target state="translated">Estas propiedades son accesibles mediante la invocación de un cuadro de diálogo de propiedades de control, que contiene uno o más páginas de propiedades que proporcionan una interfaz gráfica personalizada para ver y editar las propiedades del control.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.HelpRequested" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.HelpRequested" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HelpRequested&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HelpRequested&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.HelpRequested">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.ImeMode">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.ImeMode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ImeModeChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.ImeModeChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ImeModeChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ImeModeChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.ImeModeChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.InvokeEditMode">
          <source>Attempts to activate the editing mode of the hosted control.</source>
          <target state="translated">Intenta activar el modo de edición del control hospedado.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>The character to test.</source>
          <target state="translated">Carácter que se va a probar.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>Determines if a character is an input character that the ActiveX control recognizes.</source>
          <target state="translated">Determina si un carácter es un carácter de entrada que el control ActiveX reconoce.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character should be sent directly to the ActiveX control and not preprocessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el carácter se debe enviar directamente al control ActiveX sin preprocesamiento; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph> method is called during window message preprocessing to determine whether the given input character should be preprocessed or sent directly to the ActiveX control.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph> método se llama durante el preprocesamiento de mensajes de ventana para determinar si el carácter de entrada especificado debe ser preprocesado o envía directamente al control ActiveX.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
          <target state="translated">El preprocesamiento de un carácter incluye la comprobación de si el carácter es una tecla de acceso de otro control.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>, so the specified character is sent directly to the ActiveX control.</source>
          <target state="translated">Como se implementa en el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> (clase), el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.IsInputChar%2A&gt;</ph> método siempre devuelve <ph id="ph3">`true`</ph>, por lo que el carácter especificado se envía directamente al control ActiveX.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">para todas las ventanas para la herencia de clases para llamar a este método.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyDown" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyDown" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyDown&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyDown&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyDown">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyPress" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyPress" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyPress&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyPress&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyPress">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyUp" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.KeyUp" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyUp&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.KeyUp&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.KeyUp">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Layout" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Layout" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Layout&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Layout&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Layout">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.MakeDirty">
          <source>Announces to the component change service that the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> has changed.</source>
          <target state="translated">Anuncia al servicio de cambio de componentes que <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> ha cambiado.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseClick">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Este evento no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseDoubleClick">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Este evento no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseDown&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseDown&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseDown">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseEnter" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseEnter" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseEnter&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseEnter&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseEnter">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseHover" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseHover" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseHover&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseHover&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseHover">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseLeave" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseLeave" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseLeave&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseLeave&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseLeave">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseMove&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseMove&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseMove">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseUp&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseUp&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseUp">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseWheel" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseWheel" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseWheel&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.MouseWheel&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.MouseWheel">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>Gets or sets the persisted state of the ActiveX control.</source>
          <target state="translated">Obtiene o establece el estado almacenado del control ActiveX.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.State" /&gt;</ph> that represents the persisted state of the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.State" /&gt;</ph> que representa el estado almacenado del control ActiveX.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.OcxState%2A&gt;</ph> property is used after the control is created but before it is shown.</source>
          <target state="translated">El valor de la <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.OcxState%2A&gt;</ph> propiedad se utiliza después de crea el control, pero antes de que se muestre.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>The persisted state of the underlying ActiveX control is returned in the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.State&gt;</ph>.</source>
          <target state="translated">El estado almacenado del control ActiveX subyacente se devuelve en el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.State&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.OcxState">
          <source>The ActiveX control is already loaded.</source>
          <target state="translated">El control ActiveX ya está cargado.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnInPlaceActive">
          <source>Called when the control transitions to the in-place active state.</source>
          <target state="translated">Se llama cuando el control cambia al estado activo en contexto.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.OnInPlaceActive">
          <source>This base-class implementation is empty.</source>
          <target state="translated">Esta implementación de la clase base está vacía.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Paint" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.Paint" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Paint&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.Paint&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.Paint">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the message to process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> que se pasa por referencia y que representa el mensaje que se va a procesar.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">Los valores posibles son WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR y WM_SYSCHAR.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">Preprocesa los mensajes de teclado o de entrada en el bucle de mensajes antes de enviarlos.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control procesó el mensaje; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> que representa la tecla que se va a procesar.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">Procesa una tecla de diálogo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control procesó la tecla; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">Carácter que se va a procesar.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">Procesa un carácter de tecla de acceso.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el control procesó el carácter como carácter de tecla de acceso; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PropsValid">
          <source>Returns a value that indicates whether the hosted control is in a state in which its properties can be accessed.</source>
          <target state="translated">Devuelve un valor que indica si el control hospedado se encuentra en un estado en el que se puede tener acceso a sus propiedades.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.PropsValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the properties of the hosted control can be accessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se puede tener acceso a las propiedades del control hospedado; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryAccessibilityHelp&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryAccessibilityHelp&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryContinueDrag" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.QueryContinueDrag" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryContinueDrag&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.QueryContinueDrag&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.QueryContinueDrag">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event using the specified 32-bit signed integers.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> mediante los enteros con signo de 32 bits especificados.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event using the specified single-precision floating-point numbers.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> mediante los números de punto flotante de precisión sencilla especificados.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> event using the specified objects.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseDown" /&gt;</ph> mediante los objetos especificados.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event using the specified 32-bit signed integers.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> mediante los enteros con signo de 32 bits especificados.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event using the specified single-precision floating-point numbers.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> mediante los números de punto flotante de precisión sencilla especificados.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> event using the specified objects.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseMove" /&gt;</ph> mediante los objetos especificados.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event using the specified 32-bit signed integers.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> mediante los enteros con signo de 32 bits especificados.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event using the specified single-precision floating-point numbers.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> mediante los números de punto flotante de precisión sencilla especificados.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> values that indicate which mouse button was pressed.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> que indica el botón del mouse que se ha presionado.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>The x-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada x de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>The y-coordinate of a mouse click, in pixels.</source>
          <target state="translated">Coordenada y de un clic del mouse, en píxeles.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> event using the specified objects.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.MouseUp" /&gt;</ph> mediante los objetos especificados.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.RightToLeft">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.RightToLeft">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.RightToLeftChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.RightToLeftChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.RightToLeftChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.RightToLeftChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.RightToLeftChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.AboutBoxDelegate" /&gt;</ph> to call.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AxHost.AboutBoxDelegate" /&gt;</ph> que se va a llamar.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>Calls the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> method to display the ActiveX control's About dialog box.</source>
          <target state="translated">Llama al método <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> que mostrará el cuadro de diálogo Acerca de para el control ActiveX.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> method also allows derived classes to handle the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph> method without attaching a delegate.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> método también permite que las clases derivadas controlen el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph> método sin adjuntar ningún delegado.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>This is the preferred technique for handling the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">Ésta es la técnica preferida para controlar el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.ShowAboutBox%2A&gt;</ph> método en una clase derivada.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>The following code example overrides the constructor, and the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> methods of an <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> derived class that wraps the Microsoft Masked Edit ActiveX Control.</source>
          <target state="translated">En el ejemplo de código siguiente se reemplaza el constructor y el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost.AttachInterfaces%2A&gt;</ph> métodos de un <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase derivada que contiene el ActiveX Control Masked Edit de Microsoft.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>This code requires that you have created the generated source code by running the AxImp.exe on the MSMask32.ocx file with the <ph id="ph1">`/source`</ph> switch to generate the wrapper class to be edited.</source>
          <target state="translated">Este código requiere que haya creado el código fuente generado ejecutando AxImp.exe en el archivo MSMask32.ocx con el <ph id="ph1">`/source`</ph> conmutador que se va a generar la clase de contenedor que se pueda editar.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>This code is only shown in C# syntax because that is the only language output by the AxImp.exe.</source>
          <target state="translated">Este código se muestra únicamente en sintaxis de C# porque esa es la salida de solo lenguaje por AxImp.exe.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph> method so that registered delegates receive the <ph id="ph3">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /&gt;</ph> método para que los delegados registrados reciban el <ph id="ph3">&lt;see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuevo valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> del control.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuevo valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> del control.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuevo valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> del control.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nuevo valor de la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> del control.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated">Combinación bit a bit de los valores de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">Realiza la tarea de configurar los límites especificados de este control.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para que el control sea visible; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">Establece el control en el estado de visibilidad especificado.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowAboutBox">
          <source>Displays the ActiveX control's <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box.</source>
          <target state="translated">Muestra el cuadro de diálogo <bpt id="p1">**</bpt>Acerca de<ept id="p1">**</ept> del control ActiveX.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowAboutBox">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasAboutBox%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no <bpt id="p1">**</bpt>About<ept id="p1">**</ept> dialog box is displayed.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasAboutBox%2A&gt;</ph> es <ph id="ph2">`false`</ph>, pero no <bpt id="p1">**</bpt>sobre<ept id="p1">**</ept> se muestra el cuadro de diálogo.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Displays the property pages associated with the ActiveX control.</source>
          <target state="translated">Muestra las páginas de propiedades asociadas al control ActiveX.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>Displays the property pages associated with the ActiveX control.</source>
          <target state="translated">Muestra las páginas de propiedades asociadas al control ActiveX.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no property pages are displayed.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph> es <ph id="ph2">`false`</ph>, no hay páginas de propiedades se muestran.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>Property pages allow an ActiveX control user to view and change ActiveX control properties.</source>
          <target state="translated">Páginas de propiedades permiten que un usuario del control ActiveX ver y cambiar las propiedades del control ActiveX.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages">
          <source>These properties are accessed by invoking a control properties dialog box, which contains one or more property pages that provide a customized, graphical interface for viewing and editing the control properties.</source>
          <target state="translated">Estas propiedades son accesibles mediante la invocación de un cuadro de diálogo de propiedades de control, que contiene uno o más páginas de propiedades que proporcionan una interfaz gráfica personalizada para ver y editar las propiedades del control.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>The parent <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> of the ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> primario del control ActiveX.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>Displays the property pages associated with the ActiveX control assigned to the specified parent control.</source>
          <target state="translated">Muestra las páginas de propiedades asociadas al control ActiveX asignado al control primario especificado.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no property pages are displayed.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.HasPropertyPages%2A&gt;</ph> es <ph id="ph2">`false`</ph>, no hay páginas de propiedades se muestran.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>Property pages allow an ActiveX control user to view and change ActiveX control properties.</source>
          <target state="translated">Páginas de propiedades permiten que un usuario del control ActiveX ver y cambiar las propiedades del control ActiveX.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
          <source>These properties are accessed by invoking a control properties dialog box, which contains one or more property pages that provide a customized, graphical interface for viewing and editing the control properties.</source>
          <target state="translated">Estas propiedades son accesibles mediante la invocación de un cuadro de diálogo de propiedades de control, que contiene uno o más páginas de propiedades que proporcionan una interfaz gráfica personalizada para ver y editar las propiedades del control.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Site">
          <source>Gets or sets the site of the control.</source>
          <target state="translated">Obtiene o establece el sitio del control.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the Control, if any.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> asociado al control, si existe.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.StyleChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.StyleChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.StyleChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.StyleChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.StyleChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
          <source>Returns a collection of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> for the current object.</source>
          <target state="translated">Devuelve una colección del tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> para el objeto actual.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> with the attributes for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> con los atributos del objeto actual.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
          <source>Returns the class name of the current object.</source>
          <target state="translated">Devuelve el nombre de clase del objeto actual.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph> en todos los casos.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
          <source>Use the type name instead of the value that the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetClassName%2A&gt;</ph> method returns.</source>
          <target state="translated">Utilice el nombre de tipo en lugar del valor que el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetClassName%2A&gt;</ph> devuelve del método.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
          <source>Returns the name of the current object.</source>
          <target state="translated">Devuelve el nombre del objeto actual.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph> en todos los casos.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
          <source>Use the default name instead of the value that the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetComponentName%2A&gt;</ph> method returns.</source>
          <target state="translated">Use el nombre predeterminado en lugar del valor que el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetComponentName%2A&gt;</ph> devuelve del método.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
          <source>Returns a type converter for the current object.</source>
          <target state="translated">Devuelve un convertidor de tipos para el objeto actual.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph> en todos los casos.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
          <source>Use the default type converter instead of the value that the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetConverter%2A&gt;</ph> method returns.</source>
          <target state="translated">Use el convertidor de tipos predeterminado en lugar del valor que el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetConverter%2A&gt;</ph> devuelve del método.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
          <source>Returns the default event for the current object.</source>
          <target state="translated">Devuelve el evento predeterminado del objeto actual.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> that represents the default event for the current object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object does not have events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> que representa el evento predeterminado para el objeto actual o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si el objeto no tiene eventos.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
          <source>Returns the default property for the current object.</source>
          <target state="translated">Devuelve la propiedad predeterminada del objeto actual.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that represents the default property for the current object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object does not have properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que representa la propiedad predeterminada para el objeto actual o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si el objeto no tiene propiedades.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the editor for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa el editor del objeto actual.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
          <source>Returns an editor of the specified type for the current object.</source>
          <target state="translated">Devuelve un editor del tipo especificado para el objeto actual.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
          <source>An object of the specified type that is the editor for the current object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the editor cannot be found.</source>
          <target state="translated">Un objeto del tipo especificado que es el editor del objeto actual, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún editor.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Returns events for the current object.</source>
          <target state="translated">Devuelve eventos para el objeto actual.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <source>Returns the events for the current object.</source>
          <target state="translated">Devuelve los eventos del objeto actual.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> that represents the events for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> que representa los eventos del objeto actual.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that is used as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se utiliza como filtro.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
          <source>Returns the events for the current object using the specified attribute array as a filter.</source>
          <target state="translated">Devuelve los eventos del objeto actual utilizando la matriz de atributos especificada como filtro.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> that represents the events for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> that match the given set of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptorCollection" /&gt;</ph> que representa los eventos del control <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> que coinciden con el grupo de atributos especificado.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.AxHost">
          <source>Returns properties for the current object.</source>
          <target state="translated">Devuelve propiedades para el objeto actual.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <source>Returns the properties for the current object.</source>
          <target state="translated">Devuelve las propiedades del objeto actual.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the events for the current object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> que representa los eventos del objeto actual.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that is used as a filter.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que se utiliza como filtro.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
          <source>Returns the properties for the current object using the specified attribute array as a filter.</source>
          <target state="translated">Devuelve las propiedades del objeto actual utilizando la matriz de atributos especificada como filtro.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> that represents the events for the current <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> that match the given set of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> que representa los eventos del control <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> actual que coinciden con el grupo de atributos especificado.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <source>Not used.</source>
          <target state="translated">No usado.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <source>Returns the object that owns the specified value.</source>
          <target state="translated">Devuelve el objeto que posee el valor especificado.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <source>The current object.</source>
          <target state="translated">Objeto actual.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.AxHost.Text">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Esta propiedad no es relevante para esta clase.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.AxHost.Text">
          <source>The text associated with this control.</source>
          <target state="translated">Texto asociado al control.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>The <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.TextChanged" /&gt;</ph> event is not supported by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="E:System.Windows.Forms.AxHost.TextChanged" /&gt;</ph> no admite el evento <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AxHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>If you attempt to add or remove a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.TextChanged&gt;</ph> event, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">Si intenta agregar o quitar un controlador para el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost.TextChanged&gt;</ph> eventos, un <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>The events derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class are not supported by the <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Los eventos que se derivan de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> clase no son compatibles con el <ph id="ph2">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.AxHost.TextChanged">
          <source>The events exposed by the ActiveX control when the <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> wrapper is created are the events that should be used.</source>
          <target state="translated">Los eventos expuestos por el ActiveX controlan cuándo el <ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> se crea el contenedor son los eventos que se deben usar.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> de Windows que se va a procesar.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.AxHost.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Procesa los mensajes de Windows.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>