<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="454050a4259a9ccb9ac81d109fd22512df2bcf00" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Windows.Forms.TreeView.DrawNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.TreeView.DrawNode> eventos para personalizar el aspecto de los nodos en un <xref:System.Windows.Forms.TreeView> control mediante el dibujo del propietario.  
  
 El <xref:System.Windows.Forms.TreeView.DrawNode> evento es desencadenado por un <xref:System.Windows.Forms.TreeView> controlar cuándo su <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propiedad está establecida en <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> o <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> y se muestra o actualiza un nodo. El <xref:System.Windows.Forms.DrawTreeNodeEventArgs> pasado al evento controlador contiene información sobre el nodo que se va a dibujar y proporciona métodos que le ayudarán a dibujar el nodo.  
  
 Use la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> propiedades para recuperar información sobre el nodo que se va a dibujar. Use la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> propiedad para hacer el dibujo real dentro del área especificada por el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propiedad. Para hacer que el sistema operativo dibuje un nodo que no es necesario ser dibujado por el propietario, establezca el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad `true`.  
  
 Cuando el <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propiedad está establecida en <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>, el área indicada por el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> esta propiedad incluye la parte de la etiqueta del nodo de únicamente. Cuando el <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propiedad está establecida en <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>, la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> área incluye el nodo completo, incluyendo el área normalmente utilizada para los iconos, las casillas de verificación, los signos más y menos y líneas que conectan los nodos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar un <xref:System.Windows.Forms.TreeView> control mediante el dibujo del propietario. El <xref:System.Windows.Forms.TreeView> control en el ejemplo muestra etiquetas de nodo opcionales junto a las etiquetas de nodo estándar. Las etiquetas de nodo se especifican utilizando el <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propiedad. El <xref:System.Windows.Forms.TreeView> control también utiliza colores personalizados, incluido un color de resaltado personalizado.  
  
 Puede personalizar la mayoría de los <xref:System.Windows.Forms.TreeView> colores estableciendo las propiedades del color, pero el color de resaltado de selección no está disponible como una propiedad. Además, el rectángulo de resaltado de selección predeterminado sólo se extiende alrededor una etiqueta de nodo. Dibujo del propietario se debe usar para dibujar las etiquetas de nodo y para dibujar un rectángulo de resalte personalizado suficientemente grande como para incluir una etiqueta de nodo.  
  
 En el ejemplo, un controlador para el <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dibuja eventos las etiquetas de nodo y la selección personalizada resaltar manualmente. Los nodos no seleccionados no necesitan personalización. En estos casos, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad está establecida en `true` para que se dibujará el sistema operativo.  
  
 Además, un controlador para el <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> eventos proporciona una prueba de posicionamiento. De forma predeterminada, un nodo puede seleccionarse sólo haciendo clic en la región que rodea su etiqueta. El <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> controlador de eventos selecciona un nodo que se ha hecho clic en cualquier lugar dentro de esta región o dentro de la región que rodea una etiqueta de nodo, si está presente.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">Superficie <see cref="T:System.Drawing.Graphics" /> en la que se va a dibujar.</param>
        <param name="node">
          <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</param>
        <param name="bounds">Estructura <see cref="T:System.Drawing.Rectangle" /> dentro de la que se va a dibujar.</param>
        <param name="state">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TreeNodeStates" /> que indican el estado actual del control <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño y la ubicación del control <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</summary>
        <value>Estructura <see cref="T:System.Drawing.Rectangle" /> que representa los límites del control <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ubicación especificada por esta propiedad es relativa a la esquina superior izquierda de la <xref:System.Windows.Forms.TreeView> control.  
  
 Cuando el <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propiedad está establecida en <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>, el área especificada por el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propiedad es la región en la que un nodo puede hacer clic en él para seleccionarlo. Si dibuja fuera de esta región de prueba de posicionamiento, debe proporcionar su propio código para seleccionar un nodo cuando se hace clic en su área visible. También puede proporcionar su propia prueba de posicionamiento el código cuando la <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propiedad está establecida en <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>. En este modo, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propiedad abarca el nodo entero en todo el ancho de la <xref:System.Windows.Forms.TreeView> controlar, en lugar de la región de prueba de posicionamiento solo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar un <xref:System.Windows.Forms.TreeView> control mediante el dibujo del propietario. El <xref:System.Windows.Forms.TreeView> control en el ejemplo muestra etiquetas de nodo opcionales junto a las etiquetas de nodo estándar. Las etiquetas de nodo se especifican utilizando el <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propiedad. El <xref:System.Windows.Forms.TreeView> control también utiliza colores personalizados, incluido un color de resaltado personalizado.  
  
 Puede personalizar la mayoría de los <xref:System.Windows.Forms.TreeView> colores estableciendo las propiedades del color, pero el color de resaltado de selección no está disponible como una propiedad. Además, el rectángulo de resaltado de selección predeterminado sólo se extiende alrededor una etiqueta de nodo. Dibujo del propietario se debe usar para dibujar las etiquetas de nodo y para dibujar un rectángulo de resalte personalizado suficientemente grande como para incluir una etiqueta de nodo.  
  
 En el ejemplo, un controlador para el <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dibuja eventos las etiquetas de nodo y la selección personalizada resaltar manualmente. Los nodos no seleccionados no necesitan personalización. En estos casos, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad está establecida en `true` para que se dibujará el sistema operativo.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawTreeNodeEventArgs> tema de referencia de información general.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el sistema operativo debe dibujar el control <see cref="T:System.Windows.Forms.TreeNode" /> en lugar de que lo dibuje el propietario.</summary>
        <value>
          Es <see langword="true" /> si el sistema operativo debe dibujar el nodo; <see langword="false" /> si el nodo se va a dibujar en el controlador de eventos. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en `true` para los nodos que no desea personalizar cuando controlas el <xref:System.Windows.Forms.TreeView.DrawNode> eventos. Por ejemplo, esto es útil cuando desea personalizar sólo nodos que están en un estado específico.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de esta propiedad. En el ejemplo, un controlador para el <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> eventos dibuja la etiqueta de nodo y un personalizado color de resaltado manualmente para el nodo seleccionado. Nodos que no están seleccionados no necesitan personalización. Para los nodos no seleccionados, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad está establecida en `true` para que se dibujará el sistema operativo y no tendrá un aspecto personalizado.  
  
> [!NOTE]
>  Si dibuja un nodo manualmente y también establecen la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad `true`, que se sobrescriban algunos o todos de lo que se dibuja el sistema operativo.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawTreeNodeEventArgs> tema de referencia de información general.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Graphics" /> usado para dibujar el control <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>Objeto <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el control <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Drawing.Graphics> clase proporciona propiedades y métodos útiles para dibujar en el dispositivo de pantalla.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar un <xref:System.Windows.Forms.TreeView> control mediante el dibujo del propietario. El <xref:System.Windows.Forms.TreeView> control en el ejemplo muestra etiquetas de nodo opcionales junto a las etiquetas de nodo estándar. Las etiquetas de nodo se especifican utilizando el <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propiedad. El <xref:System.Windows.Forms.TreeView> control también utiliza colores personalizados, incluido un color de resaltado personalizado.  
  
 Puede personalizar la mayoría de los <xref:System.Windows.Forms.TreeView> colores estableciendo las propiedades del color, pero el color de resaltado de selección no está disponible como una propiedad. Además, el rectángulo de resaltado de selección predeterminado sólo se extiende alrededor una etiqueta de nodo. Dibujo del propietario se debe usar para dibujar las etiquetas de nodo y para dibujar un rectángulo de resalte personalizado suficientemente grande como para incluir una etiqueta de nodo.  
  
 En el ejemplo, un controlador para el <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dibuja eventos las etiquetas de nodo y la selección personalizada resaltar manualmente. Los nodos no seleccionados no necesitan personalización. En estos casos, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad está establecida en `true` para que se dibujará el sistema operativo.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawTreeNodeEventArgs> tema de referencia de información general.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para tener acceso a la <xref:System.Windows.Forms.TreeNode> objeto que se va a dibujar. Esto es útil cuando el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> propiedad no proporciona información suficiente para satisfacer sus necesidades. El <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> propiedad proporciona información de estado básica que puede utilizar, por ejemplo, para determinar si un nodo está seleccionado, activa o centrado. El <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> propiedad, por otro lado, le permite tener acceso a todos los miembros de la <xref:System.Windows.Forms.TreeNode> objeto. Debe tener acceso al nodo directamente, por ejemplo, cuando desea determinar su estado de expansión.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar un <xref:System.Windows.Forms.TreeView> control mediante el dibujo del propietario. El <xref:System.Windows.Forms.TreeView> control en el ejemplo muestra etiquetas de nodo opcionales junto a las etiquetas de nodo estándar. Las etiquetas de nodo se especifican utilizando el <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propiedad. El <xref:System.Windows.Forms.TreeView> control también utiliza colores personalizados, incluido un color de resaltado personalizado.  
  
 Puede personalizar la mayoría de los <xref:System.Windows.Forms.TreeView> colores estableciendo las propiedades del color, pero el color de resaltado de selección no está disponible como una propiedad. Además, el rectángulo de resaltado de selección predeterminado sólo se extiende alrededor una etiqueta de nodo. Dibujo del propietario se debe usar para dibujar las etiquetas de nodo y para dibujar un rectángulo de resalte personalizado suficientemente grande como para incluir una etiqueta de nodo.  
  
 En el ejemplo, un controlador para el <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dibuja eventos las etiquetas de nodo y la selección personalizada resaltar manualmente. Los nodos no seleccionados no necesitan personalización. En estos casos, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad está establecida en `true` para que se dibujará el sistema operativo.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawTreeNodeEventArgs> tema de referencia de información general.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado actual del control <see cref="T:System.Windows.Forms.TreeNode" /> que se va a dibujar.</summary>
        <value>Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TreeNodeStates" /> que indican el estado actual del control <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para comprobar si la <xref:System.Windows.Forms.TreeNode> es el objeto que se va a dibujar en un estado determinado. Esta propiedad proporciona sólo la información de estado básica sobre el nodo. Puede utilizar esta propiedad, por ejemplo, para determinar si un nodo está seleccionado, activa o centrado. Si desea obtener más información, recupere el nodo mediante el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> propiedad. Por ejemplo, para determinar si se expande el nodo, debe recuperar el nodo y compruebe el <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar un <xref:System.Windows.Forms.TreeView> control mediante el dibujo del propietario. El <xref:System.Windows.Forms.TreeView> control en el ejemplo muestra etiquetas de nodo opcionales junto a las etiquetas de nodo estándar. Las etiquetas de nodo se especifican utilizando el <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propiedad. El <xref:System.Windows.Forms.TreeView> control también utiliza colores personalizados, incluido un color de resaltado personalizado.  
  
 Puede personalizar la mayoría de los <xref:System.Windows.Forms.TreeView> colores estableciendo las propiedades del color, pero el color de resaltado de selección no está disponible como una propiedad. Además, el rectángulo de resaltado de selección predeterminado sólo se extiende alrededor una etiqueta de nodo. Dibujo del propietario se debe usar para dibujar las etiquetas de nodo y para dibujar un rectángulo de resalte personalizado suficientemente grande como para incluir una etiqueta de nodo.  
  
 En el ejemplo, un controlador para el <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dibuja eventos las etiquetas de nodo y la selección personalizada resaltar manualmente. Los nodos no seleccionados no necesitan personalización. En estos casos, el <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propiedad está establecida en `true` para que se dibujará el sistema operativo.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawTreeNodeEventArgs> tema de referencia de información general.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>