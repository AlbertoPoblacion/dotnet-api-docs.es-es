<Type Name="FeatureSupport" FullName="System.Windows.Forms.FeatureSupport">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f82934fbcf2c6c9410844cca1c8f4b12538dfa0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37569171" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FeatureSupport : System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FeatureSupport extends System.Object implements class System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FeatureSupport&#xA;Implements IFeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class FeatureSupport abstract : System::Windows::Forms::IFeatureSupport" />
  <TypeSignature Language="F#" Value="type FeatureSupport = class&#xA;    interface IFeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IFeatureSupport</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Proporciona los métodos <see langword="static" /> para recuperar información de características del sistema actual.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la `static` implementan métodos de esta clase cuando las clases de consulta para obtener información sobre características la <xref:System.Windows.Forms.IFeatureSupport> interfaz. En caso contrario, se heredan de <xref:System.Windows.Forms.FeatureSupport> y proporcionar su propia implementación. Para una implementación de esta clase, vea <xref:System.Windows.Forms.OSFeature>.  
  
 Para obtener el número de versión de una característica, llame a <xref:System.Windows.Forms.FeatureSupport.GetVersionPresent%2A>. Llame a <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> para determinar si está instalada una versión de una función o característica en particular.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Windows.Forms.OSFeature> implementación de <xref:System.Windows.Forms.FeatureSupport> y consulta el <xref:System.Windows.Forms.OSFeature.LayeredWindows> característica. La versión se comprueba para ver si es `null`, para determinar si la característica está presente. El resultado se muestra en un cuadro de texto. Este código supone `textBox1` se ha creado y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Al heredar de <see cref="T:System.Windows.Forms.FeatureSupport" />, debe invalidar el <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> método. Cuando se invalida este método, compruebe que la clase que usa para la <paramref name="feature" /> parámetro es igual que la clase utilizada para este parámetro en el <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> método. Si los dos <paramref name="feature" /> difieren de los parámetros, también debe invalidar <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.OSFeature" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FeatureSupport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FeatureSupport();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.FeatureSupport" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVersionPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene la versión de la característica especificada que está disponible en el sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public abstract Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="abstract member GetVersionPresent : obj -&gt; Version" Usage="featureSupport.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IFeatureSupport.GetVersionPresent(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Característica cuya versión se solicita.</param>
        <summary>Al reemplazarse en una clase derivada, obtiene la versión de la característica especificada que está disponible en el sistema.</summary>
        <returns>Valor <see cref="T:System.Version" /> que representa el número de versión de la característica especificada, o <see langword="null" />si no está instalada dicha característica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Números de versión constan de tres partes: principal, secundaria y compilación. Normalmente, un número de versión se muestra como "número secundario.número principales de versión".  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.OSFeature> implementación de <xref:System.Windows.Forms.FeatureSupport> y consulta el <xref:System.Windows.Forms.OSFeature.LayeredWindows> característica. La versión se comprueba para ver si es `null`, para determinar si la característica está presente. El resultado se muestra en un cuadro de texto. Este código requiere que `textBox1` se ha creado y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de <see cref="T:System.Windows.Forms.FeatureSupport" />, debe invalidar este método. Cuando se invalida este método, compruebe que la clase que usa para la <paramref name="feature" /> parámetro es igual que la clase utilizada para este parámetro en el <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> método. Si los dos <paramref name="feature" /> difieren de los parámetros, también debe invalidar <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.  Consulte <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> para una implementación de este método.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public static Version GetVersionPresent (string featureClassName, string featureConstName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version GetVersionPresent(string featureClassName, string featureConstName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionPresent (featureClassName As String, featureConstName As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ GetVersionPresent(System::String ^ featureClassName, System::String ^ featureConstName);" />
      <MemberSignature Language="F#" Value="static member GetVersionPresent : string * string -&gt; Version" Usage="System.Windows.Forms.FeatureSupport.GetVersionPresent (featureClassName, featureConstName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Nombre completo de la clase que hay que consultar para obtener información acerca de la característica especificada. Esta clase debe implementar la interfaz <see cref="T:System.Windows.Forms.IFeatureSupport" /> o heredarla de una clase que implemente esta interfaz.</param>
        <param name="featureConstName">Nombre completo de la característica que hay que buscar.</param>
        <summary>Obtiene la versión de la característica especificada que está disponible en el sistema.</summary>
        <returns>
          <see cref="T:System.Version" /> que representa el número de versión de la característica especificada, o <see langword="null" /> si dicha característica no está instalada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Números de versión constan de tres partes: principal, secundaria y compilación. Normalmente, un número de versión se muestra como "número secundario.número principales de versión".  
  
 Consulte la documentación del producto que contiene la función para determinar los nombres para pasar a la `featureClassName` y `featureConstName` parámetros.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si la característica especificada está instalada en el sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public virtual bool IsPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPresent (feature As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="abstract member IsPresent : obj -&gt; bool&#xA;override this.IsPresent : obj -&gt; bool" Usage="featureSupport.IsPresent feature" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IFeatureSupport.IsPresent(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Característica que se debe buscar.</param>
        <summary>Determina si hay alguna versión de la característica especificada instalada en el sistema.</summary>
        <returns>
          <see langword="true" /> si está presente la característica; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.OSFeature> implementación de <xref:System.Windows.Forms.FeatureSupport> y consulta el <xref:System.Windows.Forms.OSFeature.LayeredWindows> característica. La versión se comprueba para ver si es `null`, para determinar si la característica está presente. El resultado se muestra en un cuadro de texto. Este código requiere que `textBox1` se ha creado y colocado en un formulario.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de <see cref="T:System.Windows.Forms.FeatureSupport" />, debe invalidar el <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> método. Cuando se invalida este método, compruebe que la clase que usa para la <paramref name="feature" /> parámetro es igual que la clase utilizada para este parámetro en el <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> método. Si los dos <paramref name="feature" /> difieren de los parámetros, también debe invalidar <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public virtual bool IsPresent (object feature, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPresent (feature As Object, minimumVersion As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPresent(System::Object ^ feature, Version ^ minimumVersion);" />
      <MemberSignature Language="F#" Value="abstract member IsPresent : obj * Version -&gt; bool&#xA;override this.IsPresent : obj * Version -&gt; bool" Usage="featureSupport.IsPresent (feature, minimumVersion)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IFeatureSupport.IsPresent(System.Object,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="feature">Característica que se debe buscar.</param>
        <param name="minimumVersion">
          <see cref="T:System.Version" /> que representa el número de versión mínimo de la característica que se debe buscar.</param>
        <summary>Determina si la versión especificada, o una más reciente, de una determinada característica se encuentra instalada en el sistema.</summary>
        <returns>
          <see langword="true" /> si la característica está presente y su número de versión es mayor o igual al número de versión mínimo especificado; <see langword="false" /> si la característica no está instalada o su número de versión es inferior al mínimo especificado.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de <see cref="T:System.Windows.Forms.FeatureSupport" />, debe invalidar el <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> método. Cuando se invalida este método, compruebe que la clase que usa para la <paramref name="feature" /> parámetro es igual que la clase utilizada para este parámetro en el <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> método. Si los dos <paramref name="feature" /> difieren de los parámetros, también debe invalidar <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (string featureClassName, string featureConstName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(string featureClassName, string featureConstName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (featureClassName As String, featureConstName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::String ^ featureClassName, System::String ^ featureConstName);" />
      <MemberSignature Language="F#" Value="static member IsPresent : string * string -&gt; bool" Usage="System.Windows.Forms.FeatureSupport.IsPresent (featureClassName, featureConstName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Nombre completo de la clase que hay que consultar para obtener información acerca de la característica especificada. Esta clase debe implementar la interfaz <see cref="T:System.Windows.Forms.IFeatureSupport" /> o heredarla de una clase que implemente esta interfaz.</param>
        <param name="featureConstName">Nombre completo de la característica que hay que buscar.</param>
        <summary>Determina si hay alguna versión de la característica especificada instalada en el sistema. Este método es <see langword="static" />.</summary>
        <returns>
          <see langword="true" />si la característica especificada está presente; <see langword="false" /> si no está presente o el producto que la incluye no está instalado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte la documentación del producto que contiene la función para determinar los nombres para pasar a la `featureClassName` y `featureConstName` parámetros.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (string featureClassName, string featureConstName, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(string featureClassName, string featureConstName, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (featureClassName As String, featureConstName As String, minimumVersion As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::String ^ featureClassName, System::String ^ featureConstName, Version ^ minimumVersion);" />
      <MemberSignature Language="F#" Value="static member IsPresent : string * string * Version -&gt; bool" Usage="System.Windows.Forms.FeatureSupport.IsPresent (featureClassName, featureConstName, minimumVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Nombre completo de la clase que hay que consultar para obtener información acerca de la característica especificada. Esta clase debe implementar la interfaz <see cref="T:System.Windows.Forms.IFeatureSupport" /> o heredarla de una clase que implemente esta interfaz.</param>
        <param name="featureConstName">Nombre completo de la característica que hay que buscar.</param>
        <param name="minimumVersion">Valor <see cref="T:System.Version" /> que representa el número de versión mínimo de la característica.</param>
        <summary>Determina si la versión especificada, o una más reciente, de una determinada característica se encuentra instalada en el sistema. Este método es <see langword="static" />.</summary>
        <returns>
          <see langword="true" /> si la característica está presente y su número de versión es mayor o igual al número de versión mínimo especificado; <see langword="false" /> si la característica no está instalada o su número de versión es inferior al mínimo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte la documentación del producto que contiene la función para determinar los nombres para pasar a la `featureClassName` y `featureConstName` parámetros.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>