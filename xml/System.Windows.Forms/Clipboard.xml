<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8604e0fcace0c0ba869ba3f4c73a8c320bf0d9c6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30642329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos para colocar datos en el Portapapeles del sistema y recuperarlos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de formatos predefinidos que se usan con la <xref:System.Windows.Forms.Clipboard> de clases, consulte la <xref:System.Windows.Forms.DataFormats> clase.  
  
 Llame a <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> para colocar datos en el Portapapeles, reemplazando su contenido actual. Para colocar una copia persistente de los datos en el Portapapeles, establezca el `copy` parámetro `true`.  
  
> [!NOTE]
>  Para colocar datos en el Portapapeles en varios formatos, utilice la <xref:System.Windows.Forms.DataObject> clase o un <xref:System.Windows.Forms.IDataObject> implementación. Colocar datos en el Portapapeles en varios formatos para maximizar la posibilidad de que una aplicación de destino, cuyos requisitos de formato pueden desconocerse, pueda recuperar correctamente los datos.  
  
 Llame a <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> para recuperar datos desde el Portapapeles. Los datos se devuelven como un objeto que implementa el <xref:System.Windows.Forms.IDataObject> interfaz. Utilice los métodos especificados por <xref:System.Windows.Forms.IDataObject> y los campos de <xref:System.Windows.Forms.DataFormats> para extraer los datos del objeto. Si no conoce el formato de los datos recuperados, llame a la <xref:System.Windows.Forms.IDataObject.GetFormats%2A> método de la <xref:System.Windows.Forms.IDataObject> interfaz para obtener una lista de todos los formatos de datos se almacena en. A continuación, llame a la <xref:System.Windows.Forms.IDataObject.GetData%2A> método de la <xref:System.Windows.Forms.IDataObject> interfaz y especificar un formato que puede usar la aplicación.  
  
 En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la <xref:System.Windows.Forms.Clipboard> clase proporciona métodos adicionales que resulten más fácil trabajar con el Portapapeles del sistema. Llame a la <xref:System.Windows.Forms.Clipboard.Clear%2A> método para quitar todos los datos desde el Portapapeles. Para agregar datos de un formato determinado en el Portapapeles, reemplazando los datos existentes, llame a la correspondiente `Set` *formato* método, como <xref:System.Windows.Forms.Clipboard.SetText%2A>, o llamar a la <xref:System.Windows.Forms.Clipboard.SetData%2A> método para especificar el formato. Para recuperar datos de un formato determinado desde el Portapapeles, llame primero a la correspondiente `Contains` *formato* método (como <xref:System.Windows.Forms.Clipboard.ContainsText%2A>) método para determinar si el Portapapeles contiene datos en el que dar formato y, a continuación, llamar a la correspondiente `Get` *formato* método (como <xref:System.Windows.Forms.Clipboard.GetText%2A>) para recuperar los datos si el Portapapeles contiene. Para especificar el formato en estas operaciones, llame a la <xref:System.Windows.Forms.Clipboard.ContainsData%2A> y <xref:System.Windows.Forms.Clipboard.GetData%2A> métodos en su lugar.  
  
> [!NOTE]
>  Todas las aplicaciones basadas en Windows comparten el Portapapeles del sistema, por lo que el contenido está sujeta a cambios cuando se cambia a otra aplicación.  
>   
>  Un objeto debe ser serializable para que se pueda colocar en el Portapapeles. Si se pasa un objeto no serializable a un método de Portapapeles, se producirá un error en el método sin producir una excepción. Consulte <xref:System.Runtime.Serialization> para obtener más información acerca de la serialización. Si la aplicación de destino requiere un formato de datos muy específico, los encabezados agregados a los datos en el proceso de serialización pueden impedir que la aplicación reconozca los datos. Para conservar el formato de datos, agregar los datos como un <xref:System.Byte> matriz una <xref:System.IO.MemoryStream> y pase el <xref:System.IO.MemoryStream> a la <xref:System.Windows.Forms.DataObject.SetData%2A> método.  
>   
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
>   
>  Pueden ser necesarias consideraciones especiales cuando se usa el formato de metarchivo con el Portapapeles. Debido a una limitación en la implementación actual de la <xref:System.Windows.Forms.DataObject> (clase), el formato de metarchivo utilizado por .NET Framework no puede reconocer las aplicaciones que usan un formato de metarchivo anterior. En este caso, se debe interoperar con las interfaces de programación de aplicaciones (API) de Portapapeles de Win32. Para obtener más información, consulte el artículo 323530, "Metarchivos en Portapapeles son no visibles para todas las aplicaciones," de Microsoft Knowledge Base en http://support.microsoft.com.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Windows.Forms.Clipboard> métodos para colocar datos en y recuperar desde el Portapapeles del sistema. Este código supone `button1`, `button2`, `textBox1`, y `textBox2` se han creado y colocado en el formulario.  
  
 El `button1_Click` llamadas al método <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> para tomar el texto seleccionado en el cuadro de texto y lo coloca en el Portapapeles del sistema.  
  
 El `button2_Click` llamadas al método <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> para recuperar datos desde el Portapapeles del sistema. El código usa <xref:System.Windows.Forms.IDataObject> y <xref:System.Windows.Forms.DataFormats> para extraer los datos devueltos y muestra los datos en `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los datos del Portapapeles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que varios procesos comparten el Portapapeles, llamar a este método puede tener un impacto sobre dichos procesos.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para borrar el Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si en el Portapapeles hay datos con formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <returns>
          <see langword="true" /> si hay datos de audio en el Portapapeles; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para determinar si el Portapapeles contiene datos de audio antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Formato de los datos que hay que buscar. Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</param>
        <summary>Indica si en el Portapapeles hay datos con el formato especificado o que se puedan convertir a ese formato.</summary>
        <returns>
          <see langword="true" /> si en el Portapapeles haya datos con el formato que especifica el parámetro <paramref name="format" /> o que se puedan convertir a ese formato; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Forms.DataFormats> clase contiene nombres de formato predefinidos que puede usar con este método.  
  
 Utilice este método para determinar si el Portapapeles contiene datos en el formato especificado o con un formato compatible antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetData%2A> método.  
  
> [!NOTE]
>  Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión y si el formato solicitado es compatible con el formato almacenado. Por ejemplo, los datos almacenados como Unicode se pueden convertir en texto.  
>   
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si en el Portapapeles hay datos con el formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> o que se puedan convertir a ese formato.</summary>
        <returns>
          <see langword="true" /> si hay una lista desplegable de archivos en el Portapapeles; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una lista desplegable de archivos es una colección de cadenas que contienen información de ruta de acceso de archivos.  
  
 Utilice este método para determinar si el Portapapeles contiene una lista desplegable de archivos antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si en el Portapapeles hay datos con el formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> o que se puedan convertir a ese formato.</summary>
        <returns>
          <see langword="true" /> si hay datos de imagen en el Portapapeles; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para determinar si el Portapapeles contiene datos de la imagen antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetImage%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica si en el Portapapeles hay datos de texto.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si en el Portapapeles hay datos con el formato <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> o <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, en función del sistema operativo.</summary>
        <returns>
          <see langword="true" /> si hay datos de texto en el Portapapeles; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba la presencia de datos en el <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formato en [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] y [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. En caso contrario, este método comprueba la presencia de datos en el <xref:System.Windows.Forms.TextDataFormat.Text> formato.  
  
 Utilice este método para determinar si el Portapapeles contiene datos de texto antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetText%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una sobrecarga de la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> método que es similar a esta sobrecarga.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Uno de los valores de <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Indica si en el Portapapeles hay datos de texto con el formato que indica el valor de <see cref="T:System.Windows.Forms.TextDataFormat" /> especificado.</summary>
        <returns>
          <see langword="true" /> si hay datos de texto en el Portapapeles con el valor especificado para <paramref name="format" />; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para determinar si el Portapapeles contiene datos de texto antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetText%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> no es un valor <see cref="T:System.Windows.Forms.TextDataFormat" /> válido.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una secuencia de audio del Portapapeles.</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> que contiene datos de audio o <see langword="null" /> si el Portapapeles no contiene ningún dato con el formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> método para determinar si el Portapapeles contiene datos de audio antes de recuperarlos con este método.  
  
 Use la <xref:System.Windows.Forms.Clipboard.SetAudio%2A> método para agregar datos de audio en el Portapapeles.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Formato de los datos que se van a recuperar. Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</param>
        <summary>Recupera datos del Portapapeles con el formato especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa los datos del Portapapeles o <see langword="null" /> si el Portapapeles no contiene ningún dato cuyo formato sea el del parámetro <paramref name="format" /> especificado o que se pueda convertir a ese formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.Clipboard.ContainsData%2A> método para determinar si el Portapapeles contiene datos en el formato especificado o con un formato compatible antes de recuperarlos con este método.  
  
 Si este método no encuentra datos en el formato especificado, intenta convertir los datos en el formato. Si los datos no se puede convertir al formato especificado, o si los datos se almacenaron con la conversión automática establecida en `false`, este método devuelve `null`.  
  
> [!NOTE]
>  Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión y si el formato solicitado es compatible con el formato almacenado. Por ejemplo, los datos almacenados como Unicode se pueden convertir en texto.  
>   
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
 Use la <xref:System.Windows.Forms.Clipboard.SetData%2A> método para agregar datos en el Portapapeles en un formato determinado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera los datos que se encuentran actualmente en el Portapapeles del sistema.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.IDataObject" /> que representa los datos que existen actualmente en el Portapapeles, o <see langword="null" /> si no hay datos en el Portapapeles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el tipo de datos del objeto devuelto desde el Portapapeles puede variar, este método devuelve los datos en un <xref:System.Windows.Forms.IDataObject>. A continuación, puede utilizar métodos de la <xref:System.Windows.Forms.IDataObject> interfaz para extraer los datos de su tipo de datos correcto.  
  
 Este método intenta obtener los datos diez veces en intervalos de 100 milisegundos y produce una <xref:System.Runtime.InteropServices.ExternalException> si todos los intentos no tienen éxito.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Windows.Forms.Clipboard> métodos para colocar datos en y recuperar desde el Portapapeles del sistema. Este código supone `button1`, `button2`, `textBox1`, y `textBox2` se han colocado en el formulario.  
  
 El `button1_Click` llamadas al método <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> para tomar el texto seleccionado en el cuadro de texto y lo coloca en el Portapapeles del sistema.  
  
 El `button2_Click` llamadas al método <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> para recuperar datos desde el Portapapeles del sistema. El código usa <xref:System.Windows.Forms.IDataObject> y <xref:System.Windows.Forms.DataFormats> para extraer los datos devueltos. Los datos se muestran en `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se han podido recuperar datos del Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en modo de contenedor uniproceso (STA) y el valor de la propiedad <see cref="P:System.Windows.Forms.Application.MessageLoop" /> es <see langword="true" />. Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera del Portapapeles una colección de nombres de archivo.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene nombres de archivo o <see langword="null" /> si el Portapapeles no contiene ningún dato con el formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> o que se pueda convertir a ese formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una lista desplegable de archivos es una colección de cadenas que contienen información de ruta de acceso de archivos.  
  
 Una lista desplegable de archivos se almacena en el Portapapeles como una <xref:System.String> matriz. Este método convierte esta matriz en un <xref:System.Collections.Specialized.StringCollection> y devuelve la colección.  
  
 Use la <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> método para determinar si el Portapapeles contiene una lista desplegable de archivos antes de recuperarlos con este método.  
  
 Use la <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> método para agregar una lista desplegable de archivos en el Portapapeles.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una imagen del Portapapeles.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> que representa los datos de imagen del Portapapeles o <see langword="null" /> si el Portapapeles no contiene ningún dato con el formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> o que se pueda convertir a ese formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> método para determinar si el Portapapeles contiene datos de la imagen antes de recuperarlos con este método.  
  
 Use la <xref:System.Windows.Forms.Clipboard.SetImage%2A> método para agregar datos de la imagen en el Portapapeles.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera datos de texto del Portapapeles.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera del Portapapeles datos de texto que tengan el formato <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> o <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, en función del sistema operativo.</summary>
        <returns>Datos de texto del Portapapeles o <see cref="F:System.String.Empty" /> si el Portapapeles no contiene datos con el formato <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> o <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, dependiendo del sistema operativo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método devuelve los datos de texto en el <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formato en [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] y [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. En caso contrario, este método devuelve los datos de texto en el <xref:System.Windows.Forms.TextDataFormat.Text> formato.  
  
 Use la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> método para determinar si el Portapapeles contiene datos de texto antes de recuperarlos con este método.  
  
 Use la <xref:System.Windows.Forms.Clipboard.SetText%2A> método para agregar datos de texto en el Portapapeles.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una sobrecarga de la <xref:System.Windows.Forms.Clipboard.GetText%2A> método que es similar a esta sobrecarga.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Uno de los valores de <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Recupera del Portapapeles datos de texto con el formato que indica el valor de <see cref="T:System.Windows.Forms.TextDataFormat" /> especificado.</summary>
        <returns>Datos de texto del Portapapeles o <see cref="F:System.String.Empty" /> si el Portapapeles no contiene datos con el formato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> método para determinar si el Portapapeles contiene datos de texto antes de recuperarlos con este método.  
  
 Use la <xref:System.Windows.Forms.Clipboard.SetText%2A> método para agregar datos de texto en el Portapapeles.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> no es un valor <see cref="T:System.Windows.Forms.TextDataFormat" /> válido.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra el Portapapeles y, a continuación, agrega datos en <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> formato y reemplaza los datos existentes.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Matriz de <see cref="T:System.Byte" /> que contiene los datos de audio.</param>
        <summary>Borra el Portapapeles y agrega una matriz de <see cref="T:System.Byte" /> con el formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />, después de convertirla en un objeto <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recuperar datos de audio desde el Portapapeles, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> método para determinar si el Portapapeles contiene datos de audio antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una sobrecarga de la <xref:System.Windows.Forms.Clipboard.SetAudio%2A> método que es similar a esta sobrecarga.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de audio en el Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">
          <see cref="T:System.IO.Stream" /> que contiene los datos de audio.</param>
        <summary>Borra el Portapapeles y, a continuación, agrega <see cref="T:System.IO.Stream" /> en el formato <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recuperar datos de audio desde el Portapapeles, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> método para determinar si el Portapapeles contiene datos de audio antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de audio en el Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Formato de los datos que se va a establecer. Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</param>
        <param name="data">
          <see cref="T:System.Object" /> que representa los datos que se van a agregar.</param>
        <summary>Borra el Portapapeles y, a continuación, agrega los datos en el formato especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no conoce el formato de la aplicación de destino, puede almacenar datos en varios formatos con este método.  
  
 Los datos almacenados mediante este método se pueden convertir a un formato compatible cuando se recuperen.  
  
 Para recuperar datos desde el Portapapeles en un formato determinado, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsData%2A> método para determinar si el Portapapeles contiene datos con ese formato antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetData%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de cualquier tipo o formato al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra el Portapapeles y, a continuación, le agrega datos.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Datos que se van a colocar en el Portapapeles.</param>
        <summary>Borra el Portapapeles y, a continuación, coloca datos no persistentes en él.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se cierre la aplicación, los datos se eliminarán del Portapapeles del sistema.  
  
 Este método intenta establecer los datos diez veces en intervalos de 100 milisegundos y produce una <xref:System.Runtime.InteropServices.ExternalException> si todos los intentos no tienen éxito.  
  
> [!NOTE]
>  Un objeto debe ser serializable para que se pueda colocar en el Portapapeles. Si se pasa un objeto no serializable a este método, se producirá un error sin producir una excepción. Consulte <xref:System.Runtime.Serialization> para obtener más información acerca de la serialización.  
>   
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> para colocar datos de texto no persistentes en el Portapapeles del sistema. En el `button1_Click` método, se copia el texto seleccionado desde `textBox1` y pega en el Portapapeles. En el `button2_Click` método, la información se recuperan desde el Portapapeles y se muestra en `textBox2`. Este código supone `button1`, `button2`, `textBox1`, y `textBox2` se han creado y colocado en un formulario.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se han podido colocar datos en el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="data" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de cualquier tipo o formato al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Datos que se van a colocar en el Portapapeles.</param>
        <param name="copy">
          <see langword="true" /> si se desea que los datos permanezcan almacenados en el Portapapeles cuando se cierre la aplicación; de lo contrario <see langword="false" />.</param>
        <summary>Borra el Portapapeles y, a continuación, coloca datos en él y especifica si deben permanecer cuando se cierre la aplicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `copy` parámetro es `false`, se eliminarán los datos del Portapapeles del sistema cuando se cierre la aplicación.  
  
 Este método intenta establecer los datos diez veces en intervalos de 100 milisegundos y produce una <xref:System.Runtime.InteropServices.ExternalException> si todos los intentos no tienen éxito.  
  
> [!NOTE]
>  Un objeto debe ser serializable para que se pueda colocar en el Portapapeles. Si se pasa un objeto no serializable a este método, se producirá un error sin producir una excepción. Consulte <xref:System.Runtime.Serialization> para obtener más información acerca de la serialización.  
>   
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 El método siguiente se ejecuta en una aplicación. Coloca una copia persistente de los datos de texto seleccionado en el cuadro de texto en el Portapapeles del sistema. Este código supone `button1`, `textBox1`, y `textBox2` se han creado y colocado en un formulario.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 En una aplicación diferente, el siguiente método recupera el texto del Portapapeles del sistema y los pega el texto en `textBox2`. Este código supone `button2` y `textBox2` se han creado y colocado en un formulario.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se han podido colocar datos en el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="data" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de cualquier tipo o formato al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
        <Parameter Name="retryTimes" Type="System.Int32" />
        <Parameter Name="retryDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Datos que se van a colocar en el Portapapeles.</param>
        <param name="copy">
          <see langword="true" /> si se desea que los datos permanezcan almacenados en el Portapapeles cuando se cierre la aplicación; de lo contrario <see langword="false" />.</param>
        <param name="retryTimes">Número de veces que se va a intentar colocar los datos en el Portapapeles.</param>
        <param name="retryDelay">Número de milisegundos de pausa entre los intentos.</param>
        <summary>Borra el Portapapeles y, a continuación, intenta colocar datos en él el número especificado de veces y con la demora determinada entre cada intento y, opcionalmente, deja los datos en el Portapapeles después de cerrar la aplicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Agregar datos al Portapapeles en ocasiones puede producir errores si el Portapapeles está ocupado con otro subproceso o aplicación. Este método es útil para solucionar este problema en entornos con uso intensivo de Portapapeles.  
  
 Si el `copy` parámetro es `false`, se eliminarán los datos del Portapapeles del sistema cuando se cierre la aplicación.  
  
> [!NOTE]
>  Un objeto debe ser serializable para que se pueda colocar en el Portapapeles. Si se pasa un objeto no serializable a este método, se producirá un error sin producir una excepción. Consulte <xref:System.Runtime.Serialization> para obtener más información acerca de la serialización.  
>   
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="retryTimes" /> es menor que cero.  
  
 O bien  
  
 <paramref name="retryDelay" /> es menor que cero.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se han podido colocar datos en el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de cualquier tipo o formato al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">
          <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene los nombres de archivo.</param>
        <summary>Borra el Portapapeles y, a continuación, agrega una colección de nombres de archivo en el formato <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una lista desplegable de archivos es una colección de cadenas que contienen información de ruta de acceso de archivos.  
  
 Una lista desplegable de archivos se almacena en el Portapapeles como una <xref:System.String> matriz. Este método convierte `filePaths` a una <xref:System.String> matriz antes de agregarlo en el Portapapeles.  
  
 Para recuperar una lista desplegable de archivos desde el Portapapeles, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> método para determinar si el Portapapeles contiene datos con ese formato antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> no contiene ninguna cadena.  
  
 O bien  
  
 Al menos una de las cadenas de <paramref name="filePaths" /> es <see cref="F:System.String.Empty" />, contiene sólo espacio en blanco, contiene uno o varios caracteres no válidos de los que define <see cref="F:System.IO.Path.InvalidPathChars" />, es <see langword="null" />, contiene un carácter de dos puntos (:) o supera la longitud máxima definida por el sistema.  
  
 Para obtener más información, vea la propiedad <see cref="P:System.Exception.InnerException" /> de <see cref="T:System.ArgumentException" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos en el <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> formato al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para obtener acceso al sistema de archivos. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> que se va a agregar al Portapapeles.</param>
        <summary>Limpia el Portapapeles y, a continuación, agrega <see cref="T:System.Drawing.Image" /> en el formato <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recuperar datos de imagen desde el Portapapeles, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> método para determinar si el Portapapeles contiene datos de la imagen antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetImage%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos en el <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> formato al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Borra el Portapapeles y, a continuación, le agrega datos de texto.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a agregar al Portapapeles.</param>
        <summary>Borra el Portapapeles y le agrega datos de texto con el formato <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> o <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, en función del sistema operativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega datos de texto en el <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formato en [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] y [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. En caso contrario, este método agrega datos de texto en el <xref:System.Windows.Forms.TextDataFormat.Text> formato.  
  
 Para recuperar datos de texto desde el Portapapeles, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> método para determinar si el Portapapeles contiene datos de texto antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetText%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una sobrecarga de la <xref:System.Windows.Forms.Clipboard.SetText%2A> método que es similar a esta sobrecarga.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de texto al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a agregar al Portapapeles.</param>
        <param name="format">Uno de los valores de <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Borra el Portapapeles y agrega datos de texto con el formato que indica el valor de <see cref="T:System.Windows.Forms.TextDataFormat" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recuperar datos de texto desde el Portapapeles, utilice primero la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> método para determinar si el Portapapeles contiene datos de texto antes de recuperarlos con el <xref:System.Windows.Forms.Clipboard.GetText%2A> método.  
  
> [!NOTE]
>  La <xref:System.Windows.Forms.Clipboard> clase solo puede usarse en subprocesos establecidos en modo de apartamento de un único subproceso. Para utilizar esta clase, asegúrese de que su `Main` método está marcado con el <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra a este miembro.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">No se ha podido vaciar el Portapapeles. Esto ocurre normalmente cuando otro proceso utiliza el Portapapeles.</exception>
        <exception cref="T:System.Threading.ThreadStateException">El subproceso actual no está en el modo de contenedor uniproceso (STA). Agregue <see cref="T:System.STAThreadAttribute" /> al método <see langword="Main" /> de la aplicación.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> no es un valor <see cref="T:System.Windows.Forms.TextDataFormat" /> válido.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Para agregar datos de texto al Portapapeles del sistema. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>