<Type Name="RightToLeft" FullName="System.Windows.Forms.RightToLeft">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1b2889c20050083d3ee1b1571182717432b0c02" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36515506" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum RightToLeft" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RightToLeft extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.RightToLeft" />
  <TypeSignature Language="VB.NET" Value="Public Enum RightToLeft" />
  <TypeSignature Language="C++ CLI" Value="public enum class RightToLeft" />
  <TypeSignature Language="F#" Value="type RightToLeft = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Especifica un valor que indica si el texto aparece de derecha a izquierda, como sucede al utilizar fuentes hebreas o árabes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta enumeración se usa en <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> y <xref:System.Windows.Forms.Control>.  
  
 Cuando se recupera el valor de la `RightToLeft` propiedad de <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, y <xref:System.Windows.Forms.ProgressBar> obtendrá el valor de <xref:System.Windows.Forms.RightToLeft> asignado. En cambio, si va a derivar su propia clase de <xref:System.Windows.Forms.Control>, y asigne un valor de `Inherit` a la <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad, el valor devuelto será el valor de la <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad del control primario. Si no hay ningún control primario, devolverá un valor de `No`. En caso contrario, devolverá un valor de `Yes` o `No`, según el valor que asigna a la <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de la clase derivada.  
  
> [!NOTE]
>  Para obtener más información acerca de cómo afecta la alineación de derecha a izquierda a los controles de formularios Windows Forms, vea la <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=nameWithType> propiedad.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft Inherit = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberSignature Language="F#" Value="Inherit = 2" Usage="System.Windows.Forms.RightToLeft.Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>La dirección en la que se lee el texto se hereda del control primario.</summary>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="No" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft No = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.No" />
      <MemberSignature Language="VB.NET" Value="No" />
      <MemberSignature Language="C++ CLI" Value="No" />
      <MemberSignature Language="F#" Value="No = 0" Usage="System.Windows.Forms.RightToLeft.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>El texto se lee de izquierda a derecha. Este es el valor predeterminado.</summary>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="Yes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft Yes = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.Yes" />
      <MemberSignature Language="VB.NET" Value="Yes" />
      <MemberSignature Language="C++ CLI" Value="Yes" />
      <MemberSignature Language="F#" Value="Yes = 1" Usage="System.Windows.Forms.RightToLeft.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>El texto se lee de derecha a izquierda.</summary>
      </Docs>
    </Member>
  </Members>
</Type>