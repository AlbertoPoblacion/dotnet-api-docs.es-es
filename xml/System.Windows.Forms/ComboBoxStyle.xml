<Type Name="ComboBoxStyle" FullName="System.Windows.Forms.ComboBoxStyle">
  <TypeSignature Language="C#" Value="public enum ComboBoxStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ComboBoxStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBoxStyle" />
  <TypeSignature Language="VB.NET" Value="Public Enum ComboBoxStyle" />
  <TypeSignature Language="C++ CLI" Value="public enum class ComboBoxStyle" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="88262-101">Especifica el estilo de <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="88262-101">Specifies the <see cref="T:System.Windows.Forms.ComboBox" /> style.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88262-102">El <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> propiedad especifica si se muestra siempre la lista o si la lista se muestra en una lista desplegable.</span><span class="sxs-lookup"><span data-stu-id="88262-102">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property specifies whether the list is always displayed or whether the list is displayed in a drop-down.</span></span> <span data-ttu-id="88262-103">El <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> propiedad también especifica si se puede editar la parte de texto.</span><span class="sxs-lookup"><span data-stu-id="88262-103">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property also specifies whether the text portion can be edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88262-104">En el ejemplo de código siguiente se muestra cómo inicializar una <xref:System.Windows.Forms.ComboBox> control estableciendo la <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A?displayProperty=nameWithType> propiedad a un <xref:System.Windows.Forms.ComboBoxStyle> valor.</span><span class="sxs-lookup"><span data-stu-id="88262-104">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Forms.ComboBoxStyle> value.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="DropDown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ComboBoxStyle DropDown = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ComboBoxStyle.DropDown" />
      <MemberSignature Language="VB.NET" Value="DropDown" />
      <MemberSignature Language="C++ CLI" Value="DropDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88262-105">Especifica que la lista se muestra haciendo clic en la flecha abajo y que la parte del texto es modificable.</span><span class="sxs-lookup"><span data-stu-id="88262-105">Specifies that the list is displayed by clicking the down arrow and that the text portion is editable.</span></span> <span data-ttu-id="88262-106">Esto significa que el usuario puede escribir un nuevo valor y no está limitado a seleccionar un valor existente en la lista.</span><span class="sxs-lookup"><span data-stu-id="88262-106">This means that the user can enter a new value and is not limited to selecting an existing value in the list.</span></span> <span data-ttu-id="88262-107">Cuando se usa este valor, el valor <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" /> de <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" /> funciona de la misma manera que el valor <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />.</span><span class="sxs-lookup"><span data-stu-id="88262-107">When using this setting, the <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" /> value of <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" /> works the same as the <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> value.</span></span> <span data-ttu-id="88262-108">Éste es el estilo predeterminado.</span><span class="sxs-lookup"><span data-stu-id="88262-108">This is the default style.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DropDownList">
      <MemberSignature Language="C#" Value="DropDownList" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ComboBoxStyle DropDownList = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />
      <MemberSignature Language="VB.NET" Value="DropDownList" />
      <MemberSignature Language="C++ CLI" Value="DropDownList" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88262-109">Especifica que la lista se muestra haciendo clic en la flecha abajo y que la parte del texto no es modificable.</span><span class="sxs-lookup"><span data-stu-id="88262-109">Specifies that the list is displayed by clicking the down arrow and that the text portion is not editable.</span></span> <span data-ttu-id="88262-110">Esto significa que el usuario no puede especificar un nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="88262-110">This means that the user cannot enter a new value.</span></span> <span data-ttu-id="88262-111">Solo puede seleccionar los valores que ya figuran en la lista.</span><span class="sxs-lookup"><span data-stu-id="88262-111">Only values already in the list can be selected.</span></span> <span data-ttu-id="88262-112">Sólo se muestra la lista si <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" /> es <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> o <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />.</span><span class="sxs-lookup"><span data-stu-id="88262-112">The list displays only if <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" /> is <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> or <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Simple">
      <MemberSignature Language="C#" Value="Simple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ComboBoxStyle Simple = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ComboBoxStyle.Simple" />
      <MemberSignature Language="VB.NET" Value="Simple" />
      <MemberSignature Language="C++ CLI" Value="Simple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="88262-113">Especifica que la lista siempre está visible y que la parte del texto es modificable.</span><span class="sxs-lookup"><span data-stu-id="88262-113">Specifies that the list is always visible and that the text portion is editable.</span></span> <span data-ttu-id="88262-114">Esto significa que el usuario puede escribir un nuevo valor y no está limitado a seleccionar un valor existente en la lista.</span><span class="sxs-lookup"><span data-stu-id="88262-114">This means that the user can enter a new value and is not limited to selecting an existing value in the list.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>