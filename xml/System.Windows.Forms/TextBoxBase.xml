<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a227de2ffa998d6b8d2a88dafce3b56ece28a33" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37508442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4ce0-101">Implements the basic functionality required by text controls.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4ce0-101">Implements the basic functionality required by text controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-102">Esta clase implementa las características principales de controles de manipulación de texto, como <xref:System.Windows.Forms.TextBox> y <xref:System.Windows.Forms.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="c4ce0-103">Estos incluyen la selección de texto, **Portapapeles** funcionalidad y la compatibilidad con control de texto multilínea muchos eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-104">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un multilínea <xref:System.Windows.Forms.TextBox> control con las barras de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="c4ce0-105">En este ejemplo también usa el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, y <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedades para hacer que el control de cuadro de texto multilínea sea útil para crear documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="c4ce0-106">
        <para>Normalmente no hereda de <see cref="T:System.Windows.Forms.TextBoxBase" />. Para crear su propia clase de control de texto, herede de <see cref="T:System.Windows.Forms.TextBox" /> o <see cref="T:System.Windows.Forms.RichTextBox" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c4ce0-106">
          <para>You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />. To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-107">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-107">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-108">
            <see langword="true" /> Si los usuarios pueden escribir tabuladores en un cuadro de texto multilínea mediante la tecla TAB; <see langword="false" /> si al presionar la tecla TAB mueve el foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-108">
              <see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span>
          </span>
          <span data-ttu-id="c4ce0-109">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-109">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-110">El <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> también debe ser propiedad `true` para obtener un carácter de tabulación del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-110">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="c4ce0-111">Si el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> propiedad está establecida en `true`, el usuario debe presionar CTRL + TAB para mover el foco al siguiente control en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-111">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-112">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un multilínea <xref:System.Windows.Forms.TextBox> control con las barras de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-112">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="c4ce0-113">En este ejemplo también usa el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, y <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedades para hacer que el control de cuadro de texto multilínea sea útil para crear documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-113">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-114">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-114">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-115">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-115">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-116">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-116">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-117">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-117">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="c4ce0-118">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-118">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-119">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-119">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-120">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-120">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-121">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-121">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c4ce0-122">The text to append to the current contents of the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-122">The text to append to the current contents of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-123">Appends text to the current text of a text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-123">Appends text to the current text of a text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-124">Puede utilizar este método para agregar texto al texto existente en el control en lugar de usar el operador de concatenación (+) para concatenar texto para el <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-124">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-125">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> método y el <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> propiedad que se va a copiar el texto de una <xref:System.Windows.Forms.TextBox> a otro.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="c4ce0-126">Este ejemplo requiere que dos <xref:System.Windows.Forms.TextBox> controles denominados, `textBox1` y `textBox2`, se han agregado a un formulario y que `textBox1` tiene texto asignado a su <xref:System.Windows.Forms.Control.Text%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-126">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-127">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-127">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-128">
            <see langword="true" /> Si el alto del control se ajusta automáticamente cuando se cambia la fuente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-128">
              <see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4ce0-129">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-129">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-130">Al establecer el <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> propiedad `true` para un <xref:System.Windows.Forms.TextBox>, cuando el <xref:System.Windows.Forms.Control.Font%2A> cambios, el <xref:System.Windows.Forms.TextBox> expande o contrae el <xref:System.Windows.Forms.Control.Height%2A> para dar cabida al texto mayor o menor.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-130">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="c4ce0-131">El <xref:System.Windows.Forms.Control.Width%2A> de la <xref:System.Windows.Forms.TextBox> no cambia.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-131">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="c4ce0-132">Si desea cambiar el tamaño del control cuando el usuario escribe texto, puede usar un <xref:System.Windows.Forms.RichTextBox> controlar y usar su <xref:System.Windows.Forms.RichTextBox.ContentsResized> eventos para cambiar su tamaño.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-132">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-133">En este ejemplo se da por supuesto que tiene un formulario con dos cuadros de texto, dos botones y haga clic en eventos para cada uno de los botones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-133">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="c4ce0-134">El ejemplo se muestra el <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> propiedad si se establece en `true` para un cuadro de texto y `false` para los demás.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-134">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="c4ce0-135">Al hacer clic en un botón se rellenan los cuadros de texto con un texto más pequeño y, al hacer clic en el botón otro se rellenan los cuadros de texto con texto más grande.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-135">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="c4ce0-136">El cuadro de texto que tiene <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> establecido en `true` se expande en alto para alojar el texto más grande.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-136">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="c4ce0-137">El ancho no cambia.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-137">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-138">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-138">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-139">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-139">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-140">Gets or sets the background color of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-140">Gets or sets the background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-141">Un <see cref="T:System.Drawing.Color" /> que representa el fondo del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-141">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-142">Puede usar el <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propiedad para cambiar el color de fondo del control de texto se mezclan en la combinación de colores de los formularios.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-142">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="c4ce0-143">Para cambiar el color del texto dentro del control, use el <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-143">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="c4ce0-144">Al establecer el <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propiedad del control de texto, asegúrese de que el color elegido no hace que el texto del control desaparezca.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-144">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="c4ce0-145">Por ejemplo, si la <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> y <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propiedades se establecen en `Color.Black`, no será visible el texto dentro del control de cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-145">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="c4ce0-146">Esta propiedad puede suponer sobre if anula la <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> propiedad de la <xref:System.Windows.Forms.TextBoxBase> está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-146">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-147">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-147">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-148">La imagen de fondo para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-148">The background image for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-149">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-149">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-150">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-150">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          </span>
          <span data-ttu-id="c4ce0-151">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-151">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-152">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-152">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-153">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-153">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-154">Uno de los valores de <see cref="T:System.Windows.Forms.ImageLayout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-154">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-155">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-155">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-156">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-156">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          </span>
          <span data-ttu-id="c4ce0-157">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-157">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-158">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-158">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-159">Gets or sets the border type of the text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-159">Gets or sets the border type of the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-160">Un <see cref="T:System.Windows.Forms.BorderStyle" /> que representa el tipo de borde del control de cuadro de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-160">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span>
          </span>
          <span data-ttu-id="c4ce0-161">De manera predeterminada, es <see langword="Fixed3D" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-161">The default is <see langword="Fixed3D" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-162">Puede usar el <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> propiedad que se va a crear controles de estilo plana y sin borde, además del control tridimensional predeterminado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-162">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-163">La clase derivada, <xref:System.Windows.Forms.RichTextBox>, no es compatible con la `BorderStyle.FixedSingle` estilo.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-163">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="c4ce0-164">Este estilo hará que el <xref:System.Windows.Forms.BorderStyle> para usar el `BorderStyle.Fixed3D` de estilo en su lugar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-164">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-165">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un cuadro de texto que puede mostrar texto con fuente Arial de 20 puntos con un solo borde correctamente.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-165">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="c4ce0-166">Este ejemplo se usa el <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> propiedad para determinar el alto del control adecuado después de la fuente y <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> se han asignado al control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-166">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c4ce0-167">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-167">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-168">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-168">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-169">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-169">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-170">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-170">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-171">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-171">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="c4ce0-172">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-172">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-173">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-173">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-174">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-174">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-175">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-175">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-176">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-176">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-177">
            <see langword="false" /> Si el <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> propiedad es <see langword="true" /> o si este <see cref="T:System.Windows.Forms.TextBoxBase" /> clase está configurada para usar una máscara de contraseña carácter; en caso contrario, <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-177">
              <see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-178">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-178">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-179">
            <see langword="true" /> Si el usuario puede deshacer la operación anterior realizada en un control de cuadro de texto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-179">
              <see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-180">Si este método devuelve `true`, puede llamar a la <xref:System.Windows.Forms.TextBoxBase.Undo%2A> método para deshacer la última operación en un cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-180">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="c4ce0-181">Puede usar este método en el <xref:System.Windows.Forms.MenuItem.Popup> eventos de un <xref:System.Windows.Forms.MenuItem>, o en el código que administra el estado de los botones en un <xref:System.Windows.Forms.ToolBar> para habilitar o deshabilitar la capacidad de deshacer la operación anterior en un control de cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-181">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-182">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-182">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-183">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-183">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-184">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-184">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-185">Clears all text from the text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-185">Clears all text from the text box control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-186">Puede usar este método para borrar el contenido del control en lugar de asignar la <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-186">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-187">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un controlador de eventos para el <xref:System.Windows.Forms.Control.TextChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-187">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="c4ce0-188">El código del controlador de eventos restringe los datos a los números.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-188">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="c4ce0-189">Una vez que ha escrito texto en el control, el código determina si el texto escrito es un número.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-189">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="c4ce0-190">Si el texto no es un número, el código borra el texto del control y un <xref:System.Windows.Forms.MessageBox> se muestra para avisar al usuario que se aceptan solo números.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-190">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="c4ce0-191">El ejemplo requiere que un `Boolean` variable denominada `flag` y un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se definen fuera de este método.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-191">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="c4ce0-192">Este ejemplo muestra cómo utilizar una variable de indicador para evitar un evento en cascada en la <xref:System.Windows.Forms.Control.TextChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-192">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-193">Clears information about the most recent operation from the undo buffer of the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-193">Clears information about the most recent operation from the undo buffer of the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-194">Puede usar este método para evitar que una operación de deshacer de repetición, según el estado de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-194">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-195">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-195">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-196">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-196">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-197">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-197">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-198">Occurs when the text box is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-198">Occurs when the text box is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-199">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-199">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-200">En el ejemplo de código siguiente se muestra cómo controlar el <xref:System.Windows.Forms.TextBoxBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-200">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="c4ce0-201">Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.TextBox> control denominado TextBox1.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-201">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="c4ce0-202">Este ejemplo requiere que el método de control de eventos se ha asociado con el <xref:System.Windows.Forms.TextBoxBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-202">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-203">Copies the current selection in the text box to the **Clipboard**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-203">Copies the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-204">Puede usar este método, en lugar de usar el <xref:System.Windows.Forms.Clipboard> (clase), para copiar texto en el cuadro de texto y colóquelo en el **Portapapeles**.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-204">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-205">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-205">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-206">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-206">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-207">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-207">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-208">Creates a handle for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-208">Creates a handle for the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c4ce0-209">para trabajar con código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-209">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c4ce0-210">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-210">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-211">Gets the required creation parameters when the control handle is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-211">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-212">
            <see cref="T:System.Windows.Forms.CreateParams" /> que contiene los parámetros de creación necesarios cuando se crea el identificador del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-212">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-213">Moves the current selection in the text box to the **Clipboard**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-213">Moves the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-214">Este método solo cortar texto en el cuadro de texto si hay texto seleccionado en el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-214">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="c4ce0-215">Puede usar este método, en lugar de usar el <xref:System.Windows.Forms.Clipboard> (clase), puede copiar texto en el cuadro de texto y moverlo a la **Portapapeles**.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-215">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-216">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-216">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-217">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-217">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-218">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-218">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-219">Gets or sets the default cursor for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-219">Gets or sets the default cursor for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-220">Un objeto de tipo <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor predeterminado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-220">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-221">Invalidar <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> para configurar un cursor predeterminado para el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-221">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="c4ce0-222">Esto es más eficaz que establecer el cursor en el constructor del control y proporciona compatibilidad automática para ciertas funciones de diseñador relacionadas con el cursor.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-222">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-223">Gets the default size of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-223">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-224">
            <see cref="T:System.Drawing.Size" /> predeterminado del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-224">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-225">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-225">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-226">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-226">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          </span>
          <span data-ttu-id="c4ce0-227">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-227">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-228">
            <see langword="true" /> para implementar el almacenamiento en búfer doble en el control; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-228">
              <see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-229">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-229">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-230">Gets or sets the foreground color of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-230">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-231">Un <see cref="T:System.Drawing.Color" /> que representa el color de primer plano del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-231">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-232">Puede usar el <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propiedad para cambiar el color del texto dentro del control para que coincida con el texto de otros controles en el formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-232">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="c4ce0-233">También puede utilizar esta propiedad para resaltar un cuadro de texto que contiene un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-233">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="c4ce0-234">Para cambiar el color de fondo del control, use el <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-234">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="c4ce0-235">Al establecer el <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propiedad del control de texto, asegúrese de que el color elegido no hace que el texto del control desaparezca.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-235">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="c4ce0-236">Por ejemplo, si la <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> y <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propiedades se establecen en `Color.Black`, no será visible el texto dentro del control de cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-236">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="c4ce0-237">Esta propiedad puede suponer sobre if anula la <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> propiedad de la <xref:System.Windows.Forms.TextBoxBase> está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-237">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="c4ce0-238">The location from which to seek the nearest character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-238">The location from which to seek the nearest character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-239">Retrieves the character that is closest to the specified location within the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-239">Retrieves the character that is closest to the specified location within the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-240">The character at the specified location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-240">The character at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-241">Si la ubicación especificada en el `pt` parámetro está fuera del área cliente del control, el primer carácter de la cadena más cercana para el punto especificado en `pt` se devuelve.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-241">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="c4ce0-242">Puede usar este método para determinar qué caracteres se encuentran cerca de un punto específico dentro del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-242">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="c4ce0-243">A continuación, puede usar este valor para realizar operaciones en el texto en esa ubicación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-243">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-244">Si la ubicación especificada en el `pt` parámetro se encuentra en el lado derecho del área cliente del control, el último carácter de la cadena más cercano al punto especificado en `pt` se devuelve.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-244">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="c4ce0-245">The location to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-245">The location to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-246">Retrieves the index of the character nearest to the specified location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-246">Retrieves the index of the character nearest to the specified location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-247">The zero-based character index at the specified location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-247">The zero-based character index at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-248">Este método devuelve el índice de carácter más cercano a la posición especificada en el `pt` parámetro.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-248">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="c4ce0-249">El índice de carácter es un índice de base cero del texto en el control, incluidos los espacios.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-249">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="c4ce0-250">Puede usar este método para determinar donde en el texto con la que el usuario ha colocado pasar el mouse en coordenadas a este método el mouse.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-250">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="c4ce0-251">Esto puede ser útil si desea realizar tareas cuando el usuario sitúe el puntero del mouse sobre una palabra en el texto del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-251">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4ce0-252">Si la ubicación especificada no está dentro del rectángulo cliente del control, o está más allá del último carácter en el control, el valor devuelto es el índice del último carácter.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-252">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="c4ce0-253">The line for which to get the index of its first character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-253">The line for which to get the index of its first character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-254">Retrieves the index of the first character of a given line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-254">Retrieves the index of the first character of a given line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-255">The zero-based index of the first character in the specified line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-255">The zero-based index of the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-256">Numeración de líneas en el cuadro de texto comienza en cero.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-256">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="c4ce0-257">Si el `lineNumber` parámetro es mayor que la última línea en el cuadro de texto, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-257">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="c4ce0-258"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> Devuelve el índice del primer carácter de una línea física.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-258"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="c4ce0-259">La línea física es la línea mostrada, no la línea asignada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-259">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="c4ce0-260">El número de líneas mostradas puede ser mayor que el número de líneas asignadas debido al ajuste de línea.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-260">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="c4ce0-261">Por ejemplo, si asigna dos líneas largas para un <xref:System.Windows.Forms.RichTextBox> controlar y establecer <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> y <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> a `true`, como resultado de las dos líneas físicas cuatro (o líneas mostradas).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-261">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4ce0-262">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-262">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-263">Retrieves the index of the first character of the current line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-263">Retrieves the index of the first character of the current line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-264">The zero-based character index in the current line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-264">The zero-based character index in the current line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c4ce0-265">The character index position to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-265">The character index position to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-266">Retrieves the line number from the specified character position within the text of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-266">Retrieves the line number from the specified character position within the text of the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-267">The zero-based line number in which the character index is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-267">The zero-based line number in which the character index is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-268">Este método le permite determinar el número de línea según el índice de carácter especificado en el `index` parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-268">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="c4ce0-269">La primera línea del texto en el control devuelve el valor cero.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-269">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="c4ce0-270">El <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> método devuelve el número de línea física donde el carácter indizado se encuentra dentro del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-270">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="c4ce0-271">Por ejemplo, si una parte de la primera línea lógica del texto en el control se ajusta a la línea siguiente, el <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> método devuelve 1 si el carácter que ocupa el índice de carácter especificado se ha ajustado a la segunda línea física.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-271">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="c4ce0-272">Si <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> está establecido en `false`, ninguna parte de la línea se ajusta a la siguiente y el método devuelve 0 para el índice de carácter especificado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-272">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="c4ce0-273">Puede usar este método para determinar cuál es la línea se encuentra dentro de un índice de carácter específico.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-273">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="c4ce0-274">Por ejemplo, después de llamar a la <xref:System.Windows.Forms.RichTextBox.Find%2A> método para buscar texto, puede obtener el índice del carácter donde se encuentran los resultados de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-274">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="c4ce0-275">Puede llamar a este método con el índice de carácter devuelto por el <xref:System.Windows.Forms.RichTextBox.Find%2A> se encontró el método para determinar qué línea de la palabra.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-275">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-276">Si el índice de carácter especificado en el `index` parámetro está más allá del número de líneas que contiene el control disponible, se devuelve el último número de línea.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-276">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c4ce0-277">The index of the character for which to retrieve the location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-277">The index of the character for which to retrieve the location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-278">Retrieves the location within the control at the specified character index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-278">Retrieves the location within the control at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-279">The location of the specified character within the client rectangle of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-279">The location of the specified character within the client rectangle of the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-280">Este método le permite determinar dónde se encuentra un índice de carácter específico en el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-280">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="c4ce0-281">Puede usar este método para tareas como mostrar contextual menú elementos o información de ayuda para una palabra en el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-281">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="c4ce0-282">Por ejemplo, si desea mostrar un menú de opciones al usuario cuando el usuario hace clic en una palabra en el control, puede usar este método para determinar la posición de la palabra para mostrar correctamente un <xref:System.Windows.Forms.ContextMenu> control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-282">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-283">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-283">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-284">
            <see langword="true" /> Si el texto seleccionado no aparece resaltado cuando el control de cuadro de texto pierde foco; <see langword="false" />, si el texto seleccionado permanece resaltado cuando el control de cuadro de texto pierde el foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-284">
              <see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span>
          </span>
          <span data-ttu-id="c4ce0-285">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-285">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-286">Puede utilizar esta propiedad para mantener el texto resaltado en un control de cuadro de texto mientras otro formulario o un cuadro de diálogo tiene el foco, por ejemplo, un cuadro de diálogo del corrector ortográfico.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-286">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-287">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-287">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="c4ce0-288">Para ejecutar el ejemplo, pegue el código siguiente en un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-288">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="c4ce0-289">Llame a la `InitializeTextBox` método en el constructor del formulario o `Load` método.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-289">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-290">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-290">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-291">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-291">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-292">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-292">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-293">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-293">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="c4ce0-294">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-294">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-295">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-295">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-296">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-296">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-297">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-297">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-298">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-298">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-299">Modo IME del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-299">The IME mode of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="c4ce0-300">One of the Keys value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-300">One of the Keys value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-301">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-301">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-302">
            <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-302">
              <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-303">El <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> devuelve del método `true` cuando el `keyData` parámetro incluye la <xref:System.Windows.Forms.Keys.Tab> valor y el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-303">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="c4ce0-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Devuelve `false` si `keyData` contiene tanto <xref:System.Windows.Forms.Keys.Tab> y <xref:System.Windows.Forms.Keys.Control>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-305">Gets or sets the lines of text in a text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-305">Gets or sets the lines of text in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-306">Matriz de cadenas que contiene el texto en un control de cuadro de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-306">An array of strings that contains the text in a text box control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-307">Cada elemento de la matriz se convierte en una línea de texto en el control de cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-307">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="c4ce0-308">Si el <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad del control de cuadro de texto se establece en `true` y un carácter de nueva línea aparece en el texto, el texto después del carácter de nueva línea se agrega a un nuevo elemento en la matriz y se muestra en una línea independiente.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-308">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-309">De forma predeterminada, la colección de líneas es una copia de solo lectura de las líneas en el <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-309">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="c4ce0-310">Para obtener una colección de líneas de escritura, use código similar al siguiente: `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="c4ce0-310">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-311">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para extraer todas las cadenas de texto de un control de cuadro de texto multilínea y las muestra mediante el <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-311">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c4ce0-312">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> se ha creado el control, denominado `textBox1`, y que se ha rellenado con líneas de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-312">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-313">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-313">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-314">Número de caracteres que pueden escribirse en el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-314">The number of characters that can be entered into the control.</span>
          </span>
          <span data-ttu-id="c4ce0-315">El valor predeterminado es 32767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-315">The default is 32767.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-316">Puede utilizar esta propiedad para restringir la longitud del texto escrito en el control para valores como números de teléfono y códigos postales, o para restringir la longitud del texto escrito cuando los datos se deben especificar en una base de datos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-316">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="c4ce0-317">Puede limitar el texto especificado en el control a la longitud máxima del campo correspondiente en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-317">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-318">En el código, puede establecer el valor de la <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad en un valor que tiene una longitud mayor que el valor especificado por el <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-318">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="c4ce0-319">Esta propiedad solo afecta a texto escrito en el control en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-319">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-320">En el ejemplo de código siguiente se usa la clase derivada, <xref:System.Windows.Forms.TextBox>, para crear un cuadro de texto que se usa para aceptar una contraseña.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-320">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="c4ce0-321">Este ejemplo se usa el <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> propiedad para cambiar todos los caracteres de tipo a mayúsculas y el <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> propiedad para restringir la longitud de contraseña a ocho caracteres.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-321">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="c4ce0-322">En este ejemplo también usa el <xref:System.Windows.Forms.TextBox.TextAlign%2A> propiedad para centrar la contraseña en el <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-322">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4ce0-323">The value assigned to the property is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-323">The value assigned to the property is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-324">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-324">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-325">
            <see langword="true" /> Si se ha modificado el contenido del control; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-325">
              <see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4ce0-326">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-326">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-327">Puede utilizar esta propiedad para determinar si el usuario ha modificado el contenido del control de cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-327">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="c4ce0-328">También puede establecer esta propiedad en el código para indicar que se realizaron cambios en el control de cuadro de texto por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-328">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="c4ce0-329">Esta propiedad puede utilizarse por métodos de almacenamiento de datos y validación para determinar si se realizaron cambios en un control de cuadro de texto, por lo que puede ser validado o guardar el contenido cambiado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-329">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="c4ce0-330">Si cambia el <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad mediante programación, el <xref:System.Windows.Forms.TextBoxBase.Modified%2A> propiedad vuelve a `false`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-330">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="c4ce0-331">Esto no provoca la <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-331">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-332">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.TextChanged> eventos para un <xref:System.Windows.Forms.TextBox>, una clase derivada, para determinar si el contenido de la <xref:System.Windows.Forms.TextBox> control han cambiado desde que el control se rellenó con datos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-332">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="c4ce0-333">En el ejemplo se utiliza una cadena para almacenar el contenido original del control y se compara con el contenido de la <xref:System.Windows.Forms.TextBox> para determinar si el contenido ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-333">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="c4ce0-334">Si ha cambiado el contenido, el <xref:System.Windows.Forms.TextBoxBase.Modified%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-334">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="c4ce0-335">En caso contrario, se restablece en `false`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-335">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="c4ce0-336">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado y que un `String` variable denominada `originalText` se ha creado para almacenar el texto original para el <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-336">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-337">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-337">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-338">Si cambia el <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad mediante programación, el <xref:System.Windows.Forms.TextBoxBase.Modified%2A> propiedad vuelve a `false`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-338">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="c4ce0-339">Esto no provoca la <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-339">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="c4ce0-340">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-340">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-341">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-341">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-342">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-342">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="c4ce0-343">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-343">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-344">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-344">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-345">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-345">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-346">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-346">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-347">Occurs when the control is clicked by the mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-347">Occurs when the control is clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-348">El <xref:System.Windows.Forms.RichTextBox> control no provoca una <xref:System.Windows.Forms.TextBoxBase.Click> hace clic con el evento para.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-348">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="c4ce0-349">El <xref:System.Windows.Forms.TextBoxBase.MouseClick> evento proporciona el equivalente funcional.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-349">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="c4ce0-350">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-350">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-351">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-351">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-352">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-352">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="c4ce0-353">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-353">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-354">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-354">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-355">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-355">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-356">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-356">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-357">Gets or sets a value indicating whether this is a multiline text box control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-357">Gets or sets a value indicating whether this is a multiline text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-358">
            <see langword="true" /> Si el control es un control de cuadro de texto multilínea; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-358">
              <see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4ce0-359">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-359">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-360">Un cuadro de texto multilínea permite mostrar más de una línea de texto en el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-360">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="c4ce0-361">Si el <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedad está establecida en `true`, texto escrito en el cuadro de texto multilínea se ajusta a la línea siguiente en el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-361">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="c4ce0-362">Si el <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedad está establecida en `false`, texto escrito en el control de cuadro de texto multilínea se mostrará en la misma línea hasta que se escribe un carácter de nueva línea.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="c4ce0-363">El siguiente puede utilizarse como caracteres de nueva línea:</span><span class="sxs-lookup"><span data-stu-id="c4ce0-363">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="c4ce0-364">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="c4ce0-364">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="c4ce0-365">vbCrLf (sólo Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c4ce0-365">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="c4ce0-366">Puede agregar barras de desplazamiento a un cuadro de texto mediante el <xref:System.Windows.Forms.TextBox.ScrollBars%2A> propiedad para mostrar las barras de desplazamiento horizontal o vertical.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-366">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="c4ce0-367">Esto permite al usuario a desplazarse por el texto que se extiende más allá de las dimensiones del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-367">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-368">Porque el valor predeterminado de la <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad es `false`, el tamaño predeterminado de un <xref:System.Windows.Forms.TextBox> será según el tamaño de fuente incluso si cambia el tamaño de la <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-368">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="c4ce0-369">Para obtener un tamaño uniforme para su <xref:System.Windows.Forms.TextBox>, establezca su <xref:System.Windows.Forms.TextBox.Multiline%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-369">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-370">En la versión japonesa los sistemas operativos, si la <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad está establecida en `true`, estableciendo el <xref:System.Windows.Forms.TextBox.PasswordChar%2A> propiedad mostrará el texto de la contraseña, por lo tanto, poner en peligro la seguridad del sistema.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-370">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="c4ce0-371">Por lo tanto, en sistemas operativos japoneses, establezca el <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad `false` si establece la <xref:System.Windows.Forms.TextBox.PasswordChar%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-371">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-372">Esta propiedad se establece en `false` de forma predeterminada para todas las clases derivadas, con la excepción de la <xref:System.Windows.Forms.RichTextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-372">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="c4ce0-373">Para un <xref:System.Windows.Forms.RichTextBox> (control), el <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> propiedad afecta a si el control cambia de tamaño automáticamente, como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="c4ce0-373">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="c4ce0-374">Si <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> está establecido en `true` y <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> está establecido en `true`, <xref:System.Windows.Forms.RichTextBox> no cambiará de tamaño automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-374">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="c4ce0-375">Si <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> está establecido en `true` y <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> está establecido en `false`, <xref:System.Windows.Forms.RichTextBox> cambiará de tamaño automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-376">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un multilínea <xref:System.Windows.Forms.TextBox> control con las barras de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-376">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="c4ce0-377">En este ejemplo también usa el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, y <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedades para hacer que el control de cuadro de texto multilínea sea útil para crear documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-377">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-378">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-378">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-379">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-379">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-380">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-380">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-381">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-381">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="c4ce0-382">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-382">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-383">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-383">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-384">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-384">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-385">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-385">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-386">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-386">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-387">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-387">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-388">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-388">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4ce0-389">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-389">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4ce0-390">El método <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-390">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4ce0-391">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-391">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-392">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-392">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-394">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-394">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-395">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-395">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4ce0-396">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-396">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4ce0-397">El método <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-397">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4ce0-398">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-398">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-399">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-399">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-400">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-400">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-401">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-401">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-403">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-403">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-405">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-405">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-406">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-406">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-407">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-407">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-408">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-408">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4ce0-409">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-409">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4ce0-410">El método <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-410">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4ce0-411">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-411">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-412">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-412">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-413">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-413">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-414">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-414">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-415">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-415">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4ce0-416">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-416">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4ce0-417">El método <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-417">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4ce0-418">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-418">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-419">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-419">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="c4ce0-420">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-420">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-421">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-421">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-422">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-422">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-423">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-423">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-424">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-424">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4ce0-425">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-425">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4ce0-426">El método <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-426">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4ce0-427">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-427">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-428">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-428">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-429">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-429">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-430">This method is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-430">This method is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-431">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-431">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-433">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-433">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-434">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-434">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4ce0-435">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-435">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4ce0-436">El método <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-436">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4ce0-437">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-437">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-438">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-438">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4ce0-439">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-439">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-440">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-440">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-441">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-441">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-442">Valor <see cref="T:System.Windows.Forms.Padding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-442">A <see cref="T:System.Windows.Forms.Padding" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-443">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-443">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-444">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-444">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-445">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-445">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-446">Occurs when the control is redrawn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-446">Occurs when the control is redrawn.</span>
          </span>
          <span data-ttu-id="c4ce0-447">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-447">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-448">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-448">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-449">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-449">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-450">El <xref:System.Windows.Forms.TextBoxBase.Paste%2A> método solo pegar texto en el control si el texto se almacena actualmente en el **Portapapeles**.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-450">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-451">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-451">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-452">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-452">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-453">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-453">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="c4ce0-454">para leer desde el ** Portapapeles **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-454">for reading from the **Clipboard**.</span>
          </span>
          <span data-ttu-id="c4ce0-455">Enumeración asociada: el <see langword="AllClipboard" /> valor <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-455">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-456">Gets the preferred height for a text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-456">Gets the preferred height for a text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-457">El alto preferido de un cuadro de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-457">The preferred height of a text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-458">El tamaño devuelto por esta propiedad se basa en el estilo de fuente de alto y el borde del cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-458">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="c4ce0-459">Puede utilizar esta propiedad para determinar el tamaño del cuadro de texto para asegurarse de que el texto se muestra correctamente en el control adecuado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-459">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="c4ce0-460">El valor devuelto por esta propiedad es en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-460">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="c4ce0-461">El valor de <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> representa el alto mínimo debe tener el cuadro de texto para mostrar una sola línea de texto sin recorte el texto en la parte superior o inferior.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-461">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="c4ce0-462">Este valor es el mismo si el <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad está establecida en `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-462">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="c4ce0-463">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-463">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="c4ce0-464">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-464">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-465">Processes a command key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-465">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-466">
            <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-466">
              <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c4ce0-467">para trabajar con código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-467">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c4ce0-468">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-468">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="c4ce0-469">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-469">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-470">Processes a dialog key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-470">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-471">
            <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-471">
              <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-472">Gets or sets a value indicating whether text in the text box is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-472">Gets or sets a value indicating whether text in the text box is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-473">
            <see langword="true" /> Si el cuadro de texto es de solo lectura. en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-473">
              <see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4ce0-474">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-474">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-475">Cuando esta propiedad se establece en `true`, no se puede cambiar el contenido del control por el usuario en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-475">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="c4ce0-476">Con esta propiedad establecida en `true`, todavía se puede establecer el valor de la <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad en el código.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-476">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="c4ce0-477">Puede usar esta característica en lugar de deshabilitar el control con el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad para permitir que se copie el contenido e información sobre herramientas que se mostrará.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-477">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-478">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-478">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-479">Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-479">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-480">Puesto que la  clase hereda de , también puede utilizar esta propiedad si el  está asociado a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-480">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c4ce0-481">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-481">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="c4ce0-482">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-482">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c4ce0-483">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-483">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c4ce0-484">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.TextBoxBase>, como un <xref:System.Windows.Forms.TextBox> o <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-484">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="c4ce0-485">A continuación, asigne a la instancia `TextBoxBase1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-485">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-486">Scrolls the contents of the control to the current caret position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-486">Scrolls the contents of the control to the current caret position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-487">Este método le permite desplazarse por el contenido del control hasta que el símbolo de intercalación está dentro del área visible del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-487">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="c4ce0-488">Si el símbolo de intercalación se coloca debajo de la región visible del control, el <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> método desplazará el contenido del control hasta que el símbolo de intercalación esté visible en la parte inferior del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-488">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="c4ce0-489">Si el símbolo de intercalación se coloca encima del área visible del control, este método desplaza el contenido del control hasta que el símbolo de intercalación esté visible en la parte superior del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-489">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="c4ce0-490">Puede usar este método en un cuadro de texto multilínea para asegurarse de que el punto de entrada de texto actual está dentro del área visible del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-490">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-491">Este método no tiene ningún efecto si el control no tiene el foco o si el símbolo de intercalación se coloca en el área visible del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-491">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-492">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Keys> enumeración y <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> método para asegurarse de que el punto de inserción de texto, representado por el símbolo de intercalación, siempre está visible en la pantalla después de que se ha presionado la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-492">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="c4ce0-493">Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.TextBox> control denominado `TextBox1` y un <xref:System.Windows.Forms.RichTextBox> control denominado `RichTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-493">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="c4ce0-494">Este ejemplo requiere que el método de control de eventos se ha asociado con el <xref:System.Windows.Forms.Control.KeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-494">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="c4ce0-495">The position of the first character in the current text selection within the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-495">The position of the first character in the current text selection within the text box.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c4ce0-496">The number of characters to select.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-496">The number of characters to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-497">Selects a range of text in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-497">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-498">Si desea establecer la posición inicial en el primer carácter en el texto del control, establezca el `start` parámetro para 0.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-498">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="c4ce0-499">Puede usar este método para seleccionar una subcadena del texto, como al buscar el texto del control y reemplazar información.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-499">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-500">Mediante programación, puede mover el símbolo de intercalación del cuadro de texto estableciendo el `start` parámetro a la posición del cuadro de texto donde desea que el símbolo de intercalación para mover y establecer el `length` parámetro a un valor de cero (0).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-500">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="c4ce0-501">El cuadro de texto debe tener el foco en orden para mover el símbolo de intercalación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-501">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-502">Si se llama a este método sin parámetros, se usa un método alternativo.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-502">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="c4ce0-503">Este método alternativo que se hereda de la <xref:System.Windows.Forms.Control> clase.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-503">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="c4ce0-504">Cuando se llama, Establece el foco de entrada en el control y selecciona el contenido del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-504">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="c4ce0-505">Para obtener más información, vea el método <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-505">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-506">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para buscar el contenido del control para la instancia de la palabra "fox".</span><span class="sxs-lookup"><span data-stu-id="c4ce0-506">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="c4ce0-507">Si se encuentra, el código selecciona la palabra en el control mediante la <xref:System.Windows.Forms.TextBoxBase.Select%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-507">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="c4ce0-508">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> denominado `textBox1` se ha creado y su <xref:System.Windows.Forms.TextBoxBase.Text%2A> propiedad contiene la frase "el veloz murciélago hindú comía feliz cardillo y kiwi".</span><span class="sxs-lookup"><span data-stu-id="c4ce0-508">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4ce0-509">The value of the <paramref name="start" /> parameter is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-509">The value of the <paramref name="start" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-510">Selects all text in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-510">Selects all text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-511">Este método le permite seleccionar todo el texto dentro del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-511">This method enables you to select all text within the control.</span></span> <span data-ttu-id="c4ce0-512">Puede usar este método junto con el <xref:System.Windows.Forms.TextBoxBase.Cut%2A> método, que requiere tener texto seleccionado en el control, para todo el contenido del control de cortar y pegar en el **Portapapeles**.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-512">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-513">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para determinar si hay texto seleccionado en el control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-513">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="c4ce0-514">Si no hay texto seleccionado, se realiza una llamada a la <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> método antes de copiar el contenido del control en el **Portapapeles**.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-514">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="c4ce0-515">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> se ha creado con nombre `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-515">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-516">Gets or sets a value indicating the currently selected text in the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-516">Gets or sets a value indicating the currently selected text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-517">Cadena que representa el texto seleccionado actualmente en el cuadro de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-517">A string that represents the currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-518">Puede asignar texto a esta propiedad para cambiar el texto seleccionado actualmente en el cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-518">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="c4ce0-519">Si no hay texto seleccionado actualmente en el cuadro de texto, esta propiedad devuelve una cadena de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-519">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-520">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-520">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-521">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-521">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-522">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-522">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-523">Gets or sets the number of characters selected in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-523">Gets or sets the number of characters selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-524">El número de caracteres seleccionados en el cuadro de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-524">The number of characters selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-525">Puede utilizar esta propiedad para determinar si hay caracteres actualmente seleccionados en el control de cuadro de texto antes de realizar operaciones en el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-525">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="c4ce0-526">Cuando el valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedad está establecida en un valor que es mayor que el número de caracteres dentro del texto del control, el valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedad está establecida en toda la longitud del texto del control menos el valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>propiedad (si se especifica ningún valor para el <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propiedad).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-526">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-527">Mediante programación, puede mover el símbolo de intercalación del cuadro de texto estableciendo el <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> a la posición del cuadro de texto donde desea que el símbolo de intercalación para mover y establecer el <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> en un valor de cero (0).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-527">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="c4ce0-528">El cuadro de texto debe tener el foco en orden para mover el símbolo de intercalación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-528">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-529">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-529">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-530">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-530">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-531">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-531">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4ce0-532">The assigned value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-532">The assigned value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-533">Gets or sets the starting point of text selected in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-533">Gets or sets the starting point of text selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-534">La posición inicial del texto seleccionado en el cuadro de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-534">The starting position of text selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-535">Si no hay texto seleccionado en el control, esta propiedad indica el punto de inserción, o símbolo de intercalación para el nuevo texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-535">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="c4ce0-536">Si establece esta propiedad en una ubicación más allá de la longitud del texto en el control, la posición inicial de selección se colocarán después del último carácter.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-536">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="c4ce0-537">Cuando se selecciona texto en el control de cuadro de texto, si cambia esta propiedad podría disminuir el valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-537">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="c4ce0-538">Si el texto restante en el control después de la posición indicada por el <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propiedad es menor que el valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedad, el valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedad se reduce automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-538">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="c4ce0-539">El valor de la <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propiedad nunca provoca un aumento en el <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-539">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="c4ce0-540">Puede mover mediante programación la selección del cuadro de texto estableciendo el <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> y <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-540">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="c4ce0-541">Mediante programación, puede mover el símbolo de intercalación del cuadro de texto estableciendo el <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> a la posición del cuadro de texto donde desea que el símbolo de intercalación para mover y establecer el <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> en un valor de cero (0).</span><span class="sxs-lookup"><span data-stu-id="c4ce0-541">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="c4ce0-542">El <xref:System.Windows.Forms.TextBox> debe tener el foco en orden para la selección o el símbolo de intercalación se moverá.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-542">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="c4ce0-543">Puede establecer el <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propiedad de un <xref:System.Windows.Forms.TextBox> decir <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> asignándole el <xref:System.Windows.Forms.Control.Focus%2A> primero.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-543">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-544">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="c4ce0-544">**Example 1**</span></span>  
  
 <span data-ttu-id="c4ce0-545">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-545">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-546">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-546">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-547">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-547">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c4ce0-548">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="c4ce0-548">**Example 2**</span></span>  
  
 <span data-ttu-id="c4ce0-549">El ejemplo siguiente se establece la <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propiedad de un <xref:System.Windows.Forms.TextBox> decir <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> asignándole el <xref:System.Windows.Forms.Control.Focus%2A> primera.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-549">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4ce0-550">The assigned value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-550">The assigned value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c4ce0-551">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-551">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c4ce0-552">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-552">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c4ce0-553">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-553">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c4ce0-554">Not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-554">Not used.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="c4ce0-555">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-555">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-556">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-556">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-557">El <xref:System.Windows.Forms.TextBoxBase> control usa el <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> propiedad para establecer los límites si el <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> propiedad es `true` y el <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-557">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="c4ce0-558">Normalmente, los parámetros que corresponden a los límites no incluidos en el `specified` parámetros se pasan con sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-558">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="c4ce0-559">Por ejemplo, el <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, o el <xref:System.Drawing.Point.X%2A> o <xref:System.Drawing.Point.Y%2A> propiedades de la <xref:System.Windows.Forms.Control.Location%2A> propiedad se puede pasar con una referencia a la instancia actual del control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-559">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="c4ce0-560">Sin embargo todos los valores pasados son respeta y aplicados al control.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-560">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="c4ce0-561">El `specified` parámetro representa los elementos de los controles <xref:System.Windows.Forms.Control.Bounds%2A> modificados por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-561">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="c4ce0-562">Por ejemplo, si cambia el <xref:System.Windows.Forms.Control.Size%2A> del control, el `specified` valor del parámetro es el `Size` valor <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-562">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="c4ce0-563">Sin embargo, si la <xref:System.Windows.Forms.Control.Size%2A> se ajusta en respuesta a la <xref:System.Windows.Forms.Control.Dock%2A> propiedad que se establece, el `specified` valor del parámetro es el `None` valor de <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-563">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c4ce0-564">
            <para>Cuando se reemplaza <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> método para forzar los límites del control que se va a cambiar. Las clases derivadas pueden agregar restricciones de tamaño para el <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-564">
              <para>When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change. Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-565">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-565">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-566">
            <see langword="true" /> Para habilitar los accesos directos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-566">
              <see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-567">Use el <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> propiedad para habilitar o deshabilitar las siguientes combinaciones de teclas de método abreviado y menú contextual del control:</span><span class="sxs-lookup"><span data-stu-id="c4ce0-567">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:</span></span>  
  
-   <span data-ttu-id="c4ce0-568">CTRL+Z</span><span class="sxs-lookup"><span data-stu-id="c4ce0-568">CTRL+Z</span></span>  
  
-   <span data-ttu-id="c4ce0-569">CTRL+E</span><span class="sxs-lookup"><span data-stu-id="c4ce0-569">CTRL+E</span></span>  
  
-   <span data-ttu-id="c4ce0-570">CTRL+C</span><span class="sxs-lookup"><span data-stu-id="c4ce0-570">CTRL+C</span></span>  
  
-   <span data-ttu-id="c4ce0-571">CTRL+Y</span><span class="sxs-lookup"><span data-stu-id="c4ce0-571">CTRL+Y</span></span>  
  
-   <span data-ttu-id="c4ce0-572">CTRL+X</span><span class="sxs-lookup"><span data-stu-id="c4ce0-572">CTRL+X</span></span>  
  
-   <span data-ttu-id="c4ce0-573">CTRL+RETROCESO</span><span class="sxs-lookup"><span data-stu-id="c4ce0-573">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="c4ce0-574">CTRL+V</span><span class="sxs-lookup"><span data-stu-id="c4ce0-574">CTRL+V</span></span>  
  
-   <span data-ttu-id="c4ce0-575">CTRL+SUPR</span><span class="sxs-lookup"><span data-stu-id="c4ce0-575">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="c4ce0-576">CTRL+A</span><span class="sxs-lookup"><span data-stu-id="c4ce0-576">CTRL+A</span></span>  
  
-   <span data-ttu-id="c4ce0-577">MAYÚS + SUPR</span><span class="sxs-lookup"><span data-stu-id="c4ce0-577">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="c4ce0-578">CTRL+L</span><span class="sxs-lookup"><span data-stu-id="c4ce0-578">CTRL+L</span></span>  
  
-   <span data-ttu-id="c4ce0-579">MAYÚS+INS</span><span class="sxs-lookup"><span data-stu-id="c4ce0-579">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="c4ce0-580">CTRL+R</span><span class="sxs-lookup"><span data-stu-id="c4ce0-580">CTRL+R</span></span>  
  
 <span data-ttu-id="c4ce0-581">Puede invalidar esta propiedad para especificar otras teclas de método abreviado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-581">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-582">Gets or sets the current text in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-582">Gets or sets the current text in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-583">Texto que se muestra en el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-583">The text displayed in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-584">Para mostrar varias líneas de texto en un cuadro de texto, establezca el <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-584">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="c4ce0-585">Para leer o establecer el texto de un cuadro de texto multilínea, utilice la <xref:System.Windows.Forms.TextBoxBase.Lines%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-585">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="c4ce0-586">La cantidad de texto que se puede escribir en el <xref:System.Windows.Forms.RichTextBox> control está limitado sólo por la memoria disponible del sistema.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-586">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-587">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un multilínea <xref:System.Windows.Forms.TextBox> control con las barras de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-587">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="c4ce0-588">En este ejemplo también usa el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, y <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedades para hacer que el control de cuadro de texto multilínea sea útil para crear documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-588">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-589">Gets the length of text in the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-589">Gets the length of text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-590">Número de caracteres contenidos en el texto del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-590">The number of characters contained in the text of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-591">Puede utilizar esta propiedad para determinar el número de caracteres en una cadena para tareas como la búsqueda de cadenas específicas del texto en el texto del control, que es necesario conocer el número total de caracteres.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-591">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-592">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> método y el <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> propiedad que se va a copiar el texto de una <xref:System.Windows.Forms.TextBox> a otro.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-592">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="c4ce0-593">Este ejemplo requiere que dos <xref:System.Windows.Forms.TextBox> controles denominados, `textBox1` y `textBox2`, se han agregado a un formulario y que `textBox1` tiene texto asignado a su <xref:System.Windows.Forms.Control.Text%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-593">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-594">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-594">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ce0-595">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-595">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          </span>
          <span data-ttu-id="c4ce0-596">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-596">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-597">Undoes the last edit operation in the text box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-597">Undoes the last edit operation in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-598">Este método deshará la última **Portapapeles** operación realizada en el control de cuadro de texto si cambio de texto o el <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> propiedad devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-598">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-599">El <xref:System.Windows.Forms.TextBoxBase.Undo%2A> método no funciona con el <xref:System.Windows.Forms.Control.KeyPress> o <xref:System.Windows.Forms.Control.TextChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-599">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-600">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-600">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="c4ce0-601">Proporciona <xref:System.Windows.Forms.MenuItem.Click> controladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos que realizan cortar, copiar, pegar y deshacer operaciones.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-601">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="c4ce0-602">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> control denominado `textBox1` se ha creado.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-602">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="c4ce0-603">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-603">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ce0-604">Processes Windows messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-604">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4ce0-605">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-605">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4ce0-606">
            <see langword="true" /> Si el control de cuadro de texto multilínea ajusta palabras; <see langword="false" /> si el control de cuadro de texto automáticamente desplaza horizontalmente cuando el usuario escribe más allá del borde derecho del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-606">
              <see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span>
          </span>
          <span data-ttu-id="c4ce0-607">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ce0-607">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ce0-608">Si esta propiedad se establece en `true`, no se muestran las barras de desplazamiento horizontal, independientemente de la <xref:System.Windows.Forms.TextBox.ScrollBars%2A> configuración de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-608">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4ce0-609">En la clase derivada, <xref:System.Windows.Forms.TextBox>, texto dentro del control siempre se ajustará independientemente de la configuración de esta propiedad, a menos que el <xref:System.Windows.Forms.TextBox.TextAlign%2A> propiedad está establecida en `HorizontalAlignment.Left`.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-609">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ce0-610">El siguiente ejemplo de código usa <xref:System.Windows.Forms.TextBox>, una clase derivada, para crear un multilínea <xref:System.Windows.Forms.TextBox> control con las barras de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-610">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="c4ce0-611">En este ejemplo también usa el <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, y <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propiedades para hacer que el control de cuadro de texto multilínea sea útil para crear documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="c4ce0-611">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>