<Type Name="LinkArea" FullName="System.Windows.Forms.LinkArea">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a846e08b309a19391842fc2eafa5a763f0b6ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LinkArea" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit LinkArea extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkArea" />
  <TypeSignature Language="VB.NET" Value="Public Structure LinkArea" />
  <TypeSignature Language="C++ CLI" Value="public value class LinkArea" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.LinkArea/LinkAreaConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa el área de un control <see cref="T:System.Windows.Forms.LinkLabel" /> que representa un hipervínculo dentro del control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hay dos maneras de agregar un hipervínculo al texto de un <xref:System.Windows.Forms.LinkLabel> control. Puede tener acceso a la <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> método de la <xref:System.Windows.Forms.LinkLabel.LinkCollection> clase a través de la <xref:System.Windows.Forms.LinkLabel.Links%2A> propiedad de la <xref:System.Windows.Forms.LinkLabel> para agregar varios hipervínculos al texto del control. Si sólo tiene que agregar un hipervínculo al texto del control, puede usar el <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> propiedad de la <xref:System.Windows.Forms.LinkLabel>. Esta propiedad acepta una <xref:System.Windows.Forms.LinkArea> que define la ubicación del hipervínculo en el texto del control. Cuando se especifica un hipervínculo con la <xref:System.Windows.Forms.LinkArea> propiedad, el área del vínculo se agrega a la <xref:System.Windows.Forms.LinkLabel.LinkCollection> en la misma manera que agrega el vínculo mediante el <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> método de la <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 El <xref:System.Windows.Forms.LinkArea.Length%2A> propiedad especifica el número de caracteres en el texto de la <xref:System.Windows.Forms.LinkLabel> para incluir en el área del vínculo. El <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad especifica el primer carácter del texto del control que se incluirán en el hipervínculo. Si desea determinar si un determinado <xref:System.Windows.Forms.LinkArea> está vacío, puede utilizar el <xref:System.Windows.Forms.LinkArea.IsEmpty%2A> propiedad en lugar de comprobar los valores de la <xref:System.Windows.Forms.LinkArea.Start%2A> y <xref:System.Windows.Forms.LinkArea.Length%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.LinkLabel> (clase), con varios <xref:System.Windows.Forms.LinkArea> secciones definidas, para mostrar una etiqueta en un formulario. En el ejemplo se demuestra cómo establecer el <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, y <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> propiedades para personalizar la apariencia de la <xref:System.Windows.Forms.LinkLabel>. La primera <xref:System.Windows.Forms.LinkArea> se especifica utilizando el <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> propiedad. Vínculos adicionales se agregan a la <xref:System.Windows.Forms.LinkLabel> mediante el <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> método. El ejemplo se administra la <xref:System.Windows.Forms.LinkLabel.LinkClicked> eventos iniciar el explorador Web para los hipervínculos y mostrando un <xref:System.Windows.Forms.MessageBox> para los demás vínculos.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
    <altmember cref="T:System.Windows.Forms.LinkLabel" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkArea (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkArea(int start, int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Posición inicial de base cero del área del vínculo en el texto del control <see cref="T:System.Windows.Forms.LinkLabel" />.</param>
        <param name="length">Número de caracteres, posteriores al carácter inicial, que se va a incluir en el área del vínculo.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.LinkArea" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto que se va a comparar con <see cref="T:System.Windows.Forms.LinkArea" />.</param>
        <summary>Determina si este objeto <see cref="T:System.Windows.Forms.LinkArea" /> es igual al objeto especificado.</summary>
        <returns>
          Es <see langword="true" /> si el objeto especificado es igual al objeto <see cref="T:System.Windows.Forms.LinkArea" /> actual; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el código hash de esta instancia.</summary>
        <returns>Entero de 32 bits con signo, que es el código hash de esta instancia.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Windows.Forms.LinkArea" /> está vacío.</summary>
        <value>
          Es <see langword="true" /> si la posición inicial y longitud especificadas devuelven un área de vínculo vacía; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para determinar si se ha especificado un área de vínculo válida en este objeto en lugar de evaluar los valores de la <xref:System.Windows.Forms.LinkArea.Length%2A> y <xref:System.Windows.Forms.LinkArea.Start%2A> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de caracteres del área del vínculo.</summary>
        <value>Número de caracteres del área del vínculo, incluidos los espacios.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para especificar el texto de la <xref:System.Windows.Forms.LinkLabel> para mostrar como un vínculo, establezca la <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad a la ubicación en el texto que se va a empezar a crear el vínculo. Después de la <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad se establece, establezca el valor de la <xref:System.Windows.Forms.LinkArea.Length%2A> propiedad para el número de caracteres, incluida la posición de carácter especificada en el <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad, que desea que el texto del vínculo. Por ejemplo, si desea crear un vínculo de la primera palabra del texto "El veloz murciélago", establezca la <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad en cero (0) y el <xref:System.Windows.Forms.LinkArea.Length%2A> propiedad a tres (3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Start" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Equality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" />
      </Parameters>
      <Docs>
        <param name="linkArea1">
          <see cref="T:System.Windows.Forms.LinkArea" /> que se va comparar.</param>
        <param name="linkArea2">
          <see cref="T:System.Windows.Forms.LinkArea" /> que se va comparar.</param>
        <summary>Devuelve un valor que indica si dos instancias de la clase <see cref="T:System.Windows.Forms.LinkArea" /> son iguales.</summary>
        <returns>
          Es <see langword="true" /> si dos instancias de la clase <see cref="T:System.Windows.Forms.LinkArea" /> son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[El método equivalente para este operador es <xref:System.Windows.Forms.LinkArea.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Inequality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" />
      </Parameters>
      <Docs>
        <param name="linkArea1">
          <see cref="T:System.Windows.Forms.LinkArea" /> que se va comparar.</param>
        <param name="linkArea2">
          <see cref="T:System.Windows.Forms.LinkArea" /> que se va comparar.</param>
        <summary>Devuelve un valor que indica si dos instancias de la clase <see cref="T:System.Windows.Forms.LinkArea" /> no son iguales.</summary>
        <returns>
          Es <see langword="true" /> si dos instancias de la clase <see cref="T:System.Windows.Forms.LinkArea" /> no son iguales; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la posición inicial del área del vínculo en el texto del control <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Ubicación en el texto del control <see cref="T:System.Windows.Forms.LinkLabel" /> donde comienza el vínculo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para especificar el texto de la <xref:System.Windows.Forms.LinkLabel> para mostrar como un vínculo, establezca la <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad a la ubicación en el texto que se va a empezar a crear el vínculo. Después de la <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad se establece, establezca el valor de la <xref:System.Windows.Forms.LinkArea.Length%2A> propiedad para el número de caracteres, incluida la posición de carácter especificada en el <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad, que desea que el texto del vínculo. Por ejemplo, si desea crear un vínculo de la primera palabra del texto "El veloz murciélago", establezca la <xref:System.Windows.Forms.LinkArea.Start%2A> propiedad en cero (0) y el <xref:System.Windows.Forms.LinkArea.Length%2A> propiedad a tres (3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Length" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el nombre de tipo completo de esta instancia.</summary>
        <returns>Objeto <see cref="T:System.String" /> que contiene un nombre de tipo completo.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>