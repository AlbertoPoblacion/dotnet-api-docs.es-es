<Type Name="DataGridViewCellParsingEventArgs" FullName="System.Windows.Forms.DataGridViewCellParsingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a00f2b86e7e4b8dd869ee91f12c740fec5431a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellParsingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellParsingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellParsingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2fe6f-101">Proporciona datos para el evento <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> de un control <see cref="T:System.Windows.Forms.DataGridView" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2fe6f-101">Provides data for the <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> event of a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fe6f-102">Controlar la <xref:System.Windows.Forms.DataGridView.CellParsing> eventos para proporcionar la conversión de valor personalizado de un valor especificado por el usuario a un valor en el tipo especificado por la celda <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-102">Handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event to provide custom value conversion from a user-specified value to a value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="2fe6f-103">Al controlar la <xref:System.Windows.Forms.DataGridView.CellParsing> eventos, puede convertir el valor o puede personalizar la conversión de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-103">When you handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event, you can convert the value yourself or you can customize the default conversion.</span></span> <span data-ttu-id="2fe6f-104">Por ejemplo, puede convertir el valor mediante la celda <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> método convertidores de tipos de su elección.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-104">For example, you can convert the value yourself using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with type converters of your choosing.</span></span> <span data-ttu-id="2fe6f-105">Como alternativa, puede dejar que el tipo predeterminado convertidores de analizar el valor, pero modificar el <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, y <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propiedades del objeto devuelto por la <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> propiedad, que se inicializa con la celda <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-105">Alternately, you can let the default type converters parse the value, but modify the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.</span></span>  
  
 <span data-ttu-id="2fe6f-106">Cuando se convierte el valor, reemplace el valor inicial, con el formato de la <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> propiedad con el valor convertido en el tipo especificado por la celda <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-106">When you convert the value yourself, replace the initial, formatted value of the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> property with the converted value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span> <span data-ttu-id="2fe6f-107">Para indicar que no es necesario realizar ningún análisis adicional, establezca la <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-107">To indicate that no further parsing is necessary, set the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="2fe6f-108">Cuando se completa el controlador de eventos, si el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> es `null` o no es del tipo correcto, o la <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> propiedad es `false`, el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> se analiza mediante la celda <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> método con convertidores de tipos predeterminados.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-108">When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is parsed using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with default type converters.</span></span> <span data-ttu-id="2fe6f-109">La implementación predeterminada de este método analiza el valor usando la <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, y <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> pasan propiedades del estilo de celda.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-109">The default implementation of this method parses the value using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style passed in.</span></span> <span data-ttu-id="2fe6f-110">Si el valor no es igual a <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, el valor se analiza mediante el <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propiedad y los convertidores de tipos que se pasan.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-110">If the value is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, the value is parsed using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the type converters passed in.</span></span>  
  
 <span data-ttu-id="2fe6f-111">Para personalizar la conversión de un valor de celda en un valor con formato para la presentación, controlar la <xref:System.Windows.Forms.DataGridView.CellFormatting> eventos.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-111">To customize the conversion of a cell value into a formatted value for display, handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.</span></span>  
  
 <span data-ttu-id="2fe6f-112">Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="2fe6f-112">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fe6f-113">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> para comprobar la validez de las entradas de fecha.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-113">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> to check the validity of date entries.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 rowIndex, int32 columnIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rowIndex As Integer, columnIndex As Integer, value As Object, desiredType As Type, inheritedCellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellParsingEventArgs(int rowIndex, int columnIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="2fe6f-114">El índice de fila de la celda que se cambió.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-114">The row index of the cell that was changed.</span>
          </span>
        </param>
        <param name="columnIndex">
          <span data-ttu-id="2fe6f-115">El índice de columna de la celda que se cambió.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-115">The column index of the cell that was changed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2fe6f-116">Nuevo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-116">The new value.</span>
          </span>
        </param>
        <param name="desiredType">
          <span data-ttu-id="2fe6f-117">El tipo del nuevo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-117">The type of the new value.</span>
          </span>
        </param>
        <param name="inheritedCellStyle">
          <span data-ttu-id="2fe6f-118">El estilo aplicado a la celda que se cambió.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-118">The style applied to the cell that was changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fe6f-119">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fe6f-120">Obtiene el índice de columna de los datos de la celda que requiere análisis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-120">Gets the column index of the cell data that requires parsing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fe6f-121">El índice de columna de la celda que se cambió.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-121">The column index of the cell that was changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fe6f-122">Use la <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> propiedad para obtener un índice en la <xref:System.Windows.Forms.DataGridView.Columns%2A> propiedad de un <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-122">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Columns%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fe6f-123">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> para detectar si la celda modificada está en la columna de fecha.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-123">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> to discover if the changed cell is in the date column.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
    <Member MemberName="InheritedCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritedCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fe6f-124">Obtiene o establece el estilo aplicado a la celda modificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-124">Gets or sets the style applied to the edited cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fe6f-125">Un <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> que representa el estilo actual de la celda que se está modificando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-125">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the current style of the cell being edited.</span>
          </span>
          <span data-ttu-id="2fe6f-126">El valor predeterminado es el valor de la propiedad <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> de la celda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-126">The default value is the value of the cell <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fe6f-127">Puede utilizar esta propiedad para determinar el formato vigente para la celda.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-127">You can use this property to determine the formatting in effect for the cell.</span></span> <span data-ttu-id="2fe6f-128">Al establecer esta propiedad o cambiar las propiedades del objeto que devuelve esta propiedad no tiene ningún efecto a menos que la <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> es `false` cuando sale el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-128">Setting this property or changing the properties of the object that this property returns has no effect unless the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> is `false` when the event handler exits.</span></span> <span data-ttu-id="2fe6f-129">En este caso, el <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, y <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propiedades del estilo de celda se utilizan para analizar el valor de celda.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-129">In this case, the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style are used to parse the cell value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fe6f-130">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-130">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2fe6f-131">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-131">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="2fe6f-132">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-132">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2fe6f-133">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-133">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2fe6f-134">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.DataGridView> denominado `DataGridView1`.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-134">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="2fe6f-135">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-135">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ParsingApplied">
      <MemberSignature Language="C#" Value="public bool ParsingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParsingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ParsingApplied { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fe6f-136">Obtiene o establece un valor que indica si se analizó correctamente el valor de una celda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-136">Gets or sets a value indicating whether a cell's value has been successfully parsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fe6f-137">Es <see langword="true" /> si el valor de la celda se ha analizado correctamente; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-137">
              <see langword="true" /> if the cell's value has been successfully parsed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fe6f-138">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-138">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fe6f-139">A <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> establece el <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> propiedad para indicar si se analizó correctamente el nuevo valor de celda y ninguna conversión es necesaria.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-139">A <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> sets the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property to indicate whether the new cell value was successfully parsed and no further conversion is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fe6f-140">El siguiente ejemplo de código establece <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> a `true` cuando el valor de celda se analizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-140">The following code example sets <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> to `true` when the cell's value is successfully parsed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fe6f-141">Obtiene el índice de fila de la celda que requiere análisis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-141">Gets the row index of the cell that requires parsing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fe6f-142">El índice de fila de la celda que se cambió.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fe6f-142">The row index of the cell that was changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fe6f-143">Use la <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> propiedad para obtener un índice en la <xref:System.Windows.Forms.DataGridView.Rows%2A> propiedad de un <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-143">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Rows%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fe6f-144">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2fe6f-145">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="2fe6f-146">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-146">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2fe6f-147">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2fe6f-148">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.DataGridView> denominado `DataGridView1`.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-148">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="2fe6f-149">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="2fe6f-149">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
  </Members>
</Type>