<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f1102d92bf27263fd26742facb54318a6461628" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64206606" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UnhandledExceptionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionMode" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Define a dónde debe enviar una aplicación de Windows Forms las excepciones no controladas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta enumeración se utiliza por <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.  
  
> [!NOTE]
>  En la versión 2.0 de .NET Framework, puede cambiar el comportamiento en tiempo de ejecución de lenguaje común para permitir que las excepciones no controladas se propague hacia arriba de la pila de llamadas. Este comportamiento se puede deshabilitar mediante el archivo de configuración de la aplicación. Para más información, consulte [Excepciones en subprocesos administrados](~/docs/standard/threading/exceptions-in-managed-threads.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente establece controladores de eventos para los errores que se producen en los subprocesos de Windows Forms y los errores que se producen en otros subprocesos. Establece <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> para que todos los errores se controlan mediante la aplicación, independientemente de la configuración en el archivo de configuración de usuario de la aplicación. Usa el <xref:System.Windows.Forms.Application.ThreadException> eventos para la primera y el <xref:System.AppDomain.UnhandledException> eventos para el último. Puesto que <xref:System.AppDomain.UnhandledException> no se puede impedir que una aplicación de terminación, el ejemplo simplemente registra el error en el registro de eventos del sistema antes de la finalización.  
  
 En este ejemplo se da por supuesto que ha definido dos <xref:System.Windows.Forms.Button> controles, `button1` y `button2`, en su <xref:System.Windows.Forms.Form> clase.  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 0" Usage="System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Enrutar todas las excepciones al controlador de <see cref="E:System.Windows.Forms.Application.ThreadException" />, a menos que el archivo de configuración de la aplicación especifique lo contrario.</summary>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberSignature Language="VB.NET" Value="CatchException" />
      <MemberSignature Language="C++ CLI" Value="CatchException" />
      <MemberSignature Language="F#" Value="CatchException = 2" Usage="System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Enrutar siempre las excepciones al controlador de <see cref="E:System.Windows.Forms.Application.ThreadException" />. Omitir el archivo de configuración de la aplicación.</summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberSignature Language="VB.NET" Value="ThrowException" />
      <MemberSignature Language="C++ CLI" Value="ThrowException" />
      <MemberSignature Language="F#" Value="ThrowException = 1" Usage="System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>No enrutar nunca las excepciones al controlador de <see cref="E:System.Windows.Forms.Application.ThreadException" />. Omitir el archivo de configuración de la aplicación.</summary>
      </Docs>
    </Member>
  </Members>
</Type>