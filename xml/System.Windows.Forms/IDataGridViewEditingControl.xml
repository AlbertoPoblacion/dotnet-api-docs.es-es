<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6946e2ddaa41da9e39b6d9a6780adfa274ab97a2" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53223284" /></Metadata><TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define una funcionalidad común para los controles que se hospedan en las celdas de un control <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz se implementa mediante los controles, como <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> y <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, que se hospedan en correspondiente <xref:System.Windows.Forms.DataGridView> , tales como celdas <xref:System.Windows.Forms.DataGridViewComboBoxCell> y <xref:System.Windows.Forms.DataGridViewTextBoxCell>, cuando están en modo de edición.  
  
 Tipos que pueden hospedar el conjunto de controles de edición de celda sus <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> propiedad a un <xref:System.Type> que representa la edición de tipo de control. Cuando la celda entra en modo de edición, se realizan los pasos siguientes:  
  
1.  El <xref:System.Windows.Forms.DataGridView> control crea una instancia del tipo de control de edición.  
  
2.  El <xref:System.Windows.Forms.DataGridView> control llama a la celda <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> método. Puede invalidar este método para transferir el valor de celda para el control de edición.  
  
3.  El <xref:System.Windows.Forms.DataGridView> control llama el control de edición <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> método y pasa en el estilo de la celda actual. Puede implementar este método para inicializar la apariencia del control de edición para que coincida con la apariencia de la celda.  
  
4.  El <xref:System.Windows.Forms.DataGridView> control llama el control de edición <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> método. Puede implementar este método para realizar ajustes finales en el control de edición, por ejemplo, si selecciona el valor del control.  
  
 Para obtener más información acerca de cómo implementar <xref:System.Windows.Forms.IDataGridViewEditingControl>, vea [Cómo: Alojar controles en formularios de Windows las celdas de DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 Tipos, como la celda <xref:System.Windows.Forms.DataGridViewCheckBoxCell> que proporcionan una interfaz de usuario (UI) para especificar los valores sin una implementación de control de edición de hospedar el <xref:System.Windows.Forms.IDataGridViewEditingCell> interfaz. En este caso, la interfaz de usuario se muestra independientemente de si la celda está en modo de edición.  
  
 Celda de otro tipos, como <xref:System.Windows.Forms.DataGridViewButtonCell>, proporcionan una interfaz de usuario pero no almacene los valores especificados por el usuario. En este caso, el tipo de celda no implementa <xref:System.Windows.Forms.IDataGridViewEditingCell> u hospedar un control de edición.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se proporciona una implementación de esta interfaz que se deriva de <xref:System.Windows.Forms.DateTimePicker>. Este ejemplo forma parte de un ejemplo más extenso proporcionado en [Cómo: Alojar controles en formularios de Windows las celdas de DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e79a9d4e-64ec-41f5-93ec-f5492633cbb2">Cómo: Alojar controles en celdas DataGridView de formularios Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="iDataGridViewEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">El valor de <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> que se va a utilizar como modelo para la interfaz de usuario.</param>
        <summary>Cambia la interfaz de usuario (UI) del control para que sea coherente con el estilo de celda especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, una implementación de este método establecerá las propiedades de la interfaz de usuario para el control de edición, como fuente, color de fondo y el color de primer plano, los valores de las propiedades correspondientes en el `dataGridViewCellStyle`, que es el estilo utilizado para la celda que hospeda el control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se proporciona una implementación de este miembro. Este ejemplo forma parte de un ejemplo más extenso proporcionado en [Cómo: Alojar controles en formularios de Windows las celdas de DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el control <see cref="T:System.Windows.Forms.DataGridView" /> que contiene la celda.</summary>
        <value>Objeto <see cref="T:System.Windows.Forms.DataGridView" /> que contiene la celda <see cref="T:System.Windows.Forms.DataGridViewCell" /> que se está editando; <see langword="null" /> si no hay ningún objeto <see cref="T:System.Windows.Forms.DataGridView" /> asociado.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor con formato de la celda que el editor está modificando.</summary>
        <value><see cref="T:System.Object" /> que representa el valor con formato de la celda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor con formato representa el valor tal y como se muestra en la interfaz de usuario del control. El valor con formato puede ser diferente en el valor absoluto y el tipo de datos incluso desde el valor real que se encuentra en el control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se proporciona una implementación de este miembro. Este ejemplo forma parte de un ejemplo más extenso proporcionado en [Cómo: Alojar controles en formularios de Windows las celdas de DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el índice correspondiente a la fila primaria de la celda en la que se hospeda.</summary>
        <value>El índice de la fila que contiene la celda o -1 si no hay ninguna fila primaria.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.IDataGridViewEditingControl> interfaz no define correspondiente `ColumnIndex` propiedad. Puede usar el <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> propiedad para recuperar el elemento primario <xref:System.Windows.Forms.DataGridView> controlar y usar el <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> propiedad para determinar los índices de fila y columna de la celda activa.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el valor del control de edición difiere del valor de la celda donde se hospeda.</summary>
        <value>Es <see langword="true" /> si el valor del control es diferente del valor de la celda; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> propiedad está establecida en `true` para indicar que ha cambiado el estado de la celda de hospedaje y su interfaz de usuario (UI) debe actualizarse para reflejar este cambio en el valor. La tabla o la celda propietaria restablecerá esta propiedad en `false` tras una actualización.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Devolver <see langword="true" /> en la implementación de esta propiedad no cambia automáticamente el valor mostrado. Cuando se cambia el valor en el control de edición, debe notificar a la <see cref="T:System.Windows.Forms.DataGridView" /> del cambio pasando <see langword="true" /> a la <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> método.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="iDataGridViewEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> que representa la tecla presionada.</param>
        <param name="dataGridViewWantsInputKey">Es <see langword="true" /> cuando <see cref="T:System.Windows.Forms.DataGridView" /> desea procesar <see cref="T:System.Windows.Forms.Keys" /> en <paramref name="keyData" />; de lo contrario, es <see langword="false" />.</param>
        <summary>Determina si la tecla especificada es una tecla de entrada estándar que el control de edición debería procesar, o una clave especial que <see cref="T:System.Windows.Forms.DataGridView" /> debe procesar.</summary>
        <returns><see langword="true" /> si la tecla especificada es una tecla de entrada estándar que debería ser controlada por el control de edición; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control de edición implementa este método para determinar qué teclas de entrada deben ser procesadas por el control y qué teclas de entrada deben ser procesada por el <xref:System.Windows.Forms.DataGridView>.  
  
 El <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> llama al método el <xref:System.Windows.Forms.DataGridView>. El <xref:System.Windows.Forms.DataGridView> pasará `true` para `dataGridViewWantsInputKey` al que puede procesar el `keyData`. Si el control de edición puede permitir que el <xref:System.Windows.Forms.DataGridView> controlar la `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> debe devolver `false` cuando `dataGridViewWantsInputKey` es `true`. Otras implementaciones de <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> puede pasar por alto una `dataGridViewWantsInputKey` valor `true` y controlar la `keyData` en el control de edición.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se proporciona una implementación de este miembro. Este ejemplo forma parte de un ejemplo más extenso proporcionado en [Cómo: Alojar controles en formularios de Windows las celdas de DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el cursor que se utiliza cuando el puntero del mouse se sitúa sobre la propiedad <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" />, pero no sobre el control de edición.</summary>
        <value>Un objeto <see cref="T:System.Windows.Forms.Cursor" /> que representa el puntero del mouse utilizado para el panel de edición.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El panel de edición es la <xref:System.Windows.Forms.Panel> que aloja la edición de control cuando el <xref:System.Windows.Forms.DataGridView> control está en modo de edición. El control de edición real no puede abarcar toda el área del panel de edición. En este caso, el <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementación debería devolver el cursor que se usará cuando el puntero del mouse está sobre el panel, pero no sobre el control. Normalmente, desea devolver el mismo cursor que utiliza el control. Si desea cambiar el cursor que aparece cuando el puntero está encima del control, debe establecer el <xref:System.Windows.Forms.Control.Cursor%2A> propiedad. Puede establecerlo en el constructor de la <xref:System.Windows.Forms.IDataGridViewEditingControl> implementación, o bien puede establecerla en el <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se proporciona una implementación de este miembro. Este ejemplo forma parte de un ejemplo más extenso proporcionado en [Cómo: Alojar controles en formularios de Windows las celdas de DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Una combinación bit a bit de valores <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> que especifica el contexto en el que se necesitan los datos.</param>
        <summary>Recupera el valor con formato de la celda.</summary>
        <returns>Un tipo <see cref="T:System.Object" /> que representa la versión con formato del contenido de la celda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor con formato representa el valor tal y como se muestra en la interfaz de usuario del control. El valor con formato puede ser diferente en el valor absoluto y el tipo de datos incluso desde el valor real que se encuentra en el control.  
  
 Para establecer el valor con formato del control, utilice el <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cambiar el valor devuelto en la implementación de este método no cambia automáticamente el valor mostrado. Cuando se cambia el valor en el control de edición, debe notificar a la <see cref="T:System.Windows.Forms.DataGridView" /> del cambio pasando <see langword="true" /> a la <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> método.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit" Usage="iDataGridViewEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll"><see langword="true" /> para seleccionar todo el contenido de la celda; en caso contrario, <see langword="false" />.</param>
        <summary>Prepara la celda actualmente seleccionada para su edición.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El propósito de este método consiste en preparar el control y su contenido para su edición. Por ejemplo, desea colocar el punto de inserción al final del contenido o cambiar cómo se alinea el contenido.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el contenido de la celda debe cambiar de posición cada vez que se modifique el valor.</summary>
        <value>Es <see langword="true" /> si debe cambiarse la posición del contenido; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algunas situaciones requieren que cambia la posición contenido de la celda cuando cambia el valor. Por ejemplo, contenido de la celda que deba cambiar la posición cuando una celda ajusta el texto y el contenido aumentan de tamaño.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>