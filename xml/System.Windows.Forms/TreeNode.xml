<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00cc797d09168b7644056f5a641b7cfa5b07abac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37564037" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un nodo de <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.Nodes%2A> colección contiene todos los secundarios <xref:System.Windows.Forms.TreeNode> objetos asignados al actual <xref:System.Windows.Forms.TreeNode>. Puede agregar, quitar o clonar un <xref:System.Windows.Forms.TreeNode>; al hacer esto, el árbol de secundario todos los nodos se agregan, quitan o clonar. Cada <xref:System.Windows.Forms.TreeNode> puede contener una colección de otros <xref:System.Windows.Forms.TreeNode> objetos. Esto puede dificultar determinar dónde se encuentre en el <xref:System.Windows.Forms.TreeView> al recorrer en iteración la colección. Para determinar su ubicación en una estructura de árbol, utilice el <xref:System.Windows.Forms.TreeNode.FullPath%2A> propiedad. El <xref:System.Windows.Forms.TreeNode.FullPath%2A> cadena se puede analizar mediante el <xref:System.Windows.Forms.TreeView.PathSeparator%2A> valor para determinar dónde de cadena un <xref:System.Windows.Forms.TreeNode> etiqueta empieza y termina.  
  
 El <xref:System.Windows.Forms.TreeNode> se estableció la etiqueta estableciendo el <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad explícitamente. La alternativa consiste en crear el nodo de árbol mediante uno de los <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructores que tiene un parámetro de cadena que representa el <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad. La etiqueta se muestra junto a la <xref:System.Windows.Forms.TreeNode> la imagen, si se muestra ninguno.  
  
 Para mostrar imágenes junto a los nodos de árbol, asignar un <xref:System.Windows.Forms.ImageList> a la <xref:System.Windows.Forms.TreeView.ImageList%2A> propiedad del elemento primario <xref:System.Windows.Forms.TreeView> controlar y asignar un <xref:System.Drawing.Image> haciendo referencia a su valor de índice en el <xref:System.Windows.Forms.ImageList> propiedad. Establecer el <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propiedad al valor de índice de la <xref:System.Drawing.Image> que desea mostrar cuando el <xref:System.Windows.Forms.TreeNode> está en un estado no seleccionado. Del mismo modo, establezca la <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> propiedad al valor de índice de la <xref:System.Drawing.Image> que desea mostrar cuando el <xref:System.Windows.Forms.TreeNode> está seleccionada.  
  
 Seleccionar nodos de árbol específicos y recorrer en iteración el <xref:System.Windows.Forms.TreeView.Nodes%2A> colección puede lograrse mediante el uso de los siguientes valores de propiedad: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Asignar el <xref:System.Windows.Forms.TreeNode> devuelto por una de las propiedades mencionadas en el <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> propiedad para seleccionar ese nodo de árbol en el <xref:System.Windows.Forms.TreeView> control.  
  
 Los nodos de árbol se pueden expandir para mostrar el siguiente nivel de nodos de árbol secundarios. El usuario puede expandir el <xref:System.Windows.Forms.TreeNode> presionando el signo más (+) situado junto a la <xref:System.Windows.Forms.TreeNode>si se muestra uno, o puede expandir el <xref:System.Windows.Forms.TreeNode> mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Expand%2A> método. Para expandir todos los niveles de nodos de árbol secundarios en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> colección, llame a la <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> método. Puede contraer el elemento secundario <xref:System.Windows.Forms.TreeNode> nivel mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Collapse%2A> método o el usuario puede presionar el signo menos (-) situado junto a la <xref:System.Windows.Forms.TreeNode>, si se muestra ninguno. También puede llamar a la <xref:System.Windows.Forms.TreeNode.Toggle%2A> método para alternar el <xref:System.Windows.Forms.TreeNode> entre los Estados expandidos y contraídos.  
  
 Los nodos de árbol, opcionalmente, pueden mostrar una casilla de verificación. Para mostrar las casillas de verificación, establezca el <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> propiedad de la <xref:System.Windows.Forms.TreeView> a `true`. El <xref:System.Windows.Forms.TreeNode.Checked%2A> propiedad está establecida en `true` para nodos de árbol que se encuentran en un estado activado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la información del cliente en un <xref:System.Windows.Forms.TreeView> control. Los nodos de árbol raíz mostrar nombres de los clientes y los nodos secundarios muestran los números de pedido asignados a cada cliente. En este ejemplo, se muestran 1.000 clientes con 15 pedidos. La actualización de la pantalla de la <xref:System.Windows.Forms.TreeView> se suprime mediante el uso de la <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> y <xref:System.Windows.Forms.TreeView.EndUpdate%2A> métodos y una espera <xref:System.Windows.Forms.Cursor> se muestra mientras el <xref:System.Windows.Forms.TreeView> crea y se pinta el <xref:System.Windows.Forms.TreeNode> objetos. En este ejemplo requiere que haya un `Customer` objeto que contiene una colección de `Order` objetos. También requiere que ha creado una instancia de un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se crea un nodo de árbol raíz para asignarle a secundarios de nodos de árbol. Un nodo de árbol secundarios para cada `Customer` objeto en un <xref:System.Collections.ArrayList> se agrega al nodo de árbol raíz, así como un nodo de árbol secundarios para cada `Order` objeto asignado a la `Customer` objeto. El `Customer` se asigna a la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad y los nodos de árbol que representa `Customer` los objetos se muestran con <xref:System.Drawing.Color.Orange%2A> texto. En este ejemplo requiere que haya un `Customer` y `Order` objeto definido, un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>y un <xref:System.Collections.ArrayList> denominado `customerArray` que contiene `Customer` objetos.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Etiqueta <see cref="P:System.Windows.Forms.TreeNode.Text" /> del nuevo nodo de árbol.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" /> con el texto de etiqueta especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `text` se asigna el valor del parámetro en el nodo <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad y se convierte en la etiqueta del nodo de árbol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la información del cliente en un <xref:System.Windows.Forms.TreeView> control. Los nodos de árbol raíz mostrar nombres de los clientes y los nodos secundarios muestran los números de pedido asignados a cada cliente. En este ejemplo, se muestran 1.000 clientes con 15 pedidos. La actualización de la pantalla de la <xref:System.Windows.Forms.TreeView> se suprime mediante el uso de la <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> y <xref:System.Windows.Forms.TreeView.EndUpdate%2A> métodos y una espera <xref:System.Windows.Forms.Cursor> se muestra mientras el <xref:System.Windows.Forms.TreeView> crea y se pinta el <xref:System.Windows.Forms.TreeNode> objetos. En este ejemplo requiere que haya un `Customer` objeto que contiene una colección de `Order` objetos. También requiere que ha creado una instancia de un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos para deserializar la clase.</param>
        <param name="context">Control <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" /> con la información de serialización y el contexto especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Etiqueta <see cref="P:System.Windows.Forms.TreeNode.Text" /> del nuevo nodo de árbol.</param>
        <param name="children">Matriz de objetos <see cref="T:System.Windows.Forms.TreeNode" /> secundarios.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" /> con el texto de etiqueta y los nodos de árbol secundarios especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `text` se asigna el valor del parámetro en el nodo <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad y se convierte en la etiqueta del nodo de árbol. Los nodos de árbol que se encuentran en el `children` matriz se agregan a la <xref:System.Windows.Forms.TreeNodeCollection> que están almacenados en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nodo de árbol raíz para asignarle a secundarios de nodos de árbol. Un nodo de árbol secundarios para cada `Customer` objeto en un <xref:System.Collections.ArrayList> se agrega al nodo de árbol raíz, así como un nodo de árbol secundarios para cada `Order` objeto asignado a la `Customer` objeto. El `Customer` se asigna a la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad y los nodos de árbol que representa `Customer` los objetos se muestran con <xref:System.Drawing.Color.Orange%2A> texto. En este ejemplo requiere que haya un `Customer` y `Order` objeto definido, un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>y un <xref:System.Collections.ArrayList> denominado `customerArray` que contiene `Customer` objetos.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Etiqueta <see cref="P:System.Windows.Forms.TreeNode.Text" /> del nuevo nodo de árbol.</param>
        <param name="imageIndex">Valor del índice de la <see cref="T:System.Drawing.Image" /> que se va a mostrar cuando el nodo de árbol no esté seleccionado.</param>
        <param name="selectedImageIndex">Valor del índice de la <see cref="T:System.Drawing.Image" /> que se va a mostrar cuando el nodo de árbol esté seleccionado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" /> con el texto de etiqueta especificado y las imágenes que se han de mostrar cuando el nodo de árbol esté seleccionado o sin seleccionar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `text` se asigna el valor del parámetro en el nodo <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad y se convierte en la etiqueta del nodo de árbol. El `imageIndex` y `selectedImageIndex` los valores son los valores de índice de un <xref:System.Drawing.Image> almacenados en el <xref:System.Windows.Forms.ImageList> asignado a la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propiedad. La imagen que se hace referenciada en el `imageIndex` propiedad se muestra cuando no se selecciona el nodo de árbol. Del mismo modo, la imagen que se hace referenciada en el `selectedImageIndex` propiedad se muestra cuando el nodo de árbol está en un estado seleccionado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea y asigna un <xref:System.Windows.Forms.ImageList> a un <xref:System.Windows.Forms.TreeView> control y rellena el <xref:System.Windows.Forms.TreeView> controlar con <xref:System.Windows.Forms.TreeNode> objetos. Los nodos de árbol se les asignan imágenes desde el <xref:System.Windows.Forms.ImageList> que se muestra cuando el nodo de árbol está en un estado seleccionado o sin seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TreeView>y un <xref:System.Collections.ArrayList> que contiene `Customer` objetos que contienen cada `Order` objetos. También requiere que el `Customer` y `Order` se definen los objetos.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Etiqueta <see cref="P:System.Windows.Forms.TreeNode.Text" /> del nuevo nodo de árbol.</param>
        <param name="imageIndex">Valor del índice de la <see cref="T:System.Drawing.Image" /> que se va a mostrar cuando el nodo de árbol no esté seleccionado.</param>
        <param name="selectedImageIndex">Valor del índice de la <see cref="T:System.Drawing.Image" /> que se va a mostrar cuando el nodo de árbol esté seleccionado.</param>
        <param name="children">Matriz de objetos <see cref="T:System.Windows.Forms.TreeNode" /> secundarios.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.TreeNode" /> con el texto de etiqueta, los nodos de árbol secundarios y las imágenes que se han especificado y se han de mostrar cuando el nodo de árbol esté seleccionado o sin seleccionar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `text` se asigna el valor del parámetro en el nodo <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad y se convierte en la etiqueta del nodo de árbol. El `imageIndex` y `selectedImageIndex` los valores son los valores de índice de un <xref:System.Drawing.Image> almacenados en el <xref:System.Windows.Forms.ImageList> asignado a la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propiedad. La imagen que se hace referenciada en el `imageIndex` parámetro se muestra cuando no se selecciona el nodo de árbol. Del mismo modo, la imagen que se hace referenciada en el `selectedImageIndex` parámetro se muestra cuando el nodo de árbol está en un estado seleccionado. Los nodos de árbol que se encuentran en el `children` matriz se agregan a la <xref:System.Windows.Forms.TreeNodeCollection> que están almacenados en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea y asigna un <xref:System.Windows.Forms.ImageList> a un <xref:System.Windows.Forms.TreeView> control y rellena el <xref:System.Windows.Forms.TreeView> controlar con <xref:System.Windows.Forms.TreeNode> objetos. Los nodos de árbol se les asignan imágenes desde el <xref:System.Windows.Forms.ImageList> que se muestra cuando el nodo de árbol está en un estado seleccionado o sin seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TreeView>y un <xref:System.Collections.ArrayList> que contiene `Customer` objetos que contienen cada `Order` objetos. También requiere que el `Customer` y `Order` se definen los objetos.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de fondo del nodo de árbol.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> de fondo del nodo de árbol. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Forms.TreeNode.BackColor%2A> propiedad está establecida en <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, el <xref:System.Drawing.Color> utilizada es la <xref:System.Windows.Forms.Control.BackColor%2A> valor de propiedad de la <xref:System.Windows.Forms.TreeView> control al que está asignado el nodo de árbol.  
  
   
  
## Examples  
 El siguiente ejemplo de código resalta cualquiera <xref:System.Windows.Forms.TreeNode> objetos un <xref:System.Windows.Forms.TreeView> control que tiene su <xref:System.Windows.Forms.TreeNode.Checked%2A> propiedad establecida en `true` estableciendo su <xref:System.Windows.Forms.TreeNode.BackColor%2A> propiedad <xref:System.Drawing.Color.Yellow%2A>. Este código requiere que haya un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form> con una colección de <xref:System.Windows.Forms.TreeNode> objetos.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="treeNode.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia la edición de la etiqueta del nodo de árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un escenario típico para usar este método es una llamada a la <xref:System.Windows.Forms.MenuItem.Click> eventos de un <xref:System.Windows.Forms.MenuItem> o <xref:System.Windows.Forms.ContextMenu>.  
  
> [!NOTE]
>  Este método solo funciona si la <xref:System.Windows.Forms.TreeView.LabelEdit%2A> propiedad de la <xref:System.Windows.Forms.TreeView> está establecido en `true`. Si <xref:System.Windows.Forms.TreeView.LabelEdit%2A> está establecido en `false`, se produce una excepción y no se colocará el nodo de árbol en estado editable.  
  
   
  
## Examples  
 El ejemplo de código siguiente permite al usuario modificar los nodos de nodos de árbol mediante el uso de un <xref:System.Windows.Forms.ContextMenu>. Cuando el usuario hace clic con botón del mouse, el <xref:System.Windows.Forms.TreeNode> de dicha posición determina y almacenan en una variable denominada `mySelectedNode`. Si se ha seleccionado un nodo de árbol sin raíz, se pone en estado editable, lo que permite al usuario editar la etiqueta del nodo. Después de que el usuario termina de editar la etiqueta del nodo de árbol, se evalúa y se guarda el nuevo texto de etiqueta. En este ejemplo, varios caracteres se consideran no válidos en el texto de etiqueta. Si uno de los caracteres no válidos se encuentra en la cadena de la etiqueta o la cadena está vacía, se notifica al usuario del error y la etiqueta se devuelve el texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El valor de <see cref="P:System.Windows.Forms.TreeView.LabelEdit" /> está establecido en <see langword="false" />.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.TreeNode.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los límites del nodo de árbol.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> que representa los límites del nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las coordenadas son relativas a la esquina superior izquierda de la <xref:System.Windows.Forms.TreeView> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se cambia el tamaño <xref:System.Windows.Forms.TreeNode.NodeFont%2A> al tamaño especificado y ajusta el <xref:System.Windows.Forms.TreeView.ItemHeight%2A> principal del nodo de árbol de <xref:System.Windows.Forms.TreeView> control. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TreeView> control con una colección de <xref:System.Windows.Forms.TreeNode> objetos y un <xref:System.Windows.Forms.ComboBox> que contiene los tamaños de fuente.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el nodo de árbol está activado.</summary>
        <value>Es <see langword="true" /> si el nodo de árbol está activado; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código resalta cualquiera <xref:System.Windows.Forms.TreeNode> objetos un <xref:System.Windows.Forms.TreeView> control que tiene su <xref:System.Windows.Forms.TreeNode.Checked%2A> propiedad establecida en `true` estableciendo su <xref:System.Windows.Forms.TreeNode.BackColor%2A> propiedad <xref:System.Drawing.Color.Yellow%2A>. Este código requiere que haya un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form> con una colección de <xref:System.Windows.Forms.TreeNode> objetos.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copia el nodo de árbol y todo el subárbol con raíz en este nodo de árbol.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el <see cref="T:System.Windows.Forms.TreeNode" /> clonado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se copia la estructura de árbol desde el nodo de árbol que se clona y, a continuación. Nodos de árbol secundarios asignados a la <xref:System.Windows.Forms.TreeNode> está clonando se incluyen en el nuevo nodo de árbol y subárbol.  
  
 El <xref:System.Windows.Forms.TreeNode.Clone%2A> método realiza una copia superficial del nodo. Si el valor de la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad es un tipo de referencia, la copia original y clonada apuntará a la misma instancia de la <xref:System.Windows.Forms.TreeNode.Tag%2A> valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se clona el último nodo de árbol secundario del último nodo de árbol raíz y se inserta el clon como el primer nodo de árbol raíz en el `TreeNodeCollection`. En este ejemplo requiere que haya un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form> que contiene una colección de <xref:System.Windows.Forms.TreeNode> objetos y una <xref:System.Windows.Forms.Button>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Contrae el control <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Contrae el nodo de árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.Collapse%2A> método contrae actual <xref:System.Windows.Forms.TreeNode> y sus nodos secundarios. Si desea contraer solo actual <xref:System.Windows.Forms.TreeNode>, utilice el <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType> sobrecarga, pasando `true` para pasar por alto sus nodos secundarios.  
  
> [!NOTE]
>  El estado de un <xref:System.Windows.Forms.TreeNode> se conserva. Por ejemplo, si el siguiente nivel de nodos secundarios no se ha contraído anteriormente, cuando el <xref:System.Windows.Forms.TreeNode.Expand%2A> se llama al método, los nodos secundarios aparecen en su estado expandido previamente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se alterna el nodo seleccionado cuando se hace clic en un botón. Si se contrae el nodo seleccionado, se expande, si se expande mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Expand%2A> método, está contraído mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Collapse%2A> método. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene al menos una <xref:System.Windows.Forms.TreeNode> con al menos un elemento secundario <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberSignature Language="F#" Value="member this.Collapse : bool -&gt; unit" Usage="treeNode.Collapse ignoreChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren">Es <see langword="true" /> para dejar los nodos secundarios en su estado actual; <see langword="false" /> para contraer los nodos secundarios.</param>
        <summary>Contrae el control <see cref="T:System.Windows.Forms.TreeNode" /> y opcionalmente contrae sus elementos secundarios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Forms.TreeNode.Collapse%2A> método, pasando `true`, cuando desea contraer un nodo, pero dejar los nodos secundarios en su estado expandido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el menú contextual asociado a este nodo de árbol.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ContextMenu" /> asociado al nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es la mejor manera de asociar un menú contextual a un nodo de árbol con el <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el menú contextual asociado a este nodo de árbol.</summary>
        <value>Control <see cref="T:System.Windows.Forms.ContextMenuStrip" /> asociado al nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El menú contextual se muestra cuando el usuario seleccione el nodo de árbol.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Deserialize (serializationInfo, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe la clase <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Control <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica el estado de la secuencia durante la deserialización.</param>
        <summary>Carga el estado del <see cref="T:System.Windows.Forms.TreeNode" /> a partir del <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : bool -&gt; unit" Usage="treeNode.EndEdit cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">Es <see langword="true" /> si se canceló la edición del texto que aparece en la etiqueta del nodo de árbol sin haber guardado los cambios; en caso contrario, es <see langword="false" />.</param>
        <summary>Finaliza la edición de la etiqueta del nodo de árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente permite al usuario modificar los nodos de nodos de árbol mediante el uso de un <xref:System.Windows.Forms.ContextMenu>. Cuando el usuario hace clic con el mouse, el <xref:System.Windows.Forms.TreeNode> de dicha posición determina y almacenan en una variable denominada `mySelectedNode`. Si se ha seleccionado un nodo de árbol sin raíz, se pone en estado editable, lo que permite al usuario editar la etiqueta del nodo. Después de que el usuario termina de editar la etiqueta del nodo de árbol, se evalúa y se guarda el nuevo texto de etiqueta. En este ejemplo, varios caracteres se consideran no válidos en el texto de etiqueta. Si uno de los caracteres no válidos se encuentra en la cadena de la etiqueta o la cadena está vacía, se notifica al usuario del error y la etiqueta se devuelve el texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="treeNode.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantiza que el nodo de árbol sea visible, mediante la expansión de los nodos de árbol y el desplazamiento por el control de vista de árbol según sea necesario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A> se llama al método, el árbol se expande y se desplaza para asegurarse de que el actual nodo de árbol está visible en el <xref:System.Windows.Forms.TreeView>. Este método es útil si se selecciona un nodo de árbol en código basado en determinados criterios. Al llamar a este método después de seleccionar el nodo, el usuario puede ver e interactuar con el nodo seleccionado.  
  
> [!NOTE]
>  Si el <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType> propiedad está establecida en un valor mayor que el alto del control de vista de árbol, llamar a este método tiene resultados inesperados.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra al último elemento secundario el nodo de árbol del último nodo de árbol raíz en la vista de árbol cuando se hace clic en un botón. En este ejemplo requiere que haya un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form> que contiene una colección de <xref:System.Windows.Forms.TreeNode> objetos y un <xref:System.Windows.Forms.Button>. Debe haber suficientes nodos de árbol para que no estén visibles en el control de vista de árbol.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Expande el nodo de árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.Expand%2A> método expande actual <xref:System.Windows.Forms.TreeNode> hasta el siguiente nivel de nodos.  
  
> [!NOTE]
>  El estado de un <xref:System.Windows.Forms.TreeNode> se conserva. Por ejemplo, si el siguiente nivel de nodos secundarios no se ha contraído anteriormente, cuando el <xref:System.Windows.Forms.TreeNode.Expand%2A> se llama al método, los nodos secundarios aparecen en su estado expandido previamente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se alterna el nodo seleccionado cuando se hace clic en un botón. Si se contrae el nodo seleccionado, se expande, si se expande mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Expand%2A> método, está contraído mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Collapse%2A> método. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene al menos una <xref:System.Windows.Forms.TreeNode> con al menos un elemento secundario <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Expande todos los nodos de árbol secundarios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> método expande todos los nodos de árbol secundarios asignados a la <xref:System.Windows.Forms.TreeNode.Nodes%2A> colección.  
  
> [!NOTE]
>  El estado de un <xref:System.Windows.Forms.TreeNode> se conserva. Por ejemplo, si el siguiente nivel de nodos secundarios no se ha contraído anteriormente, cuando el <xref:System.Windows.Forms.TreeNode.Expand%2A> se llama al método, los nodos secundarios aparecen en su estado expandido previamente.  
  
   
  
## Examples  
 El siguiente ejemplo de código expande todos los nodos de árbol en un <xref:System.Windows.Forms.TreeView> controlar cuándo un <xref:System.Windows.Forms.CheckBox> está activada y se contrae el <xref:System.Windows.Forms.TreeNode.FirstNode%2A> cuando el <xref:System.Windows.Forms.CheckBox> está desactivada. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.CheckBox>y un <xref:System.Windows.Forms.TreeView> controlar con un <xref:System.Windows.Forms.TreeNodeCollection> que tiene varios <xref:System.Windows.Forms.TreeNode> objetos (preferiblemente con tres o más niveles).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FirstNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el primer nodo de árbol secundario en la colección de nodos de árbol.</summary>
        <value>Primer <see cref="T:System.Windows.Forms.TreeNode" /> secundario de la colección de <see cref="P:System.Windows.Forms.TreeNode.Nodes" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.FirstNode%2A> es el primer elemento secundario <xref:System.Windows.Forms.TreeNode> en el <xref:System.Windows.Forms.TreeNodeCollection> almacenados en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad del nodo de árbol actual. Si el <xref:System.Windows.Forms.TreeNode> tiene ningún nodo de árbol secundario, la <xref:System.Windows.Forms.TreeNode.FirstNode%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de primer plano del nodo de árbol.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> de primer plano del nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `null`, <xref:System.Drawing.Color> utilizada es la <xref:System.Windows.Forms.Control.ForeColor%2A> valor de propiedad de la <xref:System.Windows.Forms.TreeView> control al que está asignado el nodo de árbol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nodo de árbol raíz para asignarle a secundarios de nodos de árbol. Un nodo de árbol secundarios para cada `Customer` objeto en un <xref:System.Collections.ArrayList> se agrega al nodo de árbol raíz, así como un nodo de árbol secundarios para cada `Order` objeto asignado a la `Customer` objeto. El `Customer` se asigna a la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad y los nodos de árbol que representa `Customer` los objetos se muestran con <xref:System.Drawing.Color.Orange%2A> texto. En este ejemplo requiere que haya un `Customer` y `Order` objeto definido, un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>y un <xref:System.Collections.ArrayList> denominado `customerArray` que contiene `Customer` objetos.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : System.Windows.Forms.TreeView * nativeint -&gt; System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FromHandle (tree, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree">
          <see cref="T:System.Windows.Forms.TreeView" /> que contiene el nodo de árbol.</param>
        <param name="handle">Identificador del nodo de árbol.</param>
        <summary>Devuelve el nodo de árbol que tiene el identificador especificado y que está asignado al control de vista de árbol especificado.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el nodo de árbol que está asignado al control de <see cref="T:System.Windows.Forms.TreeView" /> especificado y que tiene el identificador especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se agrega un nodo a la <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType> colección, el <xref:System.Windows.Forms.TreeView> control envía una notificación NM_CUSTOMDRAW antes de que el identificador de nodo está disponible. Si invalida el <xref:System.Windows.Forms.Control.WndProc%2A> método de la <xref:System.Windows.Forms.TreeView> para proporcionar el dibujo personalizado en respuesta a esta notificación, debe comprobar siempre el valor devuelto de este método para `null` antes de intentar tener acceso al nodo.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene el <xref:System.Windows.Forms.TreeNode> que estaba contraído y se crea una copia del mismo mediante su <xref:System.Windows.Forms.TreeNode.Handle%2A> propiedad. La versión original <xref:System.Windows.Forms.TreeNode> se quita de la <xref:System.Windows.Forms.TreeNodeCollection>, y la copia se agrega a la colección. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control en él. El <xref:System.Windows.Forms.TreeView> control debería tener dos o más nodos raíz, cada uno con al menos un nodo secundario.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.Windows.Forms.TreeNode.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ruta de acceso desde el nodo de árbol raíz hasta el actual nodo de árbol.</summary>
        <value>Ruta de acceso desde el nodo de árbol raíz hasta el actual nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ruta de acceso se compone de las etiquetas de todos los nodos de árbol que se deben navegar para llegar a este nodo de árbol, empezando por el nodo de árbol raíz. Las etiquetas de nodo se separan mediante el carácter delimitador especificado en el <xref:System.Windows.Forms.TreeView.PathSeparator%2A> propiedad de la <xref:System.Windows.Forms.TreeView> control que contiene este nodo. Por ejemplo, si el carácter delimitador del control de vista de árbol denominado "Location" se establece en el carácter de barra diagonal inversa (\\), el <xref:System.Windows.Forms.TreeNode.FullPath%2A> valor de propiedad es "Country\Region\State".  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la <xref:System.Windows.Forms.TreeView.PathSeparator%2A> propiedad de un <xref:System.Windows.Forms.TreeView> y muestra el número de nodos secundarios que se encuentran en el <xref:System.Windows.Forms.TreeNodeCollection> de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. También se muestra el porcentaje de nodos secundarios a los nodos de árbol total en el control de vista de árbol. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button>y un <xref:System.Windows.Forms.TreeView> controlar con un <xref:System.Windows.Forms.TreeNodeCollection> que tiene varios <xref:System.Windows.Forms.TreeNode> objetos (preferiblemente con tres o más niveles).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El nodo no está contenido en un control <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeNode.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">Es <see langword="true" /> si el recuento resultante incluye todos los nodos de árbol cuya raíz está indirectamente situada en este nodo de árbol; en caso contrario, es <see langword="false" />.</param>
        <summary>Devuelve el número de nodos de árbol secundarios.</summary>
        <returns>Número de nodos de árbol secundarios asignados a la colección de <see cref="P:System.Windows.Forms.TreeNode.Nodes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código establece la <xref:System.Windows.Forms.TreeView.PathSeparator%2A> propiedad de un <xref:System.Windows.Forms.TreeView> y muestra el número de nodos secundarios que se encuentran en el <xref:System.Windows.Forms.TreeNodeCollection> de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. También se muestra el porcentaje de nodos secundarios a los nodos de árbol total en el control de vista de árbol. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button>y un <xref:System.Windows.Forms.TreeView> controlar con un <xref:System.Windows.Forms.TreeNodeCollection> que tiene varios <xref:System.Windows.Forms.TreeNode> objetos (preferiblemente con tres o más niveles).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TreeNode.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador del nodo de árbol.</summary>
        <value>Identificador del nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un identificador no se ha creado cuando la <xref:System.Windows.Forms.TreeNode.Handle%2A> se hace referencia a la propiedad, se creará.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene el <xref:System.Windows.Forms.TreeNode> que estaba contraído y se crea una copia del mismo mediante su <xref:System.Windows.Forms.TreeNode.Handle%2A> propiedad. La versión original <xref:System.Windows.Forms.TreeNode> se quita de la <xref:System.Windows.Forms.TreeNodeCollection>, y la copia se agrega a la colección. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control en él. El <xref:System.Windows.Forms.TreeView> control debería tener dos o más nodos raíz, cada uno con al menos un nodo secundario.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de índice de la lista de imágenes correspondiente a la imagen que se muestra cuando no está seleccionado el nodo de árbol.</summary>
        <value>Valor de índice de base cero que representa la posición de la imagen en la <see cref="T:System.Windows.Forms.ImageList" /> asignada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> valor es el valor de índice de un <xref:System.Drawing.Image> almacenados en el <xref:System.Windows.Forms.ImageList> asignado a la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propiedad.  
  
> [!NOTE]
>  El valor predeterminado de la <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propiedad es el mismo que el <xref:System.Windows.Forms.TreeView.ImageIndex%2A> propiedad de la <xref:System.Windows.Forms.TreeView> que controlan el <xref:System.Windows.Forms.TreeNode> se asigna a.  
  
 El <xref:System.Windows.Forms.TreeNode.ImageKey%2A> y <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propiedades se excluyen mutuamente; por lo tanto, si se establece una propiedad, la otra se omite. Si establece la <xref:System.Windows.Forms.TreeNode.ImageKey%2A> propiedad, el <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propiedad se establece automáticamente en -1. Como alternativa, si establece <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> se establece automáticamente en una cadena vacía ("").  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea y asigna un <xref:System.Windows.Forms.ImageList> a un <xref:System.Windows.Forms.TreeView> control y rellena el <xref:System.Windows.Forms.TreeView> controlar con <xref:System.Windows.Forms.TreeNode> objetos. Los nodos de árbol se les asignan imágenes desde el <xref:System.Windows.Forms.ImageList> que se muestra cuando el nodo de árbol está en un estado seleccionado o sin seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TreeView>y un <xref:System.Collections.ArrayList> que contiene `Customer` objetos que contienen cada `Order` objetos. También requiere que el `Customer` y `Order` se definen los objetos.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clave para la imagen asociada a este nodo de árbol cuando el nodo está en un estado no seleccionado.</summary>
        <value>Clave para la imagen asociada a este nodo de árbol cuando el nodo está en un estado no seleccionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clave de imagen devuelta por esta propiedad se encuentra en la <xref:System.Windows.Forms.TreeView.ImageList%2A> propiedad de la que contiene <xref:System.Windows.Forms.TreeView> control.  
  
 El <xref:System.Windows.Forms.TreeNode.ImageKey%2A> distingue mayúsculas de minúsculas.  
  
 El <xref:System.Windows.Forms.TreeNode.ImageKey%2A> y <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propiedades se excluyen mutuamente; si se establece una propiedad, se omite el resto. Si establece la <xref:System.Windows.Forms.TreeNode.ImageKey%2A> propiedad, el <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propiedad se establece automáticamente en -1. Como alternativa, si establece <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> se establece automáticamente en una cadena vacía ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.TreeNode.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la posición del nodo de árbol en la colección de nodos de árbol.</summary>
        <value>Valor de índice de base cero que representa la posición del nodo de árbol en la colección de <see cref="P:System.Windows.Forms.TreeNode.Nodes" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente código de ejemplo se muestra el <xref:System.Windows.Forms.TreeNode.Text%2A> y <xref:System.Windows.Forms.TreeNode.Index%2A> valores de propiedad de la <xref:System.Windows.Forms.TreeNode> representado por la <xref:System.Windows.Forms.TreeNode.Parent%2A> propiedad de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control en él. El <xref:System.Windows.Forms.TreeView> debe tener al menos dos nodos raíz, cada uno con al menos un nodo secundario.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditing : bool" Usage="System.Windows.Forms.TreeNode.IsEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo de árbol es editable.</summary>
        <value>Es <see langword="true" /> si el nodo de árbol es editable; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente permite al usuario modificar los nodos de nodos de árbol mediante el uso de un <xref:System.Windows.Forms.ContextMenu>. Cuando el usuario hace clic con el mouse, el <xref:System.Windows.Forms.TreeNode> de dicha posición determina y almacenan en una variable denominada `mySelectedNode`. Si se ha seleccionado un nodo de árbol sin raíz, se pone en estado editable, lo que permite al usuario editar la etiqueta del nodo. Después de que el usuario termina de editar la etiqueta del nodo de árbol, se evalúa y se guarda el nuevo texto de etiqueta. En este ejemplo, varios caracteres se consideran no válidos en el texto de etiqueta. Si uno de los caracteres no válidos se encuentra en la cadena de la etiqueta o la cadena está vacía, se notifica al usuario del error y la etiqueta se devuelve el texto anterior.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool" Usage="System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo de árbol está expandido.</summary>
        <value>Es <see langword="true" /> si el nodo de árbol está expandido; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se alterna el nodo seleccionado cuando se hace clic en un botón. Si se contrae el nodo seleccionado, se expande, si se expande mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Expand%2A> método, está contraído mediante una llamada a la <xref:System.Windows.Forms.TreeNode.Collapse%2A> método. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene al menos una <xref:System.Windows.Forms.TreeNode> con al menos un elemento secundario <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Windows.Forms.TreeNode.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo de árbol está seleccionado.</summary>
        <value>Es <see langword="true" /> si el nodo de árbol está seleccionado; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.Forms.TreeNode.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo de árbol está visible o parcialmente visible.</summary>
        <value>Es <see langword="true" /> si el nodo de árbol está visible o parcialmente visible; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra al último elemento secundario el nodo de árbol del último nodo de árbol raíz en la vista de árbol cuando se hace clic en un botón. En este ejemplo requiere que haya un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form> que contiene una colección de <xref:System.Windows.Forms.TreeNode> objetos y un <xref:System.Windows.Forms.Button>. Debe haber suficientes nodos de árbol para que no estén visibles en el control de vista de árbol.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.LastNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el último nodo de árbol secundario.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el último nodo de árbol secundario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.LastNode%2A> es el último elemento secundario <xref:System.Windows.Forms.TreeNode> en el <xref:System.Windows.Forms.TreeNodeCollection> almacenados en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad del nodo de árbol actual. Si el <xref:System.Windows.Forms.TreeNode> tiene ningún nodo de árbol secundario, la <xref:System.Windows.Forms.TreeNode.LastNode%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="System.Windows.Forms.TreeNode.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la profundidad basada en cero del nodo de árbol en el control <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Profundidad basada en cero del nodo de árbol en el control <see cref="T:System.Windows.Forms.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para el <xref:System.Windows.Forms.TreeNode.Level%2A> propiedad, el nodo raíz se considera el primer nivel de anidamiento y devuelve 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.TreeNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de árbol.</summary>
        <value>Control <see cref="T:System.String" /> que representa el nombre del nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.Name%2A> de un <xref:System.Windows.Forms.TreeNode> también es la clave del nodo, cuando el nodo forma parte de un <xref:System.Windows.Forms.TreeNodeCollection>. Si el nodo no tiene un nombre, <xref:System.Windows.Forms.TreeNode.Name%2A> devuelve una cadena vacía ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el siguiente nodo de árbol relacionado.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el siguiente nodo de árbol relacionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.NextNode%2A> es el siguiente elemento relacionado <xref:System.Windows.Forms.TreeNode> en el <xref:System.Windows.Forms.TreeNodeCollection> almacenados en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad del elemento primario del nodo de árbol <xref:System.Windows.Forms.TreeNode>. Si no hay ningún nodo de árbol siguiente, la <xref:System.Windows.Forms.TreeNode.NextNode%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el siguiente nodo de árbol visible.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el siguiente nodo de árbol visible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> puede ser un elemento secundario, del mismo nivel o un nodo de árbol de otra rama. Si no hay ningún nodo de árbol siguiente, la <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.TreeNode.NodeFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la fuente que se usa para mostrar el texto en la etiqueta del nodo de árbol.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> que se usa para mostrar el texto en la etiqueta del nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `null`, el <xref:System.Drawing.Font> utilizada es la <xref:System.Windows.Forms.Control.Font%2A> valor de propiedad de la <xref:System.Windows.Forms.TreeView> control que está asociado este nodo a.  
  
> [!NOTE]
>  Si la fuente del nodo es mayor que el <xref:System.Windows.Forms.Control.Font%2A> valor de propiedad que se establece en el <xref:System.Windows.Forms.TreeView> se recorta el control, el texto de etiqueta del nodo de árbol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se cambia el tamaño de <xref:System.Windows.Forms.TreeNode.NodeFont%2A> al tamaño especificado y ajusta el <xref:System.Windows.Forms.TreeView.ItemHeight%2A> principal del nodo de árbol de <xref:System.Windows.Forms.TreeView> control. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que contiene una colección de <xref:System.Windows.Forms.TreeNode> objetos y un <xref:System.Windows.Forms.ComboBox> que contiene los tamaños de fuente.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeNode.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de objetos <see cref="T:System.Windows.Forms.TreeNode" /> asignados al actual nodo de árbol.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNodeCollection" /> que representa los nodos de árbol asignados al actual nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad puede contener una colección de otros <xref:System.Windows.Forms.TreeNode> objetos. Cada uno del nodo de árbol de la colección tiene un <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad que puede contener su propia <xref:System.Windows.Forms.TreeNodeCollection>. Este anidamiento de nodos de árbol puede dificultar navegar por una estructura de árbol. El <xref:System.Windows.Forms.TreeNode.FullPath%2A> propiedad facilita determinar su ubicación en un árbol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se quita el nodo de árbol seleccionado uno <xref:System.Windows.Forms.TreeView> y lo agrega a otro si ambas colecciones de nodos de árbol no son de solo lectura. Cuando un <xref:System.Windows.Forms.Button> se hace clic en, el <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> se elimina de una <xref:System.Windows.Forms.TreeView> utilizando el <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> método y se agrega a la otra <xref:System.Windows.Forms.TreeView> mediante el <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> método. En este ejemplo requiere que haya dos <xref:System.Windows.Forms.TreeView> controles denominados `treeView1` y `treeView2`y un <xref:System.Windows.Forms.Button> en un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nodo de árbol primario del actual nodo de árbol.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el nodo primario del actual nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el nodo de árbol está en el nivel raíz, el <xref:System.Windows.Forms.TreeNode.Parent%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 El siguiente código de ejemplo se muestra el <xref:System.Windows.Forms.TreeNode.Text%2A> y <xref:System.Windows.Forms.TreeNode.Index%2A> valores de propiedad de la <xref:System.Windows.Forms.TreeNode> representado por la <xref:System.Windows.Forms.TreeNode.Parent%2A> propiedad de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control en él. El <xref:System.Windows.Forms.TreeView> debe tener al menos dos nodos raíz, cada uno con al menos un nodo secundario.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el anterior nodo de árbol relacionado.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el anterior nodo de árbol relacionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.PrevNode%2A> es el elemento relacionado anterior <xref:System.Windows.Forms.TreeNode> en el <xref:System.Windows.Forms.TreeNodeCollection> almacenados en el <xref:System.Windows.Forms.TreeNode.Nodes%2A> propiedad del elemento primario del nodo de árbol <xref:System.Windows.Forms.TreeNode>. Si no hay ningún nodo de árbol anterior, la <xref:System.Windows.Forms.TreeNode.PrevNode%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el anterior nodo de árbol visible.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> que representa el anterior nodo de árbol visible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> puede ser un elemento secundario, del mismo nivel o un nodo de árbol de otra rama. Si no hay ningún nodo de árbol anterior, la <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> propiedad devuelve `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="treeNode.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita el actual nodo de árbol del control de vista de árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Windows.Forms.TreeNode.Remove%2A> método se llama, el nodo de árbol y los nodos de árbol secundarios asignados a la <xref:System.Windows.Forms.TreeNode>, se quitan de la <xref:System.Windows.Forms.TreeView>. Los nodos secundarios eliminados se quitan de la <xref:System.Windows.Forms.TreeView> pero siguen adjuntas a este nodo de árbol.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se quita un <xref:System.Windows.Forms.TreeNode> cuando el usuario hace clic con el botón del mouse sobre él y alterna desde expanden a contraída cuando el usuario hace clic en la rueda del mouse sobre él. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control en él. El <xref:System.Windows.Forms.TreeView> debe tener dos o más nodos del árbol raíz, cada uno con al menos un nodo secundario.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de índice de la lista de imágenes correspondiente a la imagen que se muestra cuando está seleccionado el nodo de árbol.</summary>
        <value>Valor de índice de base cero que representa la posición de la imagen en una <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> valor es el valor de índice de un <xref:System.Drawing.Image> almacenados en el <xref:System.Windows.Forms.ImageList> asignado a la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propiedad.  
  
> [!NOTE]
>  El valor predeterminado de la <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> propiedad es el mismo que el <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> propiedad de la <xref:System.Windows.Forms.TreeView> que controlan el <xref:System.Windows.Forms.TreeNode> se asigna a.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea y asigna un <xref:System.Windows.Forms.ImageList> a un <xref:System.Windows.Forms.TreeView> control y rellena el <xref:System.Windows.Forms.TreeView> controlar con <xref:System.Windows.Forms.TreeNode> objetos. Los nodos de árbol se les asignan imágenes desde el <xref:System.Windows.Forms.ImageList> que se muestra cuando el nodo de árbol está en un estado seleccionado o sin seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TreeView>y un <xref:System.Collections.ArrayList> que contiene `Customer` objetos que contienen cada `Order` objetos. También requiere que el `Customer` y `Order` se definen los objetos.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clave de la imagen mostrada en el nodo de árbol cuando está seleccionado.</summary>
        <value>La clave de la imagen mostrada cuando el modo de árbol está seleccionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clave de imagen devuelta por esta propiedad se encuentra en la <xref:System.Windows.Forms.TreeView.ImageList%2A> propiedad del elemento primario <xref:System.Windows.Forms.TreeView> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Serialize (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe la clase <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Control <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica el estado de la secuencia durante la serialización.</param>
        <summary>Guarda el estado del <see cref="T:System.Windows.Forms.TreeNode" /> en el <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para los servicios de serialización. Enumeración asociada: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el índice de la imagen que se usa para indicar el estado del <see cref="T:System.Windows.Forms.TreeNode" /> cuando el <see cref="T:System.Windows.Forms.TreeView" /> primario tiene su propiedad <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> establecida en <see langword="false" />.</summary>
        <value>Índice de la imagen que se usa para indicar el estado de <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El índice de imagen devuelto por esta propiedad se encuentra en la <xref:System.Windows.Forms.TreeView.StateImageList%2A> propiedad del elemento primario <xref:System.Windows.Forms.TreeView> control.  
  
 Si el elemento primario <xref:System.Windows.Forms.TreeView> tiene casillas habilitadas, el <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> se omite y el nodo mostrará la primera o segunda imagen en el <xref:System.Windows.Forms.TreeView.StateImageList%2A> establecido en el elemento primario <xref:System.Windows.Forms.TreeView> para indicar el estado activado o desactivado, respectivamente. Si activa o desactiva el <xref:System.Windows.Forms.TreeNode.Checked%2A> propiedad no afecta al valor de la <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>.  
  
 El <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> devuelve -1 si no se establece. El <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> y <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propiedades se excluyen mutuamente, lo que significa que si se establece, se omite el resto. Si establece la <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> propiedad, el <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propiedad se establece automáticamente en -1. Como alternativa, si establece <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> se establece automáticamente en una cadena vacía ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice especificado es menor que -1 o mayor que 14.</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clave de la imagen que se usa para indicar el estado del <see cref="T:System.Windows.Forms.TreeNode" /> cuando el <see cref="T:System.Windows.Forms.TreeView" /> primario tiene su propiedad <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> establecida en <see langword="false" />.</summary>
        <value>Clave de la imagen que se usa para indicar el estado de <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clave de imagen que es devuelto por esta propiedad se incluye en el <xref:System.Windows.Forms.TreeView.StateImageList%2A> propiedad del elemento primario <xref:System.Windows.Forms.TreeView> control.  
  
 Si el elemento primario <xref:System.Windows.Forms.TreeView> tiene casillas habilitadas, el <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> se omite y el nodo mostrará la primera o segunda imagen en el <xref:System.Windows.Forms.TreeView.StateImageList%2A> establecido en el elemento primario <xref:System.Windows.Forms.TreeView> para indicar el estado activado o desactivado, respectivamente. Si activa o desactiva el <xref:System.Windows.Forms.TreeNode.Checked%2A> propiedad no afecta al valor de la <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>.  
  
 El <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> y <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propiedades se excluyen mutuamente, lo que significa que si se establece, se omite el resto. Si establece la <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> propiedad, el <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propiedad se establece automáticamente en -1. Como alternativa, si establece <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> se establece automáticamente en una cadena vacía (""). Debe establecer el <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> a una imagen con un índice correspondiente entre 0 y 14. Puede establecer el <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> a una imagen con un índice no pueden mostrarse valor mayor que 14 (no se producirá una excepción), pero la imagen  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">Control <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos para serializar <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Control <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene la información de destino de esta serialización.</param>
        <summary>Rellena un objeto de información de serialización con los datos necesarios para serializar <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para los servicios de serialización. Enumeración asociada: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.TreeNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto que contiene datos acerca del nodo de árbol.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene datos sobre el nodo de árbol. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier <xref:System.Object> tipo derivado puede asignarse a esta propiedad. Si esta propiedad se establece mediante el Diseñador de Windows Forms, puede asignarse solo texto.  
  
> [!CAUTION]
>  El <xref:System.Windows.Forms.TreeNode.Clone%2A> método realiza una copia superficial del nodo. Si el valor de la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad es un tipo de referencia, la copia original y clonada apuntará a la misma instancia de la <xref:System.Windows.Forms.TreeNode.Tag%2A> valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nodo de árbol raíz para asignarle a secundarios de nodos de árbol. Un nodo de árbol secundarios para cada `Customer` objeto en un <xref:System.Collections.ArrayList> se agrega al nodo de árbol raíz, así como un nodo de árbol secundarios para cada `Order` objeto asignado a la `Customer` objeto. El `Customer` se asigna a la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad y los nodos de árbol que representa `Customer` los objetos se muestran con <xref:System.Drawing.Color.Orange%2A> texto. En este ejemplo requiere que haya un `Customer` y `Order` objeto definido, un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>y un <xref:System.Collections.ArrayList> denominado `customerArray` que contiene `Customer` objetos.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto que se muestra en la etiqueta del nodo de árbol.</summary>
        <value>Texto mostrado en la etiqueta del nodo de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El número máximo de caracteres que un <xref:System.Windows.Forms.TreeNode> puede mostrar es 259. Si un <xref:System.String> que tiene más de 259 caracteres está asignado a esta propiedad, se muestran solo los primeros 259 caracteres.  
  
 Esta propiedad no se puede establecer por el usuario si la <xref:System.Windows.Forms.TreeView.LabelEdit%2A> propiedad del elemento primario <xref:System.Windows.Forms.TreeView> está establecido en `false`. La alternativa a establecer explícitamente esta propiedad es para crear el nodo de árbol mediante uno de los <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructores que tiene un parámetro de cadena que representa el <xref:System.Windows.Forms.TreeNode.Text%2A> propiedad. La etiqueta se muestra junto a la <xref:System.Windows.Forms.TreeNode> la imagen, si se muestra ninguno.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nodo de árbol raíz para asignarle a secundarios de nodos de árbol. Un nodo de árbol secundarios para cada `Customer` objeto en un <xref:System.Collections.ArrayList> se agrega al nodo de árbol raíz, así como un nodo de árbol secundarios para cada `Order` objeto asignado a la `Customer` objeto. El `Customer` se asigna a la <xref:System.Windows.Forms.TreeNode.Tag%2A> propiedad y los nodos de árbol que representa `Customer` los objetos se muestran con <xref:System.Drawing.Color.Orange%2A> texto. En este ejemplo requiere que haya un `Customer` y `Order` objeto definido, un <xref:System.Windows.Forms.TreeView> control en un <xref:System.Windows.Forms.Form>y un <xref:System.Collections.ArrayList> denominado `customerArray` que contiene `Customer` objetos.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberSignature Language="F#" Value="member this.Toggle : unit -&gt; unit" Usage="treeNode.Toggle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Alterna el estado del nodo de árbol entre expandido y contraído.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nodo de árbol se cambia al estado opuesto su estado actual, ya sea expandido o contraído.  
  
> [!NOTE]
>  El estado de un <xref:System.Windows.Forms.TreeNode> se conserva. Por ejemplo, si el siguiente nivel de nodos secundarios no se ha contraído anteriormente, cuando el <xref:System.Windows.Forms.TreeNode.Expand%2A> se llama al método, los nodos secundarios aparecen en su estado expandido previamente.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se quita un <xref:System.Windows.Forms.TreeNode> cuando el usuario hace clic con el botón del mouse sobre él y alterna desde expanden a contraída cuando el usuario hace clic en la rueda del mouse sobre él. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control en él. El <xref:System.Windows.Forms.TreeView> debe tener dos o más nodos del árbol raíz, cada uno con al menos un nodo secundario.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto que aparece cuando el puntero del mouse se desplaza sobre el control <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>Obtiene el texto que aparece cuando el puntero del mouse se desplaza sobre el control <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe establecer el <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> propiedad del elemento primario <xref:System.Windows.Forms.TreeView> a `true` para el <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> esté visible en tiempo de ejecución.  
  
 Si el <xref:System.Windows.Forms.TreeView> control tiene una información sobre herramientas y también contiene un <xref:System.Windows.Forms.TreeNode> que tiene un <xref:System.Windows.Forms.ToolTip>, solo el <xref:System.Windows.Forms.ToolTip> para el nodo se mostrará.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> y <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> propiedades. Para ejecutar este ejemplo, pegue el código siguiente en un formulario de Windows y la llamada `InitializeTreeViewWithToolTips` desde el constructor del formulario o <xref:System.Windows.Forms.Form.Load> controlador de eventos.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el objeto actual.</summary>
        <returns>Una cadena que representa el objeto actual.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreeView : System.Windows.Forms.TreeView" Usage="System.Windows.Forms.TreeNode.TreeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la vista de árbol primaria a la que está asignado el nodo de árbol.</summary>
        <value>Control <see cref="T:System.Windows.Forms.TreeView" /> que representa la vista de árbol primaria a la que se asigna el nodo de árbol o <see langword="null" /> si el nodo no se ha asignado a una vista de árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se selecciona el apropiado <xref:System.Windows.Forms.TreeNode> después de determinar si el <xref:System.Windows.Forms.TreeNode> pasa en está seleccionada y que <xref:System.Windows.Forms.TreeNode> para seleccionar. En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> control que tiene un <xref:System.Windows.Forms.TreeNodeCollection> que contenga varias <xref:System.Windows.Forms.TreeNode> objetos. También requiere que haya un <xref:System.Windows.Forms.ComboBox> con los siguientes elementos: "Previous", "PreviousVisible", "Siguiente", "NextVisible", "First" y "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>