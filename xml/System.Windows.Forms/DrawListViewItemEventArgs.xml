<Type Name="DrawListViewItemEventArgs" FullName="System.Windows.Forms.DrawListViewItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84d319a299f922ef746fc6d22fd15a5e4d24ece4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39896908" /></Metadata><TypeSignature Language="C#" Value="public class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawListViewItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Windows.Forms.ListView.DrawItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos le permiten personalizar la apariencia de un <xref:System.Windows.Forms.ListView> control mediante el dibujo del propietario.  
  
 El <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> evento es desencadenado por un <xref:System.Windows.Forms.ListView> controlar cuándo el <xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> propiedad está establecida en `true`. El <xref:System.Windows.Forms.DrawListViewItemEventArgs> pasa al evento de controlador contiene información sobre la <xref:System.Windows.Forms.ListViewItem> para dibujar y también proporciona métodos para ayudarle a dibujar el elemento.  
  
 Use la <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> o <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> propiedades para recuperar información sobre el elemento que se va a dibujar. Use el <xref:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex%2A?displayProperty=nameWithType> propiedad para recuperar el índice del elemento.  
  
 Use la <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> propiedad que se va a realizar el dibujo real dentro del área especificada por el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> propiedad. Para dibujar estándar <xref:System.Windows.Forms.ListView> elementos que no necesitan personalización, utilice el <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground%2A>, <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A>, y <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> métodos.  
  
> [!NOTE]
>  Para evitar problemas con el parpadeo de gráficos al invalidar, el dibujo del propietario el <xref:System.Windows.Forms.ListView> control y establezca el <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> propiedad `true`. Esta característica solo está disponible en Windows XP y la familia Windows Server 2003 cuando la aplicación llama a la <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo proporcionar dibujos personalizados para un <xref:System.Windows.Forms.ListView> control. El <xref:System.Windows.Forms.ListView> control en el ejemplo tiene un fondo degradado. Subelementos con valores negativos tienen un primer plano rojo y un fondo negro.  
  
 Un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. Un controlador para el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos dibuja los valores de texto y el texto y fondo de los subelementos que tienen valores negativos. Un controlador para el <xref:System.Windows.Forms.ListView.DrawColumnHeader> eventos dibuja cada encabezado de columna.  
  
 Un <xref:System.Windows.Forms.ContextMenu> componente proporciona una manera de cambiar entre la vista de detalles y la vista de lista. En la vista de lista, solo el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> desencadena el evento. En este caso, el fondo se dibujan texto y tanto el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> controlador de eventos.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewItemEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.ListViewItem item, System.Drawing.Rectangle bounds, int itemIndex, System.Windows.Forms.ListViewItemStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.ListViewItem item, valuetype System.Drawing.Rectangle bounds, int32 itemIndex, valuetype System.Windows.Forms.ListViewItemStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.ListViewItem,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewItemEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::ListViewItem ^ item, System::Drawing::Rectangle bounds, int itemIndex, System::Windows::Forms::ListViewItemStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawListViewItemEventArgs : System.Drawing.Graphics * System.Windows.Forms.ListViewItem * System.Drawing.Rectangle * int * System.Windows.Forms.ListViewItemStates -&gt; System.Windows.Forms.DrawListViewItemEventArgs" Usage="new System.Windows.Forms.DrawListViewItemEventArgs (graphics, item, bounds, itemIndex, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics">Superficie <see cref="T:System.Drawing.Graphics" /> en la que se va a dibujar.</param>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</param>
        <param name="bounds">Estructura <see cref="T:System.Drawing.Rectangle" /> dentro de la que se va a dibujar.</param>
        <param name="itemIndex">Índice del control <see cref="T:System.Windows.Forms.ListViewItem" /> dentro de la colección <see cref="P:System.Windows.Forms.ListView.Items" />.</param>
        <param name="state">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.ListViewItemStates" /> que indican el estado actual del control <see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño y la ubicación del control <see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</summary>
        <value>Estructura <see cref="T:System.Drawing.Rectangle" /> que representa los límites del control <see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ubicación especificada por esta propiedad es relativa a la esquina superior izquierda de la <xref:System.Windows.Forms.ListView> control.  
  
 Para recuperar los límites de partes específicas de un <xref:System.Windows.Forms.ListViewItem>, utilice el <xref:System.Windows.Forms.ListViewItem.GetBounds%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> propiedad en una aplicación que proporciona un dibujo personalizado para un <xref:System.Windows.Forms.ListView> control. En el ejemplo, un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. En todas las vistas, excepto la vista de detalles, este controlador también dibuja el texto de primer plano. En la vista de detalles, se dibuja el texto de primer plano el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawListViewItemEventArgs> tema de referencia.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.GetBounds(System.Windows.Forms.ItemBoundsPortion)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dibuja el fondo del control <see cref="T:System.Windows.Forms.ListViewItem" /> utilizando su color de fondo actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para dibujar un fondo estándar que utiliza el valor actual de la <xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> propiedad. El fondo se dibuja para rellenar el área especificada por el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una propiedad que indica si el control <see cref="T:System.Windows.Forms.ListView" /> utilizará el dibujo predeterminado para <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Es <see langword="true" /> si el sistema dibuja el elemento; es <see langword="false" /> si el controlador de eventos dibuja el elemento. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en `true` cuando el elemento no requiere el dibujo personalizado. Esto es útil cuando necesita personalizar solo determinados elementos dentro del control, como los elementos seleccionados.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="member this.DrawFocusRectangle : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dibuja un rectángulo de foco para el control <see cref="T:System.Windows.Forms.ListViewItem" /> si tiene el foco.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para dibujar un rectángulo de foco estándar alrededor del elemento. Normalmente se dibuja el rectángulo de foco dentro del área especificada por el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> propiedad. Si el control está en la vista de detalles y el <xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> es el valor de propiedad `false`, sin embargo, se dibuja el rectángulo de foco alrededor del área de texto predeterminado para la primera columna del elemento.  
  
 Se dibuja el rectángulo de foco solo cuando el elemento tiene el foco, por lo que no es necesario comprobar el estado del foco del elemento antes de llamar a este método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawFocusRectangle%2A> método en una aplicación que proporciona un dibujo personalizado para un <xref:System.Windows.Forms.ListView> control. En el ejemplo, un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. En todas las vistas, excepto la vista de detalles, este controlador también dibuja el texto de primer plano. En la vista de detalles, se dibuja el texto de primer plano el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawListViewItemEventArgs> tema de referencia.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja el texto del control <see cref="T:System.Windows.Forms.ListViewItem" /> utilizando el color de primer plano actual y el formato predeterminado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawListViewItemEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dibuja el texto del control <see cref="T:System.Windows.Forms.ListViewItem" /> utilizando su color de primer plano actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para dibujar el texto del elemento con los valores actuales de la <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> propiedades. El texto se dibuja dentro del área especificada por el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> propiedad. También puede dibujar el texto manualmente mediante el <xref:System.Drawing.Graphics> recuperar a través de la <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> propiedad.  
  
 El <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> método es muy útil cuando la <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. En la vista de detalles, este método dibuja el texto para el <xref:System.Windows.Forms.ListViewItem>, pero no dibuja el texto para los subelementos. Por lo tanto, en la vista de detalles es generalmente más conveniente dibujar todos los <xref:System.Windows.Forms.ListView> texto en un controlador para el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> método en una aplicación que proporciona un dibujo personalizado para un <xref:System.Windows.Forms.ListView> control. En el ejemplo, un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. En todas las vistas, excepto la vista de detalles, este controlador también dibuja el texto de primer plano. En la vista de detalles, se dibuja el texto de primer plano el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawListViewItemEventArgs> tema de referencia.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawListViewItemEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Dibuja el texto del control <see cref="T:System.Windows.Forms.ListViewItem" /> utilizando el color de primer plano actual y dándole formato con los valores <see cref="T:System.Windows.Forms.TextFormatFlags" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para dibujar el texto del elemento con los valores actuales de la <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> propiedades. El <xref:System.Windows.Forms.TextFormatFlags> valores especificados en el `flags` parámetro permite proporcionar las propiedades de formato para la etiqueta del nodo, como la alineación del texto. El texto se dibuja dentro del área especificada por el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> propiedad. También puede dibujar el texto manualmente mediante el <xref:System.Drawing.Graphics> recuperar a través de la <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> propiedad.  
  
 El <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> método es muy útil cuando la <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> propiedad se establece en un valor distinto <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. En la vista de detalles, este método dibuja el texto para el <xref:System.Windows.Forms.ListViewItem>, pero no dibuja el texto para los subelementos. Por lo tanto, en la vista de detalles es generalmente más conveniente dibujar todos los <xref:System.Windows.Forms.ListView> texto en un controlador para el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
        <altmember cref="T:System.Windows.Forms.TextFormatFlags" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Drawing.Graphics" /> usado para dibujar el <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <value>Objeto <see cref="T:System.Drawing.Graphics" /> que se utiliza para dibujar el control <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Drawing.Graphics> clase proporciona propiedades y métodos útiles para dibujar en el dispositivo de pantalla.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Graphics%2A> propiedad en una aplicación que proporciona un dibujo personalizado para un <xref:System.Windows.Forms.ListView> control. En el ejemplo, un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. En todas las vistas, excepto la vista de detalles, este controlador también dibuja el texto de primer plano. En la vista de detalles, se dibuja el texto de primer plano el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawListViewItemEventArgs> tema de referencia.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.DrawListViewItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para tener acceso a la <xref:System.Windows.Forms.ListViewItem> se va a dibujar. Esto es útil cuando el <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> propiedad no proporciona información suficiente para satisfacer sus necesidades. El <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> propiedad proporciona información de estado básica que puede usar, por ejemplo, para determinar si un elemento está seleccionado, activado o centrado. El <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> propiedad, por otro lado, permite tener acceso a todos los miembros de la <xref:System.Windows.Forms.ListViewItem>. Debe tener acceso el elemento directamente, por ejemplo, para dibujar el <xref:System.Windows.Forms.ListViewItem.Text%2A?displayProperty=nameWithType> valor usted mismo en lugar de utilizar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.DrawText%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> propiedad en una aplicación que proporciona un dibujo personalizado para un <xref:System.Windows.Forms.ListView> control. En el ejemplo, un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. En todas las vistas, excepto la vista de detalles, este controlador también dibuja el texto de primer plano. En la vista de detalles, se dibuja el texto de primer plano el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawListViewItemEventArgs> tema de referencia.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.DrawListViewItemEventArgs.DrawText" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemIndex : int" Usage="System.Windows.Forms.DrawListViewItemEventArgs.ItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el índice del control <see cref="T:System.Windows.Forms.ListViewItem" /> dentro de la colección <see cref="P:System.Windows.Forms.ListView.Items" /> del <see cref="T:System.Windows.Forms.ListView" /> que contiene.</summary>
        <value>Índice del control <see cref="T:System.Windows.Forms.ListViewItem" /> dentro de la colección <see cref="P:System.Windows.Forms.ListView.Items" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos. Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ListView> denominado `ListView1`. A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#471](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#471)]
 [!code-vb[System.Windows.Forms.EventExamples#471](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#471)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates State { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.ListViewItemStates" Usage="System.Windows.Forms.DrawListViewItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado actual del control <see cref="T:System.Windows.Forms.ListViewItem" /> que se va a dibujar.</summary>
        <value>Combinación bit a bit de valores <see cref="T:System.Windows.Forms.ListViewItemStates" /> que indican el estado actual del control <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para comprobar si el <xref:System.Windows.Forms.ListViewItem> dibujar está en un estado determinado. Esta propiedad proporciona sólo la información de estado básica sobre el elemento. Puede utilizar esta propiedad, por ejemplo, para determinar si un elemento está seleccionado, activado o centrado. Si tiene que saber más, recuperar el elemento a través de la <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> propiedad y compruebe sus propiedades directamente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.DrawListViewItemEventArgs.State%2A> propiedad en una aplicación que proporciona un dibujo personalizado para un <xref:System.Windows.Forms.ListView> control. En el ejemplo, un controlador para el <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> eventos dibuja el fondo de todos los elementos. En todas las vistas, excepto la vista de detalles, este controlador también dibuja el texto de primer plano. En la vista de detalles, se dibuja el texto de primer plano el <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> eventos.  
  
 Para obtener un ejemplo completo, vea el <xref:System.Windows.Forms.DrawListViewItemEventArgs> tema de referencia.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
      </Docs>
    </Member>
  </Members>
</Type>