<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76dc1d62b4fc510b970922804353c9904fc807e8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39876699" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para los eventos <see cref="E:System.Windows.Forms.Binding.Format" /> y <see cref="E:System.Windows.Forms.Binding.Parse" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ConvertEventArgs> se usa para dar formato y sin formatear los valores mostrados en un control de Windows Forms que está enlazado a datos a través de un <xref:System.Windows.Forms.Binding> objeto. El <xref:System.Windows.Forms.Binding.Format> se produce un evento cada vez que una propiedad de control se enlaza a un valor y el <xref:System.Windows.Forms.Binding.Parse> se produce un evento cada vez que cambia el valor enlazado.  
  
 El <xref:System.Windows.Forms.Binding.Format> y <xref:System.Windows.Forms.Binding.Parse> eventos le permiten crear formatos personalizados para mostrar los datos. Por ejemplo, si los datos en una tabla están de tipo <xref:System.Decimal>, puede especificar que se deben mostrar los datos en el formato de moneda local estableciendo el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propiedad de la <xref:System.Windows.Forms.ConvertEventArgs> al valor con formato en el <xref:System.Windows.Forms.Binding.Format> eventos. Por lo tanto debe quitar el valor mostrado en el <xref:System.Windows.Forms.Binding.Parse> eventos.  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.Binding>, agrega un <xref:System.Windows.Forms.ConvertEventHandler> delegado a ambos el <xref:System.Windows.Forms.Binding.Parse> y <xref:System.Windows.Forms.Binding.Format> eventos y se usa el <xref:System.Windows.Forms.Control.DataBindings%2A> propiedad va a agregar el <xref:System.Windows.Forms.Binding> a la <xref:System.Windows.Forms.BindingsCollection> de un <xref:System.Windows.Forms.TextBox> control. El `DecimalToCurrencyString` delegado de eventos, que se agrega a la <xref:System.Windows.Forms.Binding.Format> eventos, usa el <xref:System.Decimal.ToString%2A> método para dar formato al valor enlazado a (un <xref:System.Decimal> tipo) como moneda. El `CurrencyStringToDecimal` delegado de eventos, que se agrega a la <xref:System.Windows.Forms.Binding.Parse> eventos, convierte el valor mostrado por el control a la <xref:System.Decimal> tipo.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> que contiene el valor de la propiedad actual.</param>
        <param name="desiredType">
          <see cref="T:System.Type" /> del valor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de datos del valor deseado.</summary>
        <value>
          <see cref="T:System.Type" /> del valor deseado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> propiedad le permite comprobar el tipo de la propiedad que se va a convertir el valor.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> propiedad para determinar si la conversión de un tipo a otro puede continuar. El `DecimalToCurrencyString` pruebas del método si la <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> es una cadena. Si no es así, el código sale del método. De forma similar, el `CurrencyStringToDecimal` método pruebas si el <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> es un <xref:System.Decimal>y se cierra si no es `true`.  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <value>Valor de <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor que contiene el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propiedad depende del evento en el que el <xref:System.Windows.Forms.ConvertEventArgs> se devuelve. El <xref:System.Windows.Forms.ConvertEventArgs> puede devolver en el <xref:System.Windows.Forms.Binding.Format> eventos o <xref:System.Windows.Forms.Binding.Parse> eventos.  
  
 Cuando el <xref:System.Windows.Forms.ConvertEventArgs> se devuelve en el <xref:System.Windows.Forms.Binding.Format> eventos, el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propiedad contiene el valor de propiedad sin formato del origen de datos. Dentro de la <xref:System.Windows.Forms.Binding.Format> eventos, puede leer el valor de propiedad, dar formato al valor y restablecer el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propiedad para el nuevo valor (con formato), con lo que se establece el valor mostrado en el control enlazado a datos.  
  
 Cuando el <xref:System.Windows.Forms.ConvertEventArgs> se devuelve en el <xref:System.Windows.Forms.Binding.Parse> eventos, la propiedad contiene el valor con formato personalizado del control enlazado a datos. Dentro de la <xref:System.Windows.Forms.Binding.Parse> eventos, debe leer el valor con formato, analizarlo y convertirlo al mismo tipo de datos como origen de datos. A continuación, puede restablecer el <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propiedad en el formato de valor y, por tanto, establezca el valor del origen de datos. Para determinar el tipo del origen de datos, examine el <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> valor de propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.Binding>, agrega un <xref:System.Windows.Forms.ConvertEventHandler> delegado a ambos el <xref:System.Windows.Forms.Binding.Parse> y <xref:System.Windows.Forms.Binding.Format> eventos y se usa el <xref:System.Windows.Forms.Control.DataBindings%2A> propiedad va a agregar el <xref:System.Windows.Forms.Binding> a la <xref:System.Windows.Forms.BindingsCollection> de un <xref:System.Windows.Forms.TextBox> control. El `DecimalToCurrencyString` delegado de eventos, que se agrega a la <xref:System.Windows.Forms.Binding.Format> eventos, usa el <xref:System.Decimal.ToString%2A> método para dar formato al valor enlazado a (un <xref:System.Decimal> tipo) como moneda. El `CurrencyStringToDecimal` delegado de eventos, que se agrega a la <xref:System.Windows.Forms.Binding.Parse> eventos, convierte el valor mostrado por el control a la <xref:System.Decimal> tipo.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>