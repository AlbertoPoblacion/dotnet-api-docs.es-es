<Type Name="FlowLayoutSettings" FullName="System.Windows.Forms.FlowLayoutSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="155cf5ac047d00ebcf6e74dab6295d902298351f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FlowLayoutSettings : System.Windows.Forms.LayoutSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FlowLayoutSettings extends System.Windows.Forms.LayoutSettings" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FlowLayoutSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class FlowLayoutSettings&#xA;Inherits LayoutSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowLayoutSettings : System::Windows::Forms::LayoutSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.LayoutSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FlowDirection")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Recopila las características asociadas a los diseños de flujo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Forms.FlowLayoutSettings> clase recopila y administra las características asociadas con el esquema de diseño de flujo. Esta clase se utiliza internamente por la <xref:System.Windows.Forms.FlowLayoutPanel> y <xref:System.Windows.Forms.ToolStrip> clases, así como el motor de diseño de flujo. La <xref:System.Windows.Forms.FlowLayoutSettings> clase se utiliza el motor de diseño para determinar cómo al diseño de controles secundarios del contenedor.  
  
 La <xref:System.Windows.Forms.FlowLayoutSettings> clase administra la información siguiente:  
  
-   La dirección del flujo de controles consecutivos.  
  
-   Si el contenido debe ser ajustado o recorta si los controles secundarios no pueden estar contenidos dentro de su elemento primario.  
  
 <xref:System.Windows.Forms.FlowLayoutSettings> no tiene un constructor público.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Layout.LayoutEngine" />
    <altmember cref="T:System.Windows.Forms.FlowLayoutPanel" />
  </Docs>
  <Members>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FlowLayoutSettings.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlowDirection FlowDirection { System::Windows::Forms::FlowDirection get(); void set(System::Windows::Forms::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica la dirección de flujo de controles consecutivos.</summary>
        <value>
          <see cref="T:System.Windows.Forms.FlowDirection" /> que indica la dirección de flujo de controles consecutivos incluidos en el contenedor. El valor predeterminado es <see cref="F:System.Windows.Forms.FlowDirection.LeftToRight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FlowLayoutSettings.FlowDirection%2A> es la propiedad predeterminada para el <xref:System.Windows.Forms.FlowLayoutSettings> clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FlowLayoutSettings.WrapContents" />
        <altmember cref="T:System.Windows.Forms.FlowDirection" />
        <altmember cref="P:System.Windows.Forms.FlowLayoutPanel.FlowDirection" />
      </Docs>
    </Member>
    <Member MemberName="GetFlowBreak">
      <MemberSignature Language="C#" Value="public bool GetFlowBreak (object child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetFlowBreak(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FlowLayoutSettings.GetFlowBreak(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFlowBreak (child As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetFlowBreak(System::Object ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child">Control secundario.</param>
        <summary>Devuelve un valor que representa la configuración de salto de flujo del control.</summary>
        <returns>
          Es <see langword="true" /> si se establece la interrupción de flujo; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FlowLayoutSettings.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el motor de diseño de flujo actual.</summary>
        <value>El motor <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> que está en uso en ese momento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.TableLayoutSettings.LayoutEngine%2A> propiedad se utiliza normalmente en dos contextos:  
  
-   Un contenedor que utiliza un diseño de flujo.  
  
-   Un control que se encuentra dentro de un contenedor de diseño de flujo (por ejemplo, un botón de contenido en una celda de un <xref:System.Windows.Forms.FlowLayoutPanel>).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Layout.LayoutEngine" />
        <altmember cref="P:System.Windows.Forms.FlowLayoutPanel.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetFlowBreak">
      <MemberSignature Language="C#" Value="public void SetFlowBreak (object child, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFlowBreak(object child, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FlowLayoutSettings.SetFlowBreak(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFlowBreak (child As Object, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFlowBreak(System::Object ^ child, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">Control secundario.</param>
        <param name="value">El valor de salto de flujo que se debe establecer.</param>
        <summary>Establece el valor que representa la configuración de salto de flujo del control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapContents">
      <MemberSignature Language="C#" Value="public bool WrapContents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapContents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FlowLayoutSettings.WrapContents" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WrapContents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debería ajustar o recortar el contenido cuando se superen los límites originales de su contenedor.</summary>
        <value>
          <see langword="true" /> si se debe ajustar el contenido; de lo contrario, es <see langword="false" /> si se debe recortar el contenido. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el área del contenedor es demasiado pequeño para mostrar todos los controles secundarios, se recortará al menos un control independientemente de la <xref:System.Windows.Forms.FlowLayoutSettings.WrapContents%2A> valor.  
  
 Cambiar posteriormente el tamaño del contenedor se volverá a aplicar el diseño a los controles de contenido.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FlowLayoutSettings.FlowDirection" />
        <altmember cref="P:System.Windows.Forms.FlowLayoutPanel.WrapContents" />
      </Docs>
    </Member>
  </Members>
</Type>