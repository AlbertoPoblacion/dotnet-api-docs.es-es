<Type Name="ImageList" FullName="System.Windows.Forms.ImageList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d4b91e9a2239b70e9ae9ef7c7620f5ef181a584" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageList : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImageList extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageList&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageList sealed : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Images")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ImageListCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ImageListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageListConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona métodos para administrar una colección de objetos <see cref="T:System.Drawing.Image" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ImageList> se utiliza normalmente por otros controles, como el <xref:System.Windows.Forms.ListView>, <xref:System.Windows.Forms.TreeView>, o <xref:System.Windows.Forms.ToolBar>. Puede agregar mapas de bits o iconos a la <xref:System.Windows.Forms.ImageList>, y los demás controles pueden utilizar las imágenes que necesiten.  
  
 <xref:System.Windows.Forms.ImageList> utiliza un controlador para administrar la lista de imágenes. El <xref:System.Windows.Forms.ImageList.Handle%2A> no se crea hasta que ciertas operaciones, como obtener el <xref:System.Windows.Forms.ImageList.Handle%2A> o llamando a <xref:System.Windows.Forms.ImageList.Draw%2A>, se llevan a cabo en la lista de imágenes. Realizar otras operaciones, como la configuración de la <xref:System.Windows.Forms.ImageList.ColorDepth%2A> o <xref:System.Windows.Forms.ImageList.ImageSize%2A> hará que el <xref:System.Windows.Forms.ImageList.Handle%2A> volver a crear. Por lo tanto, debe realizar estas operaciones antes de agregar imágenes a la <xref:System.Windows.Forms.ImageList>. Además, cuando se trabaja con formularios que estarán adaptados, siempre debe agregar una <xref:System.Windows.Forms.ImageList> e imágenes cuando la propiedad de idioma de un formulario se establece en valor predeterminado. Cambiar el idioma del formulario antes de agregar las imágenes dañaría los archivos de recursos de la aplicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo seleccionar, quitar y mostrar imágenes.  
  
 [!code-cpp[Classic ImageList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ImageList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ImageList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ImageList Example/CS/source.cs#1)]
 [!code-vb[Classic ImageList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ImageList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Bitmap" />
    <altmember cref="T:System.Drawing.Icon" />
    <altmember cref="T:System.Drawing.Imaging.Metafile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ImageList" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ImageList" /> con valores predeterminados para <see cref="P:System.Windows.Forms.ImageList.ColorDepth" />, <see cref="P:System.Windows.Forms.ImageList.ImageSize" /> y <see cref="P:System.Windows.Forms.ImageList.TransparentColor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Windows.Forms.ImageList>.  
  
|Elemento|Descripción|  
|----------|-----------------|  
|<xref:System.Windows.Forms.ImageList.ColorDepth%2A>|En la versión 1.0 de .NET Framework, el valor predeterminado es <xref:System.Windows.Forms.ColorDepth.Depth4Bit>. En la versión 1.1 de .NET Framework, el valor predeterminado es <xref:System.Windows.Forms.ColorDepth.Depth8Bit>.|  
|<xref:System.Windows.Forms.ImageList.ImageSize%2A>|El valor predeterminado es una <xref:System.Drawing.Size> objeto con un alto y ancho de 16 por 16.|  
|<xref:System.Windows.Forms.ImageList.TransparentColor%2A>|El valor predeterminado es <xref:System.Drawing.Color.Transparent%2A>.|  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ImageList.%23ctor%2A>, agregar imágenes a la <xref:System.Windows.Forms.ImageList.Images%2A> valor de la propiedad, el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad y el uso el <xref:System.Windows.Forms.ImageList.Draw%2A> método. Para ejecutar este ejemplo, colóquelo en un formulario que contenga un botón denominado `Button1`. El ejemplo supone la existencia de `FeatherTexture.bmp` y `Gone Fishing.bmp` en c:\Windows\\. Cambie el ejemplo en consecuencia si los mapas de bits no existe en el sistema o existen en otra ubicación.  
  
 [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageList (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageList(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">Objeto que implementa <see cref="T:System.ComponentModel.IContainer" /> para asociarse con esta instancia de <see cref="T:System.Windows.Forms.ImageList" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ImageList" /> asociándola a un contenedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ImageList> constructor permite asociar un <xref:System.Windows.Forms.ImageList> con cualquier <xref:System.ComponentModel.Container> objeto. Asociando el <xref:System.Windows.Forms.ImageList> parecido a esto, ceder el control de la duración de la <xref:System.Windows.Forms.ImageList> a la <xref:System.ComponentModel.Container>. Esto puede ser útil si usa una serie de componentes en la aplicación y desea eliminar todos ellos al mismo tiempo. Por ejemplo, si asocia un <xref:System.Windows.Forms.ToolTip>, <xref:System.Windows.Forms.ImageList>y un <xref:System.Windows.Forms.Timer> con un <xref:System.ComponentModel.Container>, al llamar a <xref:System.ComponentModel.Container.Dispose%2A> en el contenedor se forzará la eliminación de todos estos componentes también.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorDepth">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColorDepth ColorDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColorDepth ColorDepth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ColorDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorDepth As ColorDepth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColorDepth ColorDepth { System::Windows::Forms::ColorDepth get(); void set(System::Windows::Forms::ColorDepth value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColorDepth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la profundidad de color de la lista de imágenes.</summary>
        <value>Número de colores disponibles para la imagen. En la versión 1.0 de .NET Framework, el valor predeterminado es <see cref="F:System.Windows.Forms.ColorDepth.Depth4Bit" />. En la versión 1.1 de .NET Framework, el valor predeterminado es <see cref="F:System.Windows.Forms.ColorDepth.Depth8Bit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se establece la profundidad de color en un nuevo valor, el <xref:System.Windows.Forms.ImageList.Handle%2A> de la imagen se vuelve a crear lista. Dado que al establecer el <xref:System.Windows.Forms.ImageList.ColorDepth%2A> propiedad hace que el identificador de volver a crear, debe establecer <xref:System.Windows.Forms.ImageList.ColorDepth%2A> antes de la configuración de la <xref:System.Windows.Forms.ImageList.Images%2A> propiedad. Cuando el identificador de la <xref:System.Windows.Forms.ImageList> se ha creado, establecer el <xref:System.Windows.Forms.ImageList.ColorDepth%2A> o <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedades en el código, después de establecer el <xref:System.Windows.Forms.ImageList.Images%2A> propiedad, hará que la colección de imágenes establecido para el <xref:System.Windows.Forms.ImageList.Images%2A> propiedad va a eliminar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La profundidad de color no es un valor de enumeración <see cref="T:System.Windows.Forms.ColorDepth" /> válido.</exception>
        <altmember cref="T:System.Windows.Forms.ColorDepth" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Draw">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja la imagen indicada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Drawing.Graphics g, System.Drawing.Point pt, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Drawing.Graphics g, valuetype System.Drawing.Point pt, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Drawing.Point,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (g As Graphics, pt As Point, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Drawing::Graphics ^ g, System::Drawing::Point pt, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> donde se va a dibujar.</param>
        <param name="pt">Ubicación definida por un objeto <see cref="T:System.Drawing.Point" /> donde se va a dibujar la imagen.</param>
        <param name="index">Índice de la imagen en <see cref="T:System.Windows.Forms.ImageList" /> que se va a dibujar.</param>
        <summary>Dibuja la imagen indicada por el índice especificado, en el objeto <see cref="T:System.Drawing.Graphics" /> indicado y en la ubicación dada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ImageList.%23ctor%2A>, agregar imágenes a la <xref:System.Windows.Forms.ImageList.Images%2A> valor de la propiedad, el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad y el uso el <xref:System.Windows.Forms.ImageList.Draw%2A> método. Para ejecutar este ejemplo, colóquelo en un formulario que contenga un botón denominado `Button1`. El ejemplo supone la existencia de `FeatherTexture.bmp` y `Gone Fishing.bmp` en c:\Windows\\. Cambie el ejemplo en consecuencia si los mapas de bits no existe en el sistema o existen en otra ubicación.  
  
 [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice es menor que 0.  
  
 O bien  
  
 El índice es mayor o igual que el recuento de las imágenes de la lista de imágenes.</exception>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Drawing.Graphics g, int x, int y, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Drawing.Graphics g, int32 x, int32 y, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (g As Graphics, x As Integer, y As Integer, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Drawing::Graphics ^ g, int x, int y, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> donde se va a dibujar.</param>
        <param name="x">Posición horizontal donde se va a dibujar la imagen.</param>
        <param name="y">Posición vertical donde se va a dibujar la imagen.</param>
        <param name="index">Índice de la imagen en <see cref="T:System.Windows.Forms.ImageList" /> que se va a dibujar.</param>
        <summary>Dibuja la imagen indicada por el índice especificado, en el objeto <see cref="T:System.Drawing.Graphics" /> indicado y en la ubicación dada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice es menor que 0.  
  
 O bien  
  
 El índice es mayor o igual que el recuento de las imágenes de la lista de imágenes.</exception>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Drawing.Graphics g, int x, int y, int width, int height, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Drawing.Graphics g, int32 x, int32 y, int32 width, int32 height, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (g As Graphics, x As Integer, y As Integer, width As Integer, height As Integer, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Drawing::Graphics ^ g, int x, int y, int width, int height, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> donde se va a dibujar.</param>
        <param name="x">Posición horizontal donde se va a dibujar la imagen.</param>
        <param name="y">Posición vertical donde se va a dibujar la imagen.</param>
        <param name="width">Ancho, en píxeles, de la imagen de destino.</param>
        <param name="height">Alto, en píxeles, de la imagen de destino.</param>
        <param name="index">Índice de la imagen en <see cref="T:System.Windows.Forms.ImageList" /> que se va a dibujar.</param>
        <summary>Se dibuja la imagen indicada por el índice especificado en el objeto <see cref="T:System.Drawing.Graphics" /> indicado, en la ubicación especificada y con el tamaño indicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La imagen se estira o comprime según sea necesaria para ajustarse a los límites establecidos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice es menor que 0.  
  
 O bien  
  
 El índice es mayor o igual que el recuento de las imágenes de la lista de imágenes.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de la lista de imágenes.</summary>
        <value>Identificador de la lista de imágenes. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto corresponde a un identificador HIMAGELIST de Win32. El identificador no se crea hasta que se necesite utilizarlo. Obtener el identificador hace que se creará.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se pudo crear el identificador de <see cref="T:System.Windows.Forms.ImageList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HandleCreated">
      <MemberSignature Language="C#" Value="public bool HandleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.HandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandleCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se ha creado el identificador de Win32 subyacente.</summary>
        <value>
          <see langword="true" /> si se ha creado la propiedad <see cref="P:System.Windows.Forms.ImageList.Handle" />; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList.ImageCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList/ImageCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As ImageList.ImageCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList::ImageCollection ^ Images { System::Windows::Forms::ImageList::ImageCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList+ImageCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.Windows.Forms.ImageList.ImageCollection" /> para esta lista de imágenes.</summary>
        <value>Colección de imágenes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aún no se ha creado la colección de imágenes, se crea al recuperar esta propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ImageList.%23ctor%2A>, agregar imágenes a la <xref:System.Windows.Forms.ImageList.Images%2A> valor de la propiedad, el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad y el uso el <xref:System.Windows.Forms.ImageList.Draw%2A> método. Para ejecutar este ejemplo, colóquelo en un formulario que contenga un botón denominado `Button1`. El ejemplo supone la existencia de `FeatherTexture.bmp` y `Gone Fishing.bmp` en c:\Windows\\. Cambie el ejemplo en consecuencia si los mapas de bits no existe en el sistema o existen en otra ubicación.  
  
 [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ImageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ImageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ImageSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño de las imágenes de la lista de imágenes.</summary>
        <value>
          <see cref="T:System.Drawing.Size" /> que define el alto y ancho, en píxeles, de las imágenes de la lista. El tamaño predeterminado es 16 por 16. El tamaño máximo es 256 por 256.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad antes de agregar imágenes a la colección de imágenes hace que las imágenes cambiar de tamaño para el tamaño de imagen especificado.  
  
 Al establecer el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad a un nuevo valor, el <xref:System.Windows.Forms.ImageList.Handle%2A> de la imagen se vuelve a crear lista.  
  
 Dado que al establecer el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad hace que el identificador de volver a crear, debe establecer <xref:System.Windows.Forms.ImageList.ImageSize%2A> antes de la configuración de la <xref:System.Windows.Forms.ImageList.Images%2A> propiedad. Cuando el identificador de la <xref:System.Windows.Forms.ImageList> se ha creado, establecer el <xref:System.Windows.Forms.ImageList.ColorDepth%2A> o <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedades en el código, después de establecer el <xref:System.Windows.Forms.ImageList.Images%2A> propiedad, hará que la colección de imágenes establecido para el <xref:System.Windows.Forms.ImageList.Images%2A> propiedad va a eliminar.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ImageList.%23ctor%2A>, agregar imágenes a la <xref:System.Windows.Forms.ImageList.Images%2A> valor de la propiedad, el <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad y el uso el <xref:System.Windows.Forms.ImageList.Draw%2A> método. Para ejecutar este ejemplo, colóquelo en un formulario que contenga un botón denominado `Button1`. El ejemplo supone la existencia de `FeatherTexture.bmp` y `Gone Fishing.bmp` en c:\Windows\\. Cambie el ejemplo en consecuencia si los mapas de bits no existe en el sistema o existen en otra ubicación.  
  
 [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor asignado es igual a <see cref="P:System.Drawing.Size.IsEmpty" />.  
  
 O bien  
  
 El valor del alto o del ancho es menor o igual que cero.  
  
 O bien  
  
 El valor del alto o del ancho es mayor que 256.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El nuevo tamaño tiene una dimensión menor que 0 o mayor que 256.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageStream">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageListStreamer ImageStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageListStreamer ImageStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageStream" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageStream As ImageListStreamer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageListStreamer ^ ImageStream { System::Windows::Forms::ImageListStreamer ^ get(); void set(System::Windows::Forms::ImageListStreamer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageListStreamer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Forms.ImageListStreamer" /> asociado a esta lista de imágenes.</summary>
        <value>
          <see langword="null" /> si la lista de imágenes está vacía; en caso contrario, <see cref="T:System.Windows.Forms.ImageListStreamer" /> para este control <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ImageListStreamer> es la parte de datos de la lista de imágenes. Cuando se trabaja con formularios que estarán adaptados, siempre se debe agregar una <xref:System.Windows.Forms.ImageList> e imágenes cuando la propiedad de idioma de un formulario se establece en valor predeterminado. Cambiar el idioma del formulario antes de agregar las imágenes dañaría el flujo de imágenes.  
  
 Puede pasar este identificador a otra instancia de un <xref:System.Windows.Forms.ImageList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecreateHandle">
      <MemberSignature Language="C#" Value="public event EventHandler RecreateHandle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RecreateHandle" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ImageList.RecreateHandle" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RecreateHandle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RecreateHandle;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se está volviendo a crear la propiedad <see cref="P:System.Windows.Forms.ImageList.Handle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este evento para realizar procesos especiales cuando la <xref:System.Windows.Forms.ImageList.Handle%2A> se vuelve a crear mediante acciones como cambiar la <xref:System.Windows.Forms.ImageList.ColorDepth%2A> o <xref:System.Windows.Forms.ImageList.ImageSize%2A>. Puede requerir un procesamiento especial porque al establecer la <xref:System.Windows.Forms.ImageList.ColorDepth%2A> o <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedad después de establecer el <xref:System.Windows.Forms.ImageList.Images%2A> esta propiedad hace que el identificador de volver a crear y las imágenes que se van a descartar.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de este miembro. En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ImageList.RecreateHandle> eventos. Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar. Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.  
  
 Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ImageList> denominado `ImageList1`. A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ImageList.RecreateHandle> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#160)]
 [!code-vb[System.Windows.Forms.EventExamples#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto que contiene datos adicionales sobre <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene datos adicionales sobre <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el objeto <see cref="T:System.Windows.Forms.ImageList" /> actual.</summary>
        <returns>Cadena que representa el objeto <see cref="T:System.Windows.Forms.ImageList" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ImageList.ToString%2A> método devuelve una cadena que incluye el <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> y <xref:System.Windows.Forms.ImageList.ImageSize%2A> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.TransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color que se va a tratar como transparente.</summary>
        <value>Uno de los valores de <see cref="T:System.Drawing.Color" />. El valor predeterminado es <see langword="Transparent" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El color transparente no se representa cuando se dibuja la imagen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
  </Members>
</Type>