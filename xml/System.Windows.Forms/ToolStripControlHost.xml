<Type Name="ToolStripControlHost" FullName="System.Windows.Forms.ToolStripControlHost">
  <TypeSignature Language="C#" Value="public class ToolStripControlHost : System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripControlHost extends System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripControlHost&#xA;Inherits ToolStripItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripControlHost : System::Windows::Forms::ToolStripItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f196-101">Hospeda controles personalizados o controles de formularios Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="2f196-101">Hosts custom controls or Windows Forms controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-102"><xref:System.Windows.Forms.ToolStripControlHost> es la clase base abstracta para <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, y <xref:System.Windows.Forms.ToolStripProgressBar>.</span><span class="sxs-lookup"><span data-stu-id="2f196-102"><xref:System.Windows.Forms.ToolStripControlHost> is the abstract base class for <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, and <xref:System.Windows.Forms.ToolStripProgressBar>.</span></span> <span data-ttu-id="2f196-103"><xref:System.Windows.Forms.ToolStripControlHost> puede hospedar otros controles, incluyendo controles personalizados, de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="2f196-103"><xref:System.Windows.Forms.ToolStripControlHost> can host other controls, including custom controls, in two ways:</span></span>  
  
-   <span data-ttu-id="2f196-104">Construir un <xref:System.Windows.Forms.ToolStripControlHost> con una clase que deriva de <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="2f196-104">Construct a <xref:System.Windows.Forms.ToolStripControlHost> with a class that derives from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="2f196-105">Para obtener acceso completamente el control hospedado y propiedades, debe convertir el <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> propiedad a los datos reales de la clase representa.</span><span class="sxs-lookup"><span data-stu-id="2f196-105">To fully access the hosted control and properties, you must cast the <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> property back to the actual class it represents.</span></span>  
  
-   <span data-ttu-id="2f196-106">Extender <xref:System.Windows.Forms.ToolStripControlHost>y en el constructor predeterminado de la clase heredada, llame al constructor de clase base que pasa una clase que deriva de <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="2f196-106">Extend <xref:System.Windows.Forms.ToolStripControlHost>, and in the inherited class's default constructor, call the base class constructor passing a class that derives from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="2f196-107">Esta opción le permite ajustar métodos de control comunes y propiedades para facilitar el acceso en un <xref:System.Windows.Forms.ToolStrip>.</span><span class="sxs-lookup"><span data-stu-id="2f196-107">This option lets you wrap common control methods and properties for easy access in a <xref:System.Windows.Forms.ToolStrip>.</span></span>  
  
 <span data-ttu-id="2f196-108">Use la <xref:System.Windows.Forms.ToolStripControlHost> clase para hospedar controles personalizados o cualquier otro control de formularios Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="2f196-108">Use the <xref:System.Windows.Forms.ToolStripControlHost> class to host your customized controls or any other Windows Forms control.</span></span>  
  
 <span data-ttu-id="2f196-109">Para personalizar un <xref:System.Windows.Forms.ToolStripItem>, derivan de <xref:System.Windows.Forms.ToolStripControlHost> y crear una implementación personalizada.</span><span class="sxs-lookup"><span data-stu-id="2f196-109">To customize a <xref:System.Windows.Forms.ToolStripItem>, derive from <xref:System.Windows.Forms.ToolStripControlHost> and create a custom implementation.</span></span> <span data-ttu-id="2f196-110">Puede invalidar los métodos como <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> controlar los eventos generados por los controles hospedados y puede asignar una funcionalidad personalizada en las propiedades para mejorar el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-110">You can override methods such as <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> to handle events raised by the hosted controls, and you can put custom functionality into properties to enhance the hosted control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-111">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ToolStripControlHost> con un <xref:System.Windows.Forms.MonthCalendar> controlar, mediante <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> para controlar los eventos y algunos de sus miembros para exponer el <xref:System.Windows.Forms.ToolStripControlHost>.</span><span class="sxs-lookup"><span data-stu-id="2f196-111">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> with a <xref:System.Windows.Forms.MonthCalendar> control, using <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> to handle events, and exposing some of its members to the <xref:System.Windows.Forms.ToolStripControlHost>.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f196-112">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripControlHost (System.Windows.Forms.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripControlHost(System::Windows::Forms::Control ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2f196-113">Control <see cref="T:System.Windows.Forms.Control" /> hospedado en esta clase <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-113">The <see cref="T:System.Windows.Forms.Control" /> hosted by this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span></span></param>
        <summary><span data-ttu-id="2f196-114">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ToolStripControlHost" /> que hospeda el control especificado.</span><span class="sxs-lookup"><span data-stu-id="2f196-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class that hosts the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f196-115">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ToolStripControlHost> control y estableciendo varias propiedades.</span><span class="sxs-lookup"><span data-stu-id="2f196-115">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="2f196-116">Para ejecutar este ejemplo, pegue el código en un formulario que contenga un <xref:System.Windows.Forms.ToolStrip> denominado `toolStrip1` y llame a `InitializeDateTimePickerHost` desde el constructor del formulario o la <xref:System.Windows.Forms.Form.Load> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-116">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f196-117">El control al que hace referencia el parámetro <paramref name="c" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-117">The control referred to by the <paramref name="c" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripControlHost (System.Windows.Forms.Control c, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripControlHost(System::Windows::Forms::Control ^ c, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2f196-118">Control <see cref="T:System.Windows.Forms.Control" /> hospedado en esta clase <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-118">The <see cref="T:System.Windows.Forms.Control" /> hosted by this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span></span></param>
        <param name="name"><span data-ttu-id="2f196-119">Nombre del objeto <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-119">The name of the <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span></span></param>
        <summary><span data-ttu-id="2f196-120">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ToolStripControlHost" /> que hospeda el control especificado y que tiene el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="2f196-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class that hosts the specified control and that has the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-121">Obtiene o establece el color de fondo del control.</span><span class="sxs-lookup"><span data-stu-id="2f196-121">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="2f196-122">Objeto <see cref="T:System.Drawing.Color" /> que representa el color de fondo del control.</span><span class="sxs-lookup"><span data-stu-id="2f196-122">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span></span> <span data-ttu-id="2f196-123">El valor predeterminado es el valor de la propiedad <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-123">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-124">Obtiene o establece la imagen de fondo que se muestra en el control.</span><span class="sxs-lookup"><span data-stu-id="2f196-124">Gets or sets the background image displayed in the control.</span></span></summary>
        <value><span data-ttu-id="2f196-125"><see cref="T:System.Drawing.Image" /> que representa la imagen que se va a mostrar en el fondo del control.</span><span class="sxs-lookup"><span data-stu-id="2f196-125">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-126">Obtiene o establece el diseño de imagen de fondo como se define en la enumeración <see langword="ImageLayout" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-126">Gets or sets the background image layout as defined in the <see langword="ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="2f196-127">Uno de los valores de <see cref="T:System.Windows.Forms.ImageLayout" />:</span><span class="sxs-lookup"><span data-stu-id="2f196-127">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" />:</span></span>  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Center" />  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.None" />  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />  
  
-   <span data-ttu-id="2f196-128"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> (valor predeterminado)</span><span class="sxs-lookup"><span data-stu-id="2f196-128"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> (default)</span></span>  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Zoom" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public override bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-129">Obtiene un valor que indica si el control se puede seleccionar.</span><span class="sxs-lookup"><span data-stu-id="2f196-129">Gets a value indicating whether the control can be selected.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-130">Es <see langword="true" /> si el control se puede seleccionar; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-130"><see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-131">Obtiene o establece un valor que indica si el control hospedado provoca y genera eventos de validación en otros controles cuando el control hospedado recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="2f196-131">Gets or sets a value indicating whether the hosted control causes and raises validation events on other controls when the hosted control receives focus.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-132"><see langword="true" /> si el control hospedado origina y desencadena eventos de validación de otros controles cuando el control hospedado recibe el foco; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-132"><see langword="true" /> if the hosted control causes and raises validation events on other controls when the hosted control receives focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f196-133">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-133">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-134">Obtiene el control <see cref="T:System.Windows.Forms.Control" /> que se hospeda en esta clase <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-134">Gets the <see cref="T:System.Windows.Forms.Control" /> that this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> is hosting.</span></span></summary>
        <value><span data-ttu-id="2f196-135">Objeto <see cref="T:System.Windows.Forms.Control" /> que está hospedado en esta clase <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-135">The <see cref="T:System.Windows.Forms.Control" /> that this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> is hosting.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f196-136">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ToolStripControlHost> controlar y establece una propiedad en el control ajustado utilizando el <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2f196-136">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and sets a property on the wrapped control using the <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> property.</span></span> <span data-ttu-id="2f196-137">Para ejecutar este ejemplo, pegue el código en un formulario que contenga un <xref:System.Windows.Forms.ToolStrip> denominado `toolStrip1` y llame a `InitializeDateTimePickerHost` desde el constructor del formulario o la `Load` controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-137">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ControlAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ControlAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ControlAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-138">Obtiene o establece la alineación del control en el formulario.</span><span class="sxs-lookup"><span data-stu-id="2f196-138">Gets or sets the alignment of the control on the form.</span></span></summary>
        <value><span data-ttu-id="2f196-139">Uno de los valores de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-139">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span> <span data-ttu-id="2f196-140">El valor predeterminado es <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-140">The default is <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-141">Use la <xref:System.Windows.Forms.ToolStripControlHost.ControlAlign%2A> son de propiedad para determinar o definir cómo hospedados controles que se coloquen en el formulario.</span><span class="sxs-lookup"><span data-stu-id="2f196-141">Use the <xref:System.Windows.Forms.ToolStripControlHost.ControlAlign%2A> property to determine or define how hosted controls are to be laid out on the form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="2f196-142">La propiedad <see cref="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" /> se establece en un valor que no es uno de los valores de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-142">The <see cref="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" /> property is set to a value that is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f196-143">Crea un nuevo objeto de accesibilidad para el control.</span><span class="sxs-lookup"><span data-stu-id="2f196-143">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="2f196-144">Nuevo <see cref="T:System.Windows.Forms.AccessibleObject" /> del control.</span><span class="sxs-lookup"><span data-stu-id="2f196-144">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-145">Obtiene el tamaño predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="2f196-145">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="2f196-146"><see cref="T:System.Drawing.Size" /> predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="2f196-146">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-147">El <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> propiedad representa la <xref:System.Drawing.Size> del control cuando se crea inicialmente.</span><span class="sxs-lookup"><span data-stu-id="2f196-147">The <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="2f196-148">Si <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> es `true`, el control cambia de tamaño automáticamente de acuerdo con la <xref:System.Windows.Forms.ToolStrip> orientación.</span><span class="sxs-lookup"><span data-stu-id="2f196-148">If <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> is `true`, the control is sized automatically in accordance with the <xref:System.Windows.Forms.ToolStrip> orientation.</span></span> <span data-ttu-id="2f196-149">Puede ajustar manualmente el tamaño del control estableciendo su <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> valor de propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="2f196-149">You can manually adjust the size of the control by setting its <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> property value to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f196-150">Con el fin de mantener un rendimiento óptimo, no debería establecer el <xref:System.Drawing.Size> de un control en su constructor.</span><span class="sxs-lookup"><span data-stu-id="2f196-150">In order to maintain better performance, you should not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="2f196-151">El método preferido es invalidar la <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2f196-151">The preferred method is to override the <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-152">Al reemplazar el <see cref="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" /> propiedad en una clase derivada, es preferible devolver un <see cref="T:System.Drawing.Size" /> con las dimensiones deseadas en lugar de reemplazar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="2f196-152">When overriding the <see cref="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than overriding all the implementation.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemDisplayStyle DisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); void set(System::Windows::Forms::ToolStripItemDisplayStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-153">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-153">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="2f196-154">Estilo de presentación del objeto.</span><span class="sxs-lookup"><span data-stu-id="2f196-154">The display style of the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-155">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-155">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.DisplayStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-156">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-156">This event is not relevant to this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-157">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-157">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2f196-158">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="2f196-158"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2f196-159">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.ToolStripControlHost" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="2f196-159">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-160">Se llama a este método público `Dispose` método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f196-160">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2f196-161">`Dispose` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2f196-161">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2f196-162"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="2f196-162"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2f196-163">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Windows.Forms.ToolStripControlHost> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="2f196-163">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ToolStripControlHost> references.</span></span> <span data-ttu-id="2f196-164">Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="2f196-164">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2f196-165"><see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="2f196-165"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2f196-166">Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-166">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="2f196-167">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-167">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="2f196-168">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="2f196-168">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClickEnabled">
      <MemberSignature Language="C#" Value="public bool DoubleClickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleClickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DoubleClickEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DoubleClickEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoubleClickEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-169">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-169">This property is not relevant to this class.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-170"><see langword="true" /> si se ha habilitado el doble clic; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-170"><see langword="true" /> if double clicking is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-171">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-171">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-172">Obtiene o establece un valor que indica si el control primario del formulario <see cref="T:System.Windows.Forms.ToolStripItem" /> está habilitado.</span><span class="sxs-lookup"><span data-stu-id="2f196-172">Gets or sets a value indicating whether the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-173">Es <see langword="true" /> si el control primario de <see cref="T:System.Windows.Forms.ToolStripItem" /> está habilitado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-173"><see langword="true" /> if the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f196-174">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-174">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-175">Se produce cuando se introduce el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-175">Occurs when the hosted control is entered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-176">Para obtener más información sobre los delegados de controladores de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-176">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-177">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-177">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-178">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.Enter> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-178">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Enter> event.</span></span> <span data-ttu-id="2f196-179">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-179">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-180">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-180">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-181">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-181">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-182">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.Enter> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-182">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Enter> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#569](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#569)]
 [!code-vb[System.Windows.Forms.EventExamples#569](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#569)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f196-183">Proporciona el foco a un control.</span><span class="sxs-lookup"><span data-stu-id="2f196-183">Gives the focus to a control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-184">Obtiene un valor que indica si el control tiene el foco de entrada.</span><span class="sxs-lookup"><span data-stu-id="2f196-184">Gets a value indicating whether the control has input focus.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-185">Es <see langword="true" /> si el control tiene el foco de entrada; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-185"><see langword="true" /> if the control has input focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-186">Obtiene o establece la fuente que se va a utilizar en el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-186">Gets or sets the font to be used on the hosted control.</span></span></summary>
        <value><span data-ttu-id="2f196-187">Objeto <see cref="T:System.Drawing.Font" /> del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-187">The <see cref="T:System.Drawing.Font" /> for the hosted control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f196-188">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ToolStripControlHost> control y estableciendo varias propiedades.</span><span class="sxs-lookup"><span data-stu-id="2f196-188">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="2f196-189">Para ejecutar este ejemplo, pegue el código en un formulario que contenga un <xref:System.Windows.Forms.ToolStrip> denominado `toolStrip1` y llame a `InitializeDateTimePickerHost` desde el constructor del formulario o la `Load` controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-189">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-190">Obtiene o establece el color de primer plano del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-190">Gets or sets the foreground color of the hosted control.</span></span></summary>
        <value><span data-ttu-id="2f196-191">Objeto <see cref="T:System.Drawing.Color" /> que representa el color de primer plano del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-191">A <see cref="T:System.Drawing.Color" /> representing the foreground color of the hosted control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize"><span data-ttu-id="2f196-192">Área de tamaño personalizado de un control.</span><span class="sxs-lookup"><span data-stu-id="2f196-192">The custom-sized area for a control.</span></span></param>
        <summary><span data-ttu-id="2f196-193">Recupera el tamaño de un área rectangular en la que se puede encajar un control.</span><span class="sxs-lookup"><span data-stu-id="2f196-193">Retrieves the size of a rectangular area into which a control can be fitted.</span></span></summary>
        <returns><span data-ttu-id="2f196-194">Un par ordenado de tipo <see cref="T:System.Drawing.Size" /> que representa el ancho y el alto de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="2f196-194">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-195">Se produce cuando el control hospedado recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="2f196-195">Occurs when the hosted control receives focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-196">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-196">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-197">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-197">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-198">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-198">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> event.</span></span> <span data-ttu-id="2f196-199">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-199">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="2f196-200">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-200">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-201">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-201">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#570](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#570)]
 [!code-vb[System.Windows.Forms.EventExamples#570](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#570)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-202">Imagen asociada al objeto.</span><span class="sxs-lookup"><span data-stu-id="2f196-202">The image associated with the object.</span></span></summary>
        <value><span data-ttu-id="2f196-203">Imagen del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-203">The image of the hosted control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-204">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-204">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-205">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-205">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="2f196-206">Alineación de la imagen para el objeto.</span><span class="sxs-lookup"><span data-stu-id="2f196-206">The image alignment for the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-207">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-207">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScaling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemImageScaling ImageScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemImageScaling ImageScaling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageScaling As ToolStripItemImageScaling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemImageScaling ImageScaling { System::Windows::Forms::ToolStripItemImageScaling get(); void set(System::Windows::Forms::ToolStripItemImageScaling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemImageScaling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-208">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-208">This property is not relevant to this class.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-209"><see langword="true" /> si una imagen en un ToolStripItem se ajusta automáticamente de tamaño para ajustarse a un contenedor; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-209"><see langword="true" /> if an image on a ToolStripItem is automatically resized to fit in a container; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-210">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-210">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-211">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-211">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="2f196-212">Color transparente de la imagen.</span><span class="sxs-lookup"><span data-stu-id="2f196-212">The transparent color of the image.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-213">El color que desea tratar como transparente en el objeto.</span><span class="sxs-lookup"><span data-stu-id="2f196-213">The color to treat as transparent in the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-214">Se produce cuando se presiona una tecla y se mantiene presionada mientras el control hospedado tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2f196-214">Occurs when a key is pressed and held down while the hosted control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-215">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-215">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-216">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-216">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-217">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-217">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> event.</span></span> <span data-ttu-id="2f196-218">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-218">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-219">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-219">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-220">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-220">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-221">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-221">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#573](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#573)]
 [!code-vb[System.Windows.Forms.EventExamples#573](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#573)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-222">Se produce cuando se presiona una tecla mientras el control hospedado tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2f196-222">Occurs when a key is pressed while the hosted control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-223">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-223">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-224">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-224">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-225">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-225">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> event.</span></span> <span data-ttu-id="2f196-226">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-226">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-227">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-227">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-228">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-228">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-229">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-229">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#574](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#574)]
 [!code-vb[System.Windows.Forms.EventExamples#574](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#574)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-230">Se produce cuando se suelta una tecla mientras el control hospedado tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2f196-230">Occurs when a key is released while the hosted control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-231">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-231">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-232">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-232">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-233">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-233">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> event.</span></span> <span data-ttu-id="2f196-234">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-234">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-235">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-235">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-236">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-236">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-237">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-237">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#575](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#575)]
 [!code-vb[System.Windows.Forms.EventExamples#575](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#575)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-238">Se produce cuando el foco de entrada abandona al control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-238">Occurs when the input focus leaves the hosted control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-239">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-239">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-240">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-240">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-241">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.Leave> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-241">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Leave> event.</span></span> <span data-ttu-id="2f196-242">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-242">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-243">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-243">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-244">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-244">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-245">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.Leave> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-245">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Leave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#571](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#571)]
 [!code-vb[System.Windows.Forms.EventExamples#571](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#571)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-246">Se produce cuando el control hospedado pierde el foco.</span><span class="sxs-lookup"><span data-stu-id="2f196-246">Occurs when the hosted control loses focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-247">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-247">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-248">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-248">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-249">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-249">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> event.</span></span> <span data-ttu-id="2f196-250">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-250">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="2f196-251">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-251">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-252">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-252">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#572](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#572)]
 [!code-vb[System.Windows.Forms.EventExamples#572](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#572)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChanged">
      <MemberSignature Language="C#" Value="protected override void OnBoundsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBoundsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBoundsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBoundsChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f196-253">Se produce cuando cambia la propiedad <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-253">Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-254">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-254">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-255">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-255">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-256">El método <xref:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-256">The <xref:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-257">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-257">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-258">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-258">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-259">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-259">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-260">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.Enter" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-260">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Enter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-261">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-261">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-262">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-262">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-263">El método <xref:System.Windows.Forms.ToolStripControlHost.OnEnter%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-263">The <xref:System.Windows.Forms.ToolStripControlHost.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-264">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-264">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-265">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-265">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-266">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-266">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-267">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-267">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-268">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-268">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-269">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-269">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-270">El método <xref:System.Windows.Forms.ToolStripControlHost.OnGotFocus%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-270">The <xref:System.Windows.Forms.ToolStripControlHost.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-271">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-271">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-272">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-272">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHostedControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnHostedControlResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHostedControlResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHostedControlResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHostedControlResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-273">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-273">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-274">Sincroniza el cambio de tamaño del control host con el cambio de tamaño del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-274">Synchronizes the resizing of the control host with the resizing of the hosted control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-275">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-275">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-276">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-276">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-277">El método <xref:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-277">The <xref:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-278">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-278">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-279">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-279">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-280">Objeto <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-280">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-281">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-281">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-282">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-282">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-283">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-283">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-284">El método <xref:System.Windows.Forms.ToolStripControlHost.OnKeyDown%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-284">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-285">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-285">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-286">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-286">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-287">Objeto <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-287">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-288">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyPress" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-288">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyPress" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-289">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-289">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-290">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-290">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-291">El método <xref:System.Windows.Forms.ToolStripControlHost.OnKeyPress%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-291">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-292">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-292">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-293">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-293">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-294">Objeto <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-294">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-295">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-295">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-296">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-296">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-297">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-297">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-298">El método <xref:System.Windows.Forms.ToolStripControlHost.OnKeyUp%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-298">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-299">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-299">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-300">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-300">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected internal override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-301">Objeto <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-301">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-302">Genera el evento <see cref="E:System.Windows.Forms.Control.Layout" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-302">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-303">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-303">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-304">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.Leave" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-304">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Leave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-305">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-305">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-306">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-306">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-307">El método <xref:System.Windows.Forms.ToolStripControlHost.OnLeave%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-307">The <xref:System.Windows.Forms.ToolStripControlHost.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-308">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-308">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-309">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-309">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-310">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-310">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-311">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-311">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-312">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-312">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-313">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-313">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-314">El método <xref:System.Windows.Forms.ToolStripControlHost.OnLostFocus%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-314">The <xref:System.Windows.Forms.ToolStripControlHost.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-315">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-315">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-316">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-316">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-317">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-317">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-318">Genera el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-318">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (System.Windows.Forms.ToolStrip oldParent, System.Windows.Forms.ToolStrip newParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.Windows.Forms.ToolStrip oldParent, class System.Windows.Forms.ToolStrip newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (oldParent As ToolStrip, newParent As ToolStrip)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(System::Windows::Forms::ToolStrip ^ oldParent, System::Windows::Forms::ToolStrip ^ newParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="newParent" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="2f196-319">Elemento primario original del elemento.</span><span class="sxs-lookup"><span data-stu-id="2f196-319">The original parent of the item.</span></span></param>
        <param name="newParent"><span data-ttu-id="2f196-320">Nuevo elemento primario del elemento.</span><span class="sxs-lookup"><span data-stu-id="2f196-320">The new parent of the item.</span></span></param>
        <summary><span data-ttu-id="2f196-321">Genera el evento <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-321">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected virtual void OnSubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2f196-322">Control a partir del cual se suscribirán eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-322">The control from which to subscribe events.</span></span></param>
        <summary><span data-ttu-id="2f196-323">Suscribe eventos procedentes del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-323">Subscribes events from the hosted control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-324">Invalidar el <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> método para agregar o impedir la sincronización de eventos de control.</span><span class="sxs-lookup"><span data-stu-id="2f196-324">Override the <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> method to add or prevent the synchronizing of control events.</span></span>  
  
 <span data-ttu-id="2f196-325">Si reemplaza y enlaza eventos aquí, elimine sus enlaces utilizando el <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f196-325">If you override and hook up events here, unhook them by using the <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method.</span></span>  
  
 <span data-ttu-id="2f196-326">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-326">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-327">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-327">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-328">El método <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-328">The <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-329">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-329">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-330">En el ejemplo de código siguiente se muestra cómo configurar el control de eventos para un evento expuesto por el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-330">The following code example demonstrates how to set up event handling for an event exposed by the hosted control.</span></span> <span data-ttu-id="2f196-331">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Windows.Forms.ToolStripControlHost> clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-331">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripControlHost> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-332">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-332">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected virtual void OnUnsubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnsubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnsubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2f196-333">El control de cuyos eventos se eliminará la suscripción.</span><span class="sxs-lookup"><span data-stu-id="2f196-333">The control from which to unsubscribe events.</span></span></param>
        <summary><span data-ttu-id="2f196-334">Elimina la suscripción de eventos procedentes del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-334">Unsubscribes events from the hosted control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-335">Invalidar el <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> método para anular la suscripción de eventos suscritos en <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f196-335">Override the <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method to unsubscribe events subscribed in <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>.</span></span>  
  
 <span data-ttu-id="2f196-336">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-336">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-337">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-337">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-338">El método <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-338">The <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-339">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-339">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-340">En el ejemplo de código siguiente se muestra cómo cancelar la suscripción a un evento expuesto por el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-340">The following code example demonstrates how to unsubscribe from an event exposed by the hosted control.</span></span> <span data-ttu-id="2f196-341">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Windows.Forms.ToolStripControlHost> clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-341">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripControlHost> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-342">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-342">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-343">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-343">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-344">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.Validated" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-344">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Validated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-345">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-345">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-346">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-346">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-347">El método <xref:System.Windows.Forms.ToolStripControlHost.OnValidated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-347">The <xref:System.Windows.Forms.ToolStripControlHost.OnValidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-348">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-348">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-349">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-349">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f196-350">Objeto <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-350">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2f196-351">Genera el evento <see cref="E:System.Windows.Forms.ToolStripControlHost.Validating" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-351">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-352">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-352">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f196-353">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-353">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f196-354">El método <xref:System.Windows.Forms.ToolStripControlHost.OnValidating%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2f196-354">The <xref:System.Windows.Forms.ToolStripControlHost.OnValidating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f196-355">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2f196-355">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2f196-356">Al reemplazar <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2f196-356">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="2f196-357"><see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje de ventana que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="2f196-357">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="2f196-358">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="2f196-358">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="2f196-359">Procesa una tecla de comando.</span><span class="sxs-lookup"><span data-stu-id="2f196-359">Processes a command key.</span></span></summary>
        <returns>
          <span data-ttu-id="2f196-360"><see langword="false" /> en todos los casos.</span><span class="sxs-lookup"><span data-stu-id="2f196-360"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2f196-361">para el llamador inmediato y herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="2f196-361">for the immediate caller and inheriting classes to call this method.</span></span> <span data-ttu-id="2f196-362">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-362">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="2f196-363">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="2f196-363">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="2f196-364">Procesa una tecla de diálogo.</span><span class="sxs-lookup"><span data-stu-id="2f196-364">Processes a dialog key.</span></span></summary>
        <returns>
          <span data-ttu-id="2f196-365"><see langword="true" /> si el elemento procesó la tecla; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-365"><see langword="true" /> if the key was processed by the item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="2f196-366">Carácter que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="2f196-366">The character to process.</span></span></param>
        <summary><span data-ttu-id="2f196-367">Procesa un carácter de tecla de acceso.</span><span class="sxs-lookup"><span data-stu-id="2f196-367">Processes a mnemonic character.</span></span></summary>
        <returns>
          <span data-ttu-id="2f196-368"><see langword="true" /> si el control procesó el carácter como carácter de tecla de acceso; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-368"><see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetBackColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f196-369">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-369">This method is not relevant to this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-370">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-370">This method is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetForeColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f196-371">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-371">This method is not relevant to this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-372">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-372">This method is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-373">Obtiene o establece un valor que indica si los elementos del control se alinean para admitir configuraciones regionales que utilizan fuentes de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="2f196-373">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span></span></summary>
        <value><span data-ttu-id="2f196-374">Uno de los valores de <see cref="T:System.Windows.Forms.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-374">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span> <span data-ttu-id="2f196-375">El valor predeterminado es <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-375">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftAutoMirrorImage">
      <MemberSignature Language="C#" Value="public bool RightToLeftAutoMirrorImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftAutoMirrorImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.RightToLeftAutoMirrorImage" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeftAutoMirrorImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeftAutoMirrorImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-376">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-376">This property is not relevant to this class.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-377"><see langword="true" /> si la imagen está reflejada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-377"><see langword="true" /> if the image is mirrored; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-378">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-378">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-379">Obtiene un valor que indica si el elemento está seleccionado.</span><span class="sxs-lookup"><span data-stu-id="2f196-379">Gets a value indicating whether the item is selected.</span></span></summary>
        <value>
          <span data-ttu-id="2f196-380">Es <see langword="true" /> si <see cref="T:System.Windows.Forms.ToolStripItem" /> está seleccionado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-380"><see langword="true" /> if the <see cref="T:System.Windows.Forms.ToolStripItem" /> is selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool visible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <span data-ttu-id="2f196-381"><see langword="true" /> para hacer que ToolStripItem sea visible; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-381"><see langword="true" /> to make the ToolStripItem visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2f196-382">Establece el <see cref="T:System.Windows.Forms.ToolStripItem" /> en el estado de visibilidad especificado.</span><span class="sxs-lookup"><span data-stu-id="2f196-382">Sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> to the specified visible state.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-383">Obtiene o establece el sitio del control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-383">Gets or sets the site of the hosted control.</span></span></summary>
        <value><span data-ttu-id="2f196-384">El objeto <see cref="T:System.ComponentModel.ISite" /> asociado al control.</span><span class="sxs-lookup"><span data-stu-id="2f196-384">The <see cref="T:System.ComponentModel.ISite" /> associated with the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-385">Obtiene o establece el tamaño del control <see cref="T:System.Windows.Forms.ToolStripItem" />.</span><span class="sxs-lookup"><span data-stu-id="2f196-385">Gets or sets the size of the <see cref="T:System.Windows.Forms.ToolStripItem" />.</span></span></summary>
        <value><span data-ttu-id="2f196-386">Un par ordenado de tipo <see cref="T:System.Drawing.Size" /> que representa el ancho y el alto de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="2f196-386">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-387">Obtiene o establece el texto que se va a mostrar en el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-387">Gets or sets the text to be displayed on the hosted control.</span></span></summary>
        <value><span data-ttu-id="2f196-388">Un objeto <see cref="T:System.String" /> que representa el texto.</span><span class="sxs-lookup"><span data-stu-id="2f196-388">A <see cref="T:System.String" /> representing the text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f196-389">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Windows.Forms.ToolStripControlHost> control y estableciendo varias propiedades.</span><span class="sxs-lookup"><span data-stu-id="2f196-389">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="2f196-390">Para ejecutar este ejemplo, pegue el código en un formulario que contenga un <xref:System.Windows.Forms.ToolStrip> denominado `toolStrip1` y llame a `InitializeDateTimePickerHost` desde el constructor del formulario o la `Load` controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-390">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-391">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-391">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="2f196-392">La propiedad de alineación del texto para el objeto.</span><span class="sxs-lookup"><span data-stu-id="2f196-392">The text alignment property for the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-393">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-393">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ToolStripTextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripTextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TextDirection As ToolStripTextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripTextDirection TextDirection { System::Windows::Forms::ToolStripTextDirection get(); void set(System::Windows::Forms::ToolStripTextDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripTextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-394">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-394">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="2f196-395">Dirección del texto de la barra de herramientas.</span><span class="sxs-lookup"><span data-stu-id="2f196-395">The text direction of the tool strip.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-396">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-396">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-397">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-397">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="2f196-398">La relación de una imagen de texto con el objeto.</span><span class="sxs-lookup"><span data-stu-id="2f196-398">The relation of a text image with the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-399">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="2f196-399">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-400">Se produce después de que un control hospedado se ha validado correctamente.</span><span class="sxs-lookup"><span data-stu-id="2f196-400">Occurs after the hosted control has been successfully validated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-401">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-401">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-402">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-402">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-403">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.Validated> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-403">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Validated> event.</span></span> <span data-ttu-id="2f196-404">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-404">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-405">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-405">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-406">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-406">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-407">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.Validated> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-407">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Validated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#577](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#577)]
 [!code-vb[System.Windows.Forms.EventExamples#577](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#577)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f196-408">Se produce mientras se está validando el control hospedado.</span><span class="sxs-lookup"><span data-stu-id="2f196-408">Occurs while the hosted control is validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f196-409">Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2f196-409">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f196-410">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2f196-410">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2f196-411">En el ejemplo, un controlador de eventos notifica la aparición de la <xref:System.Windows.Forms.ToolStripControlHost.Validating> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-411">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Validating> event.</span></span> <span data-ttu-id="2f196-412">Este informe le ayuda a obtener información cuando se produce el evento y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2f196-412">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2f196-413">Para informar sobre varios eventos o sobre eventos que se producen con frecuencia, considere la posibilidad de reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2f196-413">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2f196-414">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ToolStripControlHost> denominado `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="2f196-414">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="2f196-415">A continuación, asegúrese de que el controlador de eventos esté asociado el <xref:System.Windows.Forms.ToolStripControlHost.Validating> eventos.</span><span class="sxs-lookup"><span data-stu-id="2f196-415">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Validating> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#576](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#576)]
 [!code-vb[System.Windows.Forms.EventExamples#576](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#576)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
  </Members>
</Type>