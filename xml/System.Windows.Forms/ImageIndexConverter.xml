<Type Name="ImageIndexConverter" FullName="System.Windows.Forms.ImageIndexConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f094a720258089b3f8764e4a4718b5c57e61aaf4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647449" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageIndexConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageIndexConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageIndexConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageIndexConverter&#xA;Inherits Int32Converter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageIndexConverter : System::ComponentModel::Int32Converter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un convertidor de tipos para convertir datos de un índice de imagen en una cadena y desde una cadena.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.ImageIndexConverter> clase se utiliza para convertir valores de índice de un <xref:System.Windows.Forms.ImageList> hacia y desde otros tipos de datos, normalmente <xref:System.String>. Para obtener más información sobre los convertidores de tipos, vea la <xref:System.ComponentModel.TypeConverter> clase base y [Cómo: implementar un convertidor de tipos](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Normalmente, no se crea directamente una instancia de un <xref:System.Windows.Forms.ImageIndexConverter>. En su lugar, llame a la <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método <xref:System.ComponentModel.TypeDescriptor>. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageIndexConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageIndexConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Windows.Forms.ImageIndexConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, no se crea directamente una instancia de un <xref:System.Windows.Forms.ImageIndexConverter>. En su lugar, llame a la <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método <xref:System.ComponentModel.TypeDescriptor>. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> para proporcionar información de la configuración regional.</param>
        <param name="value">
          <see cref="T:System.Object" /> que se va a convertir.</param>
        <summary>Convierte el objeto del valor especificado en un objeto de entero con signo de 32 bits.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este convertidor de tipos sólo puede convertir un objeto de entero con signo de 32 bits a y desde una cadena.  
  
 La `context` puede utilizarse para extraer información adicional sobre el entorno desde el que se está llamando a este convertidor de tipos. Puede ser `null`, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">No se pudo llevar a cabo la conversión.</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <param name="culture">Control <see cref="T:System.Globalization.CultureInfo" /> que proporciona información de la configuración regional.</param>
        <param name="value">Objeto que se va a convertir, normalmente un índice representado como <see cref="T:System.Int32" />.</param>
        <param name="destinationType">Tipo en el que se va a convertir el objeto; suele ser una <see cref="T:System.String" />.</param>
        <summary>Convierte el objeto especificado al tipo especificado.</summary>
        <returns>
          <see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada de este método sólo puede convertir un valor de índice representado como un <xref:System.Int32> a una <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="destinationType" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El <paramref name="value" /> especificado no se ha podido convertir al <paramref name="destinationType" /> especificado.</exception>
        <block subset="none" type="overrides">
          <para>Invalide este método para proporcionar sus propias funciones de conversión.  
  
 El <paramref name="context" /> parámetro puede utilizarse para extraer información adicional sobre el entorno desde el que se está llamando a este convertidor de tipos. Esto puede ser <see langword="null" />, por lo que siempre debe comprobar este valor devuelto. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Devuelve una colección de valores de índice estándar para la lista de imágenes asociada al contexto de formato especificado.</summary>
        <returns>Una clase <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores de índice válidos. Si no se encuentra ninguna lista de imágenes, esta colección contendrá un solo objeto con un valor de -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Devuelve una colección de valores de índice para listas de imágenes asociadas con el <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A?displayProperty=nameWithType> propiedad de la `context` parámetro. Si un <xref:System.Windows.Forms.ImageList> no se encuentra, a continuación, se busca el elemento primario del componente para obtener una lista de este tipo.  
  
 Normalmente el <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> método se llama para antes de que se realiza un intento para usar la <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> y <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
        <altmember cref="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Un contexto de formateador.</param>
        <summary>Determina si la lista de valores estándar devueltos por el método <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> es una lista exclusiva.</summary>
        <returns>
          <see langword="true" /> si el método <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> devuelve una lista exclusiva de valores válidos; de lo contrario, <see langword="false" />. Esta implementación siempre devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la lista devuelta por la <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> método es exclusivo, entonces será válido ningún otro valor. Esto es típico de un tipo de datos enumerado. Si la lista no es exclusiva, hay otros valores válidos además de la lista de estándar de valores que <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> proporciona.  
  
 Tal y como se implementa en este convertidor de tipos, este método siempre devuelve `false`.  
  
 Normalmente el <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> método se llama para antes de que se realiza un intento para usar la <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> y <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Determina si el convertidor de tipos admite un conjunto estándar de valores que se pueden seleccionar de una lista.</summary>
        <returns>
          <see langword="true" /> si el método <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> devuelve un conjunto estándar de valores; de lo contrario, <see langword="false" />. Siempre devuelve <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como se implementa en esta clase, <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> siempre devuelve `true` puesto que este objeto admite un conjunto estándar de valores de índice para las imágenes que se pueden seleccionar de una lista.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="IncludeNoneAsStandardValue">
      <MemberSignature Language="C#" Value="protected virtual bool IncludeNoneAsStandardValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNoneAsStandardValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IncludeNoneAsStandardValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IncludeNoneAsStandardValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si un valor <see langword="none" /> o <see langword="null" /> es válido en la colección <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />.</summary>
        <value>
          <see langword="true" /> si un valor <see langword="none" /> o <see langword="null" /> es válido en la colección de valores estándar; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se implementa en esta clase es siempre devuelve `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>