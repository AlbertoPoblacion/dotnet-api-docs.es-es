<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c79f6f3cb19d9859691bdad1d7296a7d4ab93024" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e8d26-101">Representa la colección de enteros de un control <see cref="T:System.Windows.Forms.ListBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8d26-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> es una colección ordenada a la que se anexan los elementos mediante el uso de la <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> y <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e8d26-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="e8d26-103">Se quitan los valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="e8d26-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="e8d26-104">El <xref:System.Windows.Forms.ListBox.IntegerCollection> lo usa principalmente el <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="e8d26-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="e8d26-105">
            <see cref="T:System.Windows.Forms.ListBox" /> que posee la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-106">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-107">No se puede crear una instancia de la <xref:System.Windows.Forms.ListBox.IntegerCollection> clase sin asociarla a un <xref:System.Windows.Forms.ListBox> control.</span><span class="sxs-lookup"><span data-stu-id="e8d26-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-108">Entero que se agrega a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-108">The integer to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-109">Agrega un entero único a la colección, en el orden que le corresponde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-109">Adds a unique integer to the collection in sorted order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-110">Índice del elemento que se ha agregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-110">The index of the added item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="e8d26-111">No hay suficiente espacio disponible para almacenar el nuevo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-111">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-112">Agrega un grupo de enteros a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-112">Adds a group of integers to the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="e8d26-113">Matriz de enteros que se va a agregar a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-113">The array of integers to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-114">Agrega una matriz de enteros a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-114">Adds an array of integers to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-115">La matriz de enteros se anexa a la colección y se quitan los duplicados de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8d26-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d26-116">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> que se agrega a otra colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-117">Agrega el contenido de una colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> existente a otra colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-118">El contenido de las existentes <xref:System.Windows.Forms.ListBox.IntegerCollection> se anexan a la colección actual, y se quitan los duplicados de la colección combinada.</span><span class="sxs-lookup"><span data-stu-id="e8d26-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-119">Quita todos los enteros de <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-120">Entero que se va a buscar en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-120">The integer to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-121">Determina si el entero especificado está en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-121">Determines whether the specified integer is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-122">Es <see langword="true" /> si el entero especificado está en la colección; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-122">
              <see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-123">Use la <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> método para determinar si un entero es un miembro de la <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="e8d26-124">Una vez que sepa que el elemento se encuentra dentro de la colección, puede usar el <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> método para determinar dónde se encuentra dentro de la colección el elemento.</span><span class="sxs-lookup"><span data-stu-id="e8d26-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="e8d26-125">Matriz en la que se va a copiar <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e8d26-126">Ubicación de la matriz de destino en la que se va a copiar la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-127">Copia toda la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> en una matriz de enteros existente en el lugar especificado de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-128">Use la <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> método para combinar los enteros de varias colecciones en una sola matriz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="e8d26-129">A continuación, puede utilizar esta matriz para rellenar el contenido de otro <xref:System.Windows.Forms.ListBox> controlar mediante la <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e8d26-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-130">Obtiene el número de elementos del control <see cref="T:System.Windows.Forms.ListBox" /> seleccionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-131">Número de elementos del control <see cref="T:System.Windows.Forms.ListBox" /> seleccionad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-132">Use la <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> propiedad para determinar el número de elementos seleccionados en el <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="e8d26-133">A continuación, puede usar este valor al que se recorren en bucle los elementos y debe proporcionar un número de iteraciones para realizar el bucle.</span><span class="sxs-lookup"><span data-stu-id="e8d26-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-134">Entero para el que se debe recuperar el índice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-134">The integer for which to retrieve the index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-135">Recupera el índice del elemento especificado en la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-136">Índice de base cero del entero de la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-137">Use la <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> método para determinar dónde se encuentra dentro de la colección un elemento.</span><span class="sxs-lookup"><span data-stu-id="e8d26-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="e8d26-138">Para determinar si un elemento se encuentra dentro de la colección antes de llamar a este método, utilice el <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e8d26-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e8d26-139">Posición de <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-140">Obtiene o establece el <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> que tiene el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-141">
            <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> seleccionado en la posición especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-142">Entero que se va a quitar de la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-143">Quita el entero especificado de la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-144">Al quitar un entero comprendido entre el <xref:System.Windows.Forms.ListBox.IntegerCollection>, cambian los índices de los enteros siguientes de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8d26-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="e8d26-145">Se elimina toda la información sobre el entero quitado.</span><span class="sxs-lookup"><span data-stu-id="e8d26-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="e8d26-146">Puede usar el <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> método para quitar un elemento específico de la lista especificando el elemento real que se quitará de la lista.</span><span class="sxs-lookup"><span data-stu-id="e8d26-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="e8d26-147">Para especificar el índice de entero que se va a quitar en lugar del propio entero, utilice la <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e8d26-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="e8d26-148">Si el entero no está en el <xref:System.Windows.Forms.ListBox.IntegerCollection>, este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="e8d26-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e8d26-149">Índice de base cero del entero que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-149">The zero-based index of the integer to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-150">Quita el entero que está en el índice especificado de la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-151">Al quitar un entero comprendido entre el <xref:System.Windows.Forms.ListBox.IntegerCollection>, cambian los índices de los enteros siguientes de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8d26-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="e8d26-152">Se elimina toda la información sobre el entero quitado.</span><span class="sxs-lookup"><span data-stu-id="e8d26-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="e8d26-153">Puede usar el <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> método para quitar un entero específico de la lista especificando el índice de entero que se va a quitar de la lista.</span><span class="sxs-lookup"><span data-stu-id="e8d26-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="e8d26-154">Para especificar el elemento que se va a quitar en lugar del índice del elemento, utilice la <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e8d26-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-155">Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-156">
            <see langword="true" /> en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-156">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-157">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-158">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-159">Obtiene un objeto que puede utilizarse para sincronizar el acceso a la colección de controles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-159">Gets an object that can be used to synchronize access to the collection of controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-160">Objeto que se utiliza para sincronizar el acceso a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-160">The object used to synchronize to the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-161">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-162">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-163">Recupera una enumeración de todos los enteros de <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-164">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-165">Este método crea un enumerador que contiene una instantánea de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8d26-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="e8d26-166">Puede cambiar la colección cambiando el enumerador; Sin embargo, varios enumeradores pueden tener acceso simultáneamente a la misma colección.</span><span class="sxs-lookup"><span data-stu-id="e8d26-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="e8d26-167">Cambiar la colección (ya sea directamente o a través de otro enumerador) puede provocar, por tanto, <xref:System.Collections.IEnumerator.Current%2A> o <xref:System.Collections.IEnumerator.MoveNext%2A> para producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="e8d26-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="e8d26-168">Dos enumeradores creados a partir de la misma colección al mismo tiempo pueden contener instantáneas diferentes.</span><span class="sxs-lookup"><span data-stu-id="e8d26-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="e8d26-169">Quitar objetos desde el enumerador también los quita de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8d26-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-170">Posición de tabulación que se va a agregar a <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-171">Agrega una posición de tabulación a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-171">Adds a tab stop to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-172">Índice de la colección en que se agregó el entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-172">The index at which the integer was added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-173">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-174">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8d26-175">
            <paramref name="item" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-175">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d26-176">
            <paramref name="item" /> no es un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-176">
              <paramref name="item" /> is not an 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="e8d26-177">No hay suficiente espacio para almacenar el nuevo elemento en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-177">There is insufficient space to store the new item in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-178">Borra todas las posiciones de tabulación de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-178">Clears all the tab stops from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-179">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-180">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-181">Posición de tabulación que se va a colocar en <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-182">Determina si la posición de tabulación especificada está en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-182">Determines whether the specified tab stop is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-183">
            <see langword="true" /> si el elemento es un entero ubicado en IntegerCollection; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-183">
              <see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-184">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-185">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e8d26-186">Posición de tabulación que se va a colocar en <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-187">Devuelve el índice de la posición de tabulación especificada en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-187">Returns the index of the specified tab stop in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8d26-188">Índice de base cero del elemento si se encontró en la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-189">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-190">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e8d26-191">Índice de base cero en el que se debe insertar el valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-191">The zero-based index at which value should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e8d26-192">Objeto que se va a insertar en <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-193">Inserta un elemento en el índice especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-193">Inserts an item into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-194">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-195">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d26-196">Siempre se produce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-196">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-197">Obtiene un valor que indica si la colección tiene un tamaño fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-197">Gets a value indicating whether the collection has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-198">
            <see langword="true" /> en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-198">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-199">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-200">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d26-201">Obtiene un valor que indica si la colección es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-201">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-202">
            <see langword="false" /> en todos los casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-202">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-203">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-204">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e8d26-205">Índice de base cero que indica qué posición de tabulación se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-205">The zero-based index that specifies which tab stop to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-206">Obtiene o establece la posición de tabulación en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-206">Gets or sets the tab stop at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d26-207">Posición de tabulación que se almacena en la ubicación especificada de la colección <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-208">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-209">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8d26-210">El objeto no es un entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-210">The object is not an integer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e8d26-211">Objeto que se va a agregar a <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-212">Quita la primera aparición de un elemento de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-212">Removes the first occurrence of an item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-213">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-214">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d26-215">Siempre se produce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-215">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e8d26-216">El índice del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-216">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8d26-217">Quita el elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-217">Removes the item at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d26-218">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e8d26-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e8d26-219">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Forms.ListBox.IntegerCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="e8d26-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8d26-220">Siempre se produce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d26-220">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>