<Type Name="CheckedListBox+ObjectCollection" FullName="System.Windows.Forms.CheckedListBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a512dd0a2ab4d5f298f25d8d1821e25f8aa34a2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39890905" /></Metadata><TypeSignature Language="C#" Value="public class CheckedListBox.ObjectCollection : System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit CheckedListBox/ObjectCollection extends System.Windows.Forms.ListBox/ObjectCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckedListBox.ObjectCollection&#xA;Inherits ListBox.ObjectCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class CheckedListBox::ObjectCollection : System::Windows::Forms::ListBox::ObjectCollection" />
  <TypeSignature Language="F#" Value="type CheckedListBox.ObjectCollection = class&#xA;    inherit ListBox.ObjectCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox+ObjectCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa la colección de elementos de un <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se tiene acceso a la colección desde el control primario, <xref:System.Windows.Forms.CheckedListBox>, por el <xref:System.Windows.Forms.CheckedListBox.Items%2A> propiedad. Para crear una colección de objetos que se va a mostrar en el <xref:System.Windows.Forms.CheckedListBox> control, puede agregar o quitar los elementos por separado mediante el <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> y <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> métodos.  
  
   
  
## Examples  
 En el ejemplo siguiente se enumeran los elementos de la <xref:System.Windows.Forms.CheckedListBox> y comprueba todos los elementos en la lista. En el ejemplo se muestra cómo utilizar el <xref:System.Windows.Forms.CheckedListBox.Items%2A> propiedad va a obtener el <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> para obtener el <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> de elementos.  
  
 El ejemplo también muestra cómo utilizar el <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> y <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> métodos para establecer el estado de activación de un elemento. Para todos los elementos que debe comprobarse, <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> se llama para establecer el <xref:System.Windows.Forms.CheckState> a `Indeterminate`, mientras que <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> se llama en el otro elemento para establecer el estado de activación en `Checked`.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.CheckedListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.CheckedListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.#ctor(System.Windows.Forms.CheckedListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As CheckedListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::CheckedListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.CheckedListBox.ObjectCollection : System.Windows.Forms.CheckedListBox -&gt; System.Windows.Forms.CheckedListBox.ObjectCollection" Usage="new System.Windows.Forms.CheckedListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.CheckedListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.CheckedListBox" /> que posee la colección.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un elemento a la lista de elementos de un control <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, isChecked As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, bool isChecked);" />
      <MemberSignature Language="F#" Value="override this.Add : obj * bool -&gt; int" Usage="objectCollection.Add (item, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que representa el elemento que se va a agregar a la colección.</param>
        <param name="isChecked">Es <see langword="true" /> para activar el elemento; en caso contrario, es <see langword="false" />.</param>
        <summary>Agrega elementos a la lista de elementos de <see cref="T:System.Windows.Forms.CheckedListBox" />, especificando el objeto que se va a agregar y si está activado.</summary>
        <returns>Índice del elemento que se acaba de agregar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega un elemento a la lista. Para obtener una lista, el elemento se agrega al final de la lista de elementos existente. Para un cuadro de lista activado ordenado, el elemento se inserta en la lista según su posición de orden. Un `SystemException` se produce si no hay suficiente espacio disponible para almacenar el nuevo elemento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo inicializar un <xref:System.Windows.Forms.CheckedListBox> control estableciendo el <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, y <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> propiedades. El ejemplo rellena el <xref:System.Windows.Forms.CheckedListBox> con controles y establece el <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> a la <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> propiedad del control.  
  
 Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.CheckedListBox> denominado CheckedListBox1 y llame a la `InitializeCheckListBox` método desde el constructor del formulario o `Load` método.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, System.Windows.Forms.CheckState check);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, valuetype System.Windows.Forms.CheckState check) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, check As CheckState) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, System::Windows::Forms::CheckState check);" />
      <MemberSignature Language="F#" Value="override this.Add : obj * System.Windows.Forms.CheckState -&gt; int" Usage="objectCollection.Add (item, check)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="check" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que representa el elemento que se va a agregar a la colección.</param>
        <param name="check">Enumeración <see cref="T:System.Windows.Forms.CheckState" /> inicial de la parte activada del elemento.</param>
        <summary>Agrega elementos a la lista de elementos de un control <see cref="T:System.Windows.Forms.CheckedListBox" />, especificando el objeto que se va a agregar y el valor de activación inicial.</summary>
        <returns>Índice del elemento que se acaba de agregar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega un elemento al cuadro de lista activado. Para un cuadro de lista sin ordenar de activada, el elemento se agrega al final de la lista de elementos existente. Para un cuadro de lista activado ordenado, el elemento se inserta en la lista según su posición de orden. Un `SystemException` se produce si no hay suficiente espacio disponible para almacenar el nuevo elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El parámetro <paramref name="check" /> no es un valor válido de <see cref="T:System.Windows.Forms.CheckState" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>