<Type Name="SrgsRule" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abbded3c3128948a869896cccac9a44b7b02f8fe" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37756456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRule" />
  <TypeSignature Language="F#" Value="type SrgsRule = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una regla de gramática.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> clase para crear una nueva regla en tiempo de ejecución o para modificar una regla en un archivo o secuencia de gramática existentes en tiempo de ejecución.  
  
 Las palabras y frases especificadas por <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> gramáticas definidos por objetos <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instancias limitan la entrada de voz que el reconocedor debe ser capaz de identificar.  
  
 Un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto especifica la secuencia en la que se deben hablar palabras y frases por orden de los objetos que los contienen. Las palabras y frases dentro de una regla se representan mediante objetos como <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, y <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> elementos. Use la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> objetos de propiedad para tener acceso a la colección del elemento secundario que un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> contiene el objeto.  
  
 Puede determinar si un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> puede especificarse en una referencia de regla de una regla en una gramática externa estableciendo su <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> propiedad.  
  
 No es válido definir una <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> es vacía o que contiene solo espacios en blanco.  
  
 Esta clase representa el `rule` elemento que se define en el World Wide Web Consortium (W3C) [especificación de gramática de reconocimiento de voz (SRGS) versión 1.0](http://go.microsoft.com/fwlink/?LinkId=201761). Para obtener información sobre el SRGS `rule` elemento y detalles sobre su compatibilidad por System.Speech, consulte [elemento rule](http://msdn.microsoft.com/library/da67b4aa-0545-426a-a02f-1417b968021e).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRule : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRule" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRule id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">El identificador de la regla.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> y especifica el identificador para la regla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> constructor inicializa el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> propiedad. El identificador debe ser único dentro de una gramática especificada.  
  
 El <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> constructor produce un <xref:System.FormatException> en las siguientes circunstancias:  
  
-   `id` no es un nombre XML válido, tal como se define en [Extensible Markup Language (XML) 1.0 (Fifth Edition)](https://www.w3.org/TR/REC-xml/). Parafraseando a esta definición, un nombre XML válido debe empezar con una letra, un carácter de subrayado ('_') o un signo de dos puntos (': ') y puede ir seguido de cero o más caracteres NameChar (también se define en la especificación de XML).  
  
-   `id` es "NULL" o "VOID" o "Elementos no utilizados".  
  
-   `id` contiene al menos un carácter de identificador de regla no válida. Estos caracteres son: '?', ' *', '+', '&#124;', ' (','), ' ^', '$', '/', ';', '.', '=', '\<', ' >', ' [', ']', ' {', '} ','\\\\',' ', '\t', '\r' y '\n'.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una gramática que reconoce la frase "es de un país que ha ganado la Copa del mundo" seguido del nombre de un país que ha ganado la Copa del mundo. El ejemplo se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto denominado `winnerRule` y pasa el identificador `WorldCupWinner` como un <xref:System.String>. El <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objeto consta de una matriz de nuevos <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objetos que contiene alternativas para ser reconocido por la regla.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> está vacía.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> no es un identificador de regla apropiado.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id, params System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, ParamArray elements As SrgsElement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id, ... cli::array &lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRule : string * System.Speech.Recognition.SrgsGrammar.SrgsElement[] -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRule" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRule (id, elements)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="elements" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">El identificador de la regla.</param>
        <param name="elements">Matriz de elementos <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> desde una matriz de objetos <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> constructor inicializa el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> propiedad. El identificador debe ser único dentro de una gramática especificada.  
  
 El <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> constructor produce un <xref:System.FormatException> en las siguientes circunstancias:  
  
-   `id` no es un nombre XML válido, tal como se define en [Extensible Markup Language (XML) 1.0 (Fifth Edition)](https://www.w3.org/TR/REC-xml/). Parafraseando a esta definición, un nombre XML válido debe empezar con una letra, un carácter de subrayado ('_') o un signo de dos puntos (': ') y puede ir seguido de cero o más caracteres NameChar (también se define en la especificación de XML).  
  
-   `id` es "NULL" o "VOID" o "Elementos no utilizados".  
  
-   `id` contiene al menos un carácter de identificador de regla no válida. Estos caracteres son: '?', ' *', '+', '&#124;', ' (','), ' ^', '$', '/', ';', '.', '=', '\<', ' >', ' [', ']', ' {', '} ','\\\\',' ', '\t', '\r' y '\n'.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una gramática que reconoce la frase "es de un país que ha ganado la Copa del mundo" seguido del nombre de un país que ha ganado la Copa del mundo. En el ejemplo se crea una regla pública denominada `WorldCupWinner`. En el ejemplo, a continuación, crea dos <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objetos, `ruleEurope` y `ruleSAmerica`, pasando un <xref:System.String> para el identificador de regla y un <xref:System.Speech.Recognition.SrgsGrammar.SrgsElement> matriz que contiene un <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objeto. Posteriormente, el ejemplo agrega las referencias de regla a `ruleEurope` y `ruleSAmerica` de la regla `WorldCupWinner`.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  // Create a grammar from an SRGSDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument srgsGrammar = new SrgsDocument ();  
  SrgsRule winnerRule = new SrgsRule ("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add (new SrgsItem ("A nation that has won the world cup is"));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the grammar and make winnerRule  
  // the root rule of the grammar.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  srgsGrammar.Root = winnerRule;  
}  
```  
  
 La gramática creada tiene la forma siguiente.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> es <see langword="null" />.  
  
 <paramref name="elements" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> está vacía.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> no es un identificador de regla apropiado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.SrgsGrammar.SrgsElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Speech::Recognition::SrgsGrammar::SrgsElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.SrgsGrammar.SrgsElement -&gt; unit" Usage="srgsRule.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      </Parameters>
      <Docs>
        <param name="element">Un objeto que hereda de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> y especifica qué se puede reconocer.</param>
        <summary>Agrega <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> a un objeto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adiciones típicas para un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto incluir <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, y <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> objetos que especifican lo que pueden indicar los altavoces. Un elemento de regla válida debe contener al menos un fragmento de texto reconocible o una referencia de regla. Consulte [crear gramáticas utilizando SrgsGrammar](http://msdn.microsoft.com/library/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) para obtener más información.  
  
 Un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> también puede contener el objeto <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> y <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objetos que agregan semánticas claves y valores semánticos a la regla. El motor de reconocimiento de voz devolverá la información semántica, así como la frase reconocida, cuando reconoce la frase. Consulte [marcado semántico de interpretación](http://msdn.microsoft.com/library/2e115391-73b3-4666-8fd1-540c529de3b0) para obtener más información.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una gramática que reconoce la frase "es de un país que ha ganado la Copa del mundo" seguido del nombre de un país que ha ganado la Copa del mundo. Después de crear el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto `winnerRule` y dándole el identificador de cadena `WorldCupWinner`, el ejemplo se usa el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> método para anexar la cadena "es de un país que ha ganado la Copa del mundo" para la regla. En el ejemplo, a continuación, crea dos reglas adicionales, `ruleEurope` y `ruleSAmerica`. Nuevo con el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> método, el ejemplo agrega un <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> de objeto para el `WorldCupWinner` regla que contiene las referencias de regla a `ruleEurope` y `ruleSAmerica`.  
  
```csharp  
// Create an SrgsDocument, create a new rule  
// and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseClass">
      <MemberSignature Language="C#" Value="public string BaseClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseClass" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseClass : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Actualmente, esta propiedad no es compatible.</summary>
        <value>No se admite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Collection(Of SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ Elements { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de objetos <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> en la instancia <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />.</summary>
        <value>Colección de los elementos de la regla.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los elementos de un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto puede constar de <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>, y <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objetos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador de la regla.</summary>
        <value>Identificador de la regla.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El identificador de una regla es una cadena que contiene el nombre de la regla.  
  
 Un valor que se usa para establecer <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> debe cumplir las reglas siguientes:  
  
-   El valor debe ser un nombre XML válido, tal como se define en [Extensible Markup Language (XML) 1.0 (Fifth Edition)](https://www.w3.org/TR/REC-xml/). Parafraseando a esta definición, un nombre XML válido debe empezar con una letra, un carácter de subrayado ('_') o un signo de dos puntos (': ') y puede ir seguido de cero o más caracteres NameChar (también se define en la especificación de XML).  
  
-   El valor puede ser "NULL" o "VOID" o "Elementos no utilizados".  
  
-   El valor no puede contener cualquier carácter de identificador de regla no válida. Estos caracteres son: '?', ' *', '+', '&#124;', ' (','), ' ^', '$', '/', ';', '.', '=', '\<', ' >', ' [', ']', ' {', '} ','\\\\',' ', '\t', '\r' y '\n'.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Se ha realizado un intento de establecer <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" /> en un valor no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public string OnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnError" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberSignature Language="VB.NET" Value="Public Property OnError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnError : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Actualmente, esta propiedad no es compatible.</summary>
        <value>No se admite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="public string OnInit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnInit" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberSignature Language="VB.NET" Value="Public Property OnInit As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnInit { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnInit : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Actualmente, esta propiedad no es compatible.</summary>
        <value>No se admite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="public string OnParse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnParse" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberSignature Language="VB.NET" Value="Public Property OnParse As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnParse { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnParse : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Actualmente, esta propiedad no es compatible.</summary>
        <value>No se admite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecognition">
      <MemberSignature Language="C#" Value="public string OnRecognition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnRecognition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRecognition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnRecognition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnRecognition : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Actualmente, esta propiedad no es compatible.</summary>
        <value>No se admite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As SrgsRuleScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRuleScope Scope { System::Speech::Recognition::SrgsGrammar::SrgsRuleScope get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRuleScope value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Speech.Recognition.SrgsGrammar.SrgsRuleScope with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si una regla se puede activar para el reconocimiento y cuando se puede hacer referencia a la regla por parte de otras reglas.</summary>
        <value>Un valor que establece el ámbito para la regla.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado para el ámbito es `Private`. Una regla privada sólo puede activarse para el reconocimiento mediante una referencia de regla de la regla raíz de su gramática contenedora o de otra regla que se hace referencia desde la regla raíz. Una regla privada no se puede hacer referencia a una gramática externa, a menos que la regla privada se declara como la regla raíz de su gramática contenedora.  
  
 Si se establece su ámbito en `Public`, un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto puede activarse para el reconocimiento mediante una referencia desde un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> objeto en la gramática contenedora o desde una regla en una gramática externa.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una gramática que reconoce la frase "es de un país que ha ganado la Copa del mundo" seguido del nombre de un país que ha ganado la Copa del mundo. Crea una regla pública denominada `WorldCupWinner` y establece el ámbito de esa regla al público.  
  
```csharp  
// Create an SrgsDocument, create a new rule and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 La gramática creada tiene la forma siguiente.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England< /item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Script : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Actualmente, esta propiedad no es compatible.</summary>
        <value>No se admite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>