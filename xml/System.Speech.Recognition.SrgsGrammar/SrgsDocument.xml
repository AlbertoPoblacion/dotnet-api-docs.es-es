<Type Name="SrgsDocument" FullName="System.Speech.Recognition.SrgsGrammar.SrgsDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="987cbadb67fbf8075dd763670ba50c3d74c09006" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30532429" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsDocument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define un objeto de tiempo de diseño que se usan para compilar gramáticas en tiempo de ejecución fuertemente tipadas que cumplen con la [especificación de gramática de reconocimiento de voz (SRGS) versión 1.0](http://www.w3.org/TR/speech-grammar/).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede construir vacío <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instancia y generar una gramática agregando instancias de clases que representan elementos SRGS, como <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>,<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>, y <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. También se puede construir un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instancia a partir de un archivo de gramática XML compatible con SRGS existente, de una instancia de <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, o de una instancia de <xref:System.Speech.Recognition.GrammarBuilder>.  
  
 Después de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> se crea el objeto, se puede cargar en una <xref:System.Speech.Recognition.Grammar> objeto o compilado <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>, lo que le permite leer un <xref:System.Speech.Recognition.Grammar> objeto.  
  
 Vea [crear gramáticas utilizando SrgsGrammar](http://msdn.microsoft.com/library/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) en el [Guía de programación de la voz del sistema de .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043) para obtener más información y ejemplos.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizando los constructores para la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> (clase), puede crear una instancia de <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> desde una <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, o <xref:System.Xml.XmlReader> de un objeto, de una cadena que contiene la ruta de acceso a una gramática XML con formato, o puede iniciar una instancia en blanco de <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea vacío <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instancia. Para generar una gramática en vacío <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> de la instancia, agregue instancias de clases que representan elementos SRGS, como <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, y <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto y, a continuación, crea una regla pública denominada `winnerRule`. A continuación, se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> que consta de la cadena "es un país que ha ganado la partida la Copa del mundo:" y agrega este elemento para el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> propiedad de la regla. El ejemplo crea dos o más reglas (`ruleEurope` y `ruleSAmerica`), cada una de que es un <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objeto que contiene tres <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objetos. Después de eso, otro <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> se crea el objeto que contiene <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> objetos que hacen referencia a `ruleEurope` y `ruleSAmerica`. El nuevo <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> , a continuación, se agrega el objeto a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> propiedad de `winnerRule`. Después de esto, todas las reglas de tres (`winnerRule`, `ruleEurope`, y `ruleSAmerica`) se agregan a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> propiedad de <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>. Por último, las tres reglas se compilan en una representación binaria de la gramática.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
  
  String fileName = Path.GetTempFileName();  
  using (FileStream stream = new FileStream(fileName, FileMode.Create))   
  {   
  
    // Compile the grammar to a binary format.  
    SrgsGrammarCompiler.Compile(document, stream);   
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">El objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> utilizado para crear la instancia de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> a partir de un objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente genera una gramática un <xref:System.Speech.Recognition.GrammarBuilder> instancia mediante <xref:System.Speech.Recognition.Choices> objetos. A continuación, se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> desde el <xref:System.Speech.Recognition.GrammarBuilder> objeto.  
  
```csharp  
GrammarBuilder builder = null;  
  
// Create new Choices objects and add countries, and create GrammarBuilder objects.  
Choices choicesEurope = new Choices(new string[] { "England", "France", "Germany", "Italy" });  
GrammarBuilder europe = new GrammarBuilder(choicesEurope);  
  
Choices choicesSAmerica = new Choices(new string[] { "Argentina", "Brazil", "Uruguay" });  
GrammarBuilder sAmerica = new GrammarBuilder(choicesSAmerica);  
  
Choices worldCupWinnerChoices = new Choices(new GrammarBuilder[] {choicesEurope, choicesSAmerica});  
  
// Create new GrammarBuilder from a Choices object.  
builder = new GrammarBuilder(worldCupWinnerChoices);  
  
// Create an SrgsDocument object from a GrammarBuilder object.  
SrgsDocument document = new SrgsDocument(builder);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (grammarRootRule As SrgsRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ grammarRootRule);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="grammarRootRule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Parameters>
      <Docs>
        <param name="grammarRootRule">
          <see langword="root rule" /> del objeto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> y especifica que un objeto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> sea la regla raíz de la gramática.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor agrega la regla especificada para la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto y lo establece como el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A> regla para la gramática.  
  
   
  
## Examples  
 En el siguiente ejemplo se crea dos reglas (`chooseCities` y `destCities`) para elegir ciudades de origen y destino de un vuelo. En el ejemplo se inicializa el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instancia mediante el `chooseCities` regla como argumento. En el ejemplo se escribe el contenido de la colección de reglas y el nombre de la regla de raíz en la consola.  
  
```csharp  
// Create a rule that contains a list of destination cities.  
SrgsRule destCities = new SrgsRule("Destination");  
SrgsOneOf toCities = new SrgsOneOf(new string[] { "New York", "Seattle", "Denver" });  
destCities.Add(toCities);  
  
// Create a list of origin cities and supporting phrases.  
SrgsOneOf fromCities = new SrgsOneOf(new SrgsItem[] {   
  new SrgsItem("Dallas"), new SrgsItem("Miami"), new SrgsItem("Chicago") });  
SrgsItem intro = new SrgsItem("I want to fly from");  
SrgsItem to = new SrgsItem("to");  
  
// Create the root rule of the grammar, and assemble the components.  
SrgsRule chooseCities = new SrgsRule("Trip");  
chooseCities.Add(intro);  
chooseCities.Add(fromCities);  
chooseCities.Add(to);  
chooseCities.Add(new SrgsRuleRef(destCities));  
  
// Create the SrgsDocument and specify the root rule to add.  
SrgsDocument bookFlight = new SrgsDocument(chooseCities);  
  
// Add the rule for the destination cities to the document's rule collection.  
bookFlight.Rules.Add(new SrgsRule[] { destCities });  
  
// Display the contents of the Rules collection and the name of the root rule.  
foreach (SrgsRule rule in bookFlight.Rules)  
{  
  Console.WriteLine("Rule " + rule.Id + " is in the rules collection");  
}  
Console.WriteLine("Root Rule " + bookFlight.Root.Id);  
  
// Create a Grammar object and load it to the recognizer.  
Grammar g = new Grammar(bookFlight);  
g.Name = ("City Chooser");  
recognizer.LoadGrammarAsync(g);  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="grammarRootRule" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ubicación del archivo XML del elemento SRGS.</param>
        <summary>Inicializa una nueva instancia de la clase de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> que especifica la ubicación del documento XML que se utiliza para completar la instancia de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un nuevo <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> desde el archivo denominado "srgsDocumentFile.xml".  
  
```csharp  
string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
SrgsDocument document = null;  
  
if (File.Exists(srgsDocumentFile))  
   document = new SrgsDocument(srgsDocumentFile);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> es una cadena vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Xml.XmlReader srgsGrammar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader srgsGrammar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (srgsGrammar As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::Xml::XmlReader ^ srgsGrammar);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="srgsGrammar" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="srgsGrammar">El objeto <see cref="T:System.Xml.XmlReader" /> creado con la instancia XML de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> de una instancia de <see cref="T:System.Xml.XmlReader" /> que hace referencia a un archivo de gramática de formato XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea una nueva instancia de <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> desde una instancia de <xref:System.Xml.XmlReader> que hace referencia al archivo "srgsDocumentFile.xml".  
  
```csharp  
string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
SrgsDocument document = null;  
  
if (File.Exists(srgsDocumentFile))  
{  
  XmlReader reader = XmlReader.Create(srgsDocumentFile);  
  document = new SrgsDocument(reader);  
  reader.Close();  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsGrammar" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyReferences">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; AssemblyReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; AssemblyReferences" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyReferences As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ AssemblyReferences { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información de referencia de ensamblado de la instancia <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>La propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" /> devuelve una colección de cadenas que contiene una lista de las referencias de ensamblado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBehind">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; CodeBehind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; CodeBehind" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBehind As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ CodeBehind { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información de código subyacente para la instancia de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>La propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" /> devuelve una colección de cadenas que contiene una lista de documentos de código subyacente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la información de referencia cultural de la instancia <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene la información de la referencia cultural actual para <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft Windows y la API de System.Speech Aceptar todos los códigos de país de idioma válidos. Para realizar el reconocimiento de voz con el idioma especificado en el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture%2A> propiedad, un motor de reconocimiento de voz que admite que se debe instalar el código de país de lenguaje. Los motores de reconocimiento de voz que se incluye con Microsoft Windows 7 trabajar con los siguientes códigos de país de lenguaje.  
  
-   en-GB. Inglés (Reino Unido)  
  
-   en-US. Inglés (Estados Unidos)  
  
-   de-DE. Alemán (Alemania)  
  
-   ES-es. Español (España)  
  
-   fr-FR. Francés (Francia)  
  
-   ja-JP. Japonés (Japón)  
  
-   zh-CN. Chino (China)  
  
-   zh-TW. Chino (Taiwán)  
  
 Códigos de idioma de dos letras como "es-es", "fr" o "es" también se permiten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor que se asigna a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El valor que se asigna a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" /> es <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Debug">
      <MemberSignature Language="C#" Value="public bool Debug { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Debug" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" />
      <MemberSignature Language="VB.NET" Value="Public Property Debug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Debug { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si los números de línea se deben agregar a los scripts insertados.</summary>
        <value>La propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" /> devuelve <see langword="true" /> si los números de línea se deben agregar para fines de depuración; si no la propiedad devuelve <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ImportNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ImportNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportNamespaces As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ImportNamespaces { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el espacio de nombres relacionados de la instancia <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> actual.</summary>
        <value>La propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" /> devuelve una colección de cadenas que contiene una lista de los espacios de nombres relacionados en la instancia de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el lenguaje de programación usado para el código insertado en la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>La propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" /> devuelve el lenguaje de programación al que <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> está actualmente establecido.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As SrgsGrammarMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsGrammarMode Mode { System::Speech::Recognition::SrgsGrammar::SrgsGrammarMode get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsGrammarMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el modo de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>El modo de reconocimiento de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode%2A> propiedad devuelve un miembro de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode> que determina el tipo de entrada que el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> espera. Los dos valores posibles son `Voice` para la entrada de voz, y `Dtmf` para la entrada de tonos de frecuencia múltiple de tono dual (DTMF) que están comúnmente asociadas con un teléfono.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el espacio de nombres de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>La propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" /> devuelve el espacio de nombres para la instancia <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticAlphabet">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />
      <MemberSignature Language="VB.NET" Value="Public Property PhoneticAlphabet As SrgsPhoneticAlphabet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsPhoneticAlphabet PhoneticAlphabet { System::Speech::Recognition::SrgsGrammar::SrgsPhoneticAlphabet get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsPhoneticAlphabet value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el alfabeto fonético de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>Devuelve el alfabeto fonético que se debe usar para especificar pronunciaciones personalizadas en el objeto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fonético alfabetos se componen de teléfonos, que constan de letras, números o caracteres, a veces en combinación. Cada teléfono describe un sonido único de la oración. Esto difiere del alfabeto latino, para que cualquier letra puede representar varios sonidos orales. Tenga en cuenta las pronunciaciones diferentes de la letra "c" en las palabras "golosinas" y "cese" o las pronunciaciones diferentes de la combinación de letras "th" en palabras "lo" y "los".  
  
 En System.Speech, puede utilizar cualquiera de los tres alfabetos fonético para especificar las pronunciaciones personalizadas: alfabeto de teléfono internacional (IPA), establecer teléfono Universal (UPS) o el SAPI phone conjunto. El alfabeto fonético especificado determina qué conjunto de teléfono se utilizará para definir las pronunciaciones en línea para <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> objetos. Los teléfonos especificados en <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> debe coincidir con el alfabeto fonético especificado en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>.  
  
 Vea [léxicos y alfabetos fonético](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) para obtener más información.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRule Root { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SrgsGrammar.SrgsRule Root" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root" />
      <MemberSignature Language="VB.NET" Value="Public Property Root As SrgsRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRule ^ Root { System::Speech::Recognition::SrgsGrammar::SrgsRule ^ get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la regla raíz de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>Devuelve la regla designada como regla raíz de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto ya debe estar en el documento <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> antes de que se puede establecer en el **regla raíz**.  
  
 También puede establecer la regla de raíz para un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto mediante el uso de un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto como argumento para el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> constructor.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una regla denominada `winnerRule`y, a continuación, se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto denominado `document`. El ejemplo, a continuación, se llama el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> método para agregar la regla para el documento. Por último, en el ejemplo se establece el documento <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A> propiedad `winnerRule`, con lo que se lo que el `root rule` para la gramática definida por el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto.  
  
```csharp  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
SrgsDocument document = new SrgsDocument();  
  
document.Rules.Add(winnerRule);  
document.Root = winnerRule;   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Docs>
    </Member>
    <Member MemberName="Rules">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rules As SrgsRulesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRulesCollection ^ Rules { System::Speech::Recognition::SrgsGrammar::SrgsRulesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de reglas definidas actualmente para la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>Devuelve las reglas definidas para el objeto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objetos a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> mediante el uso de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> método en el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> propiedad. Si inicializa un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto y especifique un <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objeto como argumento, el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> se agrega automáticamente a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> para el <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una gramática que reconoce la frase "son de un país que ha ganado la partida la Copa del mundo" seguido del nombre de un país que ha ganado la partida la Copa del mundo. El ejemplo se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto y, a continuación, crea una regla pública denominada `winnerRule`. Después de agregar una cadena a la regla `winnerRule`, el ejemplo crea dos o más reglas (`ruleEurope` y `ruleSAmerica`), cada una contiene una lista de países. Mediante el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> método, el ejemplo agrega tres todas las reglas (`winnerRule`, `ruleEurope`, y `ruleSAmerica`) a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> propiedad de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el lenguaje de scripting de .NET Framework para la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>La propiedad <see langword="Script" /> devuelve el lenguaje de scripting actual de .NET para la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Esta propiedad está en desuso. Ya no se recomienda su uso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se intentó establecer la propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> en null.</exception>
        <exception cref="T:System.ArgumentException">Se intentó establecer la propiedad <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> en una cadena vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSrgs">
      <MemberSignature Language="C#" Value="public void WriteSrgs (System.Xml.XmlWriter srgsGrammar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSrgs(class System.Xml.XmlWriter srgsGrammar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSrgs (srgsGrammar As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSrgs(System::Xml::XmlWriter ^ srgsGrammar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srgsGrammar" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="srgsGrammar">El objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir la instancia <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</param>
        <summary>Escribe el contenido del objeto <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> en un archivo de gramática de formato XML que se ajusta a la [especificación de gramática de reconocimiento de voz (SRGS) versión 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto y, a continuación, crea una regla pública denominada `winnerRule`. A continuación, se crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> que consta de la cadena "es un país que ha ganado la partida la Copa del mundo:" y agrega este elemento para el <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> propiedad de la regla. El ejemplo crea dos o más reglas (`ruleEurope` y `ruleSAmerica`), cada una de que es un <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objeto que contiene tres <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objetos. Después de eso, otro <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> se crea el objeto que contiene <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> objetos que hacen referencia a `ruleEurope` y `ruleSAmerica`. El nuevo <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> , a continuación, se agrega el objeto a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> propiedad de `winnerRule`. Después de esto, todas las reglas de tres (`winnerRule`, `ruleEurope`, y `ruleSAmerica`) se agregan a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> propiedad de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>. Por último, en el ejemplo se crea un archivo XML vacío y una instancia de <xref:System.Xml.XmlWriter>.  El <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs%2A> método usa la <xref:System.Xml.XmlWriter> instancia para escribir el contenido de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> en el archivo XML.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
  
  // Create a string object with the path to the file to use.  
  string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
  
  // Create an XmlWriter object and pass the file path.  
  XmlWriter writer = XmlWriter.Create(srgsDocumentFile);  
  
  // Write the contents of the XmlWriter object to an SRGS-compatible XML file.  
  document.WriteSrgs(writer);  
  writer.Close();  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsGrammar" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlBase">
      <MemberSignature Language="C#" Value="public Uri XmlBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri XmlBase" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlBase As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ XmlBase { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el URI base de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</summary>
        <value>El identificador URI base actual de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase%2A> propiedad obtiene un valor que se utiliza para resolver los URI relativos en un <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> objeto. Suponga que el valor de <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase%2A> es "http://www.contoso.com/" y la <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> contiene una referencia de las reglas relativas a otro documento, por ejemplo `SrgsRuleRef("ExternalGrammar.grxml")`. Esto crea la siguiente ruta de acceso absoluta al documento externo: `http://www.contoso.com/ExternalGrammar.grxml`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>