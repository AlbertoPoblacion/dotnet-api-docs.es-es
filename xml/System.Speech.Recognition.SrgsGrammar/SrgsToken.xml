<Type Name="SrgsToken" FullName="System.Speech.Recognition.SrgsGrammar.SrgsToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ad49ad9c8fd4e131b70b3482b9090550e84bae2" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53220737" /></Metadata><TypeSignature Language="C#" Value="public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsToken extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsToken&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsToken : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsToken = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una palabra o frase corta que se puede reconocer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con los miembros de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> (clase), puede especificar tres formas de una palabra: el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> formulario, el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> formularios y personalizada <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> para word.  
  
 Si varias palabras se almacenan en una sola <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> de objetos, cada uno de ellos se trata como un token distinto internamente y, en el resultado.  
  
 Esta clase representa el `token` elemento definido por el World Wide Web Consortium (W3C) [especificación de gramática de reconocimiento de voz (SRGS) versión 1.0.](https://go.microsoft.com/fwlink/?LinkId=201761). Para obtener información sobre el SRGS `token` elemento y detalles sobre su compatibilidad por System.Speech, consulte [token elemento](https://msdn.microsoft.com/library/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsToken(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsToken : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsToken" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsToken text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">El texto de la nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> y especifica el texto que se va a reconocer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> cuyo <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> propiedad está establecida inicialmente en el valor de la `text` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="text" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="text" /> está vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public string Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Display" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Display { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Display : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formato de la presentación del texto que se hablará.</summary>
        <value>Una representación del token como debe mostrarse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque normalmente representan el mismo valor, el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> formulario puede ser diferente de los <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> forman una palabra o frase en un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Por ejemplo, el formulario de presentación puede ser un acrónimo, como "EE.UU.", mientras que el texto que se proporcionarán y a la que el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> se aplica, es "Estados Unidos".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Se intentó asignar una cadena vacía a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pronunciation : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena que define la pronunciación para el token.</summary>
        <value>Devuelve una cadena que contiene teléfonos del alfabeto fonético especificado en <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teléfonos son letras o símbolos que describen los sonidos de voz. System.Speech admite tres alfabetos fonéticos para especificar pronunciaciones personalizadas: el conjunto teléfono Universal (UPS), el conjunto de teléfono de la API de voz (SAPI) y el alfabeto fonético internacional (IPA). Los teléfonos especificados en <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> debe coincidir con el alfabeto fonético especificado en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>. Consulte [léxicos y alfabetos fonéticos](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) para obtener más información.  
  
 Los teléfonos especificados en <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> indicar cómo el contenido de <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> debe ser pronunciada para reconocimiento correcto.  El motor de reconocimiento de voz usa la pronunciación especificada en <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> para que coincida con la entrada de voz y devuelve la cadena contenida por <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> en el resultado de reconocimiento.  
  
 Si los teléfonos no están delimitados por espacios o la cadena especificada contiene un teléfono no reconocido, el motor de reconocimiento no reconoce la pronunciación especificada como una pronunciación válida de la palabra contenida por <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
 Especificado en las pronunciaciones <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> tienen prioridad sobre las pronunciaciones especificadas en léxicos asociados con una gramática o un motor de reconocimiento. Además, la pronunciación de los <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> propiedad solo se aplica a la aparición única de la palabra o frase contenida por <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
   
  
## Examples  
 La gramática en el ejemplo siguiente contiene palabras jergas y también tiene una palabra poco común: "whatchamacallit". Agregar un personalizado, pronunciación en línea mediante la <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> propiedad de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> clase puede mejorar la precisión del reconocimiento de la palabra "whatchamacallit", así como para la frase completa que lo contiene. El ejemplo utiliza teléfonos desde el Microsoft Universal teléfono establecido (UPS) para definir las pronunciaciones personalizadas.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an instance of the in-process recognizer.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  
        SrgsOneOf gimme = new SrgsOneOf(  
          new string[] { "give me", "gimme", "hand me", "ha'me" });  
        SrgsOneOf the = new SrgsOneOf(new string[] { "the", "duh" });  
  
        // Build the one-of element that contains the pronunciation.  
        SrgsItem thing = new SrgsItem("thingamajig");  
        SrgsItem whatcha = new SrgsItem();  
        SrgsToken callit = new SrgsToken("whatchamacallit");  
        callit.Pronunciation = "W AE T CH AE M AE K AA L IH T";  
        whatcha.Add(callit);  
        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  
  
        // Create the rule from the SrgsOneOf objects.  
        SrgsRule slangRule = new SrgsRule("slang", gimme, the, what);  
  
        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  
        SrgsDocument tokenPron = new SrgsDocument(slangRule);  
        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar g_Slang = new Grammar(tokenPron);  
        g_Slang.Name = ("Slang Pronunciation");  
        recognizer.LoadGrammarAsync(g_Slang);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Recognized phrase: " + e.Result.Text);  
      Console.WriteLine("Confidence: " + e.Result.Confidence);  
      Console.WriteLine("  Word summary: ");  
      foreach (RecognizedWordUnit word in e.Result.Words)  
      {  
        Console.WriteLine(  
          "    Lexical form ({1})" +  
          " Pronunciation ({0})" +  
          " Confidence ({2})",  
          word.Pronunciation, word.LexicalForm, word.Confidence);  
      }  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Se intentó asignar una cadena vacía a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)">Léxicos y alfabetos fonéticos</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formulario escrito de word que debe ser hablado.</summary>
        <value>El texto contenido en la instancia de clase de <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque normalmente representan el mismo valor, el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> formulario puede ser diferente de los <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> forman una palabra o frase en un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Por ejemplo, el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> formulario puede ser un acrónimo, como "EE.UU.", mientras que el texto que se proporcionarán y a la que el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> se aplica, es "Estados Unidos".  
  
 El valor predeterminado para el <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> propiedad es una cadena vacía: "".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Se intentó asignar una cadena vacía a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
        <exception cref="T:System.ArgumentException">Se intentó asignar una cadena que contiene una comilla (") a <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>