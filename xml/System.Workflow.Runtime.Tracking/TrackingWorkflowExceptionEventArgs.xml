<Type Name="TrackingWorkflowExceptionEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07e533d202a4b266d49202c8122334812de6db87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene datos asociados a una excepción que se produce durante la ejecución de una instancia de flujo de trabajo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Cuando se produce una excepción durante la ejecución de una instancia de flujo de trabajo y el <xref:System.Workflow.Runtime.Tracking.TrackingProfile> asociado a la instancia de flujo de trabajo incluye un <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> configurado para <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType>, la infraestructura de seguimiento del flujo de trabajo establece <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> en <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> en el <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> que envía al servicio de seguimiento.  
  
> [!NOTE]
>  El servicio de seguimiento en tiempo de ejecución utiliza <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> únicamente para pasar información en <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra un método, denominado `WriteExceptionEventArgs`, que captura <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. El código comprueba si la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> es `null` (`Nothing` en Visual Basic).  
  
 Si no lo es, el código escribe el mensaje asociado a la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> en la consola. Además, el código convierte el valor de propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> en una cadena y la escribe en la consola.  
  
 Este ejemplo de código pertenece al SDK de seguimiento de EventArgs del archivo Program.cs. Para obtener más información, consulte [ejemplo de seguimiento de EventArgs](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContextGuid">
      <MemberSignature Language="C#" Value="public Guid ContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContextGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el id. contextual de la actividad asociada.</summary>
        <value>
          <see cref="T:System.Guid" /> que contiene el id. contextual de <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentActivityPath">
      <MemberSignature Language="C#" Value="public string CurrentActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentActivityPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> de la actividad que inicia actualmente la excepción.</summary>
        <value>
          <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> de la actividad que inicia actualmente la excepción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las excepciones se transmiten a la cadena de actividades del controlador de excepciones. Un controlador de excepciones puede decidir iniciar una excepción de nuevo. Cuando un controlador de excepciones inicia la excepción de nuevo, se genera un nuevo evento de seguimiento que contiene una nueva clase <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> en la infraestructura de seguimiento en tiempo de ejecución. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A> hace referencia a la actividad que está produciendo actualmente la excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la excepción <see cref="T:System.Exception" /> que la instancia de flujo de trabajo está iniciando.</summary>
        <value>Excepción que la instancia de flujo de trabajo está iniciando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente muestra un método, denominado `WriteExceptionEventArgs`, que captura <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. El código comprueba si la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> es `null` (`Nothing` en Visual Basic). Si no lo es, el código escribe el mensaje asociado a la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> en la consola. Si Exception es `null` (`Nothing`), el código convierte el valor de la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> en una cadena y la escribe en la consola.  
  
 Este ejemplo de código pertenece al SDK de seguimiento de EventArgs del archivo Program.cs. Para obtener más información, consulte [ejemplo de seguimiento de EventArgs](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalActivityPath">
      <MemberSignature Language="C#" Value="public string OriginalActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalActivityPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> de la actividad que inició originalmente la excepción.</summary>
        <value>
          <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> de la actividad que inició originalmente la excepción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las excepciones se transmiten a la cadena de actividades del controlador de excepciones. Un controlador de excepciones puede decidir iniciar una excepción de nuevo. Cuando un controlador de excepciones inicia una excepción de nuevo, se genera un nuevo evento de seguimiento de excepción que contiene una nueva clase <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> en la infraestructura de seguimiento en tiempo de ejecución. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> hace referencia a la actividad que inició originalmente la excepción.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra un método, denominado `WriteExceptionEventArgs`, que captura <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. El código comprueba si la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> es `null` (`Nothing` en Visual Basic). Si no lo es, el código escribe el mensaje asociado a la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> en la consola. Si <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> es `null` (`Nothing`), el código convierte el valor de la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> en una cadena y la escribe en la consola.  
  
 Este ejemplo de código pertenece al SDK de seguimiento de EventArgs del archivo Program.cs. Para obtener más información, consulte [ejemplo de seguimiento de EventArgs](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContextGuid">
      <MemberSignature Language="C#" Value="public Guid ParentContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ParentContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ParentContextGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el id. contextual de la actividad primaria.</summary>
        <value>
          <see cref="T:System.Guid" /> que contiene el id. contextual de la <see cref="T:System.Workflow.ComponentModel.Activity" /> primaria.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>