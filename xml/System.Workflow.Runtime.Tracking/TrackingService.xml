<Type Name="TrackingService" FullName="System.Workflow.Runtime.Tracking.TrackingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="feed2535eb90a6edb63dd27936cbd93e91e38746" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32090665" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona la interfaz básica entre un servicio de seguimiento y la infraestructura de seguimiento en tiempo de ejecución.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Un servicio de seguimiento se encarga de proporcionar canales de seguimiento y perfiles de seguimiento al motor en tiempo de ejecución del flujo de trabajo. El motor de tiempo de ejecución del flujo de trabajo solicita un <xref:System.Workflow.Runtime.Tracking.TrackingChannel> de un servicio de seguimiento para cada instancia de flujo de trabajo para la que tiene un <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. El motor en tiempo de ejecución del flujo de trabajo usa este <xref:System.Workflow.Runtime.Tracking.TrackingChannel> para enviar registros de seguimiento asociados a esa instancia de flujo de trabajo. <xref:System.Workflow.Runtime.Tracking.TrackingProfile> contiene puntos de seguimiento que especifican un conjunto de eventos de seguimiento para los que la infraestructura de seguimiento en tiempo de ejecución debe enviar registros de seguimiento. <xref:System.Workflow.Runtime.Tracking.TrackingProfile> también puede especificar datos que se van a extraer de la instancia de flujo de trabajo cuando se produce uno de estos eventos de seguimiento.  
  
 La infraestructura de seguimiento en tiempo de ejecución utiliza <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para filtrar eventos de seguimiento emitidos por una instancia de flujo de trabajo. Cuando se emite un evento de seguimiento que coincide con un punto de seguimiento en el <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, la infraestructura de seguimiento en tiempo de ejecución extrae los datos especificados en <xref:System.Workflow.Runtime.Tracking.TrackingProfile> de la instancia de flujo de trabajo y encapsula estos datos e información acerca del evento de seguimiento en un registro de seguimiento. A continuación, este registro de seguimiento se envía a través del <xref:System.Workflow.Runtime.Tracking.TrackingChannel> asociado a la instancia de flujo de trabajo. Un registro del seguimiento puede ser de uno de los tipos siguientes:  
  
 <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>  
  
 La aplicación host puede utilizar el registro de seguimiento de la forma que elija. Por ejemplo, la aplicación host puede almacenar la información de seguimiento en una base de datos y usarla para implementar una interfaz de usuario sofisticada o puede utilizar la información para informar a un administrador de una condición que requiere realizar alguna acción. Puede registrar un servicio de seguimiento con el motor en tiempo de ejecución del flujo de trabajo llamando a <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=nameWithType> o incluyendo la entrada adecuada en el archivo de configuración de la aplicación.  
  
 Todos los servicios de seguimiento deben heredar de la clase abstracta <xref:System.Workflow.Runtime.Tracking.TrackingService>. Esta clase define la interfaz básica entre un servicio de seguimiento y la infraestructura de seguimiento en tiempo de ejecución. El motor en tiempo de ejecución del flujo de trabajo solicita un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para un flujo de trabajo o instancia de flujo de trabajo concreta <xref:System.Type> llamando a uno de los métodos <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> sobrecargados o al método <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>. El motor en tiempo de ejecución del flujo de trabajo llama a <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> para solicitar <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.  
  
 El motor en tiempo de ejecución del flujo de seguimiento llama a los métodos <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> y <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> cada vez que una instancia de flujo de trabajo se crea o se carga desde el almacén de persistencia. La sobrecarga asociada a estas llamadas puede ser costosa para el servicio de seguimiento (muchas llamadas a la base de datos, por ejemplo). Puede implementar la interfaz <xref:System.Workflow.Runtime.Tracking.IProfileNotification> en su servicio de seguimiento para sortear este mecanismo basado en llamadas y usar eventos para notificar al motor en tiempo de ejecución del flujo de trabajo de cambios en <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Para los servicios de seguimiento que implementan la interfaz <xref:System.Workflow.Runtime.Tracking.IProfileNotification>, el motor en tiempo de ejecución del flujo de trabajo se suscribe a los eventos <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> y <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved>. El servicio de seguimiento puede generar el evento adecuado cuando se produce un cambio en uno de sus perfiles de seguimiento. La clase <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> implementa esta interfaz.  
  
 El motor en tiempo de ejecución del flujo de trabajo llama al método <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> para probar si se actualizó o se quitó un <xref:System.Workflow.Runtime.Tracking.TrackingProfile> como resultado de una llamada explícita por parte de un host o un servicio a <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> en una instancia de flujo de trabajo. Este proceso permite a un host o servicio cambiar dinámicamente el perfil de seguimiento que se utiliza para una instancia de flujo de trabajo concreta.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>-   Al heredar de <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />, es necesario invalidar los miembros siguientes: <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />.  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" /></para>
    </block>
    <altmember cref="T:System.Workflow.Runtime.Tracking.IProfileNotification" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear una nueva instancia de un objeto `TerminationTrackingService`, de un tipo que deriva de `TrackingService`. Este ejemplo pertenece al SDK del servicio de seguimiento de finalización. Para obtener más información, consulte [ejemplo de servicio de seguimiento de finalización](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#111](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#111)]
 [!code-vb[WF_Samples#111](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProfile">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se debe invalidar en la clase derivada y, cuando se implementa, obtiene el perfil de seguimiento para una instancia de flujo de trabajo o un tipo de flujo de trabajo especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servicio de seguimiento se encarga de administrar los perfiles de seguimiento disponibles para tipos de flujo de trabajo concretos e instancias de flujo de trabajo específicas. Puede implementar esta administración de la manera que desee. Por ejemplo, puede devolver el mismo <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para cada <xref:System.Type> del flujo de trabajo e instancia de flujo de trabajo; o puede administrar un almacén sofisticado de perfiles de seguimiento a los que hace referencia la instancia de flujo de trabajo, el <xref:System.Type> del flujo de trabajo y <xref:System.Version>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowInstanceId As Guid) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Guid workflowInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> de la instancia de flujo de trabajo.</param>
        <summary>Se debe invalidar en la clase derivada y, cuando se implementa, devuelve el perfil de seguimiento para la instancia de flujo de trabajo especificada.</summary>
        <returns>El perfil de seguimiento para la instancia especificada de flujo de trabajo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servicio de seguimiento se encarga de administrar los perfiles de seguimiento disponibles para tipos de flujo de trabajo concretos e instancias de flujo de trabajo específicas. Puede implementar esta administración de la manera que desee. Por ejemplo, puede devolver el mismo <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para cada <xref:System.Type> del flujo de trabajo e instancia de flujo de trabajo; o puede administrar un almacén sofisticado de perfiles de seguimiento a los que hace referencia la instancia de flujo de trabajo, el <xref:System.Type> del flujo de trabajo y <xref:System.Version>.  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra una implementación del método `GetProfile`. En este ejemplo, varias sobrecargas del método `GetProfile` llaman a un único método `GetProfile` privado, que devuelve un perfil de seguimiento predeterminado codificado de forma rígida. Este ejemplo pertenece al ejemplo SDK del servicio de seguimiento de finalización. Para obtener más información, consulte [ejemplo de servicio de seguimiento de finalización](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#115](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#115)]
 [!code-vb[WF_Samples#115](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(class System.Type workflowType, class System.Version profileVersionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowType As Type, profileVersionId As Version) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Type ^ workflowType, Version ^ profileVersionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profileVersionId" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> del flujo de trabajo.</param>
        <param name="profileVersionId">
          <see cref="T:System.Version" /> del perfil de seguimiento.</param>
        <summary>Se debe invalidar en la clase derivada y, cuando se implementa, devuelve el perfil de seguimiento, calificado por versión, para el <see cref="T:System.Type" /> del flujo de trabajo especificado.</summary>
        <returns>El perfil de seguimiento para el tipo especificado de flujo de trabajo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servicio de seguimiento se encarga de administrar los perfiles de seguimiento disponibles para tipos de flujo de trabajo concretos e instancias de flujo de trabajo específicas. Puede implementar esta administración de la manera que desee. Por ejemplo, puede devolver el mismo <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para cada <xref:System.Type> del flujo de trabajo e instancia de flujo de trabajo; o puede administrar un almacén sofisticado de perfiles de seguimiento a los que hace referencia la instancia de flujo de trabajo, el <xref:System.Type> del flujo de trabajo y <xref:System.Version>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingChannel">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel(class System.Workflow.Runtime.Tracking.TrackingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetTrackingChannel (parameters As TrackingParameters) As TrackingChannel" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingChannel ^ GetTrackingChannel(System::Workflow::Runtime::Tracking::TrackingParameters ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.Runtime.Tracking.TrackingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <see cref="T:System.Workflow.Runtime.Tracking.TrackingParameters" /> asociado a la instancia de flujo de trabajo.</param>
        <summary>Se debe invalidar en la clase derivada y, cuando se implementa, devuelve el canal que la infraestructura de seguimiento en tiempo de ejecución utiliza para enviar registros de seguimiento al servicio de seguimiento.</summary>
        <returns>
          <see cref="T:System.Workflow.Runtime.Tracking.TrackingChannel" /> que se utiliza para enviar registros de seguimiento al servicio de seguimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La infraestructura de seguimiento en tiempo de ejecución utiliza un <xref:System.Workflow.Runtime.Tracking.TrackingChannel> por servicio de seguimiento para cada instancia de flujo de trabajo. El motor en tiempo de ejecución del flujo de trabajo llama a <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> en cada servicio de seguimiento para obtener el <xref:System.Workflow.Runtime.Tracking.TrackingChannel> para dicho servicio. Puede utilizar la información pasada <xref:System.Workflow.Runtime.Tracking.TrackingParameters> para asociar datos de seguimiento enviados en <xref:System.Workflow.Runtime.Tracking.TrackingChannel> para su servicio de seguimiento con una instancia de flujo de trabajo raíz determinada.  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra una implementación del método `GetTrackingChannel`. Este ejemplo pertenece al ejemplo SDK del servicio de seguimiento de finalización. Para obtener más información, consulte [ejemplo de servicio de seguimiento de finalización](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#113](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#113)]
 [!code-vb[WF_Samples#113](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryGetProfile(class System.Type workflowType, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryGetProfile (workflowType As Type, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryGetProfile(Type ^ workflowType, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> del flujo de trabajo para el que se debe obtener el perfil de seguimiento.</param>
        <param name="profile">Cuando este método devuelve datos, contiene el <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> que se debe cargar. Este parámetro se pasa sin inicializar.</param>
        <summary>Se debe invalidar en la clase derivada y, cuando se implementa, recupera el perfil de seguimiento para el tipo de flujo de trabajo especificado, si hay uno disponible.</summary>
        <returns>
          Es <see langword="true" /> si <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> para el <see cref="T:System.Type" /> del flujo de trabajo especificado está disponible; de lo contrario, es <see langword="false" />. Si es <see langword="true" />, se devolverá el <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> en <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servicio de seguimiento se encarga de administrar los perfiles de seguimiento disponibles para tipos de flujo de trabajo concretos e instancias de flujo de trabajo específicas. Puede implementar esta administración de la manera que desee. Por ejemplo, puede devolver el mismo <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para cada <xref:System.Type> del flujo de trabajo e instancia de flujo de trabajo; o puede administrar un almacén sofisticado de perfiles de seguimiento a los que hace referencia la instancia de flujo de trabajo, el <xref:System.Type> del flujo de trabajo y <xref:System.Version>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra una implementación del método `TryGetProfile`, que llama a un método `GetProfile` privado. Este ejemplo pertenece al ejemplo SDK del servicio de seguimiento de finalización. Para obtener más información, consulte [ejemplo de servicio de seguimiento de finalización](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[Wf_samples#209](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#209)]
 [!code-vb[Wf_samples#209](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReloadProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryReloadProfile(class System.Type workflowType, valuetype System.Guid workflowInstanceId, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryReloadProfile (workflowType As Type, workflowInstanceId As Guid, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryReloadProfile(Type ^ workflowType, Guid workflowInstanceId, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> de la instancia de flujo de trabajo.</param>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> de la instancia de flujo de trabajo.</param>
        <param name="profile">Cuando este método devuelve datos, contiene el <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> que se debe cargar. Este parámetro se pasa sin inicializar.</param>
        <summary>Se debe invalidar en la clase derivada y, cuando se implementa, recupera un nuevo perfil de seguimiento para la instancia de flujo de trabajo especificada si el perfil de seguimiento cambió desde que se cargó por última vez.</summary>
        <returns>
          Es <see langword="true" /> si se debe cargar un nuevo <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />; de lo contrario, es <see langword="false" />. Si es <see langword="true" />, se devolverá el <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> en <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La infraestructura de seguimiento en tiempo de ejecución llama a <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> para determinar si se debe cargar un nuevo <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para la instancia de flujo de trabajo especificada. Si se requiere un nuevo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, se devuelve en `profile`. Si desea que la infraestructura de seguimiento en tiempo de ejecución deje de realizar el seguimiento de una instancia de flujo de trabajo, su servicio de seguimiento debe devolver `true` y establecer `profile` igual a una referencia nula (`Nothing` en Visual Basic). El servicio de seguimiento puede utilizar `workflowType` o `workflowInstanceId` tal como desee para determinar si se debe recargar un perfil de seguimiento. Por ejemplo, <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> solo utiliza `workflowInstanceId` para decidir si se debe recargar el perfil de seguimiento. La infraestructura de seguimiento en tiempo de ejecución llama a <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> según su propia semántica de seguimiento o en respuesta a una llamada del host o un servicio a <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=nameWithType> en una instancia de flujo de trabajo.  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra una implementación básica del método `TryReloadProfile`. Este ejemplo pertenece al ejemplo SDK del servicio de seguimiento de finalización. Para obtener más información, consulte [ejemplo de servicio de seguimiento de finalización](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#116](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#116)]
 [!code-vb[WF_Samples#116](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>