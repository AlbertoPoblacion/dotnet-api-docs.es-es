<Type Name="TrackingRecord" FullName="System.Workflow.Runtime.Tracking.TrackingRecord">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42ff01ef7298bb17784b1018a6a0fcee5536d10a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30686249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TrackingRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingRecord" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingRecord abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Clase base <see langword="abstract" /> de la que se derivan <see cref="T:System.Workflow.Runtime.Tracking.ActivityTrackingRecord" />, <see cref="T:System.Workflow.Runtime.Tracking.UserTrackingRecord" /> y <see cref="T:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Durante su ejecución, una instancia de flujo de trabajo emite tres tipos de eventos de seguimiento a la infraestructura de seguimiento en tiempo de ejecución: eventos de estado de actividad, eventos de usuario y eventos de estado de flujo de trabajo. La infraestructura de seguimiento en tiempo de ejecución intenta encontrar coincidencias entre estos eventos y los puntos de seguimiento de <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Cuando la infraestructura de seguimiento en tiempo de ejecución encuentra una coincidencia con un punto de seguimiento, envía al servicio de seguimiento un registro de seguimiento que contiene los datos asociados con el punto de seguimiento y con el evento de seguimiento. Hay tres tipos de registro de seguimiento que la infraestructura de seguimiento en tiempo de ejecución puede enviar: <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>, <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord> y <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>. Cada tipo de registro de seguimiento se deriva de la clase <xref:System.Workflow.Runtime.Tracking.TrackingRecord> y corresponde a uno de los tres tipos de punto de seguimiento con el que la infraestructura de seguimiento en tiempo de ejecución puede encontrar coincidencias: <xref:System.Workflow.Runtime.Tracking.ActivityTrackPoint>, <xref:System.Workflow.Runtime.Tracking.UserTrackPoint> o <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingRecord.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingRecord();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <see cref="T:System.Workflow.Runtime.Tracking.TrackingRecord" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public abstract System.Workflow.Runtime.Tracking.TrackingAnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.Tracking.TrackingAnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingRecord.Annotations" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Annotations As TrackingAnnotationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Workflow::Runtime::Tracking::TrackingAnnotationCollection ^ Annotations { System::Workflow::Runtime::Tracking::TrackingAnnotationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingAnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene la colección de anotaciones asociadas al punto de seguimiento.</summary>
        <value>
          <see cref="T:System.Workflow.Runtime.Tracking.TrackingAnnotationCollection" /> que contiene las anotaciones asociadas al punto de seguimiento al que corresponde <see cref="T:System.Workflow.Runtime.Tracking.TrackingRecord" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar anotaciones que se van a asociar a <xref:System.Workflow.Runtime.Tracking.ActivityTrackPoint>, <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> o <xref:System.Workflow.Runtime.Tracking.UserTrackPoint> en <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. La infraestructura de seguimiento en tiempo de ejecución almacena estas anotaciones y, cuando encuentra una coincidencia con el punto de seguimiento, las devuelve en <xref:System.Workflow.Runtime.Tracking.TrackingRecord.Annotations%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArgs">
      <MemberSignature Language="C#" Value="public abstract EventArgs EventArgs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventArgs EventArgs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property EventArgs As EventArgs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property EventArgs ^ EventArgs { EventArgs ^ get(); void set(EventArgs ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventArgs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene o establece los datos de evento, si los hay, que están asociados al evento de seguimiento que hizo que se enviara el registro de seguimiento.</summary>
        <value>
          <see cref="T:System.EventArgs" /> que representa los datos de evento, si los hay, que están asociados al evento de seguimiento que hizo que se enviara el registro de seguimiento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciertos tipos de eventos de seguimiento emitidos por una instancia de flujo de trabajo tienen datos de evento asociados. Si un evento de seguimiento tiene datos de evento asociados, la infraestructura de seguimiento en tiempo de ejecución coloca los datos de evento en la propiedad <xref:System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs%2A> de la clase derivada. Por ejemplo, cuando finaliza una instancia de flujo de trabajo, la infraestructura de seguimiento en tiempo de ejecución envía un <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> con <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A?displayProperty=nameWithType> establecido en <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs> que contiene información acerca del motivo de finalización.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime EventDateTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime EventDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property EventDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime EventDateTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene o establece la hora y fecha del evento de seguimiento asociado al registro de seguimiento.</summary>
        <value>
          <see cref="T:System.DateTime" /> que indica la fecha y hora en que se produjo el evento de seguimiento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTime> se expresa en hora universal coordinada (UTC).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventOrder">
      <MemberSignature Language="C#" Value="public abstract int EventOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventOrder" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property EventOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int EventOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene o establece un valor que indica el orden del evento de seguimiento asociado al registro de seguimiento con relación a los otros eventos de seguimiento emitidos por la instancia de flujo de trabajo.</summary>
        <value>Valor que indica el orden del evento de seguimiento con relación a los otros eventos de seguimiento emitidos por la instancia de flujo de trabajo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder%2A> indica el orden relativo del evento de seguimiento en la instancia de flujo de trabajo. <xref:System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder%2A> será único dentro de una instancia de flujo de trabajo, pero no se garantiza que sea secuencial.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>