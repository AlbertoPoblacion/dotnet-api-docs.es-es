<Type Name="ManagementClass" FullName="System.Management.ManagementClass">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e29c3a3259e207187a33b267a89c64010add55a" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52356036" /></Metadata><TypeSignature Language="C#" Value="public class ManagementClass : System.Management.ManagementObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ManagementClass extends System.Management.ManagementObject" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementClass" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementClass&#xA;Inherits ManagementObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementClass : System::Management::ManagementObject" />
  <TypeSignature Language="F#" Value="type ManagementClass = class&#xA;    inherit ManagementObject" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una clase de administración del Modelo de información común (CIM). Una clase de administración es una clase WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Los miembros de esta clase permiten obtener acceso a los datos WMI mediante una ruta de acceso de clase WMI específica. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" />. Éste es el constructor predeterminado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente es un ejemplo de cómo inicializar un <xref:System.Management.ManagementClass> variable con el <xref:System.Management.ManagementClass> constructor predeterminado. En el ejemplo se enumera los métodos, propiedades y calificadores de la clase creada.  
  
 [!code-csharp[wminet_ManagementClass#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass/cs/ManagementClass.cs#1)]
 [!code-vb[wminet_ManagementClass#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass/vb/ManagementClass.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (System.Management.ManagementPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As ManagementPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::Management::ManagementPath ^ path);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Management.ManagementPath -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Management.ManagementPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Management.ManagementPath" /> que especifica la clase WMI con la que se va a establecer el enlace. El parámetro  debe especificar una ruta de acceso a clases WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener más información sobre las clases CIM disponibles en Windows, vea "Win32 Classes" (Clases Win32) en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" />. La clase representa una clase de administración de Modelo de información común (CIM) de WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `path` parámetro debe especificar una ruta de acceso de la clase WMI.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente es un ejemplo de cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor. En el ejemplo se enumera los métodos, propiedades y calificadores de la clase creada.  
  
 [!code-csharp[wminet_ManagementClass-M#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-M/cs/ManagementClass-M.cs#1)]
 [!code-vb[wminet_ManagementClass-M#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-M/vb/ManagementClass-M.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : string -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ruta de acceso a la clase WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener más información sobre las clases CIM disponibles en Windows, vea "Win32 Classes" (Clases Win32) en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> inicializada en la ruta de acceso dada. La clase representa una clase de administración de Modelo de información común (CIM) de WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor. En el ejemplo se enumera los métodos, propiedades y calificadores de la clase creada.  
  
 [!code-csharp[wminet_ManagementClass-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-S/cs/ManagementClass-S.cs#1)]
 [!code-vb[wminet_ManagementClass-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-S/vb/ManagementClass-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (System.Management.ManagementPath path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementPath path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As ManagementPath, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::Management::ManagementPath ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Management.ManagementPath * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Management.ManagementPath" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="path">Instancia de <see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso a la clase WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener más información sobre las clases CIM disponibles en Windows, vea "Win32 Classes" (Clases Win32) en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> que representa las opciones que se deben utilizar al recuperar esta clase.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> inicializada en la ruta de acceso a la clase WMI dada utilizando las opciones especificadas. La clase representa una clase de administración de Modelo de información común (CIM) de WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente es un ejemplo de cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor. En el ejemplo se enumera los métodos, propiedades y calificadores (incluidos los calificadores modificados) de la clase creada.  
  
 [!code-csharp[wminet_ManagementClass-M_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-M_O/cs/ManagementClass-M_O.cs#1)]
 [!code-vb[wminet_ManagementClass-M_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-M_O/vb/ManagementClass-M_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagementClass (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ManagementClass(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Instancia de la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva clase <see cref="T:System.Management.ManagementClass" />.</param>
        <param name="context">Instancia de la clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva clase <see cref="T:System.Management.ManagementClass" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (string path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::String ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : string * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="path">Ruta de acceso a la clase WMI. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener más información sobre las clases CIM disponibles en Windows, vea "Win32 Classes" (Clases Win32) en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> que representa las opciones que se deben utilizar al recuperar la clase WMI.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> inicializada en la ruta de acceso a la clase WMI dada utilizando las opciones especificadas. La clase representa una clase de administración de Modelo de información común (CIM) de WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor. En el ejemplo se enumera los métodos, propiedades y calificadores (incluidos los calificadores modificados) de la clase creada.  
  
 [!code-csharp[wminet_ManagementClass-S_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-S_O/cs/ManagementClass-S_O.cs#1)]
 [!code-vb[wminet_ManagementClass-S_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-S_O/vb/ManagementClass-S_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (System.Management.ManagementScope scope, System.Management.ManagementPath path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.ManagementPath path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, path As ManagementPath, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::Management::ManagementScope ^ scope, System::Management::ManagementPath ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Management.ManagementScope * System.Management.ManagementPath * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (scope, path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="path" Type="System.Management.ManagementPath" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><see cref="T:System.Management.ManagementScope" /> que especifica el ámbito (servidor y espacio de nombres) donde reside la clase WMI.</param>
        <param name="path"><see cref="T:System.Management.ManagementPath" /> que representa la ruta de acceso a la clase WMI en el ámbito especificado. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener más información sobre las clases CIM disponibles en Windows, vea "Win32 Classes" (Clases Win32) en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> que especifica las opciones que se deben utilizar al recuperar la clase WMI.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> para la clase WMI especificada en el ámbito especificado y con las opciones especificadas. La clase representa una clase de administración de Modelo de información común (CIM) de WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ruta de acceso se puede especificar como una ruta de acceso completa (incluido el servidor y espacio de nombres). Sin embargo, si se especifica un ámbito, invalidará la primera parte de la ruta de acceso completa.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente es un ejemplo de cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor. En el ejemplo se enumera los métodos, propiedades y calificadores (incluidos los calificadores modificados) de la clase creada. Debe cambiar el ámbito (espacio de nombres) en el código del ejemplo para ejecutarse correctamente en el equipo.  
  
 [!code-csharp[wminet_ManagementClass-M_M_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-M_M_O/cs/ManagementClass-M_M_O.cs#1)]
 [!code-vb[wminet_ManagementClass-M_M_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-M_M_O/vb/ManagementClass-M_M_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (string scope, string path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, path As String, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::String ^ scope, System::String ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : string * string * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (scope, path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="scope">Ámbito en que reside la clase WMI.</param>
        <param name="path">Ruta de acceso a la clase WMI en el ámbito especificado. La clase representa una clase de administración CIM de WMI. Las clases CIM representan información de administración, que incluye hardware, software, procesos, etc. Para obtener más información sobre las clases CIM disponibles en Windows, vea "Win32 Classes" (Clases Win32) en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> que especifica las opciones que se deben utilizar al recuperar la clase WMI.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementClass" /> para la clase WMI especificada en el ámbito especificado y con las opciones especificadas. La clase representa una clase de administración de Modelo de información común (CIM) de WMI como **Win32_LogicalDisk**, que puede representar una unidad de disco, y **Win32_Process**, que representa un proceso como Notepad.exe. Para obtener más información, vea "Win32 Classes" (Clases Win32) en la documentación referente a Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ruta de acceso se puede especificar como una ruta de acceso completa (incluido el servidor y espacio de nombres). Sin embargo, si se especifica un ámbito, invalidará la primera parte de la ruta de acceso completa.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor. En el ejemplo se enumera los métodos, propiedades y calificadores (incluidos los calificadores modificados) de la clase creada. Debe cambiar el ámbito (espacio de nombres) en el código del ejemplo para ejecutarse correctamente en el equipo.  
  
 [!code-csharp[wminet_ManagementClass-S_S_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-S_S_O/cs/ManagementClass-S_S_O.cs#1)]
 [!code-vb[wminet_ManagementClass-S_S_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-S_S_O/vb/ManagementClass-S_S_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="managementClass.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una copia del objeto.</summary>
        <returns>Objeto clonado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga en cuenta que no se crea una copia de la clase WMI. se crea solo una representación adicional.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObject CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObject CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance () As ManagementObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObject ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Management.ManagementObject" Usage="managementClass.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase WMI.</summary>
        <returns><see cref="T:System.Management.ManagementObject" /> que representa una nueva instancia de la clase WMI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga en cuenta que la nueva instancia no se confirma hasta que el <xref:System.Management.ManagementObject.Put%2A>se llama al método (). Antes de confirmarla, se deben especificar las propiedades de clave.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, cree una nueva instancia de una clase WMI.  
  
 [!code-csharp[wminet_ManagementClass_CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_CreateInstance/cs/ManagementClass_CreateInstance.cs#1)]
 [!code-vb[wminet_ManagementClass_CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_CreateInstance/vb/ManagementClass_CreateInstance.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Derivation">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection Derivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection Derivation" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementClass.Derivation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Derivation As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ Derivation { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Derivation : System.Collections.Specialized.StringCollection" Usage="System.Management.ManagementClass.Derivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una matriz que contiene todas las clases WMI de la jerarquía de herencia desde esta clase hasta el inicio de la jerarquía.</summary>
        <value>Colección de cadenas que contiene los nombres de todas las clases WMI de la jerarquía de herencia correspondiente a esta clase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es de sólo lectura.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, obtener todas las clases de la jerarquía de herencia desde la clase WMI pasan al constructor, en la parte superior de la jerarquía.  
  
 [!code-csharp[wminet_ManagementClass_Derivation#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Derivation/cs/ManagementClass_Derivation.cs#1)]
 [!code-vb[wminet_ManagementClass_Derivation#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Derivation/vb/ManagementClass_Derivation.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Derive">
      <MemberSignature Language="C#" Value="public System.Management.ManagementClass Derive (string newClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementClass Derive(string newClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.Derive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Derive (newClassName As String) As ManagementClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementClass ^ Derive(System::String ^ newClassName);" />
      <MemberSignature Language="F#" Value="member this.Derive : string -&gt; System.Management.ManagementClass" Usage="managementClass.Derive newClassName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newClassName">Nombre de la nueva clase que se va a derivar.</param>
        <summary>Deriva una nueva clase a partir de esta clase.</summary>
        <returns>Nuevo <see cref="T:System.Management.ManagementClass" /> que representa una nueva clase WMI derivada de la clase original.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga en cuenta que no se ha confirmado la clase recién devuelta hasta el <xref:System.Management.ManagementObject.Put%2A>método () se llama explícitamente.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, cree una instancia derivada de una clase WMI.  
  
 [!code-csharp[wminet_ManagementClass_Derive#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Derive/cs/ManagementClass_Derive.cs#1)]
 [!code-vb[wminet_ManagementClass_Derive#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Derive/vb/ManagementClass_Derive.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstances">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve la colección de todas las instancias de la clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstances () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetInstances();" />
      <MemberSignature Language="F#" Value="member this.GetInstances : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la colección de todas las instancias de la clase.</summary>
        <returns>Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las instancias de la clase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, obtener todas las instancias de una clase WMI.  
  
 [!code-csharp[wminet_ManagementClass_GetInstances#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances/cs/ManagementClass_GetInstances.cs#1)]
 [!code-vb[wminet_ManagementClass_GetInstances#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances/vb/ManagementClass_GetInstances.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetInstances (System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetInstances(class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstances (options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetInstances(System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetInstances : System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetInstances options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="options">Opciones de operaciones adicionales.</param>
        <summary>Devuelve la colección de todas las instancias de la clase con las opciones especificadas.</summary>
        <returns>Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las instancias de la clase, de acuerdo con las opciones especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, obtener todas las instancias de una clase WMI y sus subclases.  
  
 [!code-csharp[wminet_ManagementClass_GetInstances-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-E/cs/ManagementClass_GetInstances-E.cs#1)]
 [!code-vb[wminet_ManagementClass_GetInstances-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-E/vb/ManagementClass_GetInstances-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public void GetInstances (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetInstances(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetInstances (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetInstances(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetInstances : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetInstances watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <summary>Devuelve la colección de todas las instancias de la clase, asincrónicamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, obtener todas las instancias de un WMI clase asincrónicamente.  
  
 [!code-csharp[wminet_ManagementClass_GetInstances-M#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-M/cs/ManagementClass_GetInstances-M.cs#1)]
 [!code-vb[wminet_ManagementClass_GetInstances-M#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-M/vb/ManagementClass_GetInstances-M.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public void GetInstances (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetInstances(class System.Management.ManagementOperationObserver watcher, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetInstances (watcher As ManagementOperationObserver, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetInstances(System::Management::ManagementOperationObserver ^ watcher, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetInstances : System.Management.ManagementOperationObserver * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetInstances (watcher, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <param name="options">Opciones adicionales especificadas para obtener la instancia.</param>
        <summary>Devuelve la colección de todas las instancias de la clase asincrónicamente, utilizando las opciones especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="managementClass.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que debe llenarse con información de serialización.</param>
        <param name="context">Ubicación donde se almacenarán los datos serializados y desde la cual se recuperarán los mismos.</param>
        <summary>Llena un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para deserializar el campo representado por esta instancia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRelatedClasses">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera las clases relacionadas con la clase WMI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelatedClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelatedClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedClasses () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelatedClasses();" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelatedClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera las clases relacionadas con la clase WMI.</summary>
        <returns>Colección de los objetos <see cref="T:System.Management.ManagementClass" /> o <see cref="T:System.Management.ManagementObject" /> que representa las clases WMI o las instancias relacionadas con la clase WMI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método consulta el esquema de WMI para todas las asociaciones posibles que puede tener la clase WMI con otras clases, o en casos excepcionales, a las instancias. Para obtener más información acerca de las clases relacionadas, vea "ASSOCIATORS OF Statement" en la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, la lista de todas las clases relacionadas con la clase WMI pasan al constructor.  
  
 [!code-csharp[wminet_ManagementClass_GetRelatedClasses#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses/cs/ManagementClass_GetRelatedClasses.cs#1)]
 [!code-vb[wminet_ManagementClass_GetRelatedClasses#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses/vb/ManagementClass_GetRelatedClasses.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelatedClasses(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelatedClasses (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelatedClasses(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetRelatedClasses watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <summary>Recupera las clases relacionadas con la clase WMI, asincrónicamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelatedClasses(string relatedClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedClasses (relatedClass As String) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelatedClasses(System::String ^ relatedClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : string -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelatedClasses relatedClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relatedClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relatedClass">Clase de la que se derivarán las clases resultantes.</param>
        <summary>Recupera las clases relacionadas con la clase WMI.</summary>
        <returns>Colección de clases relacionadas con esta clase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelatedClasses(class System.Management.ManagementOperationObserver watcher, string relatedClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelatedClasses (watcher As ManagementOperationObserver, relatedClass As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelatedClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relatedClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : System.Management.ManagementOperationObserver * string -&gt; unit" Usage="managementClass.GetRelatedClasses (watcher, relatedClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relatedClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <param name="relatedClass">Nombre de la clase relacionada.</param>
        <summary>Recupera las clases relacionadas con la clase WMI, asincrónicamente, dado el nombre de la clase relacionada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelatedClasses(string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedClasses (relatedClass As String, relationshipClass As String, relationshipQualifier As String, relatedQualifier As String, relatedRole As String, thisRole As String, options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelatedClasses(System::String ^ relatedClass, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ relatedQualifier, System::String ^ relatedRole, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : string * string * string * string * string * string * System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelatedClasses (relatedClass, relationshipClass, relationshipQualifier, relatedQualifier, relatedRole, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relatedClass" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="relatedQualifier" Type="System.String" />
        <Parameter Name="relatedRole" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="relatedClass">Clase de la que se derivarán las clases resultantes.</param>
        <param name="relationshipClass">Tipo de relación que deben tener las clases resultantes con la clase de origen.</param>
        <param name="relationshipQualifier">Este calificador debe estar presente en la relación.</param>
        <param name="relatedQualifier">Este calificador debe estar presente en las clases resultantes.</param>
        <param name="relatedRole">Las clases resultantes deben tener este rol en la relación.</param>
        <param name="thisRole">La clase de origen debe tener este rol en la relación.</param>
        <param name="options">Opciones para recuperar las clases resultantes.</param>
        <summary>Recupera las clases relacionadas con la clase WMI, basándose en las opciones especificadas.</summary>
        <returns>Colección de clases relacionadas con esta clase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Management.ManagementClass.GetRelatedClasses%2A> método para enumerar las clases relacionadas con la **CIM_LogicalDisk** clase. Para obtener más información, vea "CIM_LogicalDisk" en la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library.  
  
 [!code-csharp[wminet_ManagementClass_GetRelatedClasses-7#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses-7/cs/ManagementClass_GetRelatedClasses-7.cs#1)]
 [!code-vb[wminet_ManagementClass_GetRelatedClasses-7#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses-7/vb/ManagementClass_GetRelatedClasses-7.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelatedClasses(class System.Management.ManagementOperationObserver watcher, string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelatedClasses (watcher As ManagementOperationObserver, relatedClass As String, relationshipClass As String, relationshipQualifier As String, relatedQualifier As String, relatedRole As String, thisRole As String, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelatedClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relatedClass, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ relatedQualifier, System::String ^ relatedRole, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : System.Management.ManagementOperationObserver * string * string * string * string * string * string * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetRelatedClasses (watcher, relatedClass, relationshipClass, relationshipQualifier, relatedQualifier, relatedRole, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relatedClass" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="relatedQualifier" Type="System.String" />
        <Parameter Name="relatedRole" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Controlador del progreso y de los resultados de la operación asincrónica.</param>
        <param name="relatedClass">Clase de la que se derivarán las clases resultantes.</param>
        <param name="relationshipClass">Tipo de relación que deben tener las clases resultantes con la clase de origen.</param>
        <param name="relationshipQualifier">Este calificador debe estar presente en la relación.</param>
        <param name="relatedQualifier">Este calificador debe estar presente en las clases resultantes.</param>
        <param name="relatedRole">Las clases resultantes deben tener este rol en la relación.</param>
        <param name="thisRole">La clase de origen debe tener este rol en la relación.</param>
        <param name="options">Opciones para recuperar las clases resultantes.</param>
        <summary>Recupera las clases relacionadas con la clase WMI, asincrónicamente, utilizando las opciones especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRelationshipClasses">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera clases de relación que relacionan la clase con otras clases.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelationshipClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelationshipClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipClasses () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelationshipClasses();" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelationshipClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera clases de relación que relacionan la clase con otras clases.</summary>
        <returns>Colección de *clases de asociación* que relacionan la clase con cualquier otra clase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Management.ManagementClass.GetRelationshipClasses%2A> método para mostrar la relación de las clases para el **CIM_LogicalDisk** clase. Para obtener más información, vea "CIM_LogicalDisk" en la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library.  
  
 [!code-csharp[wminet_ManagementClass_GetRelationshipClasses#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelationshipClasses/cs/ManagementClass_GetRelationshipClasses.cs#1)]
 [!code-vb[wminet_ManagementClass_GetRelationshipClasses#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelationshipClasses/vb/ManagementClass_GetRelationshipClasses.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelationshipClasses(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelationshipClasses (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelationshipClasses(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetRelationshipClasses watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <summary>Recupera clases de relación que relacionan la clase con otras clases, asincrónicamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelationshipClasses(string relationshipClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipClasses (relationshipClass As String) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelationshipClasses(System::String ^ relationshipClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : string -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelationshipClasses relationshipClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipClass">Clase de extremo para todas las clases de relación devueltas.</param>
        <summary>Recupera clases de relación que relacionan la clase con otras clases, siendo la clase de extremo la clase especificada.</summary>
        <returns>Colección de *clases de asociación* que relacionan la clase con la clase especificada. Para obtener más información sobre las clases de relación, vea "ASSOCIATORS OF Statement" en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelationshipClasses(class System.Management.ManagementOperationObserver watcher, string relationshipClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelationshipClasses (watcher As ManagementOperationObserver, relationshipClass As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelationshipClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relationshipClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : System.Management.ManagementOperationObserver * string -&gt; unit" Usage="managementClass.GetRelationshipClasses (watcher, relationshipClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relationshipClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <param name="relationshipClass">Clase WMI a la que deben apuntar todas las relaciones devueltas.</param>
        <summary>Recupera clases de relación que relacionan la clase con la clase WMI especificada, asincrónicamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de las clases de relación, vea "ASSOCIATORS OF Statement" en la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelationshipClasses(string relationshipClass, string relationshipQualifier, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipClasses (relationshipClass As String, relationshipQualifier As String, thisRole As String, options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelationshipClasses(System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : string * string * string * System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelationshipClasses (relationshipClass, relationshipQualifier, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="relationshipClass">Todas las clases de relación resultantes deben derivarse de esta clase.</param>
        <param name="relationshipQualifier">Las clases de relación resultantes deben tener este calificador.</param>
        <param name="thisRole">La clase de origen debe tener este rol en las clases de relación resultantes.</param>
        <param name="options">Especifica opciones para recuperar los resultados.</param>
        <summary>Recupera clases de relación que relacionan esta clase con otras clases, de acuerdo con las opciones especificadas.</summary>
        <returns>Colección de *clases de asociación* que relacionan esta clase con otras, de acuerdo con las opciones especificadas. Para obtener más información sobre las clases de relación, vea "ASSOCIATORS OF Statement" en la documentación de Instrumental de administración de Windows de MSDN Library en la dirección http://msdn.microsoft.com/library.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelationshipClasses(class System.Management.ManagementOperationObserver watcher, string relationshipClass, string relationshipQualifier, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelationshipClasses (watcher As ManagementOperationObserver, relationshipClass As String, relationshipQualifier As String, thisRole As String, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelationshipClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : System.Management.ManagementOperationObserver * string * string * string * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetRelationshipClasses (watcher, relationshipClass, relationshipQualifier, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">El controlador para el progreso y los resultados de la operación asincrónica.</param>
        <param name="relationshipClass">Clase de la que deben derivan todas las clases de relación resultantes.</param>
        <param name="relationshipQualifier">Calificador que las clases de relación resultantes deben poseer.</param>
        <param name="thisRole">Rol que debe tener la clase de origen en las clases de relación resultantes.</param>
        <param name="options">Opciones para recuperar los resultados.</param>
        <summary>Recupera las clases de relación que relacionan la clase según las opciones especificadas, asincrónicamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStronglyTypedClassCode">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Genera una clase fuertemente tipada para una clase WMI dada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStronglyTypedClassCode">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration GetStronglyTypedClassCode (bool includeSystemClassInClassDef, bool systemPropertyClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeTypeDeclaration GetStronglyTypedClassCode(bool includeSystemClassInClassDef, bool systemPropertyClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStronglyTypedClassCode (includeSystemClassInClassDef As Boolean, systemPropertyClass As Boolean) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeDeclaration ^ GetStronglyTypedClassCode(bool includeSystemClassInClassDef, bool systemPropertyClass);" />
      <MemberSignature Language="F#" Value="member this.GetStronglyTypedClassCode : bool * bool -&gt; System.CodeDom.CodeTypeDeclaration" Usage="managementClass.GetStronglyTypedClassCode (includeSystemClassInClassDef, systemPropertyClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSystemClassInClassDef" Type="System.Boolean" />
        <Parameter Name="systemPropertyClass" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSystemClassInClassDef">Es <see langword="true" /> para incluir la clase para administrar las propiedades del sistema; en caso contrario, es <see langword="false" />.</param>
        <param name="systemPropertyClass">Es <see langword="true" /> para que la clase generada administre las propiedades del sistema; en caso contrario, es <see langword="false" />.</param>
        <summary>Genera una clase fuertemente tipada para una clase WMI dada.</summary>
        <returns><see cref="T:System.CodeDom.CodeTypeDeclaration" /> que representa la declaración de la clase fuertemente tipada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente genera una clase fuertemente tipada para el **Win32_LogicalDisk** clase. El código se genera en C# o Visual Basic. NET.  
  
 [!code-csharp[wminet_ManagementClass_GetStronglyTypedClassCode-2#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-2/cs/ManagementClass_GetStronglyTypedClassCode-2.cs#1)]
 [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode-2#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-2/vb/ManagementClass_GetStronglyTypedClassCode-2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStronglyTypedClassCode">
      <MemberSignature Language="C#" Value="public bool GetStronglyTypedClassCode (System.Management.CodeLanguage lang, string filePath, string classNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStronglyTypedClassCode(valuetype System.Management.CodeLanguage lang, string filePath, string classNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStronglyTypedClassCode (lang As CodeLanguage, filePath As String, classNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStronglyTypedClassCode(System::Management::CodeLanguage lang, System::String ^ filePath, System::String ^ classNamespace);" />
      <MemberSignature Language="F#" Value="member this.GetStronglyTypedClassCode : System.Management.CodeLanguage * string * string -&gt; bool" Usage="managementClass.GetStronglyTypedClassCode (lang, filePath, classNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lang" Type="System.Management.CodeLanguage" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="classNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lang">Lenguaje del código que se va a generar. Este lenguaje de código procede de la enumeración <see cref="T:System.Management.CodeLanguage" />.</param>
        <param name="filePath">Ruta de acceso del archivo donde se va a escribir el código.</param>
        <param name="classNamespace">Espacio de nombres de .NET en el que se debe generar la clase. Si está vacío, el espacio de nombres se generará a partir del espacio de nombres WMI.</param>
        <summary>Genera una clase fuertemente tipada para una clase WMI dada. Esta función genera código para Visual Basic, C#, JScript, J# o C++, dependiendo de los parámetros de entrada.</summary>
        <returns>Es <see langword="true" /> si el método se ha ejecutado correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente genera una clase fuertemente tipada para el **Win32_LogicalDisk** clase. El código generado está en C# para el ejemplo de C# y Visual Basic .NET para el ejemplo de Visual Basic. NET.  
  
 [!code-csharp[wminet_ManagementClass_GetStronglyTypedClassCode-3#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-3/cs/ManagementClass_GetStronglyTypedClassCode-3.cs#1)]
 [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode-3#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-3/vb/ManagementClass_GetStronglyTypedClassCode-3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSubclasses">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve la colección de todas las clases derivadas de la clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetSubclasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetSubclasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubclasses () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetSubclasses();" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetSubclasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la colección de todas las subclases de la clase.</summary>
        <returns>Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las subclases de la clase WMI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Management.ManagementClass.GetSubclasses%2A> método para mostrar las subclases de la **CIM_LogicalDisk** clase. Para obtener más información, vea "CIM_LogicalDisk" en la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library.  
  
 [!code-csharp[wminet_ManagementClass_GetSubClasses()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses/cs/ManagementClass_GetSubclasses.cs#1)]
 [!code-vb[wminet_ManagementClass_GetSubClasses()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses/vb/ManagementClass_GetSubclasses.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetSubclasses (System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetSubclasses(class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubclasses (options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetSubclasses(System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetSubclasses options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="options">Opciones adicionales especificadas para recuperar las subclases de la clase.</param>
        <summary>Recupera las subclases de la clase utilizando las opciones especificadas.</summary>
        <returns>Colección de los objetos <see cref="T:System.Management.ManagementObject" /> que representan las subclases de la clase WMI, de acuerdo con las opciones especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, recibir las subclases de la clase WMI que se pasó al constructor.  
  
 [!code-csharp[wminet_ManagementClass_GetSubClasses(E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses-E/cs/ManagementClass_GetSubclasses-E.cs#1)]
 [!code-vb[wminet_ManagementClass_GetSubClasses(E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses-E/vb/ManagementClass_GetSubclasses-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public void GetSubclasses (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSubclasses(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSubclasses (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSubclasses(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetSubclasses watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <summary>Devuelve la colección de todas las clases derivadas de esta clase, de forma asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public void GetSubclasses (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSubclasses(class System.Management.ManagementOperationObserver watcher, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSubclasses (watcher As ManagementOperationObserver, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSubclasses(System::Management::ManagementOperationObserver ^ watcher, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : System.Management.ManagementOperationObserver * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetSubclasses (watcher, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Objeto que controlará el progreso de la operación asincrónica.</param>
        <param name="options">Opciones adicionales especificadas que se van a utilizar en la recuperación de las clases derivadas.</param>
        <summary>Recupera todas las clases derivadas de esta clase, de forma asincrónica, utilizando las opciones especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Methods">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection Methods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodDataCollection Methods" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementClass.Methods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Methods As MethodDataCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::MethodDataCollection ^ Methods { System::Management::MethodDataCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Methods : System.Management.MethodDataCollection" Usage="System.Management.ManagementClass.Methods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una colección de objetos <see cref="T:System.Management.MethodData" /> que representan los métodos definidos en la clase WMI.</summary>
        <value><see cref="T:System.Management.MethodDataCollection" /> que representa los métodos definidos en la clase WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, obtener todos los métodos de la clase WMI se pasan al constructor.  
  
 [!code-csharp[wminet_ManagementClass_Methods#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Methods/cs/ManagementClass_Methods.cs#1)]
 [!code-vb[wminet_ManagementClass_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Methods/vb/ManagementClass_Methods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public override System.Management.ManagementPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementClass.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Path As ManagementPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::ManagementPath ^ Path { System::Management::ManagementPath ^ get(); void set(System::Management::ManagementPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Management.ManagementPath with get, set" Usage="System.Management.ManagementClass.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso de la clase WMI a la que está enlazada el objeto <see cref="T:System.Management.ManagementClass" />.</summary>
        <value>Ruta de acceso de la clase del objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando la propiedad se establece en un nuevo valor, el <xref:System.Management.ManagementClass> se desconectarán de la clase WMI enlazado previamente. Volver a conectarse a la nueva ruta de acceso de clase WMI.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.Management.ManagementClass> variable con un <xref:System.Management.ManagementClass> constructor y, a continuación, obtener todos los métodos de la clase WMI se pasan al constructor.  
  
 [!code-csharp[wminet_ManagementClass_Path#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Path/cs/ManagementClass_Path.cs#1)]
 [!code-vb[wminet_ManagementClass_Path#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Path/vb/ManagementClass_Path.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>