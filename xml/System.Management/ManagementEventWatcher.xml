<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="deaa5054d5a6e4440bdc47d463d522542aad06a1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461179" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Se suscribe a notificaciones de eventos temporales basándose en una *consulta de eventos* especificada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" />. Para una posterior inicialización, establezca las propiedades del objeto. Éste es el constructor predeterminado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> cuando se proporciona una *consulta de eventos* WMI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El espacio de nombres en el que escucharán el Monitor de eventos es el espacio de nombres predeterminado que está establecido actualmente.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En este ejemplo de código, el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">Consulta de eventos WMI, que define los eventos que escuchará el monitor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> cuando se proporciona una *consulta de eventos* WMI en forma de cadena.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El espacio de nombres en el que escucharán el Monitor de eventos es el espacio de nombres predeterminado que está establecido actualmente.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <see cref="T:System.Management.ManagementScope" /> que representa el ámbito (espacio de nombres) donde el monitor escuchará los eventos.</param>
        <param name="query">
          <see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la *consulta de eventos* WMI dada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En este ejemplo de código, el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Ámbito de administración (espacio de nombres) donde el monitor escuchará los eventos.</param>
        <param name="query">Consulta que define los eventos que escuchará el monitor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la *consulta de eventos* WMI dada. Para esta variante, la consulta y el ámbito se especifican como cadenas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <see cref="T:System.Management.ManagementScope" /> que representa el ámbito (espacio de nombres) donde el monitor escuchará los eventos.</param>
        <param name="query">
          <see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.</param>
        <param name="options">
          <see cref="T:System.Management.EventWatcherOptions" /> que representa las opciones adicionales utilizadas para inspeccionar los eventos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la consulta de eventos WMI dada y las opciones especificadas. Para esta variante, la consulta y el ámbito son objetos especificados. El objeto de opciones puede especificar opciones como un tiempo de espera e información del contexto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">Ámbito de administración (espacio de nombres) donde el monitor escuchará los eventos.</param>
        <param name="query">Consulta que define los eventos que escuchará el monitor.</param>
        <param name="options">
          <see cref="T:System.Management.EventWatcherOptions" /> que representa las opciones adicionales utilizadas para inspeccionar los eventos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la *consulta de eventos* WMI dada y las opciones especificadas. Para esta variante, la consulta y el ámbito se especifican como cadenas. El objeto de opciones puede especificar opciones como un tiempo de espera e información del contexto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando llega un nuevo evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>Datos de evento  
 El controlador de eventos recibe un argumento de tipo <xref:System.Management.EventArrivedEventArgs> que contiene los datos relacionados con este evento. El siguiente <xref:System.Management.EventArrivedEventArgs> propiedades proporcionan información específica de este evento.  
  
|Propiedad.|Descripción|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (se hereda de <xref:System.Management.ManagementEventArgs>)|Obtiene el contexto de operación devuelto desde la operación que desencadenó el evento.|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|Obtiene el evento WMI que se entrega.|  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantiza que se borran las llamadas pendientes. Es el destructor del objeto. En C#, los finalizadores se expresan mediante la sintaxis del destructor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las opciones que se utilizan para inspeccionar los eventos.</summary>
        <value>Devuelve <see cref="T:System.Management.EventWatcherOptions" /> que contiene las opciones de evento utilizadas para inspeccionar los eventos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Valor de propiedad  
 Las opciones utilizadas para inspeccionar los eventos.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los criterios que se aplicarán a los eventos.</summary>
        <value>Devuelve <see cref="T:System.Management.EventQuery" /> que contiene la consulta que se va a aplicar a los eventos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Valor de propiedad  
 Los criterios que se aplicarán a los eventos, que es igual a la *consulta de evento*.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ámbito (espacio de nombres) en que se inspeccionarán los eventos.</summary>
        <value>Devuelve <see cref="T:System.Management.ManagementScope" /> que contiene el ámbito donde se van a inspeccionar eventos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Valor de propiedad  
 El ámbito en el que se va a inspeccionar los eventos (espacio de nombres o ámbito).  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se suscribe a eventos con la consulta dada y los entrega, asincrónicamente, a través del evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela la suscripción, ya sea sincrónica o asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se cancela una suscripción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>Datos de evento  
 El controlador de eventos recibe un argumento de tipo <xref:System.Management.StoppedEventArgs> que contiene los datos relacionados con este evento. El siguiente <xref:System.Management.StoppedEventArgs> propiedades proporcionan información específica de este evento.  
  
|Propiedad.|Descripción|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (se hereda de <xref:System.Management.ManagementEventArgs>)|Obtiene el contexto de operación devuelto desde la operación que desencadenó el evento.|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|Obtiene el estado de finalización de la operación.|  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Espera al siguiente evento que coincida con la consulta especificada que va a llegar, y lo devuelve.</summary>
        <returns>
          <see cref="T:System.Management.ManagementBaseObject" /> que representa el evento recién llegado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el objeto de Monitor de eventos contiene opciones con un tiempo de espera especificado, la API esperará el siguiente evento sólo durante la cantidad especificada de tiempo; en caso contrario, la API se bloqueará hasta que se produzca el evento siguiente.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Plena confianza para el llamador inmediato. Un código de confianza parcial no puede utilizar este miembro. Para obtener más información, consulte [utilizar bibliotecas de código de confianza parcial](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el cliente recibe la notificación cuando una instancia de **Win32_Process** se creará porque es la clase de eventos **__InstanceCreationEvent**. Para obtener más información, consulte la documentación de Instrumental de administración de Windows en MSDN Library en http://msdn.microsoft.com/library. El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>. Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>