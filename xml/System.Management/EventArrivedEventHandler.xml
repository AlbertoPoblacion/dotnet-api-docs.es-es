<Type Name="EventArrivedEventHandler" FullName="System.Management.EventArrivedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="959bc9ffaab3294d2595ffde680240520099d4c1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30457989" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventArrivedEventHandler(object sender, EventArrivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventArrivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Management.EventArrivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventArrivedEventHandler(sender As Object, e As EventArrivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventArrivedEventHandler(System::Object ^ sender, EventArrivedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Management.EventArrivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Instancia del objeto para el que debe invocarse este método.</param>
    <param name="e">
      <see cref="T:System.Management.EventArrivedEventArgs" /> que especifica la razón por la que se llama al evento.</param>
    <summary>Representa el método que controlará el evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo asincrónico se configura un temporizador WMI para que genere un evento cada segundo y quita cuando ya no necesite. El <xref:System.Management.ManagementEventWatcher> define varios [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] eventos que se generan cuando se entregan eventos WMI. Los delegados están asociados a estos eventos para controlar los datos de entrada.  
  
 [!code-csharp[wminet_EventArrivedEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventArrivedEventHandler/cs/EventArrivedEventHandler.cs#1)]
 [!code-vb[wminet_EventArrivedEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventArrivedEventHandler/vb/EventArrivedEventHandler.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>