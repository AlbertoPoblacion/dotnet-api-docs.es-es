<Type Name="WorkflowViewElement" FullName="System.Activities.Presentation.WorkflowViewElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e35b80bcc8d4d4da7eff8b665048dad138368fef" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39743638" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowViewElement : System.Windows.Controls.ContentControl, System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowViewElement extends System.Windows.Controls.ContentControl implements class System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowViewElement&#xA;Inherits ContentControl&#xA;Implements ICompositeViewEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowViewElement : System::Windows::Controls::ContentControl, System::Activities::Presentation::ICompositeViewEvents" />
  <TypeSignature Language="F#" Value="type WorkflowViewElement = class&#xA;    inherit ContentControl&#xA;    interface ICompositeViewEvents" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.ICompositeViewEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Especifica la clase base para cualquier elemento de la interfaz de usuario que aparezca en el lienzo de diseñador de Windows Workflow Foundation y que visualmente represente una instancia de un elemento atómico que se pueda editar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ejemplos de elementos representados por <xref:System.Activities.Presentation.WorkflowViewElement> pueden ser <xref:System.Activities.Activity> y <xref:System.Activities.Statements.FlowNode>. `WorkflowViewElement` Proporciona un contrato común que el diseñador utiliza para representar el elemento visual a la superficie del diseñador y para interactuar con él a través de las diversas acciones de edición.  
  
 Si está compilando un diseñador para <xref:System.Activities.Activity>, debería utilizar el tipo base <xref:System.Activities.Presentation.ActivityDesigner>. Si hay elementos no son actividades que se deben tratar como elementos de primera clase en el lienzo del diseñador, como un elemento de cuadro de herramientas que pueda arrastrarse por el lienzo, o para escenarios de cortar y pegar, utilizan `WorkflowViewElement` como clase base. Si no desea utilizar el cromo de actividad estándar para un diseñador de actividad, `WorkflowViewElement` debe usarse como el tipo base para proporcionar la máxima flexibilidad.  
  
 <xref:System.Activities.Presentation.WorkflowViewElement> representa un elemento <xref:System.Activities.Presentation.Model.ModelItem> en la interfaz de usuario y proporciona acceso mediante código al elemento de modelo y un <xref:System.Activities.Presentation.EditingContext> que permite realizar cambios.  
  
   
  
## Examples  
 Para un ejemplo de código que muestra cómo crear una nueva clase <xref:System.Activities.Activity> y un nuevo <xref:System.Activities.Presentation.ActivityDesigner> y cómo asociarlos después, vea el ejemplo en la documentación del <xref:System.Activities.Presentation.ActivityDesigner>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowViewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowViewElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> propiedad está establecida en `false` de forma predeterminada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsible">
      <MemberSignature Language="C#" Value="public bool Collapsible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collapsible" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberSignature Language="VB.NET" Value="Public Property Collapsible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collapsible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Collapsible : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se puede contraer el elemento.</summary>
        <value><see langword="true" /> si se puede contraer el elemento; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeViews">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt; CompositeViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.ICompositeView&gt; CompositeViews" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CompositeViews As IList(Of ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ CompositeViews { System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositeViews : System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;" Usage="System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la lista de todas las vistas compuestas.</summary>
        <value>Lista de todas las vistas compuestas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); void set(System::Activities::Presentation::EditingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contexto de edición que comparten todos los elementos contenidos en un diseñador de flujo de trabajo.</summary>
        <value>El objeto <see cref="T:System.Activities.Presentation.EditingContext" /> para el diseñador de flujo de trabajo que contiene el elemento de vista de flujo de trabajo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto <xref:System.Activities.Presentation.EditingContext> es una colección de servicios compartidos entre todos los elementos contenidos en el diseñador y se usa para interactuar entre el host y el diseñador. Los servicios se publican y solicitan mediante la clase <xref:System.Activities.Presentation.EditingContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" />. Este campo es de solo lectura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCompositeView">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.ICompositeView DefaultCompositeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ICompositeView DefaultCompositeView" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DefaultCompositeView As ICompositeView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::ICompositeView ^ DefaultCompositeView { System::Activities::Presentation::ICompositeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCompositeView : System.Activities.Presentation.ICompositeView" Usage="System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ICompositeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la vista compuesta predeterminada.</summary>
        <value>Vista compuesta predeterminada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Designer">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.DesignerView Designer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.DesignerView Designer" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Designer As DesignerView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::DesignerView ^ Designer { System::Activities::Presentation::View::DesignerView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Designer : System.Activities.Presentation.View.DesignerView" Usage="System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.DesignerView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el diseñador asociado con el elemento de vista de flujo de trabajo.</summary>
        <value>Diseñador asociado con el elemento de vista de flujo de trabajo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragHandle">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement DragHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElement DragHandle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property DragHandle As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElement ^ DragHandle { System::Windows::FrameworkElement ^ get(); void set(System::Windows::FrameworkElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DragHandle : System.Windows.FrameworkElement with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el controlador de arrastre para el elemento de vista de flujo de trabajo.</summary>
        <value>Controlador de arrastre para el elemento de vista de flujo de trabajo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandState">
      <MemberSignature Language="C#" Value="public bool ExpandState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpandState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExpandState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandState : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se expande la vista del estado del elemento.</summary>
        <value><see langword="true" /> si se expande el estado de la vista; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpandStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpandStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpandStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandStateProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />. Este campo es de solo lectura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationHelpText">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationHelpText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationHelpText();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationHelpText : unit -&gt; string&#xA;override this.GetAutomationHelpText : unit -&gt; string" Usage="workflowViewElement.GetAutomationHelpText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, recupera el texto de ayuda de automatización.</summary>
        <returns>La implementación predeterminada devuelve un objeto <see cref="T:System.String" /> vacío.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente este método en su clase derivada para agregar su propio control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationIdMemberName();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationIdMemberName : unit -&gt; string&#xA;override this.GetAutomationIdMemberName : unit -&gt; string" Usage="workflowViewElement.GetAutomationIdMemberName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, obtiene el nombre de una propiedad del elemento de modelo asociado al elemento que se utiliza como identificación de automatización.</summary>
        <returns>Nombre que se va a utilizar como identificación de automatización. La clase base siempre devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente este método en su clase derivada para agregar su propio control que especifique una propiedad de un elemento de modelo que se va a utilizar para identificar para la automatización el elemento de modelo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal virtual string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetAutomationItemStatus();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationItemStatus : unit -&gt; string&#xA;override this.GetAutomationItemStatus : unit -&gt; string" Usage="workflowViewElement.GetAutomationItemStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, recupera el estado de elemento de automatización.</summary>
        <returns>La implementación predeterminada devuelve un objeto <see cref="T:System.String" /> vacío.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el elemento de vista del flujo de trabajo es de solo lectura.</summary>
        <value>Es <see langword="true" /> si el elemento es de solo lectura; de lo contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRootDesigner : bool" Usage="System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el diseñador especificado es el diseñador raíz para este elemento.</summary>
        <value><see langword="true" /> si el diseñador especificado es el diseñador raíz; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ModelItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ModelItem" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelItem As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ModelItem { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ModelItem : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> subyacente asociado al elemento de vista de flujo de trabajo.</summary>
        <value>Objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que es un contenedor que rodea una instancia de modelo o una representación en memoria del flujo de trabajo subyacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto <xref:System.Activities.Presentation.Model.ModelItem> proporciona notificación de los cambios incluso aunque la instancia del modelo no proporcione la notificación de cambios.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModelItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModelItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModelItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModelItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModelItemProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />. Este campo es de solo lectura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuLoaded (System.Windows.Controls.ContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuLoaded(class System.Windows.Controls.ContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnContextMenuLoaded(System.Windows.Controls.ContextMenu)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuLoaded (menu As ContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuLoaded(System::Windows::Controls::ContextMenu ^ menu);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuLoaded : System.Windows.Controls.ContextMenu -&gt; unit&#xA;override this.OnContextMenuLoaded : System.Windows.Controls.ContextMenu -&gt; unit" Usage="workflowViewElement.OnContextMenuLoaded menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="System.Windows.Controls.ContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">Objeto <see cref="T:System.Windows.Controls.ContextMenu" /> que se carga.</param>
        <summary>Se invoca cuando se carga el menú contextual. Implemente este método en una clase derivada para administrar este evento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="workflowViewElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una implementación de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica de <see cref="T:System.Activities.Presentation.WorkflowViewElement" />para la infraestructura de Windows Presentation Foundation (WPF).</summary>
        <returns>Implementación de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica del tipo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.UIElement.DragEnter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.UIElement.DragOver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditAnnotation();" />
      <MemberSignature Language="F#" Value="abstract member OnEditAnnotation : unit -&gt; unit&#xA;override this.OnEditAnnotation : unit -&gt; unit" Usage="workflowViewElement.OnEditAnnotation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se produce cuando se edita la anotación.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="workflowViewElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Se invoca cuando un elemento recibe el foco del teclado. Implemente este método en una clase derivada para administrar este evento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="workflowViewElement.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Windows.FrameworkElement.Initialized" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada de este método virtual genera el evento como se describió anteriormente. Las invalidaciones deben llamar a la implementación base para conservar este comportamiento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member OnModelItemChanged : obj -&gt; unit&#xA;override this.OnModelItemChanged : obj -&gt; unit" Usage="workflowViewElement.OnModelItemChanged newItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem"><see cref="T:System.Object" /> que representa el estado cambiado del elemento de modelo.</param>
        <summary>Se invoca cuando se cambia el elemento de modelo subyacente. Implemente este método en una clase derivada para administrar este evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No hay ninguna implementación predeterminada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">La instancia de <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento. Estos datos de evento incluyen detalles sobre el botón de mouse que se presionó y el estado controlado.</param>
        <summary>Se invoca cuando se presiona el botón del mouse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">La instancia de <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</param>
        <summary>Se invoca cuando se mueve el mouse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">La instancia de <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento. Los datos del evento informan de que se soltó el botón del mouse.</param>
        <summary>Se invoca cuando se suelta el botón del mouse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</param>
        <summary>Se invoca cuando un evento adjunto al evento especificado no controlado entra en un elemento de su ruta derivada de esta clase.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</param>
        <summary>Se invoca cuando un evento adjunto al evento especificado no controlado sale de un elemento de su ruta derivada de esta clase.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento. Los datos de evento informan de que se soltaron uno o varios botones del mouse.</param>
        <summary>Se invoca cuando se suelta el botón del mouse adjunto al evento especificado no controlado y se llega a un elemento de su ruta derivada de esta clase.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnReadOnlyChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : bool -&gt; unit&#xA;override this.OnReadOnlyChanged : bool -&gt; unit" Usage="workflowViewElement.OnReadOnlyChanged isReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly"><see langword="true" /> para indicar que el elemento es de solo lectura; en caso contrario, <see langword="false" />.</param>
        <summary>Se invoca cuando cambia la propiedad de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No hay ninguna implementación predeterminada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowExpandedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnShowExpandedChanged (bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowExpandedChanged(bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnShowExpandedChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowExpandedChanged (newValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowExpandedChanged(bool newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnShowExpandedChanged : bool -&gt; unit&#xA;override this.OnShowExpandedChanged : bool -&gt; unit" Usage="workflowViewElement.OnShowExpandedChanged newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="newValue"><see langword="true" /> para indicar que el valor de la propiedad de mostrar expandida ha cambiado; si no, <see langword="false" />.</param>
        <summary>Se invoca cuando cambia la propiedad de mostrar expandida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No hay ninguna implementación predeterminada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinState">
      <MemberSignature Language="C#" Value="public bool PinState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PinState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberSignature Language="VB.NET" Value="Public Property PinState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PinState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PinState : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la propiedad <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> debe tener prioridad sobre otros estados que se pueden utilizar para expandir o contraer el objeto <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</summary>
        <value><see langword="true" /> si se debe usar la propiedad <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> para expandir o contraer el objeto <see cref="T:System.Activities.Presentation.WorkflowViewElement" />; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PinStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PinStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PinStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PinStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PinStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PinStateProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" />. Este campo es de solo lectura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member RegisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.RegisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.RegisterCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">La vista compuesta que registrar.</param>
        <summary>Agrega la vista compuesta especificada a la lista de vistas compuestas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member RegisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.RegisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.RegisterDefaultCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">La vista compuesta.</param>
        <summary>Agrega la vista compuesta especificada como la vista compuesta predeterminada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpanded">
      <MemberSignature Language="C#" Value="public bool ShowExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpanded : bool" Usage="System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el elemento de vista de flujo de trabajo se muestra en una vista expandida.</summary>
        <value><see langword="true" /> si el elemento se muestra en una vista expandida; si no, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowExpandedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowExpandedProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />. Este campo es de solo lectura.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.UnregisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.UnregisterCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">La vista compuesta que cuyo registro anular.</param>
        <summary>Quita la vista compuesta especificada de la lista de vistas compuestas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.UnregisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.UnregisterDefaultCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">La vista compuesta que quitar.</param>
        <summary>Quita la vista compuesta predeterminada especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.Services.ViewService ViewService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Services.ViewService ViewService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewService As ViewService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::Services::ViewService ^ ViewService { System::Activities::Presentation::Services::ViewService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewService : System.Activities.Presentation.Services.ViewService" Usage="System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Services.ViewService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Activities.Presentation.Services.ViewService" /> asociado con el elemento de vista de flujo de trabajo.</summary>
        <value>Obtiene el servicio de vista asociado con el elemento de vista de flujo de trabajo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A esta propiedad también se puede tener acceso mediante la propiedad <xref:System.Activities.Presentation.EditingContext.Services%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.ViewStateService ViewStateService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.ViewStateService ViewStateService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewStateService As ViewStateService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::ViewStateService ^ ViewStateService { System::Activities::Presentation::View::ViewStateService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateService : System.Activities.Presentation.View.ViewStateService" Usage="System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de <see cref="T:System.Activities.Presentation.View.ViewStateService" /> definido en la clase <see cref="T:System.Activities.Presentation.EditingContext" />. Un acceso directo a esta propiedad consiste en obtener acceso a <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</summary>
        <value><see cref="T:System.Activities.Presentation.View.ViewStateService" /> definido en la <see cref="T:System.Activities.Presentation.EditingContext" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>