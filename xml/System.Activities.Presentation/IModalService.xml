<Type Name="IModalService" FullName="System.Activities.Presentation.IModalService">
  <TypeSignature Language="C#" Value="public interface IModalService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModalService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IModalService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModalService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IModalService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="edd31-101">Habilita la notificación a una aplicación host para que muestre un diálogo modal.</span><span class="sxs-lookup"><span data-stu-id="edd31-101">Enables notification to a host application that a modal dialog is displayed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd31-102">Es necesario notificar a algunas aplicaciones que hospedan diseñadores cuando se ha invocado un cuadro de diálogo modal.</span><span class="sxs-lookup"><span data-stu-id="edd31-102">Some applications that host designers need to be notified when a modal dialog box has been invoked.</span></span> <span data-ttu-id="edd31-103">Visual Studio es un ejemplo de este tipo de host.</span><span class="sxs-lookup"><span data-stu-id="edd31-103">Visual Studio is an example of such a host.</span></span> <span data-ttu-id="edd31-104">La interfaz <xref:System.Activities.Presentation.IModalService> proporciona una interfaz para comunicar el estado modal actual.</span><span class="sxs-lookup"><span data-stu-id="edd31-104">The <xref:System.Activities.Presentation.IModalService> interface provides an interface to communicate the current modal status.</span></span>  
  
 <span data-ttu-id="edd31-105">El Diseñador de flujo de trabajo de Windows llama al método <xref:System.Activities.Presentation.IModalService.SetModalState%2A>.</span><span class="sxs-lookup"><span data-stu-id="edd31-105">The Windows Workflow Designer calls the <xref:System.Activities.Presentation.IModalService.SetModalState%2A> method.</span></span> <span data-ttu-id="edd31-106">Cuando el `isModal` parámetro se establece en `true`, se notifica al host que se muestra un cuadro de diálogo modal.</span><span class="sxs-lookup"><span data-stu-id="edd31-106">When the `isModal` parameter is set to `true`, the host is notified that a modal dialog is displayed.</span></span>  
  
 <span data-ttu-id="edd31-107">Este es un servicio opcional.</span><span class="sxs-lookup"><span data-stu-id="edd31-107">This is an optional service.</span></span> <span data-ttu-id="edd31-108">Si una aplicación host no se preocupa del estado modal, no necesita utilizar el servicio.</span><span class="sxs-lookup"><span data-stu-id="edd31-108">If a host application does not care about the modal status,  you need not use the service.</span></span>  
  
 <span data-ttu-id="edd31-109">En la implementación actual, si se invoca un cuadro de mensaje de Windows Presentation Foundation (WPF) (que es un cuadro de diálogo modal), el <xref:System.Activities.Presentation.IModalService.SetModalState%2A> no se llama.</span><span class="sxs-lookup"><span data-stu-id="edd31-109">In the current implementation, if a Windows Presentation Foundation (WPF) message box (which is a modal dialog) is invoked, the <xref:System.Activities.Presentation.IModalService.SetModalState%2A> is not called.</span></span> <span data-ttu-id="edd31-110">Si la aplicación host requiere esta información, se debe crear otra solución alternativa.</span><span class="sxs-lookup"><span data-stu-id="edd31-110">If the host application requires this information, another workaround must be created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetModalState">
      <MemberSignature Language="C#" Value="public void SetModalState (bool isModal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModalState(bool isModal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IModalService.SetModalState(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModalState (isModal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModalState(bool isModal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isModal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isModal"><span data-ttu-id="edd31-111">Si se establece en <see langword="true" />, están mostrándose un diálogo modal.</span><span class="sxs-lookup"><span data-stu-id="edd31-111">If set to <see langword="true" />, a modal dialog is being displayed.</span></span></param>
        <summary><span data-ttu-id="edd31-112">Notifica a la aplicación host que se está mostrando un diálogo modal.</span><span class="sxs-lookup"><span data-stu-id="edd31-112">Notifies the host application that a modal dialog is being displayed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>