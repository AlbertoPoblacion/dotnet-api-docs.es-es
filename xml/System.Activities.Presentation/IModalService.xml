<Type Name="IModalService" FullName="System.Activities.Presentation.IModalService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0859aae16028981e0ad69c7fe873a22485375d6a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36720178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IModalService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModalService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IModalService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModalService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IModalService" />
  <TypeSignature Language="F#" Value="type IModalService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Habilita la notificación a una aplicación host para que muestre un diálogo modal.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es necesario notificar a algunas aplicaciones que hospedan diseñadores cuando se ha invocado un cuadro de diálogo modal. Visual Studio es un ejemplo de este tipo de host. La interfaz <xref:System.Activities.Presentation.IModalService> proporciona una interfaz para comunicar el estado modal actual.  
  
 El Diseñador de flujo de trabajo de Windows llama al método <xref:System.Activities.Presentation.IModalService.SetModalState%2A>. Cuando el `isModal` parámetro se establece en `true`, se notifica al host que se muestra un cuadro de diálogo modal.  
  
 Este es un servicio opcional. Si una aplicación host no se preocupa del estado modal, no necesita utilizar el servicio.  
  
 En la implementación actual, si se invoca un cuadro de mensaje de Windows Presentation Foundation (WPF) (que es un cuadro de diálogo modal), el <xref:System.Activities.Presentation.IModalService.SetModalState%2A> no se llama. Si la aplicación host requiere esta información, se debe crear otra solución alternativa.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetModalState">
      <MemberSignature Language="C#" Value="public void SetModalState (bool isModal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModalState(bool isModal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IModalService.SetModalState(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModalState (isModal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModalState(bool isModal);" />
      <MemberSignature Language="F#" Value="abstract member SetModalState : bool -&gt; unit" Usage="iModalService.SetModalState isModal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isModal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isModal">Si se establece en <see langword="true" />, están mostrándose un diálogo modal.</param>
        <summary>Notifica a la aplicación host que se está mostrando un diálogo modal.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>