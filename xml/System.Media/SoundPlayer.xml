<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abd474e3706400fc3ec97523f58d5307154a5924" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422905" /></Metadata><TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type SoundPlayer = class&#xA;    inherit Component&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controla la reproducción del sonido de un archivo .wav.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Media.SoundPlayer> clase proporciona una interfaz sencilla para cargar y reproducir un archivo .wav. El <xref:System.Media.SoundPlayer> clase admite la carga de un archivo .wav desde una ruta de acceso de archivo, una dirección URL, un <xref:System.IO.Stream> que contiene un archivo .wav, o un recurso incrustado que contiene un archivo .wav.  
  
 Para reproducir un sonido mediante el <xref:System.Media.SoundPlayer> clase, configure un <xref:System.Media.SoundPlayer> con una ruta de acceso para el archivo .wav y llame a uno de los métodos de reproducción. Puede identificar el archivo .wav para reproducir mediante uno de los constructores o estableciendo la <xref:System.Media.SoundPlayer.SoundLocation%2A> o <xref:System.Media.SoundPlayer.Stream%2A> propiedad. Se puede cargar el archivo antes de reproducir mediante uno de los métodos de carga o la carga se puede aplazar hasta que se llama a uno de los métodos de reproducción. Un <xref:System.Media.SoundPlayer> configurado para cargar un archivo .wav desde un <xref:System.IO.Stream> o dirección URL debe cargar el archivo .wav en memoria antes de que comience la reproducción.  
  
 Puede cargar o reproducir un archivo .wav de forma sincrónica o asincrónica. Si se llama a una carga sincrónica o play (método), el subproceso que realiza la llamada espera hasta que el método devuelve, lo cual puede provocar la pintura y otros eventos que se interrumpa. Llamar a una carga asincrónica o el método play permitirá que el subproceso de llamada continuar sin interrupción. Para obtener más información sobre las llamadas a métodos asincrónicos, vea [Cómo: Ejecutar una operación en segundo plano](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).  
  
 Cuando un <xref:System.Media.SoundPlayer> ha terminado de cargar un archivo .wav, genera el <xref:System.Media.SoundPlayer.LoadCompleted> eventos. Puede examinar el <xref:System.ComponentModel.AsyncCompletedEventArgs> en el controlador de eventos para determinar si la carga se realizó correctamente o no. El <xref:System.Media.SoundPlayer.SoundLocationChanged> evento se desencadena cuando el origen de audio se establece en una nueva ruta de acceso o dirección URL. El <xref:System.Media.SoundPlayer.StreamChanged> evento se desencadena cuando el origen de audio se establece en un nuevo <xref:System.IO.Stream>. Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 Para obtener más información acerca de <xref:System.Media.SoundPlayer>, consulte [Introducción a la clase SoundPlayer](~/docs/framework/winforms/controls/soundplayer-class-overview.md).  
  
> [!NOTE]
>  La <xref:System.Media.SoundPlayer> clase no puede reproducir otros tipos de archivo, como WMA o MP3. Si desea reproducir otros tipos de archivo, puede usar el control de Windows Media Player. Para obtener más información, consulte [mediante el Control de Reproductor de Windows Media en una solución de .NET Framework](https://go.microsoft.com/fwlink/?LinkId=131267) y [Windows Media Player Object Model Reference de Visual Basic .NET y C#](https://go.microsoft.com/fwlink/?LinkId=131269) en el SDK de Windows Media Player .  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer> clase para reproducir archivos .wav desde una ruta de acceso local o un identificador uniforme de recursos (URI).  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
    <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Media.SoundPlayer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Media.SoundPlayer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa un <xref:System.Media.SoundPlayer> con ningún origen de audio. Hasta que se configura con una ruta de acceso de origen de audio, el <xref:System.Media.SoundPlayer> reproducirá un sonido cuando se llama a uno de sus métodos de reproducción.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.IO.Stream -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><see cref="T:System.IO.Stream" /> de un archivo .wav.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Media.SoundPlayer" /> y asocia el archivo .wav a la <see cref="T:System.IO.Stream" /> especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Stream> pasa a la `stream` parámetro debe ser un <xref:System.IO.Stream> que contiene un archivo .wav. Los datos devueltos por la <xref:System.IO.Stream.Read%2A> método de la <xref:System.IO.Stream> deben ser los datos dentro de un archivo .wav.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : string -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer soundLocation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation">Ubicación del archivo .wav que se va a cargar.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Media.SoundPlayer" /> y asocia el archivo .wav especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena pasada a la `soundLocation` parámetro puede ser una ruta de acceso de archivo o una dirección URL a un archivo .wav. Si la dirección URL o ruta de acceso no es válido, el <xref:System.Media.SoundPlayer> seguirá siendo construidas, pero en posteriores llamadas a una carga o se producirá un error de método play.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">No se puede resolver el valor de URL especificado por <paramref name="soundLocation" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar para la deserialización.</param>
        <param name="context">Destino que se va a utilizar para la deserialización.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Media.SoundPlayer" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException">La propiedad <see cref="P:System.Media.SoundPlayer.SoundLocation" /> especificada en <paramref name="serializationInfo" /> no se puede resolver.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoadCompleted : bool" Usage="System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la carga de un archivo .wav se ha realizado correctamente.</summary>
        <value>Es <see langword="true" /> si se ha cargado un archivo .wav; es <see langword="false" /> si todavía no se ha cargado un archivo .wav.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="soundPlayer.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carga un sonido de forma sincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Media.SoundPlayer.Load%2A> método utiliza el subproceso actual para cargar un archivo .wav, impide que el subproceso controle otros mensajes hasta que se complete la carga.  
  
> [!CAUTION]
>  El <xref:System.Media.SoundPlayer.Load%2A> método puede producir un retraso al cargar un archivo .wav de gran tamaño. Además, los eventos de dibujo y de otros se bloqueará hasta que se complete la carga. Use el <xref:System.Media.SoundPlayer.LoadAsync%2A> método para cargar un sonido de forma asincrónica, lo que permite que el subproceso que realiza la llamada continuar sin interrupción.  
  
 Este método provoca la <xref:System.Media.SoundPlayer.LoadCompleted> evento cuando se carga se complete, incluso si la carga no se realizó correctamente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.LoadAsync%2A> método para adjuntar un archivo .wav a una instancia de la <xref:System.Media.SoundPlayer> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
        <permission cref="T:System.Net.WebPermission">Para obtener acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : unit -&gt; unit" Usage="soundPlayer.LoadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carga un archivo .wav desde una secuencia o un recurso Web utilizando un subproceso nuevo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un <xref:System.Media.SoundPlayer> está configurado para cargar un archivo .wav desde un <xref:System.IO.Stream> o recursos Web, este método comienza a cargar un archivo .wav desde la ubicación mediante un subproceso nuevo.  
  
 Este método provoca la <xref:System.Media.SoundPlayer.LoadCompleted> evento cuando se carga se complete, incluso si la carga no se realizó correctamente.  
  
 Si un <xref:System.Media.SoundPlayer> está configurado para cargar un archivo .wav desde una ruta de acceso de archivo local, este método no hace nada, porque la carga se aplaza hasta que empieza la reproducción.  
  
 Para obtener más información sobre la carga asincrónica, vea [Cómo: Cargar un sonido de forma asincrónica en un formulario de Windows](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.LoadAsync%2A> método para cargar de forma asincrónica un archivo .wav para su uso por una instancia de la <xref:System.Media.SoundPlayer> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/3b6a9296-1d5e-4d52-a4ba-94366d6fe302">Cómo: Cargar un sonido de forma asincrónica en Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando un archivo .wav se ha cargado, ya sea correctamente o no.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena cuando se completa la carga de un archivo .wav. Los argumentos del evento indican si la carga del archivo de sonido se completó correctamente o no.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> controlador de eventos para recibir una notificación que indica que el contenido de un archivo .wav se han cargado. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LoadTimeout : int with get, set" Usage="System.Media.SoundPlayer.LoadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tiempo máximo, expresado en milisegundos, que puede tardar en cargarse el archivo .wav.</summary>
        <value>Número de milisegundos durante los que se va a esperar. El valor predeterminado es 10000 (10 segundos).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una vez transcurrido este tiempo, se cancela la carga y un <xref:System.ServiceProcess.TimeoutException> es una excepción.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="soundPlayer.OnLoadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Media.SoundPlayer.LoadCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama una vez completada la carga de un archivo .wav.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSoundLocationChanged : EventArgs -&gt; unit&#xA;override this.OnSoundLocationChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnSoundLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama cuando una nueva ruta de acceso de origen de audio para este <xref:System.Media.SoundPlayer> se ha establecido.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, vea el artículo sobre cómo Proporcionar la funcionalidad de eventos y [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStreamChanged : EventArgs -&gt; unit&#xA;override this.OnStreamChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnStreamChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Media.SoundPlayer.StreamChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama cuando un nuevo <xref:System.IO.Stream> para este origen de audio <xref:System.Media.SoundPlayer> se ha establecido.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Media.SoundPlayer.OnStreamChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Al reemplazar <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="soundPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reproduce el archivo .wav mediante un subproceso nuevo, y si el archivo .wav no estaba cargado, primero lo carga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Media.SoundPlayer.Play%2A> método reproduce el sonido mediante un subproceso nuevo. Si se llama a <xref:System.Media.SoundPlayer.Play%2A> antes de que el archivo .wav se ha cargado en memoria, se cargará el archivo .wav antes de empezar la reproducción. Puede usar el <xref:System.Media.SoundPlayer.LoadAsync%2A> o <xref:System.Media.SoundPlayer.Load%2A> método para cargar el archivo .wav a la memoria de antemano. Después de un archivo .wav archivo se carga correctamente desde un <xref:System.IO.Stream> o la dirección URL, las futuras llamadas a métodos de reproducción para el <xref:System.Media.SoundPlayer> no tendrá que volver a cargar el archivo .wav hasta que la ruta de acceso para que los cambios de sonido.  
  
 Si no se ha especificado el archivo .wav o no puede cargarse el <xref:System.Media.SoundPlayer.Play%2A> método reproducirá el sonido predeterminado de sonido.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.Play%2A> método para reproducir un archivo .wav de forma asincrónica. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
        <exception cref="T:System.InvalidOperationException">El encabezado de .wav está dañado; el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" /> no es un archivo .wav con formato PCM.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">para leer los archivos. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso a código nativo. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberSignature Language="F#" Value="member this.PlayLooping : unit -&gt; unit" Usage="soundPlayer.PlayLooping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reproduce repetidamente el archivo .wav mediante un subproceso nuevo y carga primero el archivo .wav si no está cargado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Media.SoundPlayer.PlayLooping%2A> método reproduce y repite el sonido mediante un subproceso nuevo. Si se llama a <xref:System.Media.SoundPlayer.PlayLooping%2A> antes de que el archivo .wav se ha cargado en memoria, se cargará el archivo .wav antes de empezar la reproducción. Puede usar el <xref:System.Media.SoundPlayer.LoadAsync%2A> o <xref:System.Media.SoundPlayer.Load%2A> método para cargar el archivo .wav a la memoria de antemano. Después de un archivo .wav archivo se carga correctamente desde un <xref:System.IO.Stream> o la dirección URL, las futuras llamadas a métodos de reproducción para el <xref:System.Media.SoundPlayer> no tendrá que volver a cargar el archivo .wav hasta que la ruta de acceso para que los cambios de sonido.  
  
 Si no se ha especificado el archivo .wav o no puede cargarse el <xref:System.Media.SoundPlayer.PlayLooping%2A> método reproducirá el sonido predeterminado de sonido.  
  
 Para más información sobre <xref:System.Media.SoundPlayer.PlayLooping%2A>, vea [Cómo: Repetir un sonido reproducido en un formulario Windows Forms](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.PlayLooping%2A> método para reproducir un archivo .wav de forma repetida. Se reproducirá el .wav hasta el <xref:System.Media.SoundPlayer.Stop%2A> se llama al método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
        <exception cref="T:System.InvalidOperationException">El encabezado de .wav está dañado; el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" /> no es un archivo .wav con formato PCM.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">para leer los archivos. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso a código nativo. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberSignature Language="F#" Value="member this.PlaySync : unit -&gt; unit" Usage="soundPlayer.PlaySync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reproduce el archivo .wav y lo carga primero si no estaba cargado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Media.SoundPlayer.PlaySync%2A> método utiliza el subproceso actual para reproducir un archivo .wav, impide que el subproceso controle otros mensajes hasta que se complete la carga. Puede usar el <xref:System.Media.SoundPlayer.LoadAsync%2A> o <xref:System.Media.SoundPlayer.Load%2A> método para cargar el archivo .wav a la memoria de antemano. Después de un archivo .wav archivo se carga correctamente desde un <xref:System.IO.Stream> o la dirección URL, las futuras llamadas a métodos de reproducción para el <xref:System.Media.SoundPlayer> no tendrá que volver a cargar el archivo .wav hasta que la ruta de acceso para que los cambios de sonido.  
  
 Si no se ha especificado el archivo .wav o no puede cargarse el <xref:System.Media.SoundPlayer.PlaySync%2A> método reproducirá el sonido predeterminado de sonido.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.PlaySync%2A> método para reproducir un archivo .wav de forma sincrónica.  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
        <exception cref="T:System.InvalidOperationException">El encabezado de .wav está dañado; el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" /> no es un archivo .wav con formato PCM.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">para leer los archivos. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso a código nativo. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoundLocation : string with get, set" Usage="System.Media.SoundPlayer.SoundLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso o la dirección URL del archivo .wav que se va a cargar.</summary>
        <value>La ruta de acceso o la dirección URL desde la que se carga un archivo .wav, o bien, <see cref="F:System.String.Empty" /> si no hay ninguna ruta de acceso de archivo. De manera predeterminada, es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se establece en <xref:System.String.Empty?displayProperty=nameWithType> cuando el <xref:System.Media.SoundPlayer.Stream%2A> propiedad está establecida en un <xref:System.IO.Stream>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.SoundLocation%2A> propiedad para asignar el origen de archivo .wav a una instancia de la <xref:System.Media.SoundPlayer> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">para buscar archivos. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberSignature Language="F#" Value="member this.SoundLocationChanged : EventHandler " Usage="member this.SoundLocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se ha establecido una nueva ruta de acceso de origen audio para este <see cref="T:System.Media.SoundPlayer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena cuando una nueva ruta de acceso de origen de audio para este <xref:System.Media.SoundPlayer> se ha establecido.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> controlador de eventos para recibir una notificación cuando el <xref:System.Media.SoundPlayer> se ha adjuntado a un archivo .wav diferente. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="soundPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene la reproducción del sonido si ya se está reproduciendo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Media.SoundPlayer.Stop%2A> método para detener un archivo .wav que se está reproduciendo. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Media.SoundPlayer> clase.  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Para obtener acceso a código nativo. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream with get, set" Usage="System.Media.SoundPlayer.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la <see cref="T:System.IO.Stream" /> desde la que se va a cargar el archivo .wav.</summary>
        <value>Una <see cref="T:System.IO.Stream" /> desde la que se va a cargar el archivo .wav, o bien, <see langword="null" /> si no está disponible ninguna secuencia. De manera predeterminada, es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se establece en `null` cuando el <xref:System.Media.SoundPlayer.SoundLocation%2A> propiedad está establecida en una ubicación de sonido nueva y es válida.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberSignature Language="F#" Value="member this.StreamChanged : EventHandler " Usage="member this.StreamChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se ha establecido un nuevo origen de audio de <see cref="T:System.IO.Stream" /> para este <see cref="T:System.Media.SoundPlayer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se desencadena cuando un nuevo <xref:System.IO.Stream> para este origen de audio <xref:System.Media.SoundPlayer> se ha establecido.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">Información general de la clase SoundPlayer (formularios Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
        <param name="context">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
        <summary>Para obtener una descripción de este miembro, vea el método <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Media.SoundPlayer> se convierte en una interfaz <xref:System.Runtime.Serialization.ISerializable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Media.SoundPlayer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Object" /> que contiene datos sobre <see cref="T:System.Media.SoundPlayer" />.</summary>
        <value><see cref="T:System.Object" /> que contiene datos sobre <see cref="T:System.Media.SoundPlayer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>