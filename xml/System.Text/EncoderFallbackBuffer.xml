<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e141f420e0edf6d758c8945e920a86ecdb9ac315" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721559" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un búfer que permite a un controlador de retroceso devolver una cadena alternativa a un codificador cuando no puede codificar un carácter de entrada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una codificación define una asignación entre un carácter Unicode y una secuencia de bytes codificada. Se produce un error en una operación de codificación, que convierte un carácter de entrada en una secuencia de bytes de salida, si no se define ninguna asignación para un determinado carácter.  
  
 .NET Framework proporciona un mecanismo, denominado reserva, si no se puede realizar una conversión de control de errores. Todos los controladores de reserva de codificador deben implementar lo siguiente:  
  
-   Un codificador de reserva, que se representa mediante una clase derivada de la <xref:System.Text.EncoderFallback> clase.  
  
-   Un búfer de reserva del codificador, que viene representado por un tipo derivado de la <xref:System.Text.EncoderFallbackBuffer> clase que puede devolver una cadena a la operación de conversión.  
  
 Reservas pueden usar tres estrategias para controlar los errores de conversión:  
  
-   Asignación con ajuste perfecto. El búfer de reserva de codificador puede devolver una cadena que representa una buena aproximación al carácter de entrada. .NET Framework no proporciona un público con ajuste perfecto <xref:System.Text.EncoderFallbackBuffer> implementación.  
  
-   Sustitución. El búfer de reserva de codificador puede devolver una cadena, como un signo de interrogación ("?"), que indica que no se pudo codificar un carácter. En .NET Framework, el <xref:System.Text.EncoderReplacementFallback> y <xref:System.Text.EncoderReplacementFallbackBuffer> clases proporcionan una implementación de búfer de reserva de reemplazo pública. El constructor de la <xref:System.Text.EncoderReplacementFallback> clase le permite definir la cadena de reemplazo.  
  
-   Excepción. El <xref:System.Text.EncoderFallbackBuffer> implementación produce una excepción, lo que indica que no se puede codificar un carácter y finaliza la operación de codificación. En este caso, debe proporcionar el controlador de reserva un <xref:System.Text.EncoderFallbackBuffer> implementación, aunque no se devuelve una cadena para el codificador. En .NET Framework, el <xref:System.Text.EncoderExceptionFallback> y <xref:System.Text.EncoderExceptionFallbackBuffer> clases proporcionan una implementación de reserva de excepción pública que se produce un <xref:System.Text.EncoderFallbackException> cuando no se puede codificar un carácter.  
  
 El búfer en un <xref:System.Text.EncoderFallbackBuffer> implementación representa toda la cadena que se devuelve al codificador en respuesta a un codificador de reserva. Por lo general, las implementaciones también incluyen información de estado, como el índice del carácter siguiente para devolver el codificador y el número de caracteres restantes va a devolver. Dado que <xref:System.Text.EncoderFallbackBuffer> es una clase abstracta, requiere que las clases derivadas para implementar los miembros siguientes como mínimo:  
  
-   Sobrecargado <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método, que es invocado por el codificador cuando no se puede codificar un carácter. El codificador pasa dos fragmentos de información a la implementación de búfer de reserva: el carácter o par suplente que no se pudo codificar y el índice del carácter en la entrada. En un controlador de excepciones de reserva de codificador, se produce la excepción en este método. En caso contrario, devuelve el método `true` si proporciona una reserva, o `false` si no es así.  
  
-   El <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método, que se llama repetidamente el codificador si el <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> devuelve del método `true`. En las sucesivas llamadas, el controlador debe devolver cada carácter en su búfer. Cuando haya devuelto todos los caracteres, debe devolver u+0000. Un controlador de excepciones siempre devuelve u+0000.  
  
-   El <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> método, que intenta mover el puntero a la posición anterior en el búfer y que indica si el movimiento se realizó correctamente. Siempre devuelve un controlador de excepciones `false`.  
  
-   El <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> propiedad, que indica el número de caracteres restantes que se devuelven al codificador. Un controlador de reserva de excepción siempre devuelve cero.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">Codificación de caracteres en .NET Framework</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29">Ejemplo: Cirílico con la utilidad de transliteración romano</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.EncoderFallbackBuffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica si existe una cadena suplente disponible cuando no se puede codificar la entrada original, o si se debe omitir la entrada original.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Carácter de entrada.</param>
        <param name="index">Posición de índice del carácter en el búfer de entrada.</param>
        <summary>Cuando se invalida en una clase derivada, prepara el búfer de reserva para controlar el carácter de entrada especificado.</summary>
        <returns>Es <see langword="true" /> si el búfer de reserva puede procesar <paramref name="charUnknown" />; es <see langword="false" /> si el búfer de reserva omite <paramref name="charUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> y <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> llamada métodos <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> si encuentran un carácter de entrada desconocido que no se puede codificar. Un valor devuelto de `true` indica que el búfer de reserva puede procesar el carácter de entrada, lo que hace que el método de llamada llamar a la <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método para obtener cada carácter del búfer de reserva. Dado que no procesa los caracteres individuales, la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método en un controlador de reserva de excepción produce una excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Suplente alto del par de entrada.</param>
        <param name="charUnknownLow">Suplente bajo del par de entrada.</param>
        <param name="index">Posición de índice del par suplente en el búfer de entrada.</param>
        <summary>Cuando se invalida en una clase derivada, prepara el búfer de reserva para controlar el par suplente especificado.</summary>
        <returns><see langword="true" /> si el búfer de reserva puede procesar <paramref name="charUnknownHigh" /> y <paramref name="charUnknownLow" />; <see langword="false" /> si el búfer de reserva omite el par suplente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> y <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> llamada métodos <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> si encuentran un par suplente en su entrada. Un valor devuelto de `true` indica que el búfer de reserva puede procesar el par suplente, lo que hace que el método de llamada llamar a la <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método para obtener cada carácter del búfer de reserva.  Dado que no procesa los caracteres individuales, la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método en un controlador de reserva de excepción produce una excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se invalida en una clase derivada, recupera el carácter siguiente en el búfer de reserva.</summary>
        <returns>Carácter siguiente en el búfer de reserva.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llama una operación de codificación el <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método si la operación encuentra un carácter desconocido o par suplente en la entrada. Por ejemplo, en el caso de un reemplazo reserva, si la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> devuelve del método `true`, existe una cadena suplente que se pueden codificar en lugar de la entrada desconocida. Las llamadas de operación de codificación el <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método varias veces y obtiene el sustituto cadena un carácter a la vez. Cuando se han devuelto todos los caracteres del búfer de reserva para el codificador, el <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método debe devolver u+0000.  
  
 Para un controlador de reserva de excepción, el <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método debe devolver u+0000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se invalida en una clase derivada, realiza la siguiente llamada al método <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> para obtener acceso a la posición del carácter del búfer de datos situada antes de la posición del carácter actual.</summary>
        <returns>Es <see langword="true" /> si el resultado de la operación <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> es correcto; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe devolver un controlador de reserva de excepción `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene el número de caracteres del objeto <see cref="T:System.Text.EncoderFallbackBuffer" /> actual que están pendientes de ser procesados.</summary>
        <value>Número de caracteres en el búfer de reserva actual que aún no se han procesado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> devuelve del método `true` si <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> es un valor distinto de cero.  
  
 Para un controlador de reserva de excepción, el <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> método debe devolver cero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa todos los datos y la información de estado relacionados con este búfer de reserva.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Después de llamar a la <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> método, el <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> propiedad debe devolver 0, el <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> método debe devolver u+0000 y el <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> método debe devolver <see langword="false" />.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>