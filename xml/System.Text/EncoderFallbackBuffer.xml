<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncoderFallbackBuffer.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5116c4743750d62c78bf7a85e6e5dff453828390b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">116c4743750d62c78bf7a85e6e5dff453828390b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</source>
          <target state="translated">Proporciona un búfer que permite que un controlador de reserva devuelva una cadena alternativa a un codificador cuando no puede codificar un carácter de entrada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</source>
          <target state="translated">Una codificación define una asignación entre un carácter Unicode y una secuencia de bytes codificada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</source>
          <target state="translated">Se produce un error en una operación de codificación, que convierte un carácter de entrada en una secuencia de bytes de salida, si no se ha definido ninguna asignación para un carácter determinado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</source>
          <target state="translated">.NET Framework proporciona un mecanismo, denominado reserva, si no se puede realizar una conversión de control de errores.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>All encoder fallback handlers must implement the following:</source>
          <target state="translated">Todos los controladores de reserva de codificador deben implementar lo siguiente:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoder fallback, which is represented by a class derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> class.</source>
          <target state="translated">Un codificador de reserva, que se representa mediante una clase derivada de la <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoder fallback buffer, which is represented by a type derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> class that can return a string to the conversion operation.</source>
          <target state="translated">Un búfer de reserva de codificador, que está representado por un tipo derivado de la <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> clase que puede devolver una cadena a la operación de conversión.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Fallbacks can use three strategies to handle conversion failures:</source>
          <target state="translated">Las reservas pueden utilizar tres estrategias para controlar los errores de conversión:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Best-fit mapping.</source>
          <target state="translated">Asignación con ajuste perfecto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The encoder fallback buffer can return a string that represents a close approximation to the input character.</source>
          <target state="translated">El búfer de reserva de codificador puede devolver una cadena que representa una aproximación cercana a para el carácter de entrada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The .NET Framework does not provide a public best-fit <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation.</source>
          <target state="translated">.NET Framework no proporciona un complemento público con ajuste perfecto <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Replacement.</source>
          <target state="translated">Reemplazo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</source>
          <target state="translated">El búfer de reserva de codificador puede devolver una cadena, como un signo de interrogación ("?"), que indica que no se pudo codificar un carácter.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> classes provide a public replacement fallback buffer implementation.</source>
          <target state="translated">En .NET Framework, el <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> y <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> clases proporcionan una implementación de búfer de reserva de reemplazo pública.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The constructor of the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> class enables you to define the replacement string.</source>
          <target state="translated">El constructor de la <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> clase le permite definir la cadena de reemplazo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Exception.</source>
          <target state="translated">Excepción.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementación produce una excepción, lo que indica que no se puede codificar un carácter y finaliza la operación de codificación.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In this case, the fallback handler must provide an <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation, although it does not return a string to the encoder.</source>
          <target state="translated">En este caso, el controlador de reserva debe proporcionar un <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementación, aunque no se devuelve una cadena para el codificador.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> classes provide a public exception fallback implementation that throws an <ph id="ph3">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> when a character cannot be encoded.</source>
          <target state="translated">En .NET Framework, el <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> y <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> clases proporcionan una implementación de reserva de excepción pública que produce una <ph id="ph3">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> cuando no se puede codificar un carácter.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The buffer in an <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</source>
          <target state="translated">El búfer en un <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementación representa toda la cadena que se devuelvan al codificador en respuesta a un codificador de reserva.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</source>
          <target state="translated">Por lo general, las implementaciones también incluyen información de estado, como el índice del carácter siguiente para devolver el codificador y el número de caracteres restantes va a devolver.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> is an abstract class, it requires derived classes to implement the following members at a minimum:</source>
          <target state="translated">Dado que <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> es una clase abstracta, requiere que las clases derivadas implementan los siguientes miembros como mínimo:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The overloaded <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method, which is called by the encoder when it cannot encode a character.</source>
          <target state="translated">Sobrecargado <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método, que es llamado por el codificador cuando no se puede codificar un carácter.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</source>
          <target state="translated">El codificador pasa dos piezas de información a la implementación del búfer de reserva: el carácter o par suplente que no se pudo codificar y el índice del carácter en la entrada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In an encoder fallback exception handler, the exception is thrown in this method.</source>
          <target state="translated">En un controlador de excepciones de reserva de codificador, la excepción se produce en este método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Otherwise, the method returns <ph id="ph1">`true`</ph> if it provides a fallback, or <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">En caso contrario, el método devuelve <ph id="ph1">`true`</ph> si proporciona una reserva, o <ph id="ph2">`false`</ph> si no es así.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method, which is called repeatedly by the encoder if the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> método, que se llama repetidamente el codificador si la <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In successive calls, the handler should return each character in its buffer.</source>
          <target state="translated">En llamadas sucesivas, el controlador debería devolver cada carácter en su búfer.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>When it has returned all characters, it should return U+0000.</source>
          <target state="translated">Cuando haya devuelto todos los caracteres, debe devolver u+0000.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An exception handler always returns U+0000.</source>
          <target state="translated">Un controlador de excepciones siempre devuelve u+0000.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A&gt;</ph> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A&gt;</ph> método, que intenta mover el puntero hasta la posición anterior en el búfer y se indica si el movimiento se realizó correctamente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An exception handler always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Siempre devuelve un controlador de excepciones <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph> property, which indicates the number of remaining characters to be returned to the encoder.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph> propiedad, que indica el número de caracteres restantes que se devuelven al codificador.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An exception fallback handler always returns zero.</source>
          <target state="translated">Un controlador de reserva de excepción siempre devuelve cero.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</source>
          <target state="translated">Indica si existe una cadena suplente disponible cuando no se puede codificar la entrada original, o si se debe omitir la entrada original.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>An input character.</source>
          <target state="translated">Carácter de entrada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">Posición de índice del carácter en el búfer de entrada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</source>
          <target state="translated">Cuando se invalida en una clase derivada, prepara el búfer de reserva para controlar el carácter de entrada especificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="charUnknown" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores <ph id="ph4">&lt;paramref name="charUnknown" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el búfer de reserva puede procesar <ph id="ph2">&lt;paramref name="charUnknown" /&gt;</ph>; es <ph id="ph3">&lt;see langword="false" /&gt;</ph> si el búfer de reserva omite <ph id="ph4">&lt;paramref name="charUnknown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29&gt;</ph> if they encounter an unknown input character that cannot be encoded.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph> llamadas de métodos <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29&gt;</ph> si encuentran un carácter de entrada desconocido que no se puede codificar.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the input character, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">Un valor devuelto de <ph id="ph1">`true`</ph> indica que el búfer de reserva puede procesar el carácter de entrada, que hace que el método que realiza la llamada llamar a la <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> método para obtener cada carácter del búfer de reserva.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>Because it does not process individual characters, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">Dado que no procesa los caracteres individuales, la <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método en un controlador de reserva de excepción produce una excepción.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">Suplente alto del par de entrada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">Suplente bajo del par de entrada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">Posición de índice del par suplente en el búfer de entrada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</source>
          <target state="translated">Cuando se invalida en una clase derivada, prepara el búfer de reserva para controlar el par suplente especificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="charUnknownHigh" /&gt;</ph> and <ph id="ph3">&lt;paramref name="charUnknownLow" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores the surrogate pair.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el búfer de reserva puede procesar <ph id="ph2">&lt;paramref name="charUnknownHigh" /&gt;</ph> y <ph id="ph3">&lt;paramref name="charUnknownLow" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> si el búfer de reserva omite el par suplente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29&gt;</ph> if they encounter a surrogate pair in their input.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph> llamadas de métodos <ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29&gt;</ph> si encuentran un par suplente en su entrada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">Un valor devuelto de <ph id="ph1">`true`</ph> indica que el búfer de reserva puede procesar el par suplente, que hace que el método que realiza la llamada llamar a la <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> método para obtener cada carácter del búfer de reserva.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Because it does not process individual characters, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">Dado que no procesa los caracteres individuales, la <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método en un controlador de reserva de excepción produce una excepción.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>When overridden in a derived class, retrieves the next character in the fallback buffer.</source>
          <target state="translated">Cuando se invalida en una clase derivada, recupera el carácter siguiente en el búfer de reserva.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>The next character in the fallback buffer.</source>
          <target state="translated">Carácter siguiente en el búfer de reserva.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>An encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method if the operation encounters an unknown character or surrogate pair in the input.</source>
          <target state="translated">Llama a una operación de codificación el <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método si la operación encuentra un carácter desconocido o par suplente en la entrada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>For example, in the case of a replacement fallback, if the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, a substitute string exists that can be encoded instead of the unknown input.</source>
          <target state="translated">Por ejemplo, en el caso de un reemplazo reserva, si la <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método devuelve <ph id="ph2">`true`</ph>, existe una cadena de reemplazo que se pueden codificar en lugar de la entrada desconocida.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>The encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method repeatedly and obtains the substitute string one character at a time.</source>
          <target state="translated">Las llamadas de operación de codificación el <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> método repetidamente y obtiene el sustituto de cadena un carácter a la vez.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>When all characters in the fallback buffer have been returned to the encoder, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">Cuando se han devuelto todos los caracteres en el búfer de reserva para el codificador, el <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> método debe devolver u+0000.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">Para un controlador de reserva de excepción, el <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> método debe devolver u+0000.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.MovePrevious">
          <source>When overridden in a derived class, causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> method to access the data buffer character position that is prior to the current character position.</source>
          <target state="translated">Cuando se invalida en una clase derivada, realiza la siguiente llamada al método <ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> para obtener acceso a la posición del carácter del búfer de datos situada antes de la posición del carácter actual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.MovePrevious">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> operation was successful; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el resultado de la operación <ph id="ph2">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> es correcto; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.MovePrevious">
          <source>An exception fallback handler should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Debe devolver un controlador de reserva de excepción <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>When overridden in a derived class, gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene el número de caracteres del objeto <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> actual que están pendientes de ser procesados.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>The number of characters in the current fallback buffer that have not yet been processed.</source>
          <target state="translated">Número de caracteres en el búfer de reserva actual que aún no se han procesado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if <ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph> is a nonzero value.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> método <ph id="ph2">`true`</ph> si <ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph> es un valor distinto de cero.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> method should return zero.</source>
          <target state="translated">Para un controlador de reserva de excepción, el <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> método debe devolver cero.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Reset">
          <source>Initializes all data and state information pertaining to this fallback buffer.</source>
          <target state="translated">Inicializa todos los datos y la información de estado relacionados con este búfer de reserva.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Reset">
          <source>After calling the <ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.Reset" /&gt;</ph> method, the <ph id="ph2">&lt;see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /&gt;</ph> property should return 0, the <ph id="ph3">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> method should return U+0000, and the <ph id="ph4">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> method should return <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.Reset" /&gt;</ph> método, el <ph id="ph2">&lt;see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /&gt;</ph> propiedad debería devolver 0, el <ph id="ph3">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> método debe devolver u+0000 y el <ph id="ph4">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> método debe devolver <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>