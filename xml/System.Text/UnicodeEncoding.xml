<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a9cbe-101">Representa una codificación UTF-16 de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-101">Represents a UTF-16 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-102">Codificar es el proceso de transformar un conjunto de caracteres Unicode en una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="a9cbe-103">La descodificación es el proceso de transformar una secuencia de bytes codificados en un conjunto de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="a9cbe-104">El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) asigna un punto de código (un número) a cada carácter en todos los scripts admitidos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="a9cbe-105">Un formato de transformación Unicode (UTF) es una manera de codificar ese punto de código.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="a9cbe-106">El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) utiliza las siguientes codificaciones UTF:</span><span class="sxs-lookup"><span data-stu-id="a9cbe-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="a9cbe-107">UTF-8, que representa cada punto de código como una secuencia de uno a cuatro bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="a9cbe-108">UTF-16, que representa cada punto de código como una secuencia de uno o dos enteros de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="a9cbe-109">UTF-32, que representa cada punto de código como un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="a9cbe-110">Para obtener más información acerca de las codificaciones UTF y otras codificaciones admitidas por <xref:System.Text>, consulte [codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="a9cbe-111">La <xref:System.Text.UnicodeEncoding> clase representa una codificación UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="a9cbe-112">El codificador puede usar cualquier orden de bytes big endian (byte más significativo primero) o el orden de bytes endian little (byte menos significativo primero).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="a9cbe-113">Por ejemplo, la letra mayúscula latina (punto de código u+0041) se serializa como sigue (en formato hexadecimal):</span><span class="sxs-lookup"><span data-stu-id="a9cbe-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="a9cbe-114">Orden de bytes big-endian: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="a9cbe-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="a9cbe-115">Orden de bytes endian little: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="a9cbe-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="a9cbe-116">Es normalmente más eficaz para almacenar caracteres Unicode mediante el orden de bytes nativo de una plataforma concreta.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="a9cbe-117">Por ejemplo, es mejor usar el orden de bytes endian little en plataformas little-endian, como equipos Intel.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="a9cbe-118">La <xref:System.Text.UnicodeEncoding> clase corresponde a las páginas de códigos de Windows 1200 (orden de bytes endian poco) y 1201 (orden de bytes big-endian).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="a9cbe-119">Puede determinar el "endian" de una determinada arquitectura mediante una llamada a la <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a9cbe-120">Opcionalmente, la <xref:System.Text.UnicodeEncoding> objeto proporciona una marca de orden de bytes (BOM), que es una matriz de bytes que se puede anteponer a la secuencia de bytes resultante del proceso de codificación.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="a9cbe-121">Si el preámbulo contiene una marca de orden de bytes (BOM), ayudará al descodificador a determinar el orden de bytes y el formato de transformación o UTF.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="a9cbe-122">Si el <xref:System.Text.UnicodeEncoding> instancia está configurada para proporcionar una lista de materiales, puede recuperarlo mediante una llamada a la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método; en caso contrario, el método devuelve una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="a9cbe-123">Tenga en cuenta que, aunque un <xref:System.Text.UnicodeEncoding> objeto está configurado para admitir l. MAT, debe incluir la lista de materiales al principio de la secuencia de bytes codificada según corresponda; los métodos de codificación de la <xref:System.Text.UnicodeEncoding> clase no lo hace automáticamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="a9cbe-124">Para habilitar la detección de errores y para hacer que la instancia de clase sea más segura, debe crear una instancia de un <xref:System.Text.UnicodeEncoding> objeto mediante una llamada a la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidBytes` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="a9cbe-125">Con la detección de error, un método que detecta una secuencia de caracteres o bytes no válida inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-126">Sin detección de errores, se inicia ninguna excepción y, por lo general se omite la secuencia no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="a9cbe-127">Puede crear instancias de un <xref:System.Text.UnicodeEncoding> objeto en una de varias maneras, dependiendo de si desea que se proporciona una marca de orden de bytes (BOM), si desea que la codificación big-endian o little-endian y si desea habilitar la detección de errores.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="a9cbe-128">La siguiente tabla se recogen los <xref:System.Text.UnicodeEncoding> constructores y el <xref:System.Text.Encoding> propiedades que devuelven un <xref:System.Text.UnicodeEncoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="a9cbe-129">Miembro</span><span class="sxs-lookup"><span data-stu-id="a9cbe-129">Member</span></span>|<span data-ttu-id="a9cbe-130">Modos endian</span><span class="sxs-lookup"><span data-stu-id="a9cbe-130">Endianness</span></span>|<span data-ttu-id="a9cbe-131">BOM</span><span class="sxs-lookup"><span data-stu-id="a9cbe-131">BOM</span></span>|<span data-ttu-id="a9cbe-132">Detección de errores</span><span class="sxs-lookup"><span data-stu-id="a9cbe-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="a9cbe-133">Big-endian</span><span class="sxs-lookup"><span data-stu-id="a9cbe-133">Big-endian</span></span>|<span data-ttu-id="a9cbe-134">Sí</span><span class="sxs-lookup"><span data-stu-id="a9cbe-134">Yes</span></span>|<span data-ttu-id="a9cbe-135">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="a9cbe-136">Little-endian</span><span class="sxs-lookup"><span data-stu-id="a9cbe-136">Little-endian</span></span>|<span data-ttu-id="a9cbe-137">Sí</span><span class="sxs-lookup"><span data-stu-id="a9cbe-137">Yes</span></span>|<span data-ttu-id="a9cbe-138">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="a9cbe-139">Little-endian</span><span class="sxs-lookup"><span data-stu-id="a9cbe-139">Little-endian</span></span>|<span data-ttu-id="a9cbe-140">Sí</span><span class="sxs-lookup"><span data-stu-id="a9cbe-140">Yes</span></span>|<span data-ttu-id="a9cbe-141">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="a9cbe-142">Configurable</span><span class="sxs-lookup"><span data-stu-id="a9cbe-142">Configurable</span></span>|<span data-ttu-id="a9cbe-143">Configurable</span><span class="sxs-lookup"><span data-stu-id="a9cbe-143">Configurable</span></span>|<span data-ttu-id="a9cbe-144">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="a9cbe-145">Configurable</span><span class="sxs-lookup"><span data-stu-id="a9cbe-145">Configurable</span></span>|<span data-ttu-id="a9cbe-146">Configurable</span><span class="sxs-lookup"><span data-stu-id="a9cbe-146">Configurable</span></span>|<span data-ttu-id="a9cbe-147">Configurable</span><span class="sxs-lookup"><span data-stu-id="a9cbe-147">Configurable</span></span>|  
  
 <span data-ttu-id="a9cbe-148">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método determina el número de bytes resultante de codificar un juego de caracteres Unicode y el <xref:System.Text.UnicodeEncoding.GetBytes%2A> método realiza la codificación real.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="a9cbe-149">Del mismo modo, el <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método determina el número de caracteres resultante de descodificar una secuencia de bytes y el <xref:System.Text.UnicodeEncoding.GetChars%2A> y <xref:System.Text.UnicodeEncoding.GetString%2A> métodos realizan la descodificación real.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="a9cbe-150">Para un codificador o descodificador que es capaz de guardar información de estado cuando la codificación o descodificación de datos que abarca varios bloques (como las cadenas de caracteres de 1 millón se codifica en segmentos de carácter de 100.000), use la <xref:System.Text.UnicodeEncoding.GetEncoder%2A> y <xref:System.Text.UnicodeEncoding.GetDecoder%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-151">En el ejemplo siguiente se muestra cómo codificar una cadena de caracteres Unicode en una matriz de bytes mediante el uso de un <xref:System.Text.UnicodeEncoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="a9cbe-152">La matriz de bytes se descodifica en una cadena para mostrar que no hay ninguna pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="a9cbe-153">En el ejemplo siguiente se utiliza la misma cadena que el anterior, salvo que escribe los bytes codificados en un archivo y agrega el prefijo de la secuencia de bytes con una marca de orden de bytes (BOM).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="a9cbe-154">A continuación, lee el archivo de dos maneras diferentes: como un archivo de texto mediante un <xref:System.IO.StreamReader> objeto; y como un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="a9cbe-155">Tal como se esperaría en ningún caso la marca BOM pertenece a la cadena recién lectura.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9cbe-156">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-156">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9cbe-157">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-158">Este constructor crea una instancia que usa el orden de bytes endian little, proporciona una marca de orden de bytes Unicode y no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-159">Por motivos de seguridad, debe habilitar la detección de errores mediante una llamada a la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidBytes` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-160">En el ejemplo siguiente se muestra cómo crear un nuevo <xref:System.Text.UnicodeEncoding> instancia y mostrar el nombre de la codificación.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-160">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="a9cbe-161"><see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo) o <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-161"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark">
          <span data-ttu-id="a9cbe-162">Es <see langword="true" /> para especificar que el método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-162"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a9cbe-163">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-163">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="a9cbe-164">Los parámetros especifican si se usa el orden de bytes big endian y si el método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-165">Este constructor crea una instancia que no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-166">Por motivos de seguridad, debe habilitar la detección de errores mediante una llamada a la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidBytes` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="a9cbe-167">El `byteOrderMark` parámetro controla el funcionamiento de la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-167">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="a9cbe-168">Si `true`, el método devuelve una matriz de bytes que contiene la marca de orden de bytes Unicode (BOM) en formato UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-168">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="a9cbe-169">Si `false`, devuelve una matriz de bytes de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-169">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="a9cbe-170">Sin embargo, establecer `byteOrderMark` a `true` no provoca la <xref:System.Text.UnicodeEncoding.GetBytes%2A> método como prefijo la marca BOM al principio de la matriz de bytes, ni hace que el <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método debe incluir el número de bytes en la lista de materiales en el recuento de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-170">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-171">En el ejemplo siguiente se muestra cómo crear un nuevo <xref:System.Text.UnicodeEncoding> marca de orden de instancia que especifica si se va a admitir el orden de bytes de endian little-endian o big y el byte de Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-171">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="a9cbe-172"><see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo); <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-172"><see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark">
          <span data-ttu-id="a9cbe-173">Es <see langword="true" /> para especificar que el método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-173"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="a9cbe-174"><see langword="true" /> para especificar que se produzca una excepción cuando se detecte una codificación no válida, en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-174"><see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a9cbe-175">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-175">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="a9cbe-176">Los parámetros especifican si se usa el orden de bytes big endian, si se proporciona una marca de orden de bytes Unicode y si se produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-176">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-177">El `byteOrderMark` parámetro controla el funcionamiento de la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-177">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="a9cbe-178">Si `true`, el método devuelve una matriz de bytes que contiene la marca de orden de bytes Unicode (BOM) en formato UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-178">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="a9cbe-179">Si `false`, devuelve una matriz de bytes de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-179">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="a9cbe-180">Sin embargo, establecer `byteOrderMark` a `true` no provoca la <xref:System.Text.UnicodeEncoding.GetBytes%2A> método como prefijo la marca BOM al principio de la matriz de bytes, ni hace que el <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método debe incluir el número de bytes en la lista de materiales en el recuento de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-180">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="a9cbe-181">Si el `throwOnInvalidBytes` parámetro es `true`, un método que detecta una secuencia de bytes no válida inicia <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-181">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a9cbe-182">En caso contrario, el método no produce una excepción y se omite la secuencia no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-182">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-183">Por motivos de seguridad, las aplicaciones se recomiendan usar este constructor para crear una instancia de la <xref:System.Text.UnicodeEncoding> clase y activar la detección de errores estableciendo `throwOnInvalidBytes` a `true`.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-183">For security reasons, your applications are recommended to use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-184">En el ejemplo siguiente se muestra el comportamiento de <xref:System.Text.UnicodeEncoding>, con la detección de errores habilitada y sin.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-184">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a9cbe-185">Representa, en bytes, el tamaño de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-185">Represents the Unicode character size in bytes.</span></span> <span data-ttu-id="a9cbe-186">Este campo es una constante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-186">This field is a constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-187">El valor de este campo es una constante de 32 bits con signo con un valor de 2.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-187">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-188">En el ejemplo siguiente se muestra cómo devolver el valor de <xref:System.Text.UnicodeEncoding.CharSize> y lo muestra.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-188">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a9cbe-189">Objeto que se va a comparar con el objeto actual.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-189">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="a9cbe-190">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Text.UnicodeEncoding" /> actual.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-190">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="a9cbe-191"><see langword="true" /> si <paramref name="value" /> es una instancia de <see cref="T:System.Text.UnicodeEncoding" /> y es igual al objeto actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-191"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-192">Dos <xref:System.Text.UnicodeEncoding> objetos se consideran iguales si se cumplen todas las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="a9cbe-192">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="a9cbe-193">Ambos objetos utilizan el mismo orden de bytes (little-endian o big-endian).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-193">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="a9cbe-194">Ambos objetos proporcionan la marca de orden de bytes, o ambos no lo hace.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-194">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="a9cbe-195">Ambos objetos utilizan el mismo codificador reserva.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-195">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="a9cbe-196">Ambos objetos utilizan la misma reserva del descodificador.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-196">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-197">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.Equals%2A> método para probar si la actual <xref:System.Text.UnicodeEncoding> es igual a otro objeto <xref:System.Text.UnicodeEncoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-197">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="a9cbe-198">Cinco <xref:System.Text.UnicodeEncoding> objetos se crean y se comparan y se muestran los resultados de las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-198">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9cbe-199">Calcula el número de bytes generado mediante la codificación de un juego de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-199">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a9cbe-200">Cadena que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-200">The string that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-201">Calcula el número de bytes generado al codificar los caracteres de la cadena especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-201">Calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-202">Número de bytes que se generan al codificar los caracteres especificados.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-202">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-203">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-203">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-204">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-204">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-205">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-205">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-206">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-206">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-207">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-208">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-209">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-210">El ejemplo siguiente se llama el <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> y <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> métodos para calcular el número real y máximo de bytes necesarios para codificar una cadena.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-210">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="a9cbe-211">También muestra el número real de bytes necesarios para almacenar una secuencia de bytes con una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-211">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-212"><paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-212"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a9cbe-213">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-214">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-214">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-215">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-216">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-216">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-217">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-217"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a9cbe-218">Puntero al primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-218">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="a9cbe-219">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-219">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-220">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-220">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-221">Número de bytes que se generan al codificar los caracteres especificados.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-221">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-222">Para calcular la matriz exacta de tamaño que <xref:System.Text.UnicodeEncoding.GetBytes%2A> requiere para almacenar los bytes resultantes, se llama a la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-222">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-223">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-223">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-224">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-224">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-225">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-225">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-226">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-226">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-227">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-227">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-228">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-228">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-229"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-229"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-230"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-230"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-231">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-231">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-232">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-232">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-233">La detección de errores está habilitada y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-233">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-234">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-235">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-235">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-236">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-236"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a9cbe-237">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-237">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a9cbe-238">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-238">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a9cbe-239">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-239">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="a9cbe-240">Índice del primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-240">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="a9cbe-241">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-241">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-242">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-242">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-243">Número de bytes que se generan al codificar los caracteres especificados.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-243">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-244">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetBytes%2A> para almacenar los bytes resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-244">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="a9cbe-245">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-245">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-246">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-246">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-247">Con la detección de errores habilitada, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-247">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-248">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-248">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-249">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-249">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-250">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-250">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-251">En el ejemplo siguiente se rellena una matriz con un alfabeto latino en mayúsculas y minúsculas y llama el <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método para determinar el número de bytes necesarios para codificar los caracteres en minúsculas latinos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-251">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="a9cbe-252">A continuación, muestra esta información junto con el número total de bytes necesarios si se agrega una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-252">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="a9cbe-253">Este número compara con el valor devuelto por la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método, que indica el número máximo de bytes necesarios para codificar los caracteres en minúsculas latinos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-253">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="a9cbe-254">En el ejemplo siguiente se rellena una matriz con una combinación de caracteres griego y cirílico y llamadas el <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método para determinar el número de bytes necesarios para codificar los caracteres cirílicos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-254">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="a9cbe-255">A continuación, muestra esta información junto con el número total de bytes necesarios si se agrega una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-255">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="a9cbe-256">Este número compara con el valor devuelto por la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método, que indica el número máximo de bytes necesarios para codificar los caracteres cirílicos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-256">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-257"><paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-257"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-258"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-258"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-259">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-259">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-260"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-260"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="a9cbe-261">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-261">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-262">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-262">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-263">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-263">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-264">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-264">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-265">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-265">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-266">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-266"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9cbe-267">Codifica un juego de caracteres en una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-267">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a9cbe-268">Puntero al primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-268">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="a9cbe-269">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-269">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="a9cbe-270">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-270">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="a9cbe-271">Número máximo de bytes que se pueden escribir.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-271">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a9cbe-272">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-272">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-273">Número real de bytes escritos en la ubicación indicada por el parámetro <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-273">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-274">Para calcular la matriz exacta de tamaño que <xref:System.Text.UnicodeEncoding.GetBytes%2A> requiere para almacenar los bytes resultantes, se llama a la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-274">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-275">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-275">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-276">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-276">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-277">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-277">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-278">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-278">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-279">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-279">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a9cbe-280">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> objeto proporcionado por el <xref:System.Text.UnicodeEncoding.GetDecoder%2A> o <xref:System.Text.UnicodeEncoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-280">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-281">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-281">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-282">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-282">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="a9cbe-283">El <xref:System.Text.UnicodeEncoding.GetBytes%2A> método no anteponer un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-283">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-284"><paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-284"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="a9cbe-285">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-285">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-286"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-286"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-287"><paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-287"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-288">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-288">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="a9cbe-289">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-289">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-290">El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-290"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-291">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-291">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-292">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-292">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-293">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-293"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a9cbe-294">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-294">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a9cbe-295">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-295">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="a9cbe-296">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-296">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="a9cbe-297">Índice del primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-297">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="a9cbe-298">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-298">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="a9cbe-299">Matriz de bytes que contendrá la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-299">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="a9cbe-300">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-300">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="a9cbe-301">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-301">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-302">Número real de bytes escritos en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-302">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-303">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-303">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-304">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-304">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-305">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-305">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-306">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-306">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-307">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-307">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-308">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-308">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a9cbe-309">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UnicodeEncoding.GetDecoder%2A> método o la <xref:System.Text.UnicodeEncoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-309">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-310">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-310">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-311">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-311">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="a9cbe-312">El <xref:System.Text.UnicodeEncoding.GetBytes%2A> método no anteponer un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-312">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-313">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.GetBytes%2A> método para codificar un intervalo de caracteres de un <xref:System.String> y almacenar los bytes codificados en un intervalo de elementos de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-313">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-314"><paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-314"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="a9cbe-315">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-315">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-316"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-316"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-317">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-317"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-318">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-318">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-319"><paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-319"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="a9cbe-320">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-320">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-321"><paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-321"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-322">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-322">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="a9cbe-323">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-323">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-324"><paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-324"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-325">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-325">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-326">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-326">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-327">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-327"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a9cbe-328">Cadena que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-328">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="a9cbe-329">Índice del primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-329">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="a9cbe-330">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-330">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="a9cbe-331">Matriz de bytes que contendrá la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-331">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="a9cbe-332">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-332">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="a9cbe-333">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-333">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-334">Número real de bytes escritos en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-334">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-335">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-335">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-336">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-336">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="a9cbe-337">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-337">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-338">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-338">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-339">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-339">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-340">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-340">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a9cbe-341">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UnicodeEncoding.GetDecoder%2A> método o la <xref:System.Text.UnicodeEncoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-341">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-342">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-342">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-343">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-343">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="a9cbe-344">El <xref:System.Text.UnicodeEncoding.GetBytes%2A> método no anteponer un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-344">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-345">En el ejemplo siguiente se muestra cómo codificar un intervalo de elementos de una matriz de caracteres Unicode y almacenar los bytes codificados en un intervalo de elementos de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-345">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-346"><paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-346"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a9cbe-347">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-347">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-348"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-348"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-349">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-349"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-350">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-350">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-351"><paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-351"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="a9cbe-352">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-352">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-353"><paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-353"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-354">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-354">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="a9cbe-355">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-355">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-356"><paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-356"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-357">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-357">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-358">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-358">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-359">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-359"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9cbe-360">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-360">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a9cbe-361">Puntero al primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-361">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="a9cbe-362">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-362">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-363">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-363">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-364">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-364">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-365">Para calcular la matriz exacta de tamaño que <xref:System.Text.UnicodeEncoding.GetChars%2A> necesita para almacenar los caracteres resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-365">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-366">Para calcular el tamaño máximo de la matriz, debe usar la aplicación <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-366">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-367">El <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-367">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-368">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-368">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-369">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-369">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-370"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-370"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-371"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-371"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-372">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-372">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-373">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-374">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a9cbe-375">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-376">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-376">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-377">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a9cbe-378">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-378">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a9cbe-379">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-379">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a9cbe-380">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-380">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="a9cbe-381">Índice del primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-381">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="a9cbe-382">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-382">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-383">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-383">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-384">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-384">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-385">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetChars%2A> para almacenar los caracteres resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-385">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-386">Para calcular el tamaño máximo de la matriz, debe usar la aplicación <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-386">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-387">El <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-387">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-388">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-388">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-389">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-389">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-390">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método para devolver el número de caracteres generado mediante la descodificación de un intervalo de elementos de una matriz de bytes utilizando <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-390">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-391"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-391"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-392"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-392"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-393">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-393">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-394"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-394"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="a9cbe-395">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-395">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-396">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-396">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-397">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-397">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a9cbe-398">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-398">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-399">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-399">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-400">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-400"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9cbe-401">Descodifica una secuencia de bytes en un conjunto de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-401">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a9cbe-402">Puntero al primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-402">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="a9cbe-403">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-403">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="a9cbe-404">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-404">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="a9cbe-405">Número máximo de caracteres que se van a escribir.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-405">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="a9cbe-406">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-406">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-407">Número real de caracteres escritos en la ubicación indicada por el parámetro <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-407">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-408">Para calcular la matriz exacta de tamaño que <xref:System.Text.UnicodeEncoding.GetChars%2A> necesita para almacenar los caracteres resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-408">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-409">Para calcular el tamaño máximo de la matriz, debe usar la aplicación <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-409">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-410">El <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-410">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-411">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-411">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-412">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-412">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-413">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y un método de un tipo compatible con BOM no devolvió la matriz de bytes, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-413">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="a9cbe-414">Se puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-414">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a9cbe-415">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-415">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a9cbe-416">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> objeto proporcionado por el <xref:System.Text.UnicodeEncoding.GetDecoder%2A> o <xref:System.Text.UnicodeEncoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-416">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-417"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-417"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="a9cbe-418">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-418">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-419"><paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-419"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-420"><paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-420"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-421">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-421">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="a9cbe-422">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-422">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-423">El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-423"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a9cbe-424">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-424">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-425">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-425">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-426">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-426"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a9cbe-427">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-427">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a9cbe-428">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-428">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a9cbe-429">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-429">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="a9cbe-430">Índice del primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-430">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="a9cbe-431">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-431">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="a9cbe-432">Matriz de caracteres que contendrá el juego de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-432">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="a9cbe-433">Índice en el que se inicia la escritura del juego de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-433">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="a9cbe-434">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-434">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-435">Número real de caracteres escritos en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-435">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-436">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetChars%2A> para almacenar los caracteres resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-436">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-437">Para calcular el tamaño máximo de la matriz, debe usar la aplicación <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-437">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-438">El <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-438">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-439">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-439">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-440">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-440">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-441">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y un método de un tipo compatible con BOM no devolvió la matriz de bytes, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-441">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="a9cbe-442">Se puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-442">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a9cbe-443">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-443">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a9cbe-444">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UnicodeEncoding.GetDecoder%2A> método o la <xref:System.Text.UnicodeEncoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-444">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-445">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.GetChars%2A> método para descodificar un intervalo de elementos de una matriz de bytes y almacena el resultado en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-445">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-446"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-446"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="a9cbe-447">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-447">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-448"><paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-448"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-449">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-449"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-450">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-450">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-451"><paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-451"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="a9cbe-452">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-452">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-453"><paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-453"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-454">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-454">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="a9cbe-455">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-455">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-456"><paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-456"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a9cbe-457">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-457">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-458">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-458">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-459">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-459"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9cbe-460">Obtiene un descodificador que convierte una secuencia de bytes codificada en UTF-16 en una secuencia de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-460">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-461">Objeto <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en UTF-16 en una secuencia de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-461">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-462">El <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> método convierte bloques secuenciales de bytes en bloques secuenciales de caracteres, de forma similar a la <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-462">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="a9cbe-463">Sin embargo, un <xref:System.Text.Decoder> mantiene la información de estado entre llamadas, de modo que puede descodificar correctamente las secuencias de bytes que abarquen varios bloques.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-463">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="a9cbe-464">El <xref:System.Text.Decoder> también conserva los bytes finales al final de bloques de datos y utiliza los bytes finales en la siguiente operación de descodificación.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-464">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="a9cbe-465">Por lo tanto, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> y <xref:System.Text.UnicodeEncoding.GetEncoder%2A> son útiles para transmisiones en red y operaciones con archivos, dado que estas operaciones tratan a menudo con bloques de datos en lugar de un flujo de datos completo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-465">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="a9cbe-466">Si está habilitada la detección de errores, es decir, el `throwOnInvalidBytes` parámetro del constructor se establece en `true`, detección de errores también se habilita en el <xref:System.Text.Decoder> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-466">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="a9cbe-467">Si está habilitada la detección de errores y se encuentra una secuencia no válida, el estado del descodificador no está definido y el procesamiento debe detenerse.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-467">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-468">En el ejemplo siguiente se utiliza un codificador y un descodificador para codificar una cadena en una matriz de bytes y, a continuación, descodificar los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-468">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9cbe-469">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-469">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-470">Objeto <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-16.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-470">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-471">El <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> método convierte bloques secuenciales de caracteres en bloques secuenciales de bytes de una manera similar a la <xref:System.Text.UnicodeEncoding.GetBytes%2A> método de esta clase.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-471">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="a9cbe-472">Sin embargo, un <xref:System.Text.Encoder> objeto mantiene información de estado entre las llamadas para que pueden codificar correctamente secuencias de caracteres que abarquen varios bloques.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-472">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="a9cbe-473">La <xref:System.Text.Encoder> objeto también conserva los caracteres al final de bloques de datos y utiliza los caracteres finales en la siguiente operación de codificación.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-473">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="a9cbe-474">Por ejemplo, un bloque de datos podría finalizar con un suplente alto sin equivalente y el suplente bajo correspondiente podría estar en el siguiente bloque de datos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-474">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="a9cbe-475">Por lo tanto, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> y <xref:System.Text.UnicodeEncoding.GetEncoder%2A> son útiles para transmisiones en red y operaciones con archivos, dado que estas operaciones tratan a menudo con bloques de datos en lugar de un flujo de datos completo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-475">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="a9cbe-476">Si está habilitada la detección de errores, es decir, el `throwOnInvalidBytes` parámetro del constructor se establece en `true`, detección de errores también se habilita en el <xref:System.Text.Encoder> objeto devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-476">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="a9cbe-477">Si está habilitada la detección de errores y se encuentra una secuencia no válida, el estado del codificador está definido y el procesamiento debe detenerse.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-477">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-478">En el ejemplo siguiente se utiliza un codificador y un descodificador para codificar una cadena en una matriz de bytes y, a continuación, descodificar los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-478">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9cbe-479">Devuelve el código hash de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-479">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-480">Código hash para el objeto <see cref="T:System.Text.UnicodeEncoding" /> actual.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-480">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="a9cbe-481">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-481">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-482">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-482">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-483">Número máximo de bytes generados al codificar el número de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-483">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-484">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetBytes%2A> para almacenar los bytes resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-484">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="a9cbe-485">Para calcular el tamaño máximo de la matriz, debe usar la aplicación <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-485">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="a9cbe-486">El <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-486">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-487"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> Recupera un número más desfavorable, incluido el peor de los casos para el que se han seleccionado actualmente <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-487"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="a9cbe-488">Si se elige una acción de reserva con una cadena potencialmente grande, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> puede devolver valores grandes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-488">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="a9cbe-489">En la mayoría de los casos, este método recupera números razonables para cadenas pequeñas.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-489">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="a9cbe-490">Para cadenas de gran tamaño, tendrá que elegir entre usar búferes de grandes tamaño y detectar errores en el caso excepcional de que se supere un búfer más razonable.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-490">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="a9cbe-491">Puede que le interese tener en cuenta un enfoque diferente utilizando <xref:System.Text.UnicodeEncoding.GetByteCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-491">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a9cbe-492"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> no tiene ninguna relación con <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-492"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="a9cbe-493">Si la aplicación necesita una función similar a usar con <xref:System.Text.UnicodeEncoding.GetChars%2A>, debería utilizar <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-493">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-494">`GetMaxByteCount(N)` no es necesariamente el mismo valor que `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-494">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-495">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método para devolver el número máximo de bytes necesarios para codificar un número especificado de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-495">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-496"><paramref name="charCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-496"><paramref name="charCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-497">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-497">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-498">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-498">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="a9cbe-499">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-499">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-500">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-500">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-501">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-501"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="a9cbe-502">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-502">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-503">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-503">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-504">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-504">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-505">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UnicodeEncoding.GetChars%2A> para almacenar los caracteres resultantes, la aplicación usa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-505">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-506">Para calcular el tamaño máximo de la matriz, debe usar la aplicación <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-506">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="a9cbe-507">El <xref:System.Text.UnicodeEncoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-507">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="a9cbe-508"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> Recupera un número más desfavorable, incluido el peor de los casos para el que se han seleccionado actualmente <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-508"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="a9cbe-509">Si se elige una acción de reserva con una cadena potencialmente grande, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> recupera valores grandes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-509">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="a9cbe-510">En la mayoría de los casos, este método recupera números razonables para cadenas pequeñas.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-510">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="a9cbe-511">Para cadenas de gran tamaño, tendrá que elegir entre usar búferes de grandes tamaño y detectar errores en el caso excepcional de que se supere un búfer más razonable.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-511">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="a9cbe-512">Puede que le interese tener en cuenta un enfoque diferente utilizando <xref:System.Text.UnicodeEncoding.GetCharCount%2A> o <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-512">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="a9cbe-513"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> no tiene ninguna relación con <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-513"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="a9cbe-514">Si la aplicación necesita una función similar a usar con <xref:System.Text.UnicodeEncoding.GetBytes%2A>, debería utilizar <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-514">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9cbe-515">`GetMaxCharCount(N)` no es necesariamente el mismo valor que `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-515">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-516">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> método para devolver el número máximo de caracteres generado mediante la descodificación de un número especificado de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-516">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-517"><paramref name="byteCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-517"><paramref name="byteCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-518">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-518">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-519">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-519">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a9cbe-520">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-520">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-521">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-521">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-522">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-522"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9cbe-523">Devuelve una marca de orden de bytes Unicode codificada en formato UTF-16 si el constructor empleado para esta instancia solicita una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-523">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-524">Matriz de bytes que contiene la marca de orden de bytes Unicode, si el objeto <see cref="T:System.Text.UnicodeEncoding" /> está configurado para proporcionar una.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-524">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span></span> <span data-ttu-id="a9cbe-525">En caso contrario, este método devuelve una matriz de bytes de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-525">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-526">La <xref:System.Text.UnicodeEncoding> objeto puede proporcionar un preámbulo, que es una matriz de bytes que se puede anteponer a la secuencia de bytes resultante del proceso de codificación.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-526">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="a9cbe-527">Delante de una secuencia de bytes codificados con una marca de orden de bytes (punto de código U+FEFF) ayudará al descodificador a determinar el orden de bytes y el formato de transformación o UTF.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-527">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="a9cbe-528">La marca de orden de bytes Unicode (BOM) se serializa como se indica a continuación (en formato hexadecimal):</span><span class="sxs-lookup"><span data-stu-id="a9cbe-528">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="a9cbe-529">Orden de bytes big-endian: FF FE</span><span class="sxs-lookup"><span data-stu-id="a9cbe-529">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="a9cbe-530">Orden de bytes endian little: FF FE</span><span class="sxs-lookup"><span data-stu-id="a9cbe-530">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="a9cbe-531">Puede crear instancias de un <xref:System.Text.UnicodeEncoding> cuyos <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método devuelve una lista de materiales válida de las maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="a9cbe-531">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="a9cbe-532">Recuperando la <xref:System.Text.UnicodeEncoding> objeto devuelto por la <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> o <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-532">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a9cbe-533">Mediante una llamada sin parámetros <xref:System.Text.UnicodeEncoding.%23ctor> constructor para crear instancias de un <xref:System.Text.UnicodeEncoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-533">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="a9cbe-534">Si se suministra `true` como el valor de la `byteOrderMark` argumento pasado a la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> o <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructores.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-534">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="a9cbe-535">Se recomienda que use la lista de materiales, puesto que ofrece cierta identificación de una codificación para los archivos que de lo contrario han perdido una referencia a su codificación, como sin etiqueta o incorrectamente etiquetados datos web o archivos de texto aleatorios almacenados cuando un negocio no tenía intereses internacionales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-535">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="a9cbe-536">Problemas de los usuarios a menudo pueden evitarse si los datos se etiquetan de forma coherente y configurado correctamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-536">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="a9cbe-537">Estándares que proporcionan un tipo de codificación, una marca BOM es redundante en cierto modo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-537">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="a9cbe-538">Sin embargo, se puede utilizar para ayudar a un servidor de enviar el encabezado de codificación correcto.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-538">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="a9cbe-539">Como alternativa, se puede utilizar como reserva en caso de que la codificación en caso contrario, se pierde.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-539">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="a9cbe-540">Existen algunas desventajas del uso de una lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-540">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="a9cbe-541">Por ejemplo, puede ser difícil saber cómo limitar los campos de la base de datos que usan una lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-541">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="a9cbe-542">Concatenación de archivos puede ser un problema también, por ejemplo, cuando se combinan los archivos de tal forma que un carácter innecesario puede terminar en el centro de datos.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-542">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="a9cbe-543">A pesar de los inconvenientes de algunos, sin embargo, el uso de una lista de materiales se recomienda.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-543">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a9cbe-544">Para asegurarse de que los bytes codificados se descodifiquen correctamente, se debe anteponer el principio de una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-544">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="a9cbe-545">Tenga en cuenta que el <xref:System.Text.UnicodeEncoding.GetBytes%2A> método no anteponer una marca BOM a una secuencia de bytes codificados; la especificación de una lista de materiales al principio de una secuencia de bytes adecuada es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-545">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-546">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método para recuperar la marca de orden de bytes Unicode en big endian o little orden de bytes endian para una instancia de un <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-546">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="a9cbe-547">En el ejemplo siguiente se crean instancias de dos <xref:System.Text.UnicodeEncoding> objetos, el primero de los cuales no proporciona una lista de materiales y la segunda que no.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-547">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="a9cbe-548">A continuación, llama el <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método para escribir la lista de materiales en un archivo antes de escribir una cadena con codificación Unicode.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-548">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="a9cbe-549">Como se muestra en la salida del ejemplo de consola, el archivo que guarda los bytes desde el codificador de segundo tiene tres bytes más que el primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-549">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="a9cbe-550">También puede comparar los archivos mediante el `fc` comando en una ventana de consola, o bien puede inspeccionar los archivos en un editor de texto que incluye un modo de vista hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-550">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="a9cbe-551">Tenga en cuenta que cuando se abre el archivo en un editor que admita la codificación UTF-16, no se muestra la lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-551">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="a9cbe-552">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-552">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="a9cbe-553">Índice del primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-553">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="a9cbe-554">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-554">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="a9cbe-555">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-555">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="a9cbe-556">Objeto <see cref="T:System.String" /> que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-556">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9cbe-557">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-557">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a9cbe-558">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-558">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a9cbe-559">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y un método de un tipo compatible con BOM no devolvió la matriz de bytes, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-559">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="a9cbe-560">Se puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-560">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a9cbe-561">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-561">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="a9cbe-562">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> objeto proporcionado por el <xref:System.Text.UnicodeEncoding.GetDecoder%2A> o <xref:System.Text.UnicodeEncoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-562">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9cbe-563">En el ejemplo siguiente se inicializa una matriz mediante una llamada a la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> método para determinar exactamente cuántos bytes son necesarios para una cadena codificada y, a continuación, agregar el tamaño de la marca de orden de bytes (BOM).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-563">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="a9cbe-564">El ejemplo, a continuación, se llama la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> método utilizado para almacenar la lista de materiales a la matriz antes de llamar a la <xref:System.Text.Encoding.GetBytes%2A> método utilizado para almacenar los bytes codificados en la matriz.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-564">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="a9cbe-565">El ejemplo, a continuación, se llama el <xref:System.Text.UnicodeEncoding.GetString%2A> método para descodificar la cadena.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-565">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="a9cbe-566">Tenga en cuenta que en este caso la cadena descodificada difiere de la cadena original, ya que comienza con una marca de orden de bytes de 16 bits U+FFFD.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-566">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="a9cbe-567">Esto significa que las dos cadenas comparará diferente, y que, si la cadena es la salida, se mostrará la lista de materiales como el carácter de reemplazo "?".</span><span class="sxs-lookup"><span data-stu-id="a9cbe-567">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="a9cbe-568">Para quitar la marca BOM al principio de la cadena, puede llamar a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-568">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9cbe-569"><paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="a9cbe-569"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9cbe-570"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-570"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a9cbe-571">O bien</span><span class="sxs-lookup"><span data-stu-id="a9cbe-571">-or-</span></span>  
  
 <span data-ttu-id="a9cbe-572"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-572"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9cbe-573">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-573">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="a9cbe-574">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa)</span><span class="sxs-lookup"><span data-stu-id="a9cbe-574">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="a9cbe-575">- y -</span><span class="sxs-lookup"><span data-stu-id="a9cbe-575">-and-</span></span>  
  
 <span data-ttu-id="a9cbe-576">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="a9cbe-576"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>