<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="009b0-101">Representa una codificación UTF-32 de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="009b0-101">Represents a UTF-32 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-102">Codificar es el proceso de transformar un conjunto de caracteres Unicode en una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="009b0-103">La descodificación es el proceso de transformar una secuencia de bytes codificados en un conjunto de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="009b0-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="009b0-104">El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) asigna un punto de código (un número) a cada carácter en todos los scripts admitidos.</span><span class="sxs-lookup"><span data-stu-id="009b0-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="009b0-105">Un formato de transformación Unicode (UTF) es una manera de codificar ese punto de código.</span><span class="sxs-lookup"><span data-stu-id="009b0-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="009b0-106">El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) utiliza las siguientes codificaciones UTF:</span><span class="sxs-lookup"><span data-stu-id="009b0-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="009b0-107">UTF-8, que representa cada punto de código como una secuencia de uno a cuatro bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="009b0-108">UTF-16, que representa cada punto de código como una secuencia de uno o dos enteros de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="009b0-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="009b0-109">UTF-32, que representa cada punto de código como un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="009b0-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="009b0-110">Para obtener más información acerca de las codificaciones UTF y otras codificaciones admitidas por <xref:System.Text>, consulte.</span><span class="sxs-lookup"><span data-stu-id="009b0-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see .</span></span>  
  
 <span data-ttu-id="009b0-111">La <xref:System.Text.UTF32Encoding> clase representa una codificación UTF-32.</span><span class="sxs-lookup"><span data-stu-id="009b0-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="009b0-112">El codificador puede usar el orden de bytes big endian (byte más significativo primero) o el orden de bytes endian little (byte menos significativo primero).</span><span class="sxs-lookup"><span data-stu-id="009b0-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="009b0-113">Por ejemplo, la letra mayúscula latina (punto de código u+0041) se serializa como sigue (en formato hexadecimal):</span><span class="sxs-lookup"><span data-stu-id="009b0-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="009b0-114">Orden de bytes big-endian: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="009b0-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="009b0-115">Orden de bytes endian little: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="009b0-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="009b0-116">Es normalmente más eficaz para almacenar caracteres Unicode mediante el orden de bytes nativo.</span><span class="sxs-lookup"><span data-stu-id="009b0-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="009b0-117">Por ejemplo, es mejor usar el orden de bytes endian little en plataformas little-endian, como equipos Intel.</span><span class="sxs-lookup"><span data-stu-id="009b0-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="009b0-118"><xref:System.Text.UTF32Encoding> corresponde a las páginas de códigos 12000 (orden de bytes endian poco) y 12001 (orden de bytes big-endian) de Windows.</span><span class="sxs-lookup"><span data-stu-id="009b0-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="009b0-119">Puede determinar el "endian" de una determinada arquitectura mediante una llamada a la <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="009b0-120">Opcionalmente, la <xref:System.Text.UTF32Encoding> objeto proporciona una marca de orden de bytes (BOM), que es una matriz de bytes que se puede anteponer a la secuencia de bytes resultante del proceso de codificación.</span><span class="sxs-lookup"><span data-stu-id="009b0-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="009b0-121">Si el preámbulo contiene una marca de orden de bytes (BOM), ayudará al descodificador a determinar el orden de bytes y el formato de transformación o UTF de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="009b0-122">Si el <xref:System.Text.UTF32Encoding> instancia está configurada para proporcionar una lista de materiales, puede recuperarlo mediante una llamada a la <xref:System.Text.UTF32Encoding.GetPreamble%2A> método; en caso contrario, el método devuelve una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="009b0-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="009b0-123">Tenga en cuenta que, aunque un <xref:System.Text.UTF32Encoding> objeto está configurado para admitir l. MAT, debe incluir la lista de materiales al principio de la secuencia de bytes codificada según corresponda; los métodos de codificación de la <xref:System.Text.UTF32Encoding> clase no lo hace automáticamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="009b0-124">Para habilitar la detección de errores y para hacer que la instancia de clase sea más segura, debe crear una instancia de un <xref:System.Text.UTF32Encoding> objeto mediante una llamada a la <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidBytes` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="009b0-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="009b0-125">Con la detección de error, un método que detecta una secuencia de caracteres o bytes no válida inicia una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="009b0-126">Sin detección de errores, se inicia ninguna excepción y, por lo general se omite la secuencia no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="009b0-127">Puede crear instancias de un <xref:System.Text.UTF32Encoding> objeto en una de varias maneras, dependiendo de si desea que se proporciona una marca de orden de bytes (BOM), si desea que la codificación big-endian o little-endian y si desea habilitar la detección de errores.</span><span class="sxs-lookup"><span data-stu-id="009b0-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="009b0-128">La siguiente tabla se recogen los <xref:System.Text.UTF32Encoding> constructores y el <xref:System.Text.Encoding> propiedades que devuelven un <xref:System.Text.UnicodeEncoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="009b0-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="009b0-129">Miembro</span><span class="sxs-lookup"><span data-stu-id="009b0-129">Member</span></span>|<span data-ttu-id="009b0-130">Modos endian</span><span class="sxs-lookup"><span data-stu-id="009b0-130">Endianness</span></span>|<span data-ttu-id="009b0-131">BOM</span><span class="sxs-lookup"><span data-stu-id="009b0-131">BOM</span></span>|<span data-ttu-id="009b0-132">Detección de errores</span><span class="sxs-lookup"><span data-stu-id="009b0-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="009b0-133">Little-endian</span><span class="sxs-lookup"><span data-stu-id="009b0-133">Little-endian</span></span>|<span data-ttu-id="009b0-134">Sí</span><span class="sxs-lookup"><span data-stu-id="009b0-134">Yes</span></span>|<span data-ttu-id="009b0-135">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="009b0-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="009b0-136">Little-endian</span><span class="sxs-lookup"><span data-stu-id="009b0-136">Little-endian</span></span>|<span data-ttu-id="009b0-137">Sí</span><span class="sxs-lookup"><span data-stu-id="009b0-137">Yes</span></span>|<span data-ttu-id="009b0-138">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="009b0-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="009b0-139">Configurable</span><span class="sxs-lookup"><span data-stu-id="009b0-139">Configurable</span></span>|<span data-ttu-id="009b0-140">Configurable</span><span class="sxs-lookup"><span data-stu-id="009b0-140">Configurable</span></span>|<span data-ttu-id="009b0-141">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="009b0-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="009b0-142">Configurable</span><span class="sxs-lookup"><span data-stu-id="009b0-142">Configurable</span></span>|<span data-ttu-id="009b0-143">Configurable</span><span class="sxs-lookup"><span data-stu-id="009b0-143">Configurable</span></span>|<span data-ttu-id="009b0-144">Configurable</span><span class="sxs-lookup"><span data-stu-id="009b0-144">Configurable</span></span>|  
  
 <span data-ttu-id="009b0-145">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método determina el número de bytes resultante de codificar un juego de caracteres Unicode y el <xref:System.Text.UTF32Encoding.GetBytes%2A> método realiza la codificación real.</span><span class="sxs-lookup"><span data-stu-id="009b0-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="009b0-146">Del mismo modo, el <xref:System.Text.UTF32Encoding.GetCharCount%2A> método determina el número de caracteres resultante de descodificar una secuencia de bytes y el <xref:System.Text.UTF32Encoding.GetChars%2A> y <xref:System.Text.UTF32Encoding.GetString%2A> métodos realizan la descodificación real.</span><span class="sxs-lookup"><span data-stu-id="009b0-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="009b0-147">Para un codificador o descodificador que es capaz de guardar información de estado cuando la codificación o descodificación de datos que abarca varios bloques (como las cadenas de caracteres de 1 millón se codifica en segmentos de carácter de 100.000), use la <xref:System.Text.UTF32Encoding.GetEncoder%2A> y <xref:System.Text.UTF32Encoding.GetDecoder%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-148">En el ejemplo siguiente se muestra el comportamiento de <xref:System.Text.UTF32Encoding> objetos con y sin la detección de errores habilitado.</span><span class="sxs-lookup"><span data-stu-id="009b0-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="009b0-149">Crea una matriz de bytes cuyos último cuatro bytes representan un par suplente no válido; suplente alto U + D8FF va seguido de una U + 01FF, que se encuentra fuera del intervalo de caracteres suplentes bajos (0xDC00 a 0xDFFF).</span><span class="sxs-lookup"><span data-stu-id="009b0-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="009b0-150">Sin detección de errores, el descodificador UTF32 usa la reserva de reemplazo para reemplazar el par suplente no válido con REPLACEMENT CHARACTER (U+FFFD).</span><span class="sxs-lookup"><span data-stu-id="009b0-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="009b0-151">En el ejemplo siguiente se codifica una cadena de caracteres Unicode en una matriz de bytes mediante el uso de un <xref:System.Text.UTF32Encoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="009b0-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="009b0-152">A continuación, se descodifica la matriz de bytes en una cadena para mostrar que no hay ninguna pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="009b0-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="009b0-153">En el ejemplo siguiente se utiliza la misma cadena que el anterior, salvo que escribe los bytes codificados en un archivo y agrega el prefijo de la secuencia de bytes con una marca de orden de bytes (BOM).</span><span class="sxs-lookup"><span data-stu-id="009b0-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="009b0-154">A continuación, lee el archivo de dos maneras diferentes: como un archivo de texto mediante un <xref:System.IO.StreamReader> objeto; y como un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="009b0-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="009b0-155">Tal como se esperaría en ningún caso la marca BOM pertenece a la cadena recién lectura.</span><span class="sxs-lookup"><span data-stu-id="009b0-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009b0-156">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009b0-157">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-158">Este constructor crea una instancia que usa el orden de bytes endian little, proporciona una marca de orden de bytes Unicode y no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-159">Por motivos de seguridad, debe habilitar la detección de errores mediante una llamada a la <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidCharacters` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="009b0-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-160">El siguiente ejemplo recupera y muestra el orden de bytes marcar para diferentes <xref:System.Text.UTF32Encoding> instancias.</span><span class="sxs-lookup"><span data-stu-id="009b0-160">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="009b0-161"><see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo) o <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</span><span class="sxs-lookup"><span data-stu-id="009b0-161"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark">
          <span data-ttu-id="009b0-162">Es <see langword="true" /> para especificar que se proporciona una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-162"><see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="009b0-163">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span> <span data-ttu-id="009b0-164">Los parámetros especifican si se usa el orden de bytes big endian y si el método <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode.</span><span class="sxs-lookup"><span data-stu-id="009b0-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-165">Este constructor crea una instancia que no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-166">Por motivos de seguridad, debe habilitar la detección de errores mediante una llamada a la <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidCharacters` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="009b0-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-167">El siguiente ejemplo recupera y muestra el orden de bytes marcar para diferentes <xref:System.Text.UTF32Encoding> instancias.</span><span class="sxs-lookup"><span data-stu-id="009b0-167">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="009b0-168"><see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo) o <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</span><span class="sxs-lookup"><span data-stu-id="009b0-168"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark">
          <span data-ttu-id="009b0-169">Es <see langword="true" /> para especificar que se proporciona una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-169"><see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidCharacters">
          <span data-ttu-id="009b0-170"><see langword="true" /> para especificar que se produzca una excepción cuando se detecte una codificación no válida, en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-170"><see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="009b0-171">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span></span> <span data-ttu-id="009b0-172">Los parámetros especifican si se usa el orden de bytes big endian, si se proporciona una marca de orden de bytes Unicode y si se produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-173">Si `throwOnInvalidCharacters` es `true`, un método que detecta una secuencia de bytes no válida inicia <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="009b0-173">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="009b0-174">En caso contrario, el método no produce una excepción y se omite la secuencia no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-174">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-175">Por motivos de seguridad, debe habilitar la detección de errores mediante una llamada a la <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor y estableciendo su `throwOnInvalidCharacters` argumento pasado a `true`.</span><span class="sxs-lookup"><span data-stu-id="009b0-175">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-176">En el ejemplo siguiente se muestra el comportamiento de <xref:System.Text.UTF32Encoding>, con la detección de errores habilitada y sin.</span><span class="sxs-lookup"><span data-stu-id="009b0-176">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="009b0-177"><see cref="T:System.Object" /> que se va a comparar con el objeto actual.</span><span class="sxs-lookup"><span data-stu-id="009b0-177">The <see cref="T:System.Object" /> to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="009b0-178">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Text.UTF32Encoding" /> actual.</span><span class="sxs-lookup"><span data-stu-id="009b0-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="009b0-179"><see langword="true" /> si <paramref name="value" /> es una instancia de <see cref="T:System.Text.UTF32Encoding" /> y es igual al objeto actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-179"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-180">Dos <xref:System.Text.UTF32Encoding> objetos se consideran iguales si se cumplen todas las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="009b0-180">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="009b0-181">Ambos objetos utilizan el mismo orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-181">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="009b0-182">Ambos objetos proporcionan la marca de orden de bytes, o ambos no lo hace.</span><span class="sxs-lookup"><span data-stu-id="009b0-182">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="009b0-183">Ambos objetos utilizan el mismo codificador reserva.</span><span class="sxs-lookup"><span data-stu-id="009b0-183">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="009b0-184">Ambos objetos utilizan la misma reserva del descodificador.</span><span class="sxs-lookup"><span data-stu-id="009b0-184">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-185">En el ejemplo siguiente se crea <xref:System.Text.UTF32Encoding> objetos con valores de parámetro diferente y, a continuación, comprueba si son iguales.</span><span class="sxs-lookup"><span data-stu-id="009b0-185">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009b0-186">Calcula el número de bytes generado mediante la codificación de un juego de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-186">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="009b0-187"><see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="009b0-188">Calcula el número de bytes generado al codificar los caracteres del objeto <see cref="T:System.String" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="009b0-189">Número de bytes que se generan al codificar los caracteres especificados.</span><span class="sxs-lookup"><span data-stu-id="009b0-189">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-190">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-190">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-191">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-191">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="009b0-192">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-192">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-193">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-193">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-194">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-194">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-195">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-195">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-196">Insertar el preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-196">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-197">El ejemplo siguiente se llama el <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> y <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> métodos para calcular el número real y máximo de bytes necesarios para codificar una cadena.</span><span class="sxs-lookup"><span data-stu-id="009b0-197">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="009b0-198">También muestra el número real de bytes necesarios para almacenar una secuencia de bytes con una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-198">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-199"><paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-199"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="009b0-200">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-201">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-202">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-203">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-203">-and-</span></span>  
  
 <span data-ttu-id="009b0-204">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-204"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="009b0-205">Puntero al primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-205">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="009b0-206">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-206">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="009b0-207">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-207">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="009b0-208">Número de bytes que se generan al codificar los caracteres especificados.</span><span class="sxs-lookup"><span data-stu-id="009b0-208">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-209">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-209">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-210">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="009b0-210">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="009b0-211">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-211">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-212">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-212">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-213">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-213">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-214">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-214">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-215">Insertar un preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-215">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-216"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-216"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-217"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-217"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-218">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-218">-or-</span></span>  
  
 <span data-ttu-id="009b0-219">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-219">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-220">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-220">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-221">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-221">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-222">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-222">-and-</span></span>  
  
 <span data-ttu-id="009b0-223">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-223"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="009b0-224">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="009b0-224">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="009b0-225">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="009b0-225">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="009b0-226">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-226">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="009b0-227">Índice del primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-227">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="009b0-228">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-228">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="009b0-229">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-229">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="009b0-230">Número de bytes que se generan al codificar los caracteres especificados.</span><span class="sxs-lookup"><span data-stu-id="009b0-230">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-231">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-231">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-232">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-232">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="009b0-233">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-233">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-234">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-234">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-235">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-235">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-236">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-236">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-237">Insertar un preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-237">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-238">En el ejemplo siguiente se rellena una matriz con un alfabeto latino en mayúsculas y minúsculas y llama el <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método para determinar el número de bytes necesarios para codificar los caracteres en minúsculas latinos.</span><span class="sxs-lookup"><span data-stu-id="009b0-238">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="009b0-239">A continuación, muestra esta información junto con el número total de bytes necesarios si se agrega una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-239">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="009b0-240">Este número compara con el valor devuelto por la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método, que indica el número máximo de bytes necesarios para codificar los caracteres en minúsculas latinos.</span><span class="sxs-lookup"><span data-stu-id="009b0-240">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="009b0-241">En el ejemplo siguiente se rellena una matriz con una combinación de caracteres griego y cirílico y llamadas el <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método para determinar el número de bytes necesarios para codificar los caracteres cirílicos.</span><span class="sxs-lookup"><span data-stu-id="009b0-241">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="009b0-242">A continuación, muestra esta información junto con el número total de bytes necesarios si se agrega una marca de orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-242">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="009b0-243">Este número compara con el valor devuelto por la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> método, que indica el número máximo de bytes necesarios para codificar los caracteres cirílicos.</span><span class="sxs-lookup"><span data-stu-id="009b0-243">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-244"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-244"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-245"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-245"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-246">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-246">-or-</span></span>  
  
 <span data-ttu-id="009b0-247"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-247"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="009b0-248">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-248">-or-</span></span>  
  
 <span data-ttu-id="009b0-249">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-249">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-250">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-250">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-251">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-251">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-252">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-252">-and-</span></span>  
  
 <span data-ttu-id="009b0-253">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-253"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009b0-254">Codifica un juego de caracteres en una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-254">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="009b0-255">Puntero al primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-255">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="009b0-256">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-256">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="009b0-257">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-257">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="009b0-258">Número máximo de bytes que se pueden escribir.</span><span class="sxs-lookup"><span data-stu-id="009b0-258">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="009b0-259">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-259">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="009b0-260">Número real de bytes escritos en la ubicación indicada por el parámetro <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-260">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-261">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-261">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-262">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-262">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="009b0-263">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-263">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-264">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-264">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-265">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-265">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-266">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="009b0-266">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="009b0-267">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación utiliza el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF32Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF32Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-267">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-268">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-268">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-269">Insertar un preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="009b0-269">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="009b0-270">El <xref:System.Text.UTF32Encoding.GetBytes%2A> método no anteponer un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="009b0-270">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-271"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-271"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="009b0-272">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-272">-or-</span></span>  
  
 <span data-ttu-id="009b0-273"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-273"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-274"><paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-274"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-275">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-275">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="009b0-276">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-276">-or-</span></span>  
  
 <span data-ttu-id="009b0-277">El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-277"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-278">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-278">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-279">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-279">-and-</span></span>  
  
 <span data-ttu-id="009b0-280">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-280"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="009b0-281">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="009b0-281">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="009b0-282">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="009b0-282">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="009b0-283">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-283">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="009b0-284">Índice del primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-284">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="009b0-285">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-285">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="009b0-286">Matriz de bytes que contendrá la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-286">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="009b0-287">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-287">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="009b0-288">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-288">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="009b0-289">Número real de bytes escritos en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-289">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-290">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-290">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-291">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-291">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="009b0-292">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-292">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-293">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-293">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-294">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-294">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-295">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="009b0-295">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="009b0-296">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación utiliza el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF32Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF32Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-296">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-297">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-297">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-298">Insertar un preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="009b0-298">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="009b0-299">El <xref:System.Text.UTF32Encoding.GetBytes%2A> método no anteponer un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="009b0-299">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-300">En el ejemplo siguiente se determina el número de bytes necesarios para codificar los tres caracteres de una matriz de caracteres, a continuación, codifica los caracteres y muestra los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-300">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-301"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-301"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="009b0-302">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-302">-or-</span></span>  
  
 <span data-ttu-id="009b0-303"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-303"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-304">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-304"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-305">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-305">-or-</span></span>  
  
 <span data-ttu-id="009b0-306"><paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-306"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="009b0-307">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-307">-or-</span></span>  
  
 <span data-ttu-id="009b0-308"><paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-308"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-309">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-309">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="009b0-310">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-310">-or-</span></span>  
  
 <span data-ttu-id="009b0-311"><paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-311"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-312">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-312">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-313">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-313">-and-</span></span>  
  
 <span data-ttu-id="009b0-314">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-314"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="009b0-315"><see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-315">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="009b0-316">Índice del primer carácter que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-316">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="009b0-317">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-317">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="009b0-318">Matriz de bytes que contendrá la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-318">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="009b0-319">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-319">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="009b0-320">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-320">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="009b0-321">Número real de bytes escritos en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-321">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-322">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-322">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-323">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-323">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="009b0-324">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-324">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-325">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-325">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-326">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-326">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-327">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="009b0-327">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="009b0-328">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación utiliza el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF32Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF32Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-328">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-329">Para asegurarse de que los bytes codificados se descodifiquen de forma apropiada cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-329">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-330">Insertar un preámbulo al principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="009b0-330">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="009b0-331">El <xref:System.Text.UTF32Encoding.GetBytes%2A> método no anteponer un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="009b0-331">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-332">En el ejemplo siguiente se determina el número de bytes necesarios para codificar una cadena, a continuación, codifica la cadena y muestra los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-332">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-333"><paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-333"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="009b0-334">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-334">-or-</span></span>  
  
 <span data-ttu-id="009b0-335"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-335"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-336">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-336"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-337">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-337">-or-</span></span>  
  
 <span data-ttu-id="009b0-338"><paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-338"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="009b0-339">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-339">-or-</span></span>  
  
 <span data-ttu-id="009b0-340"><paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-340"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-341">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-341">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="009b0-342">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-342">-or-</span></span>  
  
 <span data-ttu-id="009b0-343"><paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-343"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-344">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-344">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-345">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-345">-and-</span></span>  
  
 <span data-ttu-id="009b0-346">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-346"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009b0-347">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-347">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="009b0-348">Puntero al primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-348">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="009b0-349">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-349">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="009b0-350">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-350">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="009b0-351">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-351">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-352"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calcula el tamaño de matriz exacto requerido por la <xref:System.Text.UTF32Encoding.GetChars%2A> método utilizado para almacenar los caracteres resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-352"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="009b0-353">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-353">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="009b0-354">El <xref:System.Text.UTF32Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-354">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-355">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-355">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-356">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-356">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-357"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-357"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-358"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-358"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-359">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-359">-or-</span></span>  
  
 <span data-ttu-id="009b0-360">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-360">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-361">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-361">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="009b0-362">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-362">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-363">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-363">-and-</span></span>  
  
 <span data-ttu-id="009b0-364">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-364"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="009b0-365">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="009b0-365">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="009b0-366">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="009b0-366">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="009b0-367">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-367">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="009b0-368">Índice del primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-368">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="009b0-369">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-369">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="009b0-370">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-370">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="009b0-371">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</span><span class="sxs-lookup"><span data-stu-id="009b0-371">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-372">El <xref:System.Text.UTF32Encoding.GetCharCount%2A> método calcula el tamaño de matriz exacto requerido por la <xref:System.Text.UTF32Encoding.GetChars%2A> método utilizado para almacenar los caracteres resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-372">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="009b0-373">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-373">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="009b0-374">El <xref:System.Text.UTF32Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-374">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-375">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-375">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-376">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-376">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-377">En el ejemplo siguiente se codifica una cadena en una matriz de bytes y, a continuación, se descodifica los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-377">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-378"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-378"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-379"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-379"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-380">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-380">-or-</span></span>  
  
 <span data-ttu-id="009b0-381"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-381"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="009b0-382">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-382">-or-</span></span>  
  
 <span data-ttu-id="009b0-383">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-383">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-384">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-384">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="009b0-385">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-385">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-386">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-386">-and-</span></span>  
  
 <span data-ttu-id="009b0-387">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-387"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009b0-388">Descodifica una secuencia de bytes en un conjunto de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-388">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="009b0-389">Puntero al primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-389">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="009b0-390">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-390">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="009b0-391">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-391">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="009b0-392">Número máximo de caracteres que se van a escribir.</span><span class="sxs-lookup"><span data-stu-id="009b0-392">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="009b0-393">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-393">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="009b0-394">Número real de caracteres escrito en la ubicación indicada por <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-394">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-395">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF32Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-395">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="009b0-396">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-396">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="009b0-397">El <xref:System.Text.UTF32Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-397">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-398">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-398">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-399">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-399">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-400">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y un método de un tipo compatible con BOM no devolvió la matriz de bytes, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="009b0-400">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="009b0-401">Se puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-401">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="009b0-402">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="009b0-402">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="009b0-403">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación utiliza el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF32Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF32Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-403">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-404"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-404"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="009b0-405">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-405">-or-</span></span>  
  
 <span data-ttu-id="009b0-406"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-406"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-407"><paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-407"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-408">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-408">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="009b0-409">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-409">-or-</span></span>  
  
 <span data-ttu-id="009b0-410">El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-410"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="009b0-411">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-411">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-412">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-412">-and-</span></span>  
  
 <span data-ttu-id="009b0-413">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-413"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="009b0-414">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="009b0-414">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="009b0-415">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="009b0-415">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="009b0-416">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-416">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="009b0-417">Índice del primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-417">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="009b0-418">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-418">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="009b0-419">Matriz de caracteres que contendrá el juego de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-419">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="009b0-420">Índice en el que se inicia la escritura del juego de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="009b0-420">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="009b0-421">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-421">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="009b0-422">Número real de caracteres escritos en <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-422">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-423">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF32Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-423">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="009b0-424">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-424">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="009b0-425">El <xref:System.Text.UTF32Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-425">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-426">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-426">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-427">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-427">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-428">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y un método de un tipo compatible con BOM no devolvió la matriz de bytes, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="009b0-428">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="009b0-429">Se puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-429">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="009b0-430">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="009b0-430">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="009b0-431">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación utiliza el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF32Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF32Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-431">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-432">En el ejemplo siguiente se codifica una cadena en una matriz de bytes y, a continuación, se descodifica los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-432">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-433"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-433"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="009b0-434">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-434">-or-</span></span>  
  
 <span data-ttu-id="009b0-435"><paramref name="chars" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-435"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-436">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-436"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-437">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-437">-or-</span></span>  
  
 <span data-ttu-id="009b0-438"><paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-438"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="009b0-439">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-439">-or-</span></span>  
  
 <span data-ttu-id="009b0-440"><paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-440"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-441">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-441">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="009b0-442">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-442">-or-</span></span>  
  
 <span data-ttu-id="009b0-443"><paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-443"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="009b0-444">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-444">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-445">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-445">-and-</span></span>  
  
 <span data-ttu-id="009b0-446">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-446"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009b0-447">Obtiene un descodificador que convierte una secuencia de bytes codificada en UTF-32 en una secuencia de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="009b0-447">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="009b0-448">Objeto <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en UTF-32 en una secuencia de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="009b0-448">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-449">El <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> método convierte bloques secuenciales de bytes en bloques secuenciales de caracteres, de forma similar a la <xref:System.Text.UTF32Encoding.GetChars%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-449">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="009b0-450">Sin embargo, un <xref:System.Text.Decoder> mantiene la información de estado entre llamadas, de modo que puede descodificar correctamente las secuencias de bytes que abarquen varios bloques.</span><span class="sxs-lookup"><span data-stu-id="009b0-450">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="009b0-451">El <xref:System.Text.Decoder> también conserva los bytes finales al final de bloques de datos y utiliza los bytes finales en la siguiente operación de descodificación.</span><span class="sxs-lookup"><span data-stu-id="009b0-451">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="009b0-452">Por lo tanto, <xref:System.Text.UTF32Encoding.GetDecoder%2A> y <xref:System.Text.UTF32Encoding.GetEncoder%2A> son útiles para transmisiones en red y operaciones con archivos, dado que estas operaciones tratan a menudo con bloques de datos en lugar de un flujo de datos completo.</span><span class="sxs-lookup"><span data-stu-id="009b0-452">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="009b0-453">Si está habilitada la detección de errores, es decir, el `throwOnInvalidCharacters` parámetro del constructor se estableció en `true`, detección de errores también se habilita en el <xref:System.Text.Decoder> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="009b0-453">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="009b0-454">Si está habilitada la detección de errores y se encuentra una secuencia no válida, el estado del descodificador no está definido y el procesamiento debe detenerse.</span><span class="sxs-lookup"><span data-stu-id="009b0-454">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-455">En el ejemplo siguiente se utiliza un codificador y un descodificador para codificar una cadena en una matriz de bytes y, a continuación, descodificar los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-455">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009b0-456">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-32.</span><span class="sxs-lookup"><span data-stu-id="009b0-456">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="009b0-457">Objeto <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes UTF-32 codificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-457">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-458">El <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> método convierte bloques secuenciales de caracteres en bloques secuenciales de bytes, de forma similar a la <xref:System.Text.UTF32Encoding.GetBytes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-458">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="009b0-459">Sin embargo, un <xref:System.Text.Encoder> mantiene la información de estado entre llamadas, de modo que puede codificar correctamente secuencias de caracteres que abarquen varios bloques.</span><span class="sxs-lookup"><span data-stu-id="009b0-459">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="009b0-460">El <xref:System.Text.Encoder> también conserva finales caracteres al final de bloques de datos y utiliza los caracteres finales en la siguiente operación de codificación.</span><span class="sxs-lookup"><span data-stu-id="009b0-460">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="009b0-461">Por ejemplo, un bloque de datos podría finalizar con un suplente alto sin equivalente y el suplente bajo correspondiente podría estar en el siguiente bloque de datos.</span><span class="sxs-lookup"><span data-stu-id="009b0-461">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="009b0-462">Por lo tanto, <xref:System.Text.UTF32Encoding.GetDecoder%2A> y <xref:System.Text.UTF32Encoding.GetEncoder%2A> son útiles para transmisiones en red y operaciones con archivos, dado que estas operaciones tratan a menudo con bloques de datos en lugar de un flujo de datos completo.</span><span class="sxs-lookup"><span data-stu-id="009b0-462">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="009b0-463">Si está habilitada la detección de errores, es decir, el `throwOnInvalidCharacters` parámetro del constructor se estableció en `true`, detección de errores también se habilita en el <xref:System.Text.Encoder> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="009b0-463">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="009b0-464">Si está habilitada la detección de errores y se encuentra una secuencia no válida, el estado del codificador está definido y el procesamiento debe detenerse.</span><span class="sxs-lookup"><span data-stu-id="009b0-464">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-465">En el ejemplo siguiente se utiliza un codificador y un descodificador para codificar una cadena en una matriz de bytes y, a continuación, descodificar los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-465">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009b0-466">Devuelve el código hash de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="009b0-466">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="009b0-467">Código hash para el objeto <see cref="T:System.Text.UTF32Encoding" /> actual.</span><span class="sxs-lookup"><span data-stu-id="009b0-467">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="009b0-468">Número de caracteres que se van a codificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-468">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="009b0-469">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-469">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="009b0-470">Número máximo de bytes generados al codificar el número de caracteres especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-470">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-471">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetBytes%2A> para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-471">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="009b0-472">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-472">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="009b0-473">El <xref:System.Text.UTF32Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-473">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-474"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> es un número más desfavorable, incluido el peor de los casos para el que se han seleccionado actualmente <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="009b0-474"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="009b0-475">Si se elige una acción de reserva con una cadena potencialmente grande, <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> puede devolver valores grandes.</span><span class="sxs-lookup"><span data-stu-id="009b0-475">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="009b0-476">En la mayoría de los casos, este método devuelve números razonables para cadenas pequeñas.</span><span class="sxs-lookup"><span data-stu-id="009b0-476">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="009b0-477">Para cadenas de gran tamaño, tendrá que elegir entre usar búferes de grandes tamaño y detectar errores en el caso excepcional de que se supere un búfer más razonable.</span><span class="sxs-lookup"><span data-stu-id="009b0-477">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="009b0-478">Puede que le interese tener en cuenta un enfoque diferente y usar <xref:System.Text.UTF32Encoding.GetByteCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="009b0-478">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="009b0-479"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> no tiene relación con <xref:System.Text.UTF32Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="009b0-479"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="009b0-480">Si tiene una función similar a usar con <xref:System.Text.UTF32Encoding.GetChars%2A>, utilice <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="009b0-480">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-481">`GetMaxByteCount(N)` no es necesariamente el mismo valor que `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="009b0-481">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-482">En el ejemplo siguiente se determina el número de bytes necesarios para codificar una cadena, a continuación, codifica la cadena y muestra los bytes resultantes.</span><span class="sxs-lookup"><span data-stu-id="009b0-482">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-483"><paramref name="charCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-483"><paramref name="charCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-484">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-484">-or-</span></span>  
  
 <span data-ttu-id="009b0-485">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-485">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="009b0-486">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-486">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-487">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-487">-and-</span></span>  
  
 <span data-ttu-id="009b0-488">El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-488"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="009b0-489">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-489">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="009b0-490">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-490">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="009b0-491">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</span><span class="sxs-lookup"><span data-stu-id="009b0-491">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-492">Para calcular el tamaño de matriz exacto requerido por <xref:System.Text.UTF32Encoding.GetChars%2A> para almacenar los caracteres resultantes, se llama a la <xref:System.Text.UTF32Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-492">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="009b0-493">Para calcular el tamaño máximo de la matriz, se llama a la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-493">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="009b0-494">El <xref:System.Text.UTF32Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que la <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="009b0-494">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="009b0-495"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> es un número más desfavorable, incluido el peor de los casos para el que se han seleccionado actualmente <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="009b0-495"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="009b0-496">Si se elige una acción de reserva con una cadena potencialmente grande, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> puede devolver valores grandes.</span><span class="sxs-lookup"><span data-stu-id="009b0-496">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="009b0-497">En la mayoría de los casos, este método devuelve números razonables para cadenas pequeñas.</span><span class="sxs-lookup"><span data-stu-id="009b0-497">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="009b0-498">Para cadenas de gran tamaño, tendrá que elegir entre usar búferes de grandes tamaño y detectar errores en el caso excepcional de que se supere un búfer más razonable.</span><span class="sxs-lookup"><span data-stu-id="009b0-498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="009b0-499">Puede que le interese tener en cuenta un enfoque diferente y usar <xref:System.Text.UTF32Encoding.GetCharCount%2A> o <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="009b0-499">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="009b0-500"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> no tiene relación con <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="009b0-500"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="009b0-501">Si tiene una función similar a usar con <xref:System.Text.UTF32Encoding.GetBytes%2A>, utilice <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="009b0-501">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009b0-502">`GetMaxCharCount(N)` no es necesariamente el mismo valor que `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="009b0-502">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-503">En el ejemplo siguiente se codifica una cadena en una matriz de bytes y, a continuación, se descodifica los bytes en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="009b0-503">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-504"><paramref name="byteCount" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-504"><paramref name="byteCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-505">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-505">-or-</span></span>  
  
 <span data-ttu-id="009b0-506">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</span><span class="sxs-lookup"><span data-stu-id="009b0-506">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="009b0-507">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-508">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-508">-and-</span></span>  
  
 <span data-ttu-id="009b0-509">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-509"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009b0-510">Devuelve una marca de orden de bytes Unicode codificada en formato UTF-32, si el objeto <see cref="T:System.Text.UTF32Encoding" /> está configurado para proporcionarla.</span><span class="sxs-lookup"><span data-stu-id="009b0-510">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="009b0-511">Matriz de bytes que contiene la marca de orden de bytes Unicode, si el objeto <see cref="T:System.Text.UTF32Encoding" /> está configurado para proporcionar una.</span><span class="sxs-lookup"><span data-stu-id="009b0-511">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span></span> <span data-ttu-id="009b0-512">En caso contrario, este método devuelve una matriz de bytes de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-512">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-513">La <xref:System.Text.UTF32Encoding> objeto puede proporcionar un preámbulo, que es una matriz de bytes que se puede anteponer a la secuencia de bytes resultante del proceso de codificación.</span><span class="sxs-lookup"><span data-stu-id="009b0-513">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="009b0-514">Delante de una secuencia de bytes codificados con una marca de orden de bytes (puntos de código U + 0000 U+FEFF) ayudará al descodificador a determinar el orden de bytes y el formato de transformación o UTF.</span><span class="sxs-lookup"><span data-stu-id="009b0-514">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="009b0-515">La marca de orden de bytes Unicode (BOM) se serializa como se indica a continuación (en formato hexadecimal):</span><span class="sxs-lookup"><span data-stu-id="009b0-515">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="009b0-516">Orden de bytes big-endian: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="009b0-516">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="009b0-517">Orden de bytes endian little: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="009b0-517">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="009b0-518">Puede crear instancias de un <xref:System.Text.UTF32Encoding> cuyos <xref:System.Text.UTF32Encoding.GetPreamble%2A> método devuelve una lista de materiales válida de las maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="009b0-518">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="009b0-519">Recuperando la <xref:System.Text.UTF32Encoding> objeto devuelto por la <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="009b0-519">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="009b0-520">Mediante una llamada sin parámetros <xref:System.Text.UTF32Encoding.%23ctor> constructor para crear instancias de un <xref:System.Text.UTF32Encoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="009b0-520">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="009b0-521">Si se suministra `true` como el valor de la `byteOrderMark` argumento pasado a la <xref:System.Text.UTF32Encoding.%23ctor%2A> y <xref:System.Text.UTF32Encoding.%23ctor%2A> constructores.</span><span class="sxs-lookup"><span data-stu-id="009b0-521">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="009b0-522">Se recomienda usar la lista de materiales, puesto que ofrece cierta identificación de una codificación para los archivos en caso contrario es han perdido la referencia a la <xref:System.Text.UTF32Encoding> objeto, por ejemplo, no etiquetado o etiquetados incorrectamente datos web o archivos de texto aleatorios almacenados cuando un negocio no tenía intereses internacionales u otros datos.</span><span class="sxs-lookup"><span data-stu-id="009b0-522">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="009b0-523">A menudo, se podrían evitar problemas de usuario si los datos se etiquetan de forma coherente y configurado correctamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-523">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="009b0-524">Estándares que proporcionan un tipo de codificación, una marca BOM es redundante en cierto modo.</span><span class="sxs-lookup"><span data-stu-id="009b0-524">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="009b0-525">Sin embargo, se puede utilizar para ayudar a un servidor de enviar el encabezado de codificación correcto.</span><span class="sxs-lookup"><span data-stu-id="009b0-525">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="009b0-526">Como alternativa, se puede utilizar como reserva en caso de que la codificación en caso contrario, se pierde.</span><span class="sxs-lookup"><span data-stu-id="009b0-526">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="009b0-527">Existen algunas desventajas del uso de una lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="009b0-527">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="009b0-528">Por ejemplo, puede ser difícil saber cómo limitar los campos de la base de datos que usan una lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="009b0-528">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="009b0-529">Concatenación de archivos puede ser un problema también, por ejemplo, cuando se combinan los archivos de tal forma que un carácter innecesario puede terminar en el centro de datos.</span><span class="sxs-lookup"><span data-stu-id="009b0-529">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="009b0-530">A pesar de los inconvenientes de algunos, sin embargo, el uso de una lista de materiales se recomienda.</span><span class="sxs-lookup"><span data-stu-id="009b0-530">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="009b0-531">Para obtener más información sobre el orden de bytes y la marca de orden de bytes, vea el estándar Unicode en la [página principal de Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="009b0-531">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="009b0-532">Para asegurarse de que los bytes codificados se descodifiquen correctamente, se deben anteponer bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="009b0-532">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="009b0-533">Tenga en cuenta que el <xref:System.Text.UTF32Encoding.GetBytes%2A> método no anteponer una marca BOM a una secuencia de bytes codificados; la especificación de una lista de materiales al principio de una secuencia de bytes adecuada es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="009b0-533">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-534">El siguiente código en el ejemplo se recupera y muestra el orden de bytes marcar para diferentes <xref:System.Text.UTF32Encoding> instancias.</span><span class="sxs-lookup"><span data-stu-id="009b0-534">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="009b0-535">En el ejemplo siguiente se crean instancias de dos <xref:System.Text.UTF32Encoding> objetos, el primero de los cuales no proporciona una marca BOM y la segunda que no.</span><span class="sxs-lookup"><span data-stu-id="009b0-535">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="009b0-536">A continuación, llama el <xref:System.Text.UTF32Encoding.GetPreamble%2A> método para escribir la lista de materiales en un archivo antes de escribir una cadena codificada mediante UTF-32.</span><span class="sxs-lookup"><span data-stu-id="009b0-536">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="009b0-537">Como se muestra en el resultado del ejemplo, el archivo que guarda los bytes desde el codificador de segundo tiene cuatro bytes más que la primera.</span><span class="sxs-lookup"><span data-stu-id="009b0-537">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="009b0-538">También puede comparar los archivos mediante el `fc` comando en una ventana de consola, o bien puede inspeccionar los archivos en un editor de texto que incluye un modo de vista hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="009b0-538">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="009b0-539">Tenga en cuenta que cuando se abre el archivo en un editor que admite UTF-32, no se muestra la lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="009b0-539">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="009b0-540">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-540">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="009b0-541">Índice del primer byte que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-541">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="009b0-542">Número de bytes que se van a descodificar.</span><span class="sxs-lookup"><span data-stu-id="009b0-542">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="009b0-543">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</span><span class="sxs-lookup"><span data-stu-id="009b0-543">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="009b0-544">Cadena que contiene el resultado de la descodificación de la secuencia de bytes especificada.</span><span class="sxs-lookup"><span data-stu-id="009b0-544">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009b0-545">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="009b0-545">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="009b0-546">Sin detección de errores, se omiten las secuencias no válidas y se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="009b0-546">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="009b0-547">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM), y un método de un tipo compatible con BOM no devolvió la matriz de bytes, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="009b0-547">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="009b0-548">Se puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="009b0-548">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="009b0-549">Datos que se va a convertir, como los datos leídos de una secuencia, podrían estar disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="009b0-549">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="009b0-550">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, la aplicación debe utilizar el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF32Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF32Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="009b0-550">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009b0-551">En el ejemplo siguiente se codifica una cadena en las dos matrices de matrices de bytes, en orden little-endian y otro en orden big-endian.</span><span class="sxs-lookup"><span data-stu-id="009b0-551">The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="009b0-552">A continuación, se descodifica los bytes en una cadena.</span><span class="sxs-lookup"><span data-stu-id="009b0-552">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="009b0-553">En el ejemplo siguiente se inicializa una matriz mediante una llamada a la <xref:System.Text.UTF32Encoding.GetByteCount%2A> método para determinar exactamente cuántos bytes son necesarios para una cadena codificada y, a continuación, agregar el tamaño de la marca de orden de bytes (BOM).</span><span class="sxs-lookup"><span data-stu-id="009b0-553">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="009b0-554">El ejemplo, a continuación, se llama la <xref:System.Text.UTF32Encoding.GetPreamble%2A> método utilizado para almacenar la lista de materiales a la matriz antes de llamar a la <xref:System.Text.UTF32Encoding.GetBytes%2A> método utilizado para almacenar los bytes codificados en la matriz.</span><span class="sxs-lookup"><span data-stu-id="009b0-554">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="009b0-555">El ejemplo, a continuación, se llama el <xref:System.Text.UTF32Encoding.GetString%2A> método para descodificar la cadena.</span><span class="sxs-lookup"><span data-stu-id="009b0-555">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="009b0-556">Tenga en cuenta que en este caso la cadena descodificada difiere de la cadena original, ya que comienza con una marca de orden de bytes de 32 bits U + FFFE u+0000.</span><span class="sxs-lookup"><span data-stu-id="009b0-556">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="009b0-557">Esto significa que las dos cadenas comparará diferente, y que, si la cadena es la salida, se mostrará la lista de materiales como el carácter de reemplazo "?".</span><span class="sxs-lookup"><span data-stu-id="009b0-557">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009b0-558"><paramref name="bytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-558"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="009b0-559"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="009b0-559"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="009b0-560">O bien</span><span class="sxs-lookup"><span data-stu-id="009b0-560">-or-</span></span>  
  
 <span data-ttu-id="009b0-561"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-561"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="009b0-562">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="009b0-562">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="009b0-563">Se ha producido una acción de reserva (vea [Codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md) para obtener una explicación completa).</span><span class="sxs-lookup"><span data-stu-id="009b0-563">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span>  
  
 <span data-ttu-id="009b0-564">- y -</span><span class="sxs-lookup"><span data-stu-id="009b0-564">-and-</span></span>  
  
 <span data-ttu-id="009b0-565">El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="009b0-565"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>