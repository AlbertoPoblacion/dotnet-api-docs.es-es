<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4479fa38164193605c512f6d00f5ce9ca7f726b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37609698" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF8Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dd99e-101">Represents a UTF-8 encoding of Unicode characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd99e-101">Represents a UTF-8 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-102">Codificar es el proceso de transformar un conjunto de caracteres Unicode en una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="dd99e-103">La descodificación es el proceso de transformar una secuencia de bytes codificados en un conjunto de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="dd99e-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="dd99e-104">UTF-8 es una codificación que Unicode representa cada punto de código como una secuencia de uno a cuatro bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="dd99e-105">A diferencia de las codificaciones UTF-16 y UTF-32, la codificación UTF-8 no requiere "modos endian"; el esquema de codificación es el mismo independientemente de si el procesador es big-endian o little-endian.</span><span class="sxs-lookup"><span data-stu-id="dd99e-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="dd99e-106"><xref:System.Text.UTF8Encoding> corresponde a la página de códigos 65001 de Windows.</span><span class="sxs-lookup"><span data-stu-id="dd99e-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="dd99e-107">Para obtener más información acerca de las codificaciones UTF y otras codificaciones admitidas por <xref:System.Text>, consulte [codificación de caracteres en .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="dd99e-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="dd99e-108">Puede crear instancias de un <xref:System.Text.UTF8Encoding> objetos de varias maneras, dependiendo de si desea que se proporciona una marca de orden de bytes (BOM) y si desea habilitar la detección de errores.</span><span class="sxs-lookup"><span data-stu-id="dd99e-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="dd99e-109">La tabla siguiente enumeran los constructores y los <xref:System.Text.Encoding> propiedades que devuelven un <xref:System.Text.UTF8Encoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="dd99e-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="dd99e-110">Miembro</span><span class="sxs-lookup"><span data-stu-id="dd99e-110">Member</span></span>|<span data-ttu-id="dd99e-111">LISTA DE MATERIALES</span><span class="sxs-lookup"><span data-stu-id="dd99e-111">BOM</span></span>|<span data-ttu-id="dd99e-112">Detección de errores</span><span class="sxs-lookup"><span data-stu-id="dd99e-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="dd99e-113">Sí</span><span class="sxs-lookup"><span data-stu-id="dd99e-113">Yes</span></span>|<span data-ttu-id="dd99e-114">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="dd99e-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="dd99e-115">No</span><span class="sxs-lookup"><span data-stu-id="dd99e-115">No</span></span>|<span data-ttu-id="dd99e-116">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="dd99e-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="dd99e-117">Configurable</span><span class="sxs-lookup"><span data-stu-id="dd99e-117">Configurable</span></span>|<span data-ttu-id="dd99e-118">Ninguna (reserva de reemplazo)</span><span class="sxs-lookup"><span data-stu-id="dd99e-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="dd99e-119">Configurable</span><span class="sxs-lookup"><span data-stu-id="dd99e-119">Configurable</span></span>|<span data-ttu-id="dd99e-120">Configurable</span><span class="sxs-lookup"><span data-stu-id="dd99e-120">Configurable</span></span>|  
  
 <span data-ttu-id="dd99e-121">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método determina el número de bytes resultante de codificar un juego de caracteres Unicode y el <xref:System.Text.UTF8Encoding.GetBytes%2A> método realiza la codificación real.</span><span class="sxs-lookup"><span data-stu-id="dd99e-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="dd99e-122">Del mismo modo, el <xref:System.Text.UTF8Encoding.GetCharCount%2A> método determina el número de caracteres resultante de descodificar una secuencia de bytes y el <xref:System.Text.UTF8Encoding.GetChars%2A> y <xref:System.Text.UTF8Encoding.GetString%2A> métodos realizan la descodificación real.</span><span class="sxs-lookup"><span data-stu-id="dd99e-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="dd99e-123">Para un codificador o descodificador que es capaz de guardar información de estado al codificar o descodificar los datos que abarca varios bloques (por ejemplo, la cadena de 1 millón de caracteres que se codifica en segmentos de 100 000 caracteres), use el <xref:System.Text.UTF8Encoding.GetEncoder%2A> y <xref:System.Text.UTF8Encoding.GetDecoder%2A> propiedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="dd99e-124">Opcionalmente, el <xref:System.Text.UTF8Encoding> objeto proporciona una marca de orden de bytes (BOM), que es una matriz de bytes que se puede anteponer al principio de la secuencia de bytes que es el resultado del proceso de codificación.</span><span class="sxs-lookup"><span data-stu-id="dd99e-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="dd99e-125">Si una secuencia de bytes codificados UTF-8 se prologa con una marca de orden de bytes (BOM), ayudará al descodificador a determinar el orden de bytes y el formato de transformación o UTF.</span><span class="sxs-lookup"><span data-stu-id="dd99e-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="dd99e-126">Sin embargo, tenga en cuenta que el estándar Unicode no requiere ni recomienda una marca BOM de UTF-8 codificada secuencias.</span><span class="sxs-lookup"><span data-stu-id="dd99e-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="dd99e-127">Para obtener más información sobre el orden de bytes y la marca de orden de bytes, vea el estándar Unicode en el [página principal de Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="dd99e-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="dd99e-128">Si el codificador se configura para proporcionar una lista de materiales, puede recuperar mediante una llamada a la <xref:System.Text.UTF8Encoding.GetPreamble%2A> método; en caso contrario, el método devuelve una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="dd99e-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="dd99e-129">Tenga en cuenta que, incluso si un <xref:System.Text.UTF8Encoding> objeto está configurado para admitir l. MAT, debe incluir la marca BOM al principio de la secuencia de bytes codificada según corresponda; los métodos de codificación de la <xref:System.Text.UTF8Encoding> clase no lo hace automáticamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-130">Para habilitar la detección de errores y hacer que la instancia de clase sea más segura, debe llamar a la <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor y establezca el `throwOnInvalidBytes` parámetro `true`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="dd99e-131">Con la detección de errores habilitada, un método que detecta una secuencia de caracteres o bytes no válida inicia una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-132">Sin detección de errores, se produce ninguna excepción y, por lo general se omite la secuencia no válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-133">No se conserva el estado de un objeto de codificación UTF-8 si el objeto se serializa y deserializa utilizando distintas versiones de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="dd99e-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-134">En el ejemplo siguiente se usa un <xref:System.Text.UTF8Encoding> objeto se va a codificar una cadena de caracteres Unicode y almacenarlos en una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="dd99e-135">La cadena de Unicode incluye dos caracteres, Pi (03A0) y Sigma (U + 03A3), que están fuera del intervalo de caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="dd99e-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="dd99e-136">Cuando se descodifica la matriz de bytes codificada en una cadena, los caracteres de Pi y Sigma todavía están presentes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="dd99e-137">En el ejemplo siguiente se usa la misma cadena como el ejemplo anterior, excepto en que escribe los bytes codificados en un archivo y prefijos de la secuencia de bytes con una marca de orden de bytes (BOM).</span><span class="sxs-lookup"><span data-stu-id="dd99e-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="dd99e-138">A continuación, lee el archivo de dos maneras diferentes: como un archivo de texto mediante el uso de un <xref:System.IO.StreamReader> objeto; y como un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="dd99e-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="dd99e-139">Como cabría esperar, en ningún caso es la lista de materiales incluido en la cadena que se acaba de leer.</span><span class="sxs-lookup"><span data-stu-id="dd99e-139">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-142">Este constructor crea una instancia que no proporciona una marca de orden de bytes Unicode y no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-142">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-143">Por motivos de seguridad, se recomienda habilitar la detección de errores mediante una llamada a un constructor con un `throwOnInvalidBytes` parámetro y establece su valor en `true`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-143">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-144">En el ejemplo siguiente se crea un nuevo <xref:System.Text.UTF8Encoding> de instancia y muestra su nombre.</span><span class="sxs-lookup"><span data-stu-id="dd99e-144">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding encoderShouldEmitUTF8Identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="dd99e-145">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-145">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="dd99e-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-148">Este constructor crea una instancia que no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-148">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-149">Por motivos de seguridad, debe habilitar detección de errores mediante una llamada a un constructor que incluya un `throwOnInvalidBytes` parámetro y establece su valor en `true`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-149">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="dd99e-150">El `encoderShouldEmitUTF8Identifier` parámetro controla el funcionamiento de la <xref:System.Text.UTF8Encoding.GetPreamble%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-150">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="dd99e-151">Si `true`, el método devuelve una matriz de bytes que contiene la marca de orden de bytes Unicode (BOM) en formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="dd99e-151">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="dd99e-152">Si `false`, devuelve una matriz de bytes de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="dd99e-152">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="dd99e-153">Sin embargo, establecer `encoderShouldEmitUTF8Identifier` a `true` no provoca la <xref:System.Text.UTF8Encoding.GetBytes%2A> método como prefijo la marca BOM al principio de la matriz de bytes, ni hace que el <xref:System.Text.UTF8Encoding.GetByteCount%2A> método debe incluir el número de bytes en la marca BOM en el recuento de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-153">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-154">En el ejemplo siguiente se crea un nuevo <xref:System.Text.UTF8Encoding> de instancia y especifica que debe emitirse un prefijo de marca de orden de bytes Unicode mediante la <xref:System.Text.UTF8Encoding.GetPreamble%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-154">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="dd99e-155">El <xref:System.Text.UTF8Encoding.GetPreamble%2A> método, a continuación, devuelve el prefijo de marca de orden de bytes Unicode.</span><span class="sxs-lookup"><span data-stu-id="dd99e-155">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool * bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding (encoderShouldEmitUTF8Identifier, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="dd99e-156">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-156">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="dd99e-157">
            <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-157">
              <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="dd99e-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-160">El `encoderShouldEmitUTF8Identifier` parámetro controla el funcionamiento de la <xref:System.Text.UTF8Encoding.GetPreamble%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-160">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="dd99e-161">Si `true`, el método devuelve una matriz de bytes que contiene la marca de orden de bytes Unicode (BOM) en formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="dd99e-161">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="dd99e-162">Si `false`, devuelve una matriz de bytes de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="dd99e-162">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="dd99e-163">Sin embargo, establecer `encoderShouldEmitUTF8Identifier` a `true` no provoca la <xref:System.Text.UTF8Encoding.GetBytes%2A> método como prefijo la marca BOM al principio de la matriz de bytes, ni hace que el <xref:System.Text.UTF8Encoding.GetByteCount%2A> método debe incluir el número de bytes en la marca BOM en el recuento de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-163">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="dd99e-164">Si `throwOnInvalidBytes` es `true`, un método que detecta una secuencia de bytes no válida inicia una <xref:System.ArgumentException?displayProperty=nameWithType> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-164">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="dd99e-165">En caso contrario, el método no produce una excepción y se omite la secuencia no válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-165">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-166">Por motivos de seguridad, debe habilitar detección de errores mediante una llamada a un constructor que incluya un `throwOnInvalidBytes` parámetro y establece ese parámetro en `true`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-166">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-167">En el ejemplo siguiente se crea un nuevo <xref:System.Text.UTF8Encoding> instancia especifica que el <xref:System.Text.UTF8Encoding.GetPreamble%2A> método no debe emitir un prefijo de marca de orden de bytes Unicode y debe producirse una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-167">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="dd99e-168">El comportamiento de este constructor se compara con el valor predeterminado <xref:System.Text.UTF8Encoding.%23ctor> constructor, que no produce una excepción cuando se detecta una codificación no válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-168">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="dd99e-169">Los dos <xref:System.Text.UTF8Encoding> instancias codifican una matriz de caracteres que contiene dos caracteres suplentes altos (U + D801 y D802 + U) en una fila, que es una secuencia de caracteres no válidos; un suplente alto siempre debe ir seguido por un suplente bajo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-169">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF8Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dd99e-170">The object to compare with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-170">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-172">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-172">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-173">Dos <xref:System.Text.UTF8Encoding> objetos se consideran iguales si se cumplen todas las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="dd99e-173">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="dd99e-174">Ambos objetos proporcionan la marca de orden de bytes, o ambos no lo hacen.</span><span class="sxs-lookup"><span data-stu-id="dd99e-174">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="dd99e-175">Ambos objetos utilizan la misma reserva del codificador.</span><span class="sxs-lookup"><span data-stu-id="dd99e-175">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="dd99e-176">Ambos objetos utilizan la misma reserva del descodificador.</span><span class="sxs-lookup"><span data-stu-id="dd99e-176">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-177">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.Equals%2A> método para probar si el actual <xref:System.Text.UTF8Encoding> es igual a otro objeto <xref:System.Text.UTF8Encoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="dd99e-177">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="dd99e-178">Cuatro <xref:System.Text.UTF8Encoding> objetos se crean y se comparan y se muestran los resultados de las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="dd99e-178">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="dd99e-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-182">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-182">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-183">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetBytes%2A> para almacenar los bytes resultantes, llame a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-183">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-184">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-184">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-185">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-185">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-186">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-186">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-187">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-187">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-188">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-188">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-189">Insertar el preámbulo del principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-189">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-190">El ejemplo siguiente se llama el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> y <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> métodos para calcular el número real y máximo de bytes necesarios para codificar una cadena.</span><span class="sxs-lookup"><span data-stu-id="dd99e-190">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="dd99e-191">También muestra el número real de bytes necesarios para almacenar una secuencia de bytes con una marca BOM.</span><span class="sxs-lookup"><span data-stu-id="dd99e-191">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-192">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-192">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="dd99e-196">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-196">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dd99e-197">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-197">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-198">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-198">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-199">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-199">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-200">Para calcular el tamaño exacto de matriz requerido la <xref:System.Text.UTF8Encoding.GetBytes%2A> método para almacenar los bytes resultantes, se llama a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-200">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-201">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-201">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-202">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-202">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-203">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-203">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-204">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-204">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-205">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-205">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-206">Insertar el preámbulo del principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-206">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-207">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-207">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-208">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-208">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-209">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-209">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-210">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-210">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-211">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-211">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dd99e-212">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-212">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dd99e-213">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-213">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="dd99e-214">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-214">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="dd99e-215">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-215">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dd99e-216">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-216">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-217">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-217">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-218">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-218">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-219">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetBytes%2A> para almacenar los bytes resultantes, llame a los usos <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-219">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-220">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-220">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-221">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-221">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-222">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-222">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-223">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-223">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-224">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-224">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-225">Insertar el preámbulo del principio de una secuencia de bytes (como al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador y el número de bytes en el preámbulo no se refleja en el valor devuelto por la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-225">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-226">El ejemplo siguiente rellena una matriz con un alfabeto latino en mayúsculas y minúsculas y llama a la <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método para determinar el número de bytes necesarios para codificar los caracteres en minúsculas latinos.</span><span class="sxs-lookup"><span data-stu-id="dd99e-226">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="dd99e-227">A continuación, muestra esta información junto con el número total de bytes necesarios si se agrega una marca BOM.</span><span class="sxs-lookup"><span data-stu-id="dd99e-227">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="dd99e-228">Compara este número con el valor devuelto por la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método, que indica el número máximo de bytes necesarios para codificar los caracteres en minúsculas latinos.</span><span class="sxs-lookup"><span data-stu-id="dd99e-228">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-229">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-229">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-230">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-230">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-231">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-231">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="dd99e-232">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-232">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-233">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-233">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-235">Encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-235">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="uTF8Encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="dd99e-236">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-236">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="dd99e-237">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-237">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="dd99e-238">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-238">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="dd99e-239">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-239">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-240">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-240">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-241">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-241">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-242">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetBytes%2A> para almacenar los bytes resultantes, llame a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-242">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-243">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-243">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-244">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-244">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-245">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-245">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-246">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-246">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-247">Datos que va a convertir, como los datos leídos de una secuencia, podrían ser disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-247">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="dd99e-248">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, utilice el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> devuelto por la <xref:System.Text.UTF8Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF8Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-248">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="dd99e-249">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-249">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-250">Insertar el preámbulo del principio de una secuencia de bytes (por ejemplo, al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="dd99e-250">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="dd99e-251">El <xref:System.Text.UTF8Encoding.GetBytes%2A> método no anteponga un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="dd99e-251">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-252">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-252">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dd99e-253">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-253">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-254">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-254">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-255">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-255">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="dd99e-256">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-256">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dd99e-258">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-258">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dd99e-259">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-259">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="dd99e-260">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-260">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="dd99e-261">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-261">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="dd99e-262">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-262">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="dd99e-263">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-263">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="dd99e-264">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-264">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-265">Encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-265">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-266">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-266">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-267">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetBytes%2A> para almacenar los bytes resultantes, llame a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-267">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-268">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-268">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-269">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-269">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-270">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-270">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-271">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-271">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-272">Datos que va a convertir, como los datos leídos de una secuencia, podrían ser disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-272">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="dd99e-273">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, use el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF8Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF8Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-273">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="dd99e-274">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-274">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-275">Insertar el preámbulo del principio de una secuencia de bytes (por ejemplo, al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="dd99e-275">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="dd99e-276">El <xref:System.Text.UTF8Encoding.GetBytes%2A> método no anteponga un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="dd99e-276">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-277">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetBytes%2A> método para codificar un intervalo de caracteres de una cadena y almacena los bytes codificados en un intervalo de elementos de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-277">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-278">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-278">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dd99e-279">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-279">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-280">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-280">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-281">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-281">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="dd99e-282">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-282">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-283">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-283">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="dd99e-284">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-284">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-285">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-285">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="dd99e-286">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-286">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="dd99e-287">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-287">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="dd99e-288">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-288">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="dd99e-289">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-289">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="dd99e-290">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-290">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-291">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-291">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-292">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-292">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-293">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetBytes%2A> para almacenar los bytes resultantes, llame a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-293">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-294">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-294">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-295">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-295">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-296">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-296">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-297">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-297">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-298">Datos que va a convertir, como los datos leídos de una secuencia, podrían ser disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-298">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="dd99e-299">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, use el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF8Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF8Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-299">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="dd99e-300">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, se puede anteponer una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-300">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-301">Insertar el preámbulo del principio de una secuencia de bytes (por ejemplo, al principio de una serie de bytes que se escribirán en un archivo) es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="dd99e-301">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="dd99e-302">El <xref:System.Text.UTF8Encoding.GetBytes%2A> método no anteponga un preámbulo al principio de una secuencia de bytes codificadas.</span><span class="sxs-lookup"><span data-stu-id="dd99e-302">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-303">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetBytes%2A> método para codificar un intervalo de elementos de una matriz de caracteres Unicode y almacenar los bytes codificados en un intervalo de elementos de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-303">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-304">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-304">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dd99e-305">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-305">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-306">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-306">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-307">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-307">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="dd99e-308">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-308">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-309">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-309">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="dd99e-310">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-310">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-311">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-311">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-312">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-312">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="dd99e-313">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-313">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dd99e-314">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-314">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-315">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-315">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-316">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-316">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-317">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF8Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-317">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-318">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-318">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-319">El <xref:System.Text.UTF8Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-319">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-320">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-320">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-321">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-321">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-322">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-322">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-323">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-323">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-324">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-324">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-325">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-325">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="dd99e-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dd99e-327">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-327">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dd99e-328">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-328">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="dd99e-329">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-329">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="dd99e-330">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-330">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dd99e-331">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-331">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-332">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-332">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-333">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-333">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-334">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF8Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-334">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-335">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-335">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-336">El <xref:System.Text.UTF8Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-336">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-337">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-337">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-338">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-338">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-339">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetCharCount%2A> método para devolver el número de caracteres que se genera al descodificar un intervalo de elementos de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-339">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-340">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-340">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-341">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-341">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-342">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-342">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="dd99e-343">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-343">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-344">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-344">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="dd99e-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-346">Decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-346">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="dd99e-347">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-347">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="dd99e-348">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-348">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="dd99e-349">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-349">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="dd99e-350">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-350">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-351">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-351">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-352">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-352">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-353">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF8Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-353">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-354">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-354">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-355">El <xref:System.Text.UTF8Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-355">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-356">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-356">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-357">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-357">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-358">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y se devolvió la matriz de bytes por un método de un tipo compatible con no BOM, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-358">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="dd99e-359">Puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-359">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd99e-360">Datos que va a convertir, como los datos leídos de una secuencia, podrían ser disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-360">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="dd99e-361">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, utilice el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> objeto proporcionado por el <xref:System.Text.UTF8Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF8Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-361">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-362">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-362">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dd99e-363">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-363">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-364">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-364">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-365">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-365">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="dd99e-366">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-366">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="dd99e-367">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-367">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="dd99e-368">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-368">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="dd99e-369">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-369">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="dd99e-370">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-370">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="dd99e-371">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-371">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="dd99e-372">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-372">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="dd99e-373">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-373">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="dd99e-374">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-374">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-375">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-375">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-376">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-376">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-377">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF8Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-377">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-378">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-378">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-379">El <xref:System.Text.UTF8Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-379">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-380">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-380">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-381">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-381">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-382">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y se devolvió la matriz de bytes por un método de un tipo compatible con no BOM, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-382">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="dd99e-383">Puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-383">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd99e-384">Datos que va a convertir, como los datos leídos de una secuencia, podrían ser disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-384">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="dd99e-385">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, use el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF8Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF8Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-385">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-386">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetChars%2A> método para descodificar un intervalo de elementos de una matriz de bytes y almacena el resultado en una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="dd99e-386">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-387">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-387">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dd99e-388">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-388">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-389">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-389">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-390">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-390">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="dd99e-391">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-391">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-392">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-392">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="dd99e-393">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-393">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="dd99e-394">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-394">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF8Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-395">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-395">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-396">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-396">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-397">El <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> método convierte bloques secuenciales de bytes en bloques secuenciales de caracteres, de forma similar a la <xref:System.Text.UTF8Encoding.GetChars%2A> método de esta clase.</span><span class="sxs-lookup"><span data-stu-id="dd99e-397">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="dd99e-398">Sin embargo, un <xref:System.Text.Decoder> mantiene la información de estado entre llamadas, de modo que puede descodificar correctamente las secuencias de bytes que abarcan distintos bloques.</span><span class="sxs-lookup"><span data-stu-id="dd99e-398">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="dd99e-399">El <xref:System.Text.Decoder> también conserva los bytes al final de los bloques de datos y usa los bytes finales en la siguiente operación de descodificación.</span><span class="sxs-lookup"><span data-stu-id="dd99e-399">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="dd99e-400">Por lo tanto, <xref:System.Text.UTF8Encoding.GetDecoder%2A> y <xref:System.Text.UTF8Encoding.GetEncoder%2A> son útiles para la transmisión de red y las operaciones de archivo, porque esas operaciones a menudo tratan con bloques de datos en lugar de un flujo de datos completa.</span><span class="sxs-lookup"><span data-stu-id="dd99e-400">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="dd99e-401">Si está habilitada la detección de errores, es decir, el `throwOnInvalidCharacters` parámetro del constructor se establece en `true`, también se habilita la detección de errores en el <xref:System.Text.Decoder> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-401">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="dd99e-402">Si está habilitada la detección de errores y se encuentra una secuencia no válida, el estado del descodificador no está definido y debe detener el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="dd99e-402">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-403">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetDecoder%2A> método para obtener un descodificador UTF-8.</span><span class="sxs-lookup"><span data-stu-id="dd99e-403">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="dd99e-404">El descodificador convierte una secuencia de bytes en una secuencia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="dd99e-404">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF8Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-405">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-405">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-406">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-406">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-407">El <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> método convierte bloques secuenciales de caracteres en bloques secuenciales de bytes, de forma similar a la <xref:System.Text.UTF8Encoding.GetBytes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-407">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="dd99e-408">Sin embargo, un <xref:System.Text.Encoder> mantiene la información de estado entre llamadas, de modo que puede codificar correctamente las secuencias de caracteres que abarcan distintos bloques.</span><span class="sxs-lookup"><span data-stu-id="dd99e-408">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="dd99e-409">El <xref:System.Text.Encoder> también conserva finales caracteres al final de los bloques de datos y usa caracteres finales en la siguiente operación de codificación.</span><span class="sxs-lookup"><span data-stu-id="dd99e-409">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="dd99e-410">Por ejemplo, un bloque de datos podría finalizar con un suplente alto no coincidente, y el suplente bajo podría estar en el siguiente bloque de datos.</span><span class="sxs-lookup"><span data-stu-id="dd99e-410">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="dd99e-411">Por lo tanto, <xref:System.Text.UTF8Encoding.GetDecoder%2A> y <xref:System.Text.UTF8Encoding.GetEncoder%2A> son útiles para la transmisión de red y las operaciones de archivo, porque esas operaciones a menudo tratan con bloques de datos en lugar de un flujo de datos completa.</span><span class="sxs-lookup"><span data-stu-id="dd99e-411">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="dd99e-412">Si está habilitada la detección de errores, es decir, el `throwOnInvalidCharacters` parámetro del constructor se establece en `true`, también se habilita la detección de errores en el <xref:System.Text.Encoder> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-412">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="dd99e-413">Si está habilitada la detección de errores y se encuentra una secuencia no válida, el estado del codificador está definido y debe detener el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="dd99e-413">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-414">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetEncoder%2A> método para obtener un codificador para convertir una secuencia de caracteres en un UTF-8 de secuencia de bytes codificada.</span><span class="sxs-lookup"><span data-stu-id="dd99e-414">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF8Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-415">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-415">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-416">The hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-416">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd99e-417">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetHashCode%2A> método devuelva un código hash para <xref:System.Text.UTF8Encoding> instancias.</span><span class="sxs-lookup"><span data-stu-id="dd99e-417">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="dd99e-418">Tenga en cuenta que el código hash devuelto por este método depende del constructor se utiliza para crear el <xref:System.Text.UTF8Encoding> objeto.</span><span class="sxs-lookup"><span data-stu-id="dd99e-418">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF8Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="dd99e-419">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-419">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-420">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-420">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-421">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-421">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-422">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetBytes%2A> para almacenar los bytes resultantes, llame a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-422">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-423">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-423">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="dd99e-424">El <xref:System.Text.UTF8Encoding.GetByteCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-424">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-425"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> es un número peor, incluido el peor de los casos para el que se han seleccionado actualmente <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-425"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="dd99e-426">Si se elige una acción de reserva con una cadena potencialmente grande, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> puede devolver valores grandes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-426">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="dd99e-427">En la mayoría de los casos, este método devuelve un número razonable de las cadenas pequeñas.</span><span class="sxs-lookup"><span data-stu-id="dd99e-427">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="dd99e-428">Cadenas de gran tamaño, tendrá que elegir entre usar búferes muy grandes y detectar errores en el caso excepcional de que se ha superado un búfer más razonable.</span><span class="sxs-lookup"><span data-stu-id="dd99e-428">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="dd99e-429">También puede tener en cuenta un enfoque diferente utilizando <xref:System.Text.UTF8Encoding.GetByteCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-429">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dd99e-430">Por ejemplo, texto en inglés y muchos otros lenguajes a menudo necesita un solo byte de UTF-8 para representar un carácter, pero el número devuelto por <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> tiene que permitir la posibilidad de que la cadena que se va a convertir conste únicamente de caracteres que cada uno requiere cuatro bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-430">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="dd99e-431"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> no tiene ninguna relación con <xref:System.Text.UTF8Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-431"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="dd99e-432">Si la aplicación necesita una función similar a usar con <xref:System.Text.UTF8Encoding.GetChars%2A>, debe usar <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-432">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-433">`GetMaxByteCount(N)` no es necesariamente el mismo valor que `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-433">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-434">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> método para devolver el número máximo de bytes necesarios para codificar un número especificado de caracteres.</span><span class="sxs-lookup"><span data-stu-id="dd99e-434">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-435">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-435">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-436">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-436">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="dd99e-437">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-437">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF8Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="dd99e-438">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-438">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-439">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-439">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-440">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-440">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-441">Para calcular el tamaño exacto de matriz requerido <xref:System.Text.UTF8Encoding.GetChars%2A> para almacenar los caracteres resultantes, llame a la <xref:System.Text.UTF8Encoding.GetCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-441">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-442">Para calcular el tamaño máximo de la matriz, llame a la <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-442">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="dd99e-443">El <xref:System.Text.UTF8Encoding.GetCharCount%2A> método asigna generalmente menos memoria, mientras que el <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método generalmente se ejecuta con mayor rapidez.</span><span class="sxs-lookup"><span data-stu-id="dd99e-443">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="dd99e-444"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> es un número peor, incluido el peor de los casos para el que se han seleccionado actualmente <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-444"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="dd99e-445">Si se elige una acción de reserva con una cadena potencialmente grande, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> puede devolver valores grandes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-445">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="dd99e-446">En la mayoría de los casos, este método devuelve un número razonable de las cadenas pequeñas.</span><span class="sxs-lookup"><span data-stu-id="dd99e-446">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="dd99e-447">Cadenas de gran tamaño, tendrá que elegir entre usar búferes muy grandes y detectar errores en el caso excepcional de que se ha superado un búfer más razonable.</span><span class="sxs-lookup"><span data-stu-id="dd99e-447">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="dd99e-448">También puede tener en cuenta un enfoque diferente utilizando <xref:System.Text.UTF8Encoding.GetCharCount%2A> o <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-448">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dd99e-449"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> no tiene ninguna relación con <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-449"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="dd99e-450">Si la aplicación necesita una función similar a usar con <xref:System.Text.UTF8Encoding.GetBytes%2A>, debe usar <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd99e-450">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd99e-451">`GetMaxCharCount(N)` no es necesariamente el mismo valor que `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-451">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-452">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> método para devolver el número máximo de caracteres que se genera al descodificar un número especificado de bytes.</span><span class="sxs-lookup"><span data-stu-id="dd99e-452">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-453">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-453">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-454">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-454">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="dd99e-455">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-455">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF8Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd99e-456">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-456">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-457">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-457">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
          <span data-ttu-id="dd99e-458">Otherwise, this method returns a zero-length byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-458">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-459">La <xref:System.Text.UTF8Encoding> objeto puede proporcionar un preámbulo, que es una matriz de bytes que se puede anteponer a la secuencia de bytes que se derivan del proceso de codificación.</span><span class="sxs-lookup"><span data-stu-id="dd99e-459">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="dd99e-460">Delante de una secuencia de bytes codificados con una marca BOM (punto de código U+FEFF) ayuda a que el descodificador de determinar el orden de bytes y el formato de transformación o UTF.</span><span class="sxs-lookup"><span data-stu-id="dd99e-460">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="dd99e-461">La marca de orden de bytes Unicode (BOM) se serializa como 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="dd99e-461">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="dd99e-462">Tenga en cuenta que el estándar Unicode no requiere ni se recomienda el uso de una marca BOM UTF-8 codificada secuencias.</span><span class="sxs-lookup"><span data-stu-id="dd99e-462">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="dd99e-463">Puede crear instancias de un <xref:System.Text.UTF8Encoding> cuyo <xref:System.Text.UTF8Encoding.GetPreamble%2A> método devuelve una lista de materiales válido de las maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="dd99e-463">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="dd99e-464">Recuperando el <xref:System.Text.UTF8Encoding> objeto devuelto por la <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dd99e-464">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dd99e-465">Mediante una llamada a un <xref:System.Text.UTF8Encoding> constructor con un `encoderShouldEmitUTF8Identifier` parámetro y establece su valor establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-465">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="dd99e-466">Todos los demás <xref:System.Text.UTF8Encoding> objetos están configurados para devolver una matriz vacía en lugar de una marca BOM válida.</span><span class="sxs-lookup"><span data-stu-id="dd99e-466">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="dd99e-467">La marca BOM proporcionan cierta identificación de una codificación para los archivos que han perdido de lo contrario, una referencia a su codificación, como web sin etiqueta o incorrectamente etiquetado datos o archivos de texto aleatorios almacenados cuando un negocio no tenía intereses internacionales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-467">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="dd99e-468">Problemas de los usuarios a menudo pueden evitarse si los datos se etiquetan de forma coherente y correctamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-468">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="dd99e-469">Los estándares que proporcionan un tipo de codificación, una marca BOM es redundante.</span><span class="sxs-lookup"><span data-stu-id="dd99e-469">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="dd99e-470">Sin embargo, se puede usar para ayudar a un servidor de enviar el encabezado de codificación correcto.</span><span class="sxs-lookup"><span data-stu-id="dd99e-470">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="dd99e-471">Como alternativa, se puede usar como reserva en caso de que la codificación en caso contrario, se pierde.</span><span class="sxs-lookup"><span data-stu-id="dd99e-471">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="dd99e-472">Existen algunas desventajas del uso de una marca BOM.</span><span class="sxs-lookup"><span data-stu-id="dd99e-472">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="dd99e-473">Por ejemplo, puede ser difícil saber cómo limitar los campos de la base de datos que usan una marca BOM.</span><span class="sxs-lookup"><span data-stu-id="dd99e-473">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="dd99e-474">Concatenación de archivos también puede ser un problema, por ejemplo, cuando se mezclan los archivos de tal forma que un carácter innecesario puede acabar en el centro de datos.</span><span class="sxs-lookup"><span data-stu-id="dd99e-474">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="dd99e-475">A pesar de la serie de desventajas, sin embargo, el uso de una lista de materiales se recomienda encarecidamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-475">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="dd99e-476">Para obtener más información sobre el orden de bytes y la marca de orden de bytes, vea el estándar Unicode en el [página principal de Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="dd99e-476">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dd99e-477">Para asegurarse de que los bytes codificados se descodifican correctamente cuando se guardan como un archivo o como una secuencia, puede anteponer el comienzo de una secuencia de bytes codificados con un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-477">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="dd99e-478">Tenga en cuenta que el <xref:System.Text.UTF8Encoding.GetBytes%2A> método no anteponer una marca BOM a una secuencia de bytes codificados; proporcionando una marca BOM al principio de una secuencia de bytes apropiada es responsabilidad del desarrollador.</span><span class="sxs-lookup"><span data-stu-id="dd99e-478">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-479">En el ejemplo siguiente se usa el <xref:System.Text.UTF8Encoding.GetPreamble%2A> codificado en formato UTF-8 de marca de orden de método para devolver el byte Unicode.</span><span class="sxs-lookup"><span data-stu-id="dd99e-479">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="dd99e-480">Tenga en cuenta que el constructor predeterminado para <xref:System.Text.UTF8Encoding> no proporciona un preámbulo.</span><span class="sxs-lookup"><span data-stu-id="dd99e-480">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="dd99e-481">El ejemplo siguiente crea dos <xref:System.Text.UTF8Encoding> objetos, la primera mediante una llamada sin parámetros <xref:System.Text.UTF8Encoding.%23ctor> constructor, que no proporciona una lista de materiales y el segundo mediante una llamada a la <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor con su `encoderShouldEmitUTF8Identifier` argumento establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="dd99e-481">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="dd99e-482">A continuación, llama el <xref:System.Text.UTF8Encoding.GetPreamble%2A> método para escribir la lista de materiales en un archivo antes de escribir una cadena codificada UF8.</span><span class="sxs-lookup"><span data-stu-id="dd99e-482">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="dd99e-483">Como se muestra en la consola de salida del ejemplo, el archivo que guarda los bytes del segundo codificador tiene tres más bytes que el primero.</span><span class="sxs-lookup"><span data-stu-id="dd99e-483">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="dd99e-484">También puede comparar los archivos mediante el `fc` comando en una ventana de consola, o bien puede inspeccionar los archivos en un editor de texto que incluye un modo de vista hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="dd99e-484">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="dd99e-485">Tenga en cuenta que cuando se abre el archivo en un editor que admite UTF-8, no se muestra la lista de materiales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-485">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF8Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="dd99e-486">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-486">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="dd99e-487">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-487">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dd99e-488">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-488">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd99e-489">Decodes a range of bytes from a byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-489">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd99e-490">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-490">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd99e-491">Con la detección de errores, una secuencia no válida hace que este método producir una <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-491">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="dd99e-492">Sin detección de errores, se omiten las secuencias no válidas y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="dd99e-492">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="dd99e-493">Si el intervalo de bytes que se desea descodificar incluye la marca de orden de bytes (BOM) y se devolvió la matriz de bytes por un método de un tipo compatible con no BOM, el carácter U + FFFE se incluye en la matriz de caracteres devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-493">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="dd99e-494">Puede quitar mediante una llamada a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-494">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dd99e-495">Datos que va a convertir, como los datos leídos de una secuencia, podrían ser disponibles sólo en bloques secuenciales.</span><span class="sxs-lookup"><span data-stu-id="dd99e-495">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="dd99e-496">En este caso, o si la cantidad de datos es tan grande que debe dividirse en bloques más pequeños, use el <xref:System.Text.Decoder> o <xref:System.Text.Encoder> proporcionada por el <xref:System.Text.UTF8Encoding.GetDecoder%2A> método o la <xref:System.Text.UTF8Encoding.GetEncoder%2A> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="dd99e-496">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd99e-497">En el ejemplo siguiente se inicializa una matriz mediante una llamada a la <xref:System.Text.UTF8Encoding.GetByteCount%2A> método para determinar exactamente cuántos bytes son necesarios para una cadena codificada y, a continuación, agregar el tamaño de la marca de orden de bytes (BOM).</span><span class="sxs-lookup"><span data-stu-id="dd99e-497">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="dd99e-498">El ejemplo llama a la <xref:System.Text.UTF8Encoding.GetPreamble%2A> método para almacenar la marca BOM a la matriz antes de llamar a la <xref:System.Text.UTF8Encoding.GetBytes%2A> método para almacenar los bytes codificados en la matriz.</span><span class="sxs-lookup"><span data-stu-id="dd99e-498">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="dd99e-499">El ejemplo llama a la <xref:System.Text.UTF8Encoding.GetString%2A> método para descodificar la cadena.</span><span class="sxs-lookup"><span data-stu-id="dd99e-499">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="dd99e-500">Tenga en cuenta que en este caso la cadena descodificada difiere de la cadena original, ya que comienza con una marca de orden de bytes de 16 bits U+FFFD.</span><span class="sxs-lookup"><span data-stu-id="dd99e-500">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="dd99e-501">Esto significa que las dos cadenas se consideran diferente, y que, si la cadena es la salida, se mostrará la lista de materiales como el carácter de reemplazo "?".</span><span class="sxs-lookup"><span data-stu-id="dd99e-501">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="dd99e-502">Para quitar la marca BOM al principio de la cadena, puede llamar a la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dd99e-502">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd99e-503">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-503">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd99e-504">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-504">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="dd99e-505">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-505">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd99e-506">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-506">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="dd99e-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd99e-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>