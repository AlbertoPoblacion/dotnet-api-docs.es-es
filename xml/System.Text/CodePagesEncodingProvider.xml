<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3556af1d10288db2731915f0c2364e27b37854ea" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49133975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-plat-ext-2.1">System.Text.EncodingProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona acceso a un proveedor de codificación para páginas de código admitidas en .NET Framework de escritorio pero no en aplicaciones UWP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  La <xref:System.Text.CodePagesEncodingProvider> clase es compatible con la implementación .NET Native de .NET Core.  
  
 .NET Framework para el escritorio de Windows es compatible con un gran conjunto de codificaciones de páginas de código y Unicode. La plataforma de Windows Universal y .NET Native, por otro lado, admiten sólo las codificaciones siguientes:  
  
-   ASCII (página de códigos 20127), que es devuelto por la <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> propiedad.  
  
-   ISO-8859-1 (página de códigos 28591).  
  
-   UTF-7 (página de códigos 65000), que es devuelto por la <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-8 (página de códigos 65001), que es devuelto por la <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-16 y UTF-16LE (página de códigos 1200), que es devuelto por la <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-16BE (página de códigos 1201), que se crea una instancia mediante una llamada a la <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> o <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor con un `bigEndian` valor `true`.  
  
-   UTF-32 y UTF-32LE (página de códigos 12000), que es devuelto por la <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-32BE (página de códigos 12001), que se crea una instancia mediante una llamada a un <xref:System.Text.UTF32Encoding> constructor que tiene un `bigEndian` parámetro y proporcionar un valor de `true` en la llamada al método.  
  
 Distinto de la página de códigos 20127, no se admiten las codificaciones de páginas de código.  
  
 El <xref:System.Text.CodePagesEncodingProvider> extiende la clase <xref:System.Text.EncodingProvider> para que estas páginas de códigos disponibles en las aplicaciones de .NET Native y plataforma Universal de Windows (UWP). Para usar estas páginas de código adicional, hacer lo siguiente:  
  
-   Agregue una referencia al ensamblado System.Text.Encoding.CodePages.dll al proyecto.  
  
-   Recuperar un <xref:System.Text.CodePagesEncodingProvider> objeto estático <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> propiedad.  
  
-   Pase el objeto <xref:System.Text.CodePagesEncodingProvider> al método <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>.  
  
 Después de un <xref:System.Text.EncodingProvider> el objeto está registrado, las codificaciones que admite están disponibles mediante una llamada a las sobrecargas de <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>; no debe llamar a la <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> sobrecargas.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un proveedor de codificación para páginas de códigos compatibles con .NET Framework de escritorio, pero no con la plataforma .NET Framework actual.</summary>
        <value>Un proveedor de codificación que permite el acceso a codificaciones no admitidas en la plataforma .NET Framework actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Text.CodePagesEncodingProvider.Instance%2A> propiedad devuelve un <xref:System.Text.EncodingProvider> objeto que hace que las codificaciones disponibles para las aplicaciones que tienen como destino el [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o una versión posterior y que en caso contrario, solo están disponibles en .NET Framework en el escritorio de Windows.  
  
 .NET Framework en el escritorio Windows admite un gran número de caracteres codificaciones y páginas de códigos. Puede obtener una lista completa de las codificaciones mediante una llamada a la <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> método, que está disponible en .NET Framework completo en el escritorio de Windows. .NET native para aplicaciones UWP, por otro lado, admite solo las siguientes codificaciones de forma predeterminada:  
  
-   ASCII (página de códigos 20127), que es devuelto por la <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> propiedad.  
  
-   ISO-8859-1 (página de códigos 28591).  
  
-   UTF-7 (página de códigos 65000), que es devuelto por la <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-8 (página de códigos 65001), que es devuelto por la <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-16 y UTF-16LE (página de códigos 1200), que es devuelto por la <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-16BE (página de códigos 1201), que se crea una instancia mediante una llamada a la <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> o <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor con un `bigEndian` valor `true`.  
  
-   UTF-32 y UTF-32LE (página de códigos 12000), que es devuelto por la <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-32BE (página de códigos 12001), que se crea una instancia mediante una llamada a un <xref:System.Text.UTF32Encoding> constructor que tiene un `bigEndian` parámetro y proporcionar un valor de `true` en la llamada al método.  
  
 Para recuperar una codificación que se encuentra en .NET Framework en el escritorio de Windows, pero no en aplicaciones para UWP, hacer lo siguiente:  
  
-   Agregue una referencia al ensamblado System.Text.Encoding.CodePages.dll al proyecto.  
  
-   Obtener el <xref:System.Text.EncodingProvider> objeto estático <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> propiedad.  
  
-   Pase el <xref:System.Text.EncodingProvider> de objeto para el <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> método para hacer que las codificaciones proporcionadas por el <xref:System.Text.EncodingProvider> objeto disponible para common language runtime.  
  
-   Llamar a un <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> sobrecarga para recuperar la codificación. El <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> método llamará a la correspondiente <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> método para determinar si puede proporcionar la codificación solicitada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>