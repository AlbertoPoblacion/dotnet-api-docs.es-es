<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8e57c657181c6bd8299235a19acbed251bbf103" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48762812" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona la clase base de un proveedor de codificación, que suministra las codificaciones que no están disponibles en una plataforma concreta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un proveedor de codificación suministra las codificaciones que no están disponibles en una plataforma de destino determinado.  
  
 .NET Framework en el escritorio Windows admite un gran número de caracteres codificaciones y páginas de códigos. Puede obtener una lista completa de codificaciones disponibles en .NET Framework en el escritorio de Windows mediante una llamada a la <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> método. .NET core, por otro lado, de forma predeterminada admite solo las codificaciones siguientes:  
  
-   ASCII (página de códigos 20127), que es devuelto por la <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> propiedad.  
  
-   ISO-8859-1 (página de códigos 28591).  
  
-   UTF-7 (página de códigos 65000), que es devuelto por la <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-8 (página de códigos 65001), que es devuelto por la <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-16 y UTF-16LE (página de códigos 1200), que es devuelto por la <xref:System.Text.Encoding.Unicode%2A> propiedad.  
  
-   UTF-16BE (página de códigos 1201), que se crea una instancia mediante una llamada a la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> o <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor con un `bigEndian` valor `true`.  
  
-   UTF-32 y UTF-32LE (página de códigos 12000), que es devuelto por la <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> propiedad.  
  
-   UTF-32BE (página de códigos 12001), que se crea una instancia mediante una llamada a un <xref:System.Text.UTF32Encoding> constructor que tiene un `bigEndian` parámetro y proporcionar un valor de `true` en la llamada al método.  
  
 A partir de .NET Framework 4.6, <xref:System.Text.EncodingProvider> es la clase base que en caso contrario, dejará de estar disponible codificaciones disponibles en .NET Framework. Esto implica los pasos siguientes:  
  
1.  Define una subclase de <xref:System.Text.EncodingProvider> que invalida la abstracta dos <xref:System.Text.EncodingProvider.GetEncoding%2A> sobrecargas, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> y <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. Estas sobrecargas devuelven que el en caso contrario, una codificación no compatible por identificador de página de códigos y por nombre. Tenga en cuenta que también puede devolver una codificación predeterminada si el <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> se llama al método con un argumento de 0.  
  
2.  Si lo desea, puede invalidar el virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> y <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> métodos. En la mayoría de los casos, esto no es necesario, puesto que la clase base proporciona una implementación predeterminada.  
  
3.  Pase el <xref:System.Text.EncodingProvider> de instancia para el <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> método para hacer que las codificaciones proporcionadas por el <xref:System.Text.EncodingProvider> objeto disponible para common language runtime.  
  
4.  Llamar a un <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> sobrecarga para recuperar la codificación. El <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> método llamará a la correspondiente <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> para determinar si puede proporcionar la codificación solicitada.  
  
 La biblioteca de clases de .NET Framework proporciona una propiedad estática, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, que devuelve un <xref:System.Text.EncodingProvider> objeto que hace que el conjunto completo de las codificaciones disponibles en el escritorio de .NET Framework Class Library disponibles para [!INCLUDE[net_core](~/includes/net-core-md.md)] aplicaciones. Además, puede derivar el <xref:System.Text.EncodingProvider> clase para realizar sus propias codificaciones disponibles.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/system.text.codepagesencodingprovider.instance(v=vs.110).aspx">Propiedad CodePagesEncodingProvider.Instance</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.EncodingProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve una codificación.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">Identificador de página de códigos de la codificación solicitada.</param>
        <summary>Devuelve la codificación asociada al identificador de página de códigos especificado.</summary>
        <returns>Codificación asociada a la página de códigos especificada, o <see langword="null" /> si <see cref="T:System.Text.EncodingProvider" /> no puede devolver una codificación válida que corresponda a <paramref name="codepage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a>Notas para los herederos

Invalida el [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) método para devolver la codificación o codificaciones admitidas por su <xref:System.Text.EncodingProvider> subclase. Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) método, el método pasa el `codepage` identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida. Si ninguno devuelve una codificación válida, el [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) método intenta recuperar una codificación en caché cuyo identificador de la página de códigos es `codepage`. Por este motivo, si `codepage` no es el identificador de la página de códigos de la codificación que admiten el método debe devolver `null`; nunca debe producir una excepción.
        
Tenga en cuenta que también puede devolver una página de códigos predeterminada si el valor de la `codepage` argumento es 0.

## <a name="notes-to-callers"></a>Notas para llamadores
        
Este método es invocado por el [Encoding.GetEncoding (Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) método. No se debe llamar directamente desde el código de usuario.

        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Invalida el <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> método para devolver la codificación o codificaciones admitidas por su <see cref="T:System.Text.EncodingProvider" /> subclase. Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> método, el método pasa el <paramref name="codepage" /> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida. Si ninguno devuelve una codificación válida, el <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> método intenta recuperar una codificación en caché cuyo identificador de la página de códigos es <paramref name="codepage" />. Por este motivo, si <paramref name="codepage" /> no es el identificador de la página de códigos de la codificación que admiten el método debe devolver <see langword="null" />; nunca debe producir una excepción.</para></block>
        <block subset="none" type="usage"><para>Este método es invocado por el <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> método. No se debe llamar directamente desde el código de usuario.</para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la codificación solicitada.</param>
        <summary>Devuelve la codificación con el nombre especificado.</summary>
        <returns>Codificación asociada al nombre especificado, o <see cref="T:System.Text.EncodingProvider" /> si <see langword="null" /> no puede devolver una codificación válida que corresponda a <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a>Notas para los herederos 
                  
Invalida el [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) método para devolver la codificación o codificaciones admitidas por su <xref:System.Text.EncodingProvider> subclase. Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) método, el método pasa el `name` argumento a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida. Si ninguno devuelve una codificación válida, el [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) método intenta recuperar una codificación en caché cuyo nombre es `name`. Por este motivo, si `name` no es el nombre de la codificación que admiten el método debe devolver `null`. Es el único caso en el que el método debe producir una excepción si `name` es `null`.

## <a name="notes-to-callers"></a>Notas para llamadores

Este método es invocado por el [Encoding.GetEncoding (String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) método. No se debe llamar directamente desde el código de usuario.
        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Invalida el <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> método para devolver la codificación o codificaciones admitidas por su <see cref="T:System.Text.EncodingProvider" /> subclase. Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> método, el método pasa el <paramref name="name" /> argumento a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida. Si ninguno devuelve una codificación válida, el <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> método intenta recuperar una codificación en caché cuyo nombre es <paramref name="name" />. Por este motivo, si <paramref name="name" /> no es el nombre de la codificación que admiten el método debe devolver <see langword="null" />. Es el único caso en el que el método debe producir una excepción si <paramref name="name" /> es <see langword="null" />.</para></block>
        <block subset="none" type="usage"><para>Este método es invocado por el <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> método. No se debe llamar directamente desde el código de usuario.</para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">Identificador de página de códigos de la codificación solicitada.</param>
        <param name="encoderFallback">Objeto que proporciona un procedimiento de control de errores cuando no se puede codificar un carácter con esta codificación.</param>
        <param name="decoderFallback">Objeto que proporciona un procedimiento de control de errores cuando una secuencia de bytes no se puede descodificar con esta codificación.</param>
        <summary>Devuelve la codificación asociada al identificador de página de códigos especificado. Los parámetros especifican un controlador de errores para los caracteres que no se pueden codificar y para las secuencias de bytes que no se pueden descodificar.</summary>
        <returns>Codificación asociada a la página de códigos especificada, o <see langword="null" /> si <see cref="T:System.Text.EncodingProvider" /> no puede devolver una codificación válida que corresponda a <paramref name="codepage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `encoderFallback` y `decoderFallback` parámetros son objetos que definen la estrategia de reserva que se usa en caso de que un codificador no puede convertir un carácter en una secuencia de bytes o un descodificador no puede convertir una secuencia de bytes en un carácter. .NET Framework proporciona los siguientes mecanismos de reserva:  
  
-   Reserva de excepción. Si el `encoderFallback` argumento es una instancia de <xref:System.Text.EncoderExceptionFallback>, o el `decoderExceptionFallback` argumento es una instancia de <xref:System.Text.DecoderExceptionFallback>, el método de codificación produce una excepción si no se puede codificar caracteres y el método de descodificación produce una excepción si un byte no se puede descodificar la secuencia.  
  
-   Reserva de reemplazo. Si el `encoderFallback` argumento es una instancia de <xref:System.Text.EncoderReplacementFallback>, o el `decoderExceptionFallback` argumento es una instancia de <xref:System.Text.DecoderReplacementFallback>, la codificación y descodificación métodos sustituyen una cadena de reemplazo para los caracteres que no se puede codificar y las secuencias de bytes no se puede descodificar. Si crea una instancia del objeto de reserva de reemplazo llamando al constructor predeterminado, el carácter de reemplazo es un "?". Si se llama a la <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> o <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, puede especificar la cadena de reemplazo.  
  
-   Reserva con ajuste perfecto. Puede derivar de la <xref:System.Text.EncoderFallback> o <xref:System.Text.DecoderFallback> clase para implementar un mecanismo de reemplazo con ajuste perfecto.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Dado que las llamadas a este método usa la implementación de la <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> método, no es necesario reemplazarlo. Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> método, el método pasa el <paramref name="codepage" /> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida. Si ninguno devuelve una codificación válida, el <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> método intenta recuperar una codificación en caché cuyo identificador de la página de códigos es <paramref name="codepage" />. Por este motivo, si opta por reemplazar el <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> método, debe devolver la invalidación <see langword="null" /> si <paramref name="codepage" /> no es el identificador de la página de códigos de la codificación que admiten; nunca debe producir una excepción.</para></block>
        <block subset="none" type="usage"><para>Este método es invocado por el <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> método. No se debe llamar directamente desde el código de usuario.</para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la codificación preferida.</param>
        <param name="encoderFallback">Objeto que proporciona un procedimiento de control de errores cuando no se puede codificar un carácter con esta codificación.</param>
        <param name="decoderFallback">Objeto que proporciona un procedimiento de control de errores cuando una secuencia de bytes no se puede descodificar con la codificación actual.</param>
        <summary>Devuelve la codificación asociada con el nombre especificado. Los parámetros especifican un controlador de errores para los caracteres que no se pueden codificar y para las secuencias de bytes que no se pueden descodificar.</summary>
        <returns>Codificación asociada al nombre especificado, o <see cref="T:System.Text.EncodingProvider" /> si <see langword="null" /> no puede devolver una codificación válida que corresponda a <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `encoderFallback` y `decoderFallback` parámetros son objetos que definen la estrategia de reserva que se usa en caso de que un codificador no puede convertir un carácter en una secuencia de bytes o un descodificador no puede convertir una secuencia de bytes en un carácter. .NET Framework proporciona los siguientes mecanismos de reserva:  
  
-   Reserva de excepción. Si el `encoderFallback` argumento es una instancia de <xref:System.Text.EncoderExceptionFallback>, o el `decoderExceptionFallback` argumento es una instancia de <xref:System.Text.DecoderExceptionFallback>, el método de codificación produce una excepción si no se puede codificar caracteres y el método de descodificación produce una excepción si un byte no se puede descodificar la secuencia.  
  
-   Reserva de reemplazo. Si el `encoderFallback` argumento es una instancia de <xref:System.Text.EncoderReplacementFallback>, o el `decoderExceptionFallback` argumento es una instancia de <xref:System.Text.DecoderReplacementFallback>, la codificación y descodificación métodos sustituyen una cadena de reemplazo para los caracteres que no se puede codificar y las secuencias de bytes no se puede descodificar. Si crea una instancia del objeto de reserva de reemplazo llamando al constructor predeterminado, el carácter de reemplazo es un "?". Si se llama a la <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> o <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, puede especificar la cadena de reemplazo.  
  
-   Reserva con ajuste perfecto. Puede derivar de la <xref:System.Text.EncoderFallback> o <xref:System.Text.DecoderFallback> clase para implementar un mecanismo de reemplazo con ajuste perfecto.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Dado que las llamadas a este método usa la implementación de la <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> método, no es necesario reemplazarlo. Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> método, el método pasa el <paramref name="codepage" /> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida. Si ninguno devuelve una codificación válida, el <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> método intenta recuperar una codificación en caché cuyo identificador de la página de códigos es <paramref name="codepage" />. Por este motivo, si opta por reemplazar el <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> método, debe devolver la invalidación <see langword="null" /> si <paramref name="codepage" /> no es el identificador de la página de códigos de la codificación que admiten; nunca debe producir una excepción.</para></block>
        <block subset="none" type="usage"><para>Este método es invocado por el <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> método. No se debe llamar directamente desde el código de usuario.</para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>