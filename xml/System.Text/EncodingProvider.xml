<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncodingProvider.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5213b813ec5e5a38a3816aedc55e2d6e2e5a7636c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">213b813ec5e5a38a3816aedc55e2d6e2e5a7636c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</source>
          <target state="translated">Proporciona la clase base de un proveedor de codificación, que suministra las codificaciones que no están disponibles en una plataforma concreta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>An encoding provider supplies encodings that are not otherwise available on a particular target platform.</source>
          <target state="translated">Un proveedor de codificación suministra las codificaciones que no están disponibles en una plataforma de destino concreto.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
          <target state="translated">.NET Framework en el escritorio de Windows es compatible con un gran número de caracteres codificaciones y páginas de códigos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Puede obtener una lista completa de codificaciones disponibles en .NET Framework en el escritorio de Windows mediante una llamada a la <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>.NET Core, on the other hand, by default supports only the following encodings:</source>
          <target state="translated">.NET core, por otro lado, de forma predeterminada admite solo las codificaciones siguientes:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII (página de códigos 20127), que es devuelto por la <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">ISO-8859-1 (página de códigos 28591).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">UTF-7 (página de códigos 65000), que es devuelto por la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">UTF-8 (página de códigos 65001), que es devuelto por la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.</source>
          <target state="translated">UTF-16 y UTF-16LE (página de códigos 1200), que es devuelto por la <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">UTF-16LE (página de códigos 1201), que se crea una instancia mediante una llamada a la <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor con un <ph id="ph3">`bigEndian`</ph> valo <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">UTF-32 y UTF-32LE (página de códigos 12000), que es devuelto por la <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">UTF-32BE (página de códigos 12001), que se crea una instancia mediante una llamada a un <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor que tiene un <ph id="ph2">`bigEndian`</ph> parámetro y se proporciona un valor de <ph id="ph3">`true`</ph> en la llamada al método.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Starting with the .NET Framework 4.6, <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</source>
          <target state="translated">A partir de la versión 4.6 de .NET Framework, <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> es la clase base que en caso contrario, no está disponible codificaciones disponibles en .NET Framework.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>This involves the following steps:</source>
          <target state="translated">Esto implica los pasos siguientes:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Define a subclass of <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</source>
          <target state="translated">Definir una subclase de <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> que invalida la abstracta dos <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> sobrecargas, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> y <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>These overloads return the otherwise unsupported encoding by code page identifier and by name.</source>
          <target state="translated">Estas sobrecargas devuelven que otro modo serían una codificación no compatible por identificador de página de códigos y por nombre.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Note that you can also choose to return a default encoding if the <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> method is called with an argument of 0.</source>
          <target state="translated">Tenga en cuenta que también puede elegir para devolver una codificación predeterminada si el <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> método se llama con un argumento de 0.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Optionally, you can override the virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.</source>
          <target state="translated">Si lo desea, puede invalidar el virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> y <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In most cases, this is not necessary, since the base class provides a default implementation.</source>
          <target state="translated">En la mayoría de los casos, esto no es necesario, ya que la clase base proporciona una implementación predeterminada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
          <target state="translated">Pasar el <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> de instancia para la <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> método para hacer que las codificaciones proporcionadas por el <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> objeto disponible para common language runtime.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overload to retrieve the encoding.</source>
          <target state="translated">Llamar a un <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> sobrecarga para recuperar la codificación.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> to determine whether it can supply the requested encoding.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> método llamará correspondiente <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> para determinar si puede proporcionar la codificación solicitada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework Class Library provides one static property, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>, that returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.</source>
          <target state="translated">La biblioteca de clases de .NET Framework proporciona una propiedad estática, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>, que devuelve un <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> objeto que hace que el conjunto completo de codificaciones disponibles en el escritorio biblioteca de clases de .NET Framework disponibles para <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> las aplicaciones.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In addition, you can derive from the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.</source>
          <target state="translated">Además, puede derivar de la <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> clase para realizar su propia codificaciones disponibles.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Returns an encoding.</source>
          <target state="translated">Devuelve una codificación.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">Identificador de página de códigos de la codificación solicitada.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">Devuelve la codificación asociada al identificador de página de códigos especificado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">Codificación asociada a la página de códigos especificada, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> no puede devolver una codificación válida que corresponda a <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to inheritors</source>
          <target state="translated">Notas para los herederos</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">Invalida el <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> método para devolver la codificación o codificaciones admitidas por la <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclase.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method, the method passes the <ph id="ph1">`codepage`</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> método, el método pasa el <ph id="ph1">`codepage`</ph> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph1">`codepage`</ph>.</source>
          <target state="translated">Si ninguna devuelve una codificación válida, el <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> método intenta recuperar una codificación en caché cuyo identificador de página de código es <ph id="ph1">`codepage`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">`codepage`</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">`null`</ph>; it should never throw an exception.</source>
          <target state="translated">Por este motivo, si <ph id="ph1">`codepage`</ph> no es el identificador de la página de código de una codificación que proporciona soporte técnico, el método debe devolver <ph id="ph2">`null`</ph>; jamás deberá producir una excepción.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Note that you can also choose to return a default code page if the value of the <ph id="ph1">`codepage`</ph> argument is 0.</source>
          <target state="translated">Tenga en cuenta que también puede elegir para devolver una página de códigos predeterminada si el valor de la <ph id="ph1">`codepage`</ph> argumento es 0.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to callers</source>
          <target state="translated">Notas para los llamadores</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> method.</source>
          <target state="translated">Este método es invocado por el <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> método.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">No debe llamar directamente desde el código de usuario.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">Invalida el <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> método para devolver la codificación o codificaciones admitidas por la <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclase.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> método, el método pasa el <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">Si ninguna devuelve una codificación válida, el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> método intenta recuperar una codificación en caché cuyo identificador de página de código es <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>; it should never throw an exception.</source>
          <target state="translated">Por este motivo, si <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> no es el identificador de la página de código de una codificación que proporciona soporte técnico, el método debe devolver <ph id="ph2">&lt;see langword="null" /&gt;</ph>; jamás deberá producir una excepción.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Este método es invocado por el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">No debe llamar directamente desde el código de usuario.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The name of the requested encoding.</source>
          <target state="translated">Nombre de la codificación solicitada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Returns the encoding with the specified name.</source>
          <target state="translated">Devuelve la codificación con el nombre especificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Codificación asociada al nombre especificado, o <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> si <ph id="ph1">&lt;see langword="null" /&gt;</ph> no puede devolver una codificación válida que corresponda a <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to inheritors</source>
          <target state="translated">Notas para los herederos</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">Invalida el <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> método para devolver la codificación o codificaciones admitidas por la <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclase.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method, the method passes the <ph id="ph1">`name`</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> método, el método pasa el <ph id="ph1">`name`</ph> argumento para cada proveedor de codificación registrado hasta que uno devuelve una codificación válida.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method attempts to retrieve a cached encoding whose name is <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Si ninguna devuelve una codificación válida, el <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> método intenta recuperar una codificación en caché cuyo nombre es <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">`name`</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Por este motivo, si <ph id="ph1">`name`</ph> no es el nombre de una codificación que proporciona soporte técnico, el método debe devolver <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Es el único caso en que el método debe producir una excepción si <ph id="ph1">`name`</ph> es <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to callers</source>
          <target state="translated">Notas para los llamadores</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> method.</source>
          <target state="translated">Este método es invocado por el <bpt id="p1">[</bpt>Encoding.GetEncoding (String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> método.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">No debe llamar directamente desde el código de usuario.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">Invalida el <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> método para devolver la codificación o codificaciones admitidas por la <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclase.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> método, el método pasa el <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argumento para cada proveedor de codificación registrado hasta que uno devuelve una codificación válida.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method attempts to retrieve a cached encoding whose name is <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Si ninguna devuelve una codificación válida, el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> método intenta recuperar una codificación en caché cuyo nombre es <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Por este motivo, si <ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es el nombre de una codificación que proporciona soporte técnico, el método debe devolver <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Es el único caso en que el método debe producir una excepción si <ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Este método es invocado por el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">No debe llamar directamente desde el código de usuario.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">Identificador de página de códigos de la codificación solicitada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">Objeto que proporciona un procedimiento de control de errores cuando no se puede codificar un carácter con esta codificación.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</source>
          <target state="translated">Objeto que proporciona un procedimiento de control de errores cuando una secuencia de bytes no se puede descodificar con esta codificación.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">Devuelve la codificación asociada al identificador de página de códigos especificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">Los parámetros especifican un controlador de errores para los caracteres que no se pueden codificar y para las secuencias de bytes que no se pueden descodificar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">Codificación asociada a la página de códigos especificada, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> no puede devolver una codificación válida que corresponda a <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated">El <ph id="ph1">`encoderFallback`</ph> y <ph id="ph2">`decoderFallback`</ph> parámetros son objetos que definen la estrategia de reserva que se usa en caso de que un codificador no puede convertir un carácter en una secuencia de bytes o un descodificador no puede convertir una secuencia de bytes en un carácter.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework proporciona los siguientes mecanismos de reserva:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">Reserva de excepción.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">Si el <ph id="ph1">`encoderFallback`</ph> argumento es una instancia de <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, o la <ph id="ph3">`decoderExceptionFallback`</ph> argumento es una instancia de <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, el método de codificación produce una excepción si no se puede codificar caracteres y el método de descodificación produce una excepción si no se puede descodificar una secuencia de bytes.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">Reserva de reemplazo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">Si el <ph id="ph1">`encoderFallback`</ph> argumento es una instancia de <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, o la <ph id="ph3">`decoderExceptionFallback`</ph> argumento es una instancia de <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, la codificación y descodificación métodos sustituyen una cadena de reemplazo para los caracteres que no se pueden codificar y las secuencias de bytes no se puede descodificar.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">Si crea una instancia del objeto de reserva de reemplazo debe llamar al constructor predeterminado, el carácter de reemplazo es un "?".</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">Si se llama a la <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, puede especificar la cadena de reemplazo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">Reserva con ajuste perfecto.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">Puede derivar de la <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> clase para implementar un mecanismo de reemplazo con ajuste perfecto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">Dado que las llamadas a este método usan la implementación de la <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> método, no es necesario reemplazarlo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> método, el método pasa el <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">Si ninguna devuelve una codificación válida, el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> método intenta recuperar una codificación en caché cuyo identificador de página de código es <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">Por este motivo, si elige reemplazar el <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> método, que debe devolver la invalidación <ph id="ph2">&lt;see langword="null" /&gt;</ph> si <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> no es el identificador de página de códigos de una codificación que se admiten; jamás deberá producir una excepción.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">Este método es invocado por el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">No debe llamar directamente desde el código de usuario.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The name of the preferred encoding.</source>
          <target state="translated">Nombre de la codificación preferida.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">Objeto que proporciona un procedimiento de control de errores cuando no se puede codificar un carácter con esta codificación.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</source>
          <target state="translated">Objeto que proporciona un procedimiento de control de errores cuando una secuencia de bytes no se puede descodificar con la codificación actual.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified name.</source>
          <target state="translated">Devuelve la codificación asociada con el nombre especificado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">Los parámetros especifican un controlador de errores para los caracteres que no se pueden codificar y para las secuencias de bytes que no se pueden descodificar.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Codificación asociada al nombre especificado, o <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> si <ph id="ph1">&lt;see langword="null" /&gt;</ph> no puede devolver una codificación válida que corresponda a <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated">El <ph id="ph1">`encoderFallback`</ph> y <ph id="ph2">`decoderFallback`</ph> parámetros son objetos que definen la estrategia de reserva que se usa en caso de que un codificador no puede convertir un carácter en una secuencia de bytes o un descodificador no puede convertir una secuencia de bytes en un carácter.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework proporciona los siguientes mecanismos de reserva:</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">Reserva de excepción.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">Si el <ph id="ph1">`encoderFallback`</ph> argumento es una instancia de <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, o la <ph id="ph3">`decoderExceptionFallback`</ph> argumento es una instancia de <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, el método de codificación produce una excepción si no se puede codificar caracteres y el método de descodificación produce una excepción si no se puede descodificar una secuencia de bytes.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">Reserva de reemplazo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">Si el <ph id="ph1">`encoderFallback`</ph> argumento es una instancia de <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, o la <ph id="ph3">`decoderExceptionFallback`</ph> argumento es una instancia de <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, la codificación y descodificación métodos sustituyen una cadena de reemplazo para los caracteres que no se pueden codificar y las secuencias de bytes no se puede descodificar.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">Si crea una instancia del objeto de reserva de reemplazo debe llamar al constructor predeterminado, el carácter de reemplazo es un "?".</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">Si se llama a la <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, puede especificar la cadena de reemplazo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">Reserva con ajuste perfecto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">Puede derivar de la <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> o <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> clase para implementar un mecanismo de reemplazo con ajuste perfecto.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">Dado que las llamadas a este método usan la implementación de la <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> método, no es necesario reemplazarlo.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">Cuando el código de usuario intenta recuperar una codificación mediante una llamada a la <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> método, el método pasa el <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identificador a cada proveedor de codificación registrado hasta que uno devuelve una codificación válida.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">Si ninguna devuelve una codificación válida, el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> método intenta recuperar una codificación en caché cuyo identificador de página de código es <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">Por este motivo, si elige reemplazar el <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> método, que debe devolver la invalidación <ph id="ph2">&lt;see langword="null" /&gt;</ph> si <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> no es el identificador de página de códigos de una codificación que se admiten; jamás deberá producir una excepción.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">Este método es invocado por el <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">No debe llamar directamente desde el código de usuario.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>