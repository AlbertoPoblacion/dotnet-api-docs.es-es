<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeDomProvider.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca4563cd6391acbb63e22a350d0f119e03fa9818cfdba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd6391acbb63e22a350d0f119e03fa9818cfdba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Provides a base class for <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementations.</source>
          <target state="translated">Proporciona la clase base para las implementaciones de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class is abstract.</source>
          <target state="translated">Esta clase es abstracta.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> can be used to create and retrieve instances of code generators and code compilers.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> puede usarse para crear y recuperar instancias de generadores de código y los compiladores de código.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</source>
          <target state="translated">Los generadores de código pueden utilizarse para generar código en un determinado lenguaje y los compiladores de código para compilar código y generar ensamblados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the methods made available in the code generator and code compiler are available directly from the code provider.</source>
          <target state="translated">En el <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, los métodos a disposición del generador de código y el compilador de código están disponibles directamente desde el proveedor de código.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> to access the methods, and those methods are marked as obsolete.</source>
          <target state="translated">No es necesario llamar a <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> para tener acceso a los métodos y los métodos están marcados como obsoletos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This applies to preexisting as well as new code provider implementations.</source>
          <target state="translated">Esto se aplica a preexistentes, así como las implementaciones del proveedor de código nuevo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación normalmente proporciona código interfaces de compilación de código o de generación para generar código y administrar la compilación para un único lenguaje de programación.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Several languages are supported by <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations that ship with the <ph id="ph2">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>.</source>
          <target state="translated">Se admiten varios idiomas por <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementaciones que se suministran con el <ph id="ph2">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>These languages include C#, Visual Basic, C++, and JScript.</source>
          <target state="translated">Estos lenguajes incluyen C#, Visual Basic, C++ y JScript.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Developers or compiler vendors can implement the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> and <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> interfaces and provide a <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> that extends CodeDOM support to other programming languages.</source>
          <target state="translated">Los programadores o fabricantes de compiladores pueden implementar la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> y <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> e interfaces de proporcionar un <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> que extiende la compatibilidad de CodeDOM a otros lenguajes de programación.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations.</source>
          <target state="translated">El <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> en la configuración del equipo (Machine.config) del archivo proporciona un mecanismo para agregar valores de configuración para adicionalesalosdesarrolladoresyfabricantesdecompiladores<ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph>implementaciones.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class provides static methods to discover and enumerate the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations on a computer.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> clase proporciona métodos estáticos para detectar y enumerar los <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> las implementaciones en un equipo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> method returns the settings for all <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations on a computer.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> método devuelve los valores para todos los <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> las implementaciones en un equipo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> method returns the settings for a specific <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation, based on the programming language name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> método devuelve la configuración para un determinado <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación, basándose en el nombre del lenguaje de programación.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method returns an instance of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for a specific language.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> método devuelve una instancia de un <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para un idioma específico.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>For more details on language provider settings in the configuration file, see <bpt id="p1">[</bpt>Compiler and Language Provider Settings Schema<ept id="p1">](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8)</ept>.</source>
          <target state="translated">Para obtener más detalles sobre la configuración del proveedor de lenguaje en el archivo de configuración, consulte <bpt id="p1">[</bpt>compilador y el esquema de configuración de proveedor de lenguaje<ept id="p1">](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class makes a link demand and an inheritance demand at the class level.</source>
          <target state="translated">Esta clase realiza una petición de vínculo y una petición de herencia en el nivel de clase.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown if either the immediate caller or the derived class does not have full trust permission.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> se produce si el llamador inmediato o la clase derivada no tiene permiso de plena confianza.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">Para obtener más información acerca de las peticiones de seguridad, consulte <bpt id="p1">[</bpt>peticiones de vínculo<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> y <bpt id="p2">[</bpt>peticiones de herencia<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class.</source>
          <target state="translated">El programa de ejemplo siguiente puede generar y compilar código fuente basado en un modelo CodeDOM de un programa que imprime "Hello World" con la <ph id="ph1">&lt;xref:System.Console&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>A Windows Forms user interface is provided.</source>
          <target state="translated">Se proporciona una interfaz de usuario de formularios Windows Forms.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</source>
          <target state="translated">El usuario puede seleccionar el idioma de varias selecciones de programación de destino: C#, Visual Basic y JScript.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Esta clase no puede ser usada por código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>for full trust for inheritors.</source>
          <target state="translated">de plena confianza para los herederos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">Esta clase no puede heredarse mediante código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph>.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, los proveedores de código están formados por implementaciones de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph>, y <ph id="ph4">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, the <ph id="ph2">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph>, and <ph id="ph4">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> methods are obsolete, and the methods of <ph id="ph5">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> and <ph id="ph6">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> are directly available in the <ph id="ph7">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class.</source>
          <target state="translated">En el <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, <ph id="ph2">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph>, y <ph id="ph4">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> métodos están obsoletos y los métodos de <ph id="ph5">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> y <ph id="ph6">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> están disponibles directamente en el <ph id="ph7">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>You should override those methods in your code provider implementation and not call the base methods.</source>
          <target state="translated">Debe invalidar estos métodos en su implementación del proveedor de código y no llame a los métodos base.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Esta clase no puede ser usada por código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> object that indicates the settings for the compilation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> que indica la configuración de la compilación.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that indicates the code to compile.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> que indica el código que se va a compilar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>Compiles an assembly based on the <ph id="ph1">&lt;see cref="N:System.CodeDom" /&gt;</ph> trees contained in the specified array of <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> objects, using the specified compiler settings.</source>
          <target state="translated">Compila un ensamblado basado en los árboles <ph id="ph1">&lt;see cref="N:System.CodeDom" /&gt;</ph> que contiene la matriz especificada de objetos <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>, utilizando la configuración del compilador especificada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> object that indicates the results of the compilation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> que indica los resultados de la compilación.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method for compatibility with preexisting providers that use code compilers.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan los compiladores de código.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code compiler.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no usa un compilador de código.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> object that indicates the settings for the compilation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> que indica la configuración de la compilación.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>An array of the names of the files to compile.</source>
          <target state="translated">Matriz de los nombres de los archivos que se van a compilar.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</source>
          <target state="translated">Compila un ensamblado a partir del código fuente que contienen los archivos especificados, utilizando la configuración de compilador especificada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> object that indicates the results of compilation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> que indica los resultados de la compilación.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method for compatibility with preexisting providers that use code compilers.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan los compiladores de código.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code compiler.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no usa un compilador de código.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> object that indicates the compiler settings for this compilation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> que indica la configuración de compilador para esta compilación.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>An array of source code strings to compile.</source>
          <target state="translated">Matriz de cadenas de código fuente que se van a compilar.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</source>
          <target state="translated">Compila un ensamblado basado en la matriz especificada de cadenas que contiene el código fuente, utilizando la configuración del compilador especificada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> object that indicates the results of compilation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerResults" /&gt;</ph> que indica los resultados de la compilación.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> method for compatibility with preexisting providers that use code compilers.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan los compiladores de código.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code compiler.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no usa un compilador de código.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>When overridden in a derived class, creates a new code compiler.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un nuevo compilador de código.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> that can be used for compilation of <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> que puede utilizarse para la compilación de representaciones de código fuente basadas en el espacio de nombres <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>This method is obsolete in the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated">Este método está obsoleto en la <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> methods that are directly available in the code provider.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> métodos que están disponibles directamente en el proveedor de código.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, you should implement the <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> members in the <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class and throw a <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when this method is called.</source>
          <target state="translated">En el <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, debe implementar la <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeCompiler" /&gt;</ph> miembros en el <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> clase y producir un <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> cuando se llama a este método.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The string for which to create an escaped identifier.</source>
          <target state="translated">Cadena para la que se va a crear un identificador de escape.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>Creates an escaped identifier for the specified value.</source>
          <target state="translated">Crea un identificador de escape para el valor especificado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier for the value.</source>
          <target state="translated">Identificador de escape para el valor.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A&gt;</ph> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A&gt;</ph> pruebas si el identificador entra en conflicto con cualquier reservados o palabras clave del lenguaje y si es así, devuelve un nombre equivalente con formato de código de escape específico del lenguaje.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>This is referred to an escaped identifier.</source>
          <target state="translated">Esto se conoce como identificador de escape.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier contains the same <ph id="ph1">`value`</ph> but has escape-code formatting added to differentiate the identifier from the keyword.</source>
          <target state="translated">El identificador de escape contiene el mismo <ph id="ph1">`value`</ph> , pero se le agrega formato de código de escape para el identificador se diferenciará de la palabra clave.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>Two implementation examples are preceding the <ph id="ph1">`value`</ph> with "@" or bracketing the <ph id="ph2">`value`</ph> with "[" and "]".</source>
          <target state="translated">Dos ejemplos de implementación preceden la <ph id="ph1">`value`</ph> con "@" o Estimando el <ph id="ph2">`value`</ph> con "[" y "]".</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>When overridden in a derived class, creates a new code generator.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>When overridden in a derived class, creates a new code generator.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> that can be used to generate <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> que puede utilizarse para generar representaciones de código fuente basadas en el espacio de nombres <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>This method is obsolete in the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated">Este método está obsoleto en la <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> methods that are directly available in the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class.</source>
          <target state="translated">La alternativa recomendada es llamar a la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> métodos que están disponibles directamente en el <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, you should implement the <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> members in the <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> class and throw a <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when this method is called.</source>
          <target state="translated">En el <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, debe implementar la <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> miembros en el <ph id="ph3">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> clase y producir un <ph id="ph4">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> cuando se llama a este método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to use to output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> que se va a utilizar para los resultados.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>When overridden in a derived class, creates a new code generator using the specified <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> for output.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código utilizando el <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado para los resultados.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> that can be used to generate <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> que puede utilizarse para generar representaciones de código fuente basadas en el espacio de nombres <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>This method uses the specified <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> for output.</source>
          <target state="translated">Este método usa especificado <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> para la salida.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>This method supports more optimized code generation that incrementally updates the source code.</source>
          <target state="translated">Este método admite la generación de código optimizado más que actualiza de forma incremental el código fuente.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
          <source>The base class implementation calls the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method, which is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> and results in a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> if an <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> object is not returned.</source>
          <target state="translated">La implementación de la clase base llama el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método, que está obsoleto en la <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> y da como resultado un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> si un <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> no se devuelve el objeto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>The file name to output to.</source>
          <target state="translated">Nombre del archivo de resultados.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>When overridden in a derived class, creates a new code generator using the specified file name for output.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código utilizando el nombre de archivo especificado para los resultados.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> that can be used to generate <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> based source code representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> que puede utilizarse para generar representaciones de código fuente basadas en el espacio de nombres <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>This method uses the specified file name for output.</source>
          <target state="translated">Este método utiliza el nombre de archivo especificado para la salida.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
          <source>The base class implementation calls the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method, which is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> and results in a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> if an <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> object is not returned.</source>
          <target state="translated">La implementación de la clase base llama el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método, que está obsoleto en la <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> y da como resultado un <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> si un <ph id="ph4">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> no se devuelve el objeto.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
          <source>When overridden in a derived class, creates a new code parser.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un nuevo analizador de código.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
          <source>An <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> that can be used to parse source code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> que puede utilizarse para analizar código fuente.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
          <source>The base implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La implementación base siempre devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeDomProvider">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> instance for the specified language.</source>
          <target state="translated">Obtiene una instancia de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> para el lenguaje especificado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The language name.</source>
          <target state="translated">Nombre del lenguaje.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> instance for the specified language.</source>
          <target state="translated">Obtiene una instancia de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> para el lenguaje especificado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>A CodeDOM provider that is implemented for the specified language name.</source>
          <target state="translated">Proveedor CodeDOM que se implementa para el nombre de lenguaje especificado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</source>
          <target state="translated">Este método se utiliza normalmente para crear una instancia de un proveedor de código en una aplicación que opcionalmente puede utilizar uno de varios proveedores.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> allows you to specify at run time the code provider you wish to instantiate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> permite especificar en tiempo de ejecución el proveedor de código que se va a crear una instancia.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method.</source>
          <target state="translated">Si sabe en qué código es de proveedor que se usará el tiempo de diseño, se debe crear una instancia de ese proveedor de código en lugar de usar el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> instance for a specific language name; it is similar to calling the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method with the language provider type.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> de la instancia de un nombre de lenguaje concreto; es similar a llamar a la <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> método con el tipo de proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> when you want to dynamically find a configured provider implementation for a language name.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> cuando desee encontrar dinámicamente una implementación configurada del proveedor para un nombre de idioma.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>If more than one provider implementation is configured for the language name, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> returns a provider instance for the last matching configuration element.</source>
          <target state="translated">Si se configura más de una implementación de proveedor para el nombre del idioma, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> devuelve una instancia del proveedor para el último elemento de configuración coincidente.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> method overload when you want a specific language provider implementation.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> sobrecarga del método cuando desee que una implementación de proveedor de lenguaje concreto.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>For example, use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method to get a provider instance that supports the language name <ph id="ph2">`"CSharp"`</ph>; use the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> method overload to get a provider instance specifically for the <ph id="ph4">&lt;xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Por ejemplo, use la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> método para obtener una instancia del proveedor que admita el nombre del lenguaje <ph id="ph2">`"CSharp"`</ph>; utilice la <ph id="ph3">&lt;xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType&gt;</ph> sobrecarga del método para obtener una instancia del proveedor específicamente para el <ph id="ph4">&lt;xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>You should use the [<ph id="ph1">\]</ph>, CultureInfo, Object<ph id="ph2">\&lt;</ph>xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt; method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</source>
          <target state="translated">Debe usar el [<ph id="ph1">\]</ph>, CultureInfo, objeto<ph id="ph2">\&lt;</ph>xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType &gt; método si tiene varios proveedores de código para un lenguaje y desea crear una instancia de un proveedor de código específicos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> method checks whether at least one provider implementation supports a specific language.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> método comprueba si al menos una implementación del proveedor es compatible con un idioma específico.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>You can validate a language name using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> before passing it to <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph>.</source>
          <target state="translated">Puede validar un nombre de idioma mediante <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> antes de pasarlo a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>If you pass an unsupported language name to <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> is thrown.</source>
          <target state="translated">Si se pasa un nombre de idioma no admitido para <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> un <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> method can be used to determine all <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>system.codedom<ph id="ph4">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> método se puede utilizar para determinar todas <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> las implementaciones en un equipo, incluso implementaciones adicionales proporcionadas por los desarrolladores y fabricantes de compiladores que se identifican en el <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>system.codedom <ph id="ph4">&amp;gt;</ph> Elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> en el archivo de configuración del equipo (Machine.config).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> method returns an instance of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for a specific language.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A&gt;</ph> método devuelve una instancia de un <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para un idioma específico.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input language and displays the configured settings for the language provider.</source>
          <target state="translated">En el ejemplo de código siguiente se determina el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para un idioma de entrada y muestra los valores configurados para el proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> does not have a configured provider on this computer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="language" /&gt;</ph> no tiene un proveedor configurado en este equipo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="language" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The language name.</source>
          <target state="translated">Nombre del lenguaje.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>A collection of provider options from the configuration file.</source>
          <target state="translated">Una colección de opciones de proveedor extraídas del archivo de configuración.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> instance for the specified language and provider options.</source>
          <target state="translated">Obtiene una instancia de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> para el lenguaje y opciones de proveedor especificados.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>A CodeDOM provider that is implemented for the specified language name and options.</source>
          <target state="translated">Un proveedor CodeDOM que se implementa para el nombre del lenguaje y opciones especificados.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</source>
          <target state="translated">Este método se utiliza normalmente para crear una instancia de un proveedor de código en una aplicación que opcionalmente puede utilizar uno de varios proveedores.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> enables you to specify at run time the version of the code provider you want to instantiate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> le permite especificar en tiempo de ejecución de la versión del proveedor de código que desea crear una instancia.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> method.</source>
          <target state="translated">Si sabe en qué código es de proveedor que se usará el tiempo de diseño, debe crear una instancia de ese proveedor de código en lugar de utilizar el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> when you want to dynamically find a configured provider implementation for a specific language and options.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29&gt;</ph> cuando desee encontrar dinámicamente una implementación configurada del proveedor para un idioma específico y sus opciones.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>For information about supported provider options, see the specific CodeDOM provider documentation.</source>
          <target state="translated">Para obtener información acerca de las opciones de proveedor compatibles, consulte la documentación específica del proveedor CodeDOM.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29&gt;</ph> method.</source>
          <target state="translated">Para obtener información acerca de cómo validar un proveedor y llamar a un proveedor si más de una implementación de proveedor está configurada para el nombre del idioma, vea la sección Comentarios de la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The following example shows how to create an instance of a provider by using the <ph id="ph1">`providerOptions`</ph> parameter.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de un proveedor mediante el <ph id="ph1">`providerOptions`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>The string for which to generate a valid identifier.</source>
          <target state="translated">Cadena para la que se va a generar un identificador válido.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>Creates a valid identifier for the specified value.</source>
          <target state="translated">Crea un identificador válido para el valor especificado.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>A valid identifier for the specified value.</source>
          <target state="translated">Identificador válido para el valor especificado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A&gt;</ph> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A&gt;</ph> comprueba si el identificador entra en conflicto con reservadas o palabras clave del lenguaje, y si es así, intenta devolver un identificador válido nombre que no entran en conflicto.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</source>
          <target state="translated">Normalmente el identificador devuelto se modifica ligeramente para diferenciar el identificador de la palabra clave; Por ejemplo, el nombre podría ir precedido por el carácter de subrayado ("_").</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>Gets the default file name extension to use for source code files in the current language.</source>
          <target state="translated">Obtiene la extensión de archivo predeterminada que se utilizará para los archivos de código fuente en el lenguaje actual.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>A file name extension corresponding to the extension of the source files of the current language.</source>
          <target state="translated">Extensión de archivo correspondiente a la extensión de los archivos de código fuente del lenguaje actual.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>The base implementation always returns <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">La implementación base siempre devuelve <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</source>
          <target state="translated">Esta propiedad se usa por los generadores de código y los compiladores de código para indicar qué extensiones de archivo deben generarse o utilizarse.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>The following code example creates an instance of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se crea una instancia de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
          <source>The example displays the provider name, hash code and default file name extension for the new provider instance.</source>
          <target state="translated">En el ejemplo se muestra el nombre del proveedor, el hash predeterminada y el código de extensión del archivo para la nueva instancia del proveedor.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> for which to generate code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which the output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se envía el código de salida.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> que indica las opciones que se van a utilizar para generar código.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Genera código para la unidad de compilación CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A&gt;</ph> method to generate code for a "Hello World" application from a <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A&gt;</ph> método para generar código para una aplicación "Hello World" de un <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> object that indicates the expression for which to generate code.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se envía el código de salida.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> que indica las opciones que se van a utilizar para generar código.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Genera código para la expresión CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeMember" /&gt;</ph> object that indicates the member for which to generate code.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeMember" /&gt;</ph> que indica el miembro para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se envía el código de salida.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> que indica las opciones que se van a utilizar para generar código.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Genera código para la declaración de miembro CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base class implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">Implementación de la clase base produce un <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>See <ph id="ph1">&lt;xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType&gt;</ph> for documentation describing an implementation of this method.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType&gt;</ph> para documentación que describe una implementación de este método.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> method as implemented by the <ph id="ph2">&lt;xref:Microsoft.CSharp.CSharpCodeProvider&gt;</ph> and <ph id="ph3">&lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt;</ph> classes.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> método tal como lo implementan las <ph id="ph2">&lt;xref:Microsoft.CSharp.CSharpCodeProvider&gt;</ph> y <ph id="ph3">&lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt;</ph> clases.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>This method is not overridden in a derived class.</source>
          <target state="translated">Este método no se reemplaza en una clase derivada.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeNamespace" /&gt;</ph> object that indicates the namespace for which to generate code.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeNamespace" /&gt;</ph> que indica el espacio de nombres para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se envía el código de salida.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> que indica las opciones que se van a utilizar para generar código.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Genera código para el espacio de nombres CodeDOM (Code Document Object Model) especificado y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> containing the CodeDOM elements for which to generate code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> que contiene los elementos CodeDOM para los que se va a generar código.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se envía el código de salida.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> que indica las opciones que se van a utilizar para generar código.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Genera código para la instrucción CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> object that indicates the type for which to generate code.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> que indica el tipo para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which output code is sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se envía el código de salida.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> that indicates the options to use for generating code.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /&gt;</ph> que indica las opciones que se van a utilizar para generar código.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</source>
          <target state="translated">Genera código para la declaración de tipos CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>Returns the language provider and compiler configuration settings for this computer.</source>
          <target state="translated">Devuelve los valores de configuración del proveedor y compilador de lenguaje de este equipo.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> representing the settings of all configured <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementations.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> que representa los valores de configuración de todas las implementaciones de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configuradas.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> method to enumerate the language provider settings on a computer.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A&gt;</ph> método para enumerar la configuración del proveedor de idioma en un equipo.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the default language providers supplied by the .NET Framework are not specified in the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>system.codedom<ph id="ph3">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</source>
          <target state="translated">En el <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, los proveedores de lenguaje predeterminados proporcionados por .NET Framework no se especifican en el <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>system.codedom<ph id="ph3">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> configuración del compilador sección y no se puede quitar, por lo que esta método devuelve información sobre los proveedores predeterminados y los especificados en el archivo de configuración.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</source>
          <target state="translated">En el ejemplo de código siguiente se enumera los proveedores de lenguaje en el equipo y muestra la configuración de configuración y del compilador de cada proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>A language name.</source>
          <target state="translated">Nombre de lenguaje.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>Returns the language provider and compiler configuration settings for the specified language.</source>
          <target state="translated">Devuelve la configuración del proveedor y compilador del lenguaje especificado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> object populated with settings of the configured <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerInfo" /&gt;</ph> que contiene los valores de configuración de la implementación de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configurada.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">El <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> en la configuración del equipo el archivo contiene la configuración del proveedor y compilador de lenguaje para cada <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación en el equipo.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>For information about machine configuration files, see the Machine Configuration Files section in <bpt id="p1">[</bpt>Configuring Apps<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>.</source>
          <target state="translated">Para obtener información acerca de los archivos de configuración de máquina, vea la sección de archivos de configuración de máquina en <bpt id="p1">[</bpt>configurar aplicaciones<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> method searches each provider configuration element for the specified language name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> método busca en cada elemento de configuración de proveedor para el nombre del idioma especificado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instance contains the configured language provider and compiler settings.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instancia contiene la configuración de compilador y del proveedor de lenguaje configurado.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> method checks whether at least one provider implementation supports a specific language.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> método comprueba si al menos una implementación del proveedor es compatible con un idioma específico.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>You can validate a language name using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> before passing it to <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph>.</source>
          <target state="translated">Puede validar un nombre de idioma mediante <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> antes de pasarlo a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>This prevents throwing a <ph id="ph1">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> when you access the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instance for an unsupported language name.</source>
          <target state="translated">Esto evita que producir una <ph id="ph1">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> al acceder a la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> instancia para un nombre de idioma no admitido.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>If more than one provider implementation is configured for the input language name, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> returns the settings from the last matching provider configuration element.</source>
          <target state="translated">Si se configura más de una implementación de proveedor para el nombre del idioma de entrada, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A&gt;</ph> devuelve la configuración desde el último proveedor de búsqueda de coincidencias de elemento de configuración.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input language and displays the configured settings for the language provider.</source>
          <target state="translated">En el ejemplo de código siguiente se determina el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para un idioma de entrada y muestra los valores configurados para el proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> does not have a configured provider on this computer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="language" /&gt;</ph> no tiene un proveedor configurado en este equipo.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="language" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>The type of object to retrieve a type converter for.</source>
          <target state="translated">Tipo de objeto para el que se recupera un convertidor de tipo.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified data type.</source>
          <target state="translated">Obtiene un <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> para el tipo de datos especificado.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> for the specified type cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> para el tipo especificado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se encuentra <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
          <source>A derived class can override this method to provide specific types of type converters for specific data types.</source>
          <target state="translated">Una clase derivada puede invalidar este método para proporcionar tipos específicos de convertidores de tipos para tipos de datos específicos.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>A file name extension.</source>
          <target state="translated">Extensión de nombre de archivo.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>Returns a language name associated with the specified file name extension, as configured in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> compiler configuration section.</source>
          <target state="translated">Devuelve un nombre de lenguaje asociado a la extensión de nombre de archivo especificada, tal como se define en la sección de configuración del compilador <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>A language name associated with the file name extension, as configured in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> compiler configuration settings.</source>
          <target state="translated">Nombre de lenguaje asociado a la extensión de nombre de archivo, tal como se define en la configuración del compilador <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">El <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> en la configuración del equipo (Machine.config) del archivo contiene la configuración del proveedor y compilador de lenguaje para cada <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación en el equipo.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> method searches each provider configuration element for the specified file name extension.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> método busca en cada elemento de configuración de proveedor para la extensión de nombre de archivo especificado.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> method checks whether at least one provider implementation supports a specific file name extension.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> método comprueba si la implementación de al menos un proveedor admite una extensión de nombre de archivo específico.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>You can validate a file name extension using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> before passing it to <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph>.</source>
          <target state="translated">Puede validar una extensión de nombre de archivo con <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> antes de pasarlo a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>This prevents <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> from throwing a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> for an unsupported file name extension.</source>
          <target state="translated">Esto evita que <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> genere un <ph id="ph2">&lt;xref:System.Configuration.ConfigurationException?displayProperty=nameWithType&gt;</ph> para una extensión de nombre de archivo no compatible.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> returns the first language name for that provider.</source>
          <target state="translated">Si una implementación de proveedor es compatible con la extensión de nombre de archivo de entrada y hay varios lenguajes compatibles configurados para ese proveedor, a continuación, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> devuelve el primer nombre de lenguaje para dicho proveedor.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>If more than one provider implementation is configured for the input file name extension, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> returns the language name from the last matching provider configuration element.</source>
          <target state="translated">Si se configura más de una implementación de proveedor para la extensión de nombre de archivo de entrada, <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A&gt;</ph> devuelve el nombre de idioma desde el último proveedor de búsqueda de coincidencias de elemento de configuración.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>Language names and file name extensions are case-insensitive.</source>
          <target state="translated">Los nombres de lenguaje y las extensiones de nombre de archivo distinguen mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input file name extension and displays the configured settings for the language provider.</source>
          <target state="translated">En el ejemplo de código siguiente se determina el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para una extensión de nombre de archivo de entrada y muestra los valores configurados para el proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> does not have a configured language provider on this computer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="extension" /&gt;</ph> no tiene un proveedor de lenguaje configurado en este equipo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that indicates the type to return.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> que indica el tipo que se va a devolver.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Gets the type indicated by the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</source>
          <target state="translated">Obtiene el tipo indicado por el <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>A text representation of the specified type, formatted for the language in which code is generated by this code generator.</source>
          <target state="translated">Representación de texto del tipo especificado, con el formato que corresponde al lenguaje en el que este generador de código genera el código.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>In Visual Basic, for example, passing in a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> type will return "Integer".</source>
          <target state="translated">En Visual Basic, por ejemplo, al pasar <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> para el tipo <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>, se devolverá "Integer".</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>A file name extension.</source>
          <target state="translated">Extensión de nombre de archivo.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>Tests whether a file name extension has an associated <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation configured on the computer.</source>
          <target state="translated">Comprueba si una extensión de nombre de archivo tiene configurada una implementación de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> asociada en el equipo.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation is configured for the specified file name extension; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se ha configurado una implementación de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> para la extensión de nombre de archivo especificada; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">El <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> en la configuración del equipo (Machine.config) del archivo contiene la configuración del proveedor y compilador de lenguaje para cada <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación en el equipo.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> method searches the provider configuration elements for the specified file name extension.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A&gt;</ph> método busca en los elementos de configuración de proveedor para la extensión de nombre de archivo especificado.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>File name extensions are case-insensitive.</source>
          <target state="translated">Extensiones de nombre de archivo distinguen mayúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input file name extension and displays the configured settings for the language provider.</source>
          <target state="translated">En el ejemplo de código siguiente se determina el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para una extensión de nombre de archivo de entrada y muestra los valores configurados para el proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="extension" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The language name.</source>
          <target state="translated">Nombre del lenguaje.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>Tests whether a language has a <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation configured on the computer.</source>
          <target state="translated">Comprueba si un lenguaje tiene una implementación de <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> configurada en el equipo.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> implementation is configured for the specified language; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se ha configurado una implementación de <ph id="ph2">&lt;see cref="T:System.CodeDom.Compiler.CodeDomProvider" /&gt;</ph> para el lenguaje especificado; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation on the computer.</source>
          <target state="translated">El <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.codedom<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)</ept> en la configuración del equipo (Machine.config) del archivo contiene la configuración del proveedor y compilador de lenguaje para cada <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación en el equipo.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> method searches the provider configuration elements for the specified language name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A&gt;</ph> método busca en los elementos de configuración de proveedor para el nombre del idioma especificado.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>Language names are case-insensitive.</source>
          <target state="translated">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The following code example determines the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation for an input language and displays the configured settings for the language provider.</source>
          <target state="translated">En el ejemplo de código siguiente se determina el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementación para un idioma de entrada y muestra los valores configurados para el proveedor de lenguaje.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerInfo&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="language" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="language" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">El llamador no dispone del permiso requerido.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The value to verify as a valid identifier.</source>
          <target state="translated">Valor que se va a comprobar como identificador válido.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>Returns a value that indicates whether the specified value is a valid identifier for the current language.</source>
          <target state="translated">Devuelve un valor que indica si el valor especificado es un identificador válido para el lenguaje actual.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid identifier; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es un identificador válido; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>This method tests whether an identifier is valid.</source>
          <target state="translated">Este método comprueba si un identificador es válido.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A&gt;</ph> method is provider specific.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A&gt;</ph> método es específico del proveedor.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>Identifiers that are valid for one provider might not be valid for other providers.</source>
          <target state="translated">Los identificadores que son válidos para un proveedor no sea válidos para otros proveedores.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>If <ph id="ph1">`value`</ph> contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> contiene caracteres fuera del intervalo de caracteres ASCII, compruebe el identificador de todos los idiomas que podrían usarse para compilar el código.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /&gt;</ph> in a derived class, design the method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only if the value fits the rules of the language and does not conflict with a keyword.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /&gt;</ph> en una clase derivada, diseñe el método devuelva <ph id="ph2">&lt;see langword="true" /&gt;</ph> sólo si el valor se ajusta a las reglas del lenguaje y no entra en conflicto con una palabra clave.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions">
          <source>Gets a language features identifier.</source>
          <target state="translated">Obtiene un identificador de características de lenguaje.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.LanguageOptions" /&gt;</ph> that indicates special features of the language.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.LanguageOptions" /&gt;</ph> que indica las características especiales del lenguaje.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object that is used to read the code to be parsed.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> que se utiliza para leer el código que se va a analizar.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>Compiles the code read from the specified text stream into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Compila en <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> el código leído de la secuencia de texto especificada.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that contains a representation of the parsed code.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> que contiene una representación del código analizado.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeParser&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>The base-class method creates a parser in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph> method for compatibility with preexisting providers that use code parsers.</source>
          <target state="translated">El método de clase base, crea un analizador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /&gt;</ph> método para ofrecer compatibilidad con los proveedores existentes que utilizan analizadores de código.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeParser" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code parser.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un analizador de código.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Returns a value indicating whether the specified code generation support is provided.</source>
          <target state="translated">Devuelve un valor que indica si se proporciona la compatibilidad especificada para la generación de código.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code generation support is provided; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se proporciona la compatibilidad de generación de código especificada; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>This method can be called with a number of <ph id="ph1">&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;</ph> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary <ph id="ph2">`OR`</ph> operator (&amp;#124;).</source>
          <target state="translated">Puede llamar a este método con un número de <ph id="ph1">&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;</ph> marcas al mismo tiempo para comprobar un conjunto de funciones mediante la combinación de un conjunto de indicadores de capacidad apropiados junto con un archivo binario <ph id="ph2">`OR`</ph> operador (&amp;#124;).</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>In the .NET Framework versions 1.0 and 1.1, this method is provided by the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation that is returned by the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> method of the provider.</source>
          <target state="translated">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación devuelto por la <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A&gt;</ph> método del proveedor.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</source>
          <target state="translated">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>If the code provider does not override this method, the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation is called by the base class.</source>
          <target state="translated">Si el proveedor de código no reemplaza este método, el <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementación llama a la clase base.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Neither this method nor the <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method is overridden in a derived class.</source>
          <target state="translated">Este método y el método <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> no se reemplazan en una clase derivada.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>If you override this method, you must not call the corresponding method of the base class.</source>
          <target state="translated">Si invalida este método, no debe llamar al método correspondiente de la clase base.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The base-class method creates a generator in the derived class using the obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> method for compatibility with preexisting providers that use code generators.</source>
          <target state="translated">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <ph id="ph1">&lt;see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /&gt;</ph> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The base-class method then calls the equivalent method in the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementation to perform this function.</source>
          <target state="translated">El método de clase base, a continuación, llama al método equivalente el <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> implementación para realizar esta función.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>You will get a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> if you call the base-class method from a code provider that does not use a code generator.</source>
          <target state="translated">Obtendrá un <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> si llama al método de clase base desde un proveedor de código que no use un generador de código.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>